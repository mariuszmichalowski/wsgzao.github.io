<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HelloDog</title>
  
  <subtitle>Keep Calm and Carry On</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wsgzao.github.io/"/>
  <updated>2020-06-22T03:45:11.251Z</updated>
  <id>https://wsgzao.github.io/</id>
  
  <author>
    <name>wsgzao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redis(Codis) 分布式集群部署实践</title>
    <link href="https://wsgzao.github.io/post/codis/"/>
    <id>https://wsgzao.github.io/post/codis/</id>
    <published>2020-06-21T06:59:49.000Z</published>
    <updated>2020-06-22T03:45:11.251Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190724154111.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Codis 3.x 稳定版本已经很久没更新了，虽然有缺点也称不上完美但确实可以有效解决横向扩展问题。Redis 5.0 因为所谓的 <code>政治正确</code> 把 master-slave 名字修改为 master-replica 上了开源社区热议排行榜，客户端 SDK 的 API 完全兼容 redis-cluster 在 <code>Redis 6.0</code> 官方推出 <code>redis-cluster-proxy</code> 集群代理方案前成本很高，目前也需要等待社区验证新方案的稳定性，所以大家在选择 Redis 集群方案的时候除了自研和 Codis 以外依然没有太多的选择余地。我们使用 Codis 的原因也很简单，Redis 主从模式内存从 128GB 一路增加到 1TB 后硬件终于受不鸟了，要么像数据库借鉴 “拆” 的奥义做到庖丁解牛一般，不然摆在眼前的路基本只剩下相对成熟可靠的 Codis。本文分享了 Redis 高可用技术解决方案选型的参考文章和 Codis 集群搭建的过程，希望对大家有帮助。</p><blockquote><p>Redis(Codis)分布式集群部署实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 06 月 21 日 - 增加 Codis 手动编译安装<br>2019 年 07 月 23 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/codis/">https://wsgzao.github.io/post/codis/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://redis.io/" target="_blank" rel="noopener">Redis</a><br><a href="https://github.com/CodisLabs/codis" target="_blank" rel="noopener">Codis</a></p><hr><h2 id="Codis-简介"><a href="#Codis-简介" class="headerlink" title="Codis 简介"></a>Codis 简介</h2><p>Codis 是一个分布式 Redis 解决方案, 对于上层的应用来说, 连接到 Codis Proxy 和连接原生的 Redis Server 没有显著区别 (<a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/unsupported_cmds.md" target="_blank" rel="noopener">不支持的命令列表</a>), 上层应用可以像使用单机的 Redis 一样使用, Codis 底层会处理请求的转发, 不停机的数据迁移等工作, 所有后边的一切事情, 对于前面的客户端来说是透明的, 可以简单的认为后边连接的是一个内存无限大的 Redis 服务。</p><blockquote><p>Compared with Twemproxy and Redis Cluster</p></blockquote><table><thead><tr><th></th><th>Codis</th><th>Twemproxy</th><th>Redis Cluster</th></tr></thead><tbody><tr><td>resharding without restarting cluster</td><td>Yes</td><td>No</td><td>Yes</td></tr><tr><td>pipeline</td><td>Yes</td><td>Yes</td><td>No</td></tr><tr><td>hash tags for multi-key operations</td><td>Yes</td><td>Yes</td><td>Yes</td></tr><tr><td>multi-key operations while resharding</td><td>Yes</td><td>-</td><td>No(<a href="http://redis.io/topics/cluster-spec#multiple-keys-operations" target="_blank" rel="noopener">details</a>)</td></tr><tr><td>Redis clients supporting</td><td>Any clients</td><td>Any clients</td><td>Clients have to support cluster protocol</td></tr></tbody></table><p>“Resharding” means migrating the data in one slot from one redis server to another, usually happens while increasing/decreasing the number of redis servers.</p><blockquote><p>为什么要选择 Codis</p></blockquote><p>Redis 获得动态扩容 / 缩容的能力，增减 redis 实例对 client 完全透明、不需要重启服务，不需要业务方担心 Redis 内存爆掉的问题. 也不用担心申请太大, 造成浪费. 业务方也不需要自己维护 Redis.</p><p>Codis 支持水平扩容 / 缩容，扩容可以直接界面的 “Auto Rebalance” 按钮，缩容只需要将要下线的实例拥有的 slot 迁移到其它实例，然后在界面上删除下线的 group 即可。</p><p><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/tutorial_zh.md" target="_blank" rel="noopener">Codis 使用文档</a><br><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/FAQ_zh.md" target="_blank" rel="noopener">Codis FAQ</a><br><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/unsupported_cmds.md" target="_blank" rel="noopener">Codis 不支持的命令列表</a><br><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/redis_change_zh.md" target="_blank" rel="noopener">redis 修改部分（增加若干指令）</a><br><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/benchmark.md" target="_blank" rel="noopener">Performance (Benchmark)</a></p><h2 id="Codis-架构"><a href="#Codis-架构" class="headerlink" title="Codis 架构"></a>Codis 架构</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190724162130.png" alt=""></p><p>集群配置前需要了解架构，集群分片主要分三种：</p><ol><li>客户端分片：这个需要自己开发，对客户端要求严格，集群很难扩容</li><li>代理端分片：如 codis，对客户端几乎无要求，集群容易扩容</li><li>服务端分片：如 redis 集群，需要智能客户端支持集群协议的，集群容易扩容</li></ol><p>Codis 3.x 由以下组件组成：</p><ul><li><p><strong>Codis Server</strong>：基于 redis-3.2.8 分支开发。增加了额外的数据结构，以支持 slot 有关的操作以及数据迁移指令。具体的修改可以参考文档 <a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/redis_change_zh.md" target="_blank" rel="noopener">redis 的修改</a>。</p></li><li><p><strong>Codis Proxy</strong>：客户端连接的 Redis 代理服务, 实现了 Redis 协议。 除部分命令不支持以外(<a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/unsupported_cmds.md" target="_blank" rel="noopener">不支持的命令列表</a>)，表现的和原生的 Redis 没有区别（就像 Twemproxy）。</p><ul><li>对于同一个业务集群而言，可以同时部署多个 codis-proxy 实例；</li><li>不同 codis-proxy 之间由 codis-dashboard 保证状态同步。</li></ul></li><li><p><strong>Codis Dashboard</strong>：集群管理工具，支持 codis-proxy、codis-server 的添加、删除，以及据迁移等操作。在集群状态发生改变时，codis-dashboard 维护集群下所有 codis-proxy 的状态的一致性。</p><ul><li>对于同一个业务集群而言，同一个时刻 codis-dashboard 只能有 0 个或者 1 个；</li><li>所有对集群的修改都必须通过 codis-dashboard 完成。</li></ul></li><li><p><strong>Codis Admin</strong>：集群管理的命令行工具。</p><ul><li>可用于控制 codis-proxy、codis-dashboard 状态以及访问外部存储。</li></ul></li><li><p><strong>Codis FE</strong>：集群管理界面。</p><ul><li>多个集群实例共享可以共享同一个前端展示页面；</li><li>通过配置文件管理后端 codis-dashboard 列表，配置文件可自动更新。</li></ul></li><li><p><strong>Storage</strong>：为集群状态提供外部存储。</p><ul><li>提供 Namespace 概念，不同集群的会按照不同 product name 进行组织；</li><li>目前仅提供了 Zookeeper、Etcd、Fs 三种实现，但是提供了抽象的 interface 可自行扩展。</li></ul></li></ul><h2 id="Codis-部署"><a href="#Codis-部署" class="headerlink" title="Codis 部署"></a>Codis 部署</h2><p>Codis 官方的 GitHub 教程已经写的比较详细了，这里重点分享 Ansible 自动化部署方案</p><ol><li>基于官方的简化版 ansible 一键部署 codis</li><li>基于组件的模块化 ansible 部署 codis</li></ol><p><a href="https://www.cnblogs.com/zhoujinyi/p/9249873.html" target="_blank" rel="noopener">Redis Codis 部署安装</a></p><p><a href="https://www.cnblogs.com/zhoujinyi/p/9950105.html" target="_blank" rel="noopener">使用 codis-admin 搭建 codis 集群</a></p><p><a href="https://www.mgchen.com/0/0/s_/Codis.html" target="_blank" rel="noopener">Codis 3.x 集群搭建与使用</a></p><h2 id="Codis-手动编译安装"><a href="#Codis-手动编译安装" class="headerlink" title="Codis 手动编译安装"></a>Codis 手动编译安装</h2><h3 id="安装-Go-运行环境"><a href="#安装-Go-运行环境" class="headerlink" title="安装 Go 运行环境"></a>安装 Go 运行环境</h3><p><a href="https://golang.org/doc/install" target="_blank" rel="noopener">Getting Started</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install package</span></span><br><span class="line">yum install -y net-tools vim telnet wget git gcc autoconf automake m4 </span><br><span class="line"></span><br><span class="line"><span class="comment"># download</span></span><br><span class="line">wget https://dl.google.com/go/go1.13.12.linux-amd64.tar.gz</span><br><span class="line"><span class="comment">#tar -C /usr/local -xzf go$VERSION.$OS-$ARCH.tar.gz</span></span><br><span class="line">tar -C /usr/<span class="built_in">local</span> -xzf go1.13.12.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># config env</span></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line">go version</span><br><span class="line">go version go1.13.12 linux/amd64</span><br></pre></td></tr></table></figure><h3 id="编译-Codis"><a href="#编译-Codis" class="headerlink" title="编译 Codis"></a>编译 Codis</h3><blockquote><p>以 Codis 为例，官方步骤可能有坑</p></blockquote><p><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/tutorial_zh.md" target="_blank" rel="noopener">Codis 使用文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置编译环境，在 / etc/profile 文件中输入下面三行</span></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin</span><br><span class="line"><span class="built_in">export</span> GOPATH=/usr/<span class="built_in">local</span>/codis/gopath</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOPATH</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载 Codis 源码</span></span><br><span class="line">mkdir -p <span class="variable">$GOPATH</span>/src/github.com/CodisLabs</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$_</span> &amp;&amp; git <span class="built_in">clone</span> https://github.com/CodisLabs/codis.git -b release3.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 redis 依赖，以免报 jemalloc 版本等错误(Codis 官方遗漏的步骤)</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/CodisLabs/codis/extern/redis-3.2.11/deps</span><br><span class="line">make hiredis jemalloc linenoise lua geohash-int</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 Codis 源代码，直接通过 make 编译，可以看到如下输出：</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/CodisLabs/codis</span><br><span class="line">make</span><br><span class="line">===============================================================================</span><br><span class="line">go build -i -o bin/codis-dashboard ./cmd/dashboard</span><br><span class="line">go build -i -tags <span class="string">"cgo_jemalloc"</span> -o bin/codis-proxy ./cmd/proxy</span><br><span class="line">go build -i -o bin/codis-admin ./cmd/admin</span><br><span class="line">go build -i -o bin/codis-ha ./cmd/ha</span><br><span class="line">go build -i -o bin/codis-fe ./cmd/fe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看编译后的版本</span></span><br><span class="line">cat bin/version</span><br><span class="line">version = 2018-11-04 16:22:35 +0800 @de1ad026e329561c22e2a3035fbfe89dc7fef764 @3.2.2-12-gde1ad02</span><br><span class="line">compile = 2020-06-17 06:39:48 -0400 by go version go1.13.12 linux/amd64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝 codis bin</span></span><br><span class="line">mkdir -p /opt/codis/&#123;config,bin&#125;</span><br><span class="line">cp -r <span class="variable">$GOPATH</span>/src/github.com/CodisLabs/codis/bin /opt/codis</span><br><span class="line">cp -r <span class="variable">$GOPATH</span>/src/github.com/CodisLabs/codis/config /opt/codis</span><br></pre></td></tr></table></figure><h3 id="Codis-手动安装"><a href="#Codis-手动安装" class="headerlink" title="Codis 手动安装"></a>Codis 手动安装</h3><p>dashboard.toml</p><ol><li>调整为 zookeeper，强依赖</li><li>保持多个 instance 的 product_name 唯一性</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/codis/config</span><br><span class="line"><span class="comment"># dashboard.toml</span></span><br><span class="line">vim dashboard.toml</span><br><span class="line"><span class="comment">#coordinator_name = "filesystem"</span></span><br><span class="line"><span class="comment">#coordinator_addr = "/tmp/codis"</span></span><br><span class="line">coordinator_name = <span class="string">"zookeeper"</span></span><br><span class="line">coordinator_addr = <span class="string">"127.0.0.1:2181"</span></span><br><span class="line">product_name = <span class="string">"codis-demo"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">##################################################</span></span><br><span class="line"><span class="comment">#                                                #</span></span><br><span class="line"><span class="comment">#                  Codis-Dashboard               #</span></span><br><span class="line"><span class="comment">#                                                #</span></span><br><span class="line"><span class="comment">##################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set Coordinator, only accept "zookeeper" &amp; "etcd" &amp; "filesystem".</span></span><br><span class="line"><span class="comment"># for zookeeper/etcd, coorinator_auth accept "user:password"</span></span><br><span class="line"><span class="comment"># Quick Start</span></span><br><span class="line"><span class="comment">#coordinator_name = "filesystem"</span></span><br><span class="line"><span class="comment">#coordinator_addr = "/tmp/codis"</span></span><br><span class="line">coordinator_name = <span class="string">"zookeeper"</span></span><br><span class="line">coordinator_addr = <span class="string">"127.0.0.1:2181"</span></span><br><span class="line"><span class="comment">#coordinator_auth = ""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set Codis Product Name/Auth.</span></span><br><span class="line">product_name = <span class="string">"codis-demo"</span></span><br><span class="line">product_auth = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set bind address for admin(rpc), tcp only.</span></span><br><span class="line">admin_addr = <span class="string">"0.0.0.0:18080"</span></span><br></pre></td></tr></table></figure><p>proxy.toml</p><ol><li>调整为 zookeeper，强依赖</li><li>保持多个 instance 的 product_name 唯一性</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">product_name = <span class="string">"codis-demo"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##################################################</span></span><br><span class="line"><span class="comment">#                                                #</span></span><br><span class="line"><span class="comment">#                  Codis-Proxy                   #</span></span><br><span class="line"><span class="comment">#                                                #</span></span><br><span class="line"><span class="comment">##################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set Codis Product Name/Auth.</span></span><br><span class="line">product_name = <span class="string">"codis-demo"</span></span><br><span class="line">product_auth = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set auth for client session</span></span><br><span class="line"><span class="comment">#   1. product_auth is used for auth validation among codis-dashboard,</span></span><br><span class="line"><span class="comment">#      codis-proxy and codis-server.</span></span><br><span class="line"><span class="comment">#   2. session_auth is different from product_auth, it requires clients</span></span><br><span class="line"><span class="comment">#      to issue AUTH &lt;PASSWORD&gt; before processing any other commands.</span></span><br><span class="line">session_auth = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set bind address for admin(rpc), tcp only.</span></span><br><span class="line">admin_addr = <span class="string">"0.0.0.0:11080"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set bind address for proxy, proto_type can be "tcp", "tcp4", "tcp6", "unix" or "unixpacket".</span></span><br><span class="line">proto_type = <span class="string">"tcp4"</span></span><br><span class="line">proxy_addr = <span class="string">"0.0.0.0:19000"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set jodis address &amp; session timeout</span></span><br><span class="line"><span class="comment">#   1. jodis_name is short for jodis_coordinator_name, only accept "zookeeper" &amp; "etcd".</span></span><br><span class="line"><span class="comment">#   2. jodis_addr is short for jodis_coordinator_addr</span></span><br><span class="line"><span class="comment">#   3. jodis_auth is short for jodis_coordinator_auth, for zookeeper/etcd, "user:password" is accepted.</span></span><br><span class="line"><span class="comment">#   4. proxy will be registered as node:</span></span><br><span class="line"><span class="comment">#        if jodis_compatible = true (not suggested):</span></span><br><span class="line"><span class="comment">#          /zk/codis/db_&#123;PRODUCT_NAME&#125;/proxy-&#123;HASHID&#125; (compatible with Codis2.0)</span></span><br><span class="line"><span class="comment">#        or else</span></span><br><span class="line"><span class="comment">#          /jodis/&#123;PRODUCT_NAME&#125;/proxy-&#123;HASHID&#125;</span></span><br><span class="line">jodis_name = <span class="string">""</span></span><br><span class="line">jodis_addr = <span class="string">""</span></span><br><span class="line">jodis_auth = <span class="string">""</span></span><br><span class="line">jodis_timeout = <span class="string">"20s"</span></span><br><span class="line">jodis_compatible = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set datacenter of proxy.</span></span><br><span class="line">proxy_datacenter = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set max number of alive sessions.</span></span><br><span class="line">proxy_max_clients = 1000</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set max offheap memory size. (0 to disable)</span></span><br><span class="line">proxy_max_offheap_size = <span class="string">"1024mb"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set heap placeholder to reduce GC frequency.</span></span><br><span class="line">proxy_heap_placeholder = <span class="string">"256mb"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Proxy will ping backend redis (and clear 'MASTERDOWN' state) in a predefined interval. (0 to disable)</span></span><br><span class="line">backend_ping_period = <span class="string">"5s"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set backend recv buffer size &amp; timeout.</span></span><br><span class="line">backend_recv_bufsize = <span class="string">"128kb"</span></span><br><span class="line">backend_recv_timeout = <span class="string">"30s"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set backend send buffer &amp; timeout.</span></span><br><span class="line">backend_send_bufsize = <span class="string">"128kb"</span></span><br><span class="line">backend_send_timeout = <span class="string">"30s"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set backend pipeline buffer size.</span></span><br><span class="line">backend_max_pipeline = 20480</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set backend never read replica groups, default is false</span></span><br><span class="line">backend_primary_only = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set backend parallel connections per server</span></span><br><span class="line">backend_primary_parallel = 1</span><br><span class="line">backend_replica_parallel = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set backend tcp keepalive period. (0 to disable)</span></span><br><span class="line">backend_keepalive_period = <span class="string">"75s"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set number of databases of backend.</span></span><br><span class="line">backend_number_databases = 16</span><br><span class="line"></span><br><span class="line"><span class="comment"># If there is no request from client for a long time, the connection will be closed. (0 to disable)</span></span><br><span class="line"><span class="comment"># Set session recv buffer size &amp; timeout.</span></span><br><span class="line">session_recv_bufsize = <span class="string">"128kb"</span></span><br><span class="line">session_recv_timeout = <span class="string">"30m"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set session send buffer size &amp; timeout.</span></span><br><span class="line">session_send_bufsize = <span class="string">"64kb"</span></span><br><span class="line">session_send_timeout = <span class="string">"30s"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Make sure this is higher than the max number of requests for each pipeline request, or your client may be blocked.</span></span><br><span class="line"><span class="comment"># Set session pipeline buffer size.</span></span><br><span class="line">session_max_pipeline = 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set session tcp keepalive period. (0 to disable)</span></span><br><span class="line">session_keepalive_period = <span class="string">"75s"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set session to be sensitive to failures. Default is false, instead of closing socket, proxy will send an error response to client.</span></span><br><span class="line">session_break_on_failure = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set metrics server (such as http://localhost:28000), proxy will report json formatted metrics to specified server in a predefined period.</span></span><br><span class="line">metrics_report_server = <span class="string">""</span></span><br><span class="line">metrics_report_period = <span class="string">"1s"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set influxdb server (such as http://localhost:8086), proxy will report metrics to influxdb.</span></span><br><span class="line">metrics_report_influxdb_server = <span class="string">""</span></span><br><span class="line">metrics_report_influxdb_period = <span class="string">"1s"</span></span><br><span class="line">metrics_report_influxdb_username = <span class="string">""</span></span><br><span class="line">metrics_report_influxdb_password = <span class="string">""</span></span><br><span class="line">metrics_report_influxdb_database = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set statsd server (such as localhost:8125), proxy will report metrics to statsd.</span></span><br><span class="line">metrics_report_statsd_server = <span class="string">""</span></span><br><span class="line">metrics_report_statsd_period = <span class="string">"1s"</span></span><br><span class="line">metrics_report_statsd_prefix = <span class="string">""</span></span><br></pre></td></tr></table></figure><p>redis.conf</p><ol><li>每台机器创建两个 redis 实例，对应端口 6379 和 6380</li><li>按需求修改 redis.conf 配置文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建 codis data 目录</span></span><br><span class="line">mkdir -p /opt/codis/data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 6379 的配置文件：</span></span><br><span class="line">cp redis.conf redis-6379.conf</span><br><span class="line">vim redis-6379.conf</span><br><span class="line"><span class="comment"># 修改如下内容</span></span><br><span class="line">protected-mode no</span><br><span class="line">port 6379</span><br><span class="line">pidfile <span class="string">"/opt/codis/data/redis_6379.pid"</span></span><br><span class="line">logfile <span class="string">"/opt/codis/data/redis_6379.log"</span></span><br><span class="line">dbfilename <span class="string">"dump_6379.rdb"</span></span><br><span class="line">dir <span class="string">"/opt/codis/data"</span></span><br><span class="line"><span class="comment"># 创建 6380 的配置文件</span></span><br><span class="line">cp redis-6379.conf redis-6380.conf </span><br><span class="line">sed -i <span class="string">'s/6379/6380/g'</span> redis-6380.conf</span><br></pre></td></tr></table></figure><p>sentinel.conf</p><ol><li>如果只是 test 可以不配置</li><li>线上环境做 HA 建议分布在 3 台不同节点</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim sentinel.conf</span><br><span class="line"></span><br><span class="line">dir <span class="string">"/opt/codis/data"</span></span><br><span class="line">daemonize yes</span><br><span class="line">loglevel notice</span><br><span class="line">logfile <span class="string">"/opt/codis/data/setinel.log"</span></span><br></pre></td></tr></table></figure><p>Codis 启停脚本</p><ol><li>测试环境可以使用 nohup 在后台运行</li><li>线上环境建议使用 <code>Supervisord</code> 或者 <code>Monit</code> 来管理</li><li>注意这里最后一个 fe 参数是你要访问的前端地址，但是因为 zookeeper 已经占用了 8080 端口，所以你可以改成别的端口。而且为了你在任何地址都可以访问，你可以设置监听 ip 为 0.0.0.0，因为 FE 是不用密码的，所以端口最好设置一个不常见的，避免被不怀好意的人看到前端页面之后对你的 codis 集群做出不好的事情，或者通过防火墙和 SSO 限制访问</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建 codis log 目录</span></span><br><span class="line">mkdir -p /opt/codis/data</span><br><span class="line"><span class="built_in">cd</span> /opt/codis</span><br><span class="line"></span><br><span class="line"><span class="comment"># start_dashboard.sh</span></span><br><span class="line">nohup ./bin/codis-dashboard --ncpu=1 --config=config/dashboard.toml --<span class="built_in">log</span>=<span class="built_in">log</span>/dashboard.log --<span class="built_in">log</span>-level=WARN &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># start_proxy.sh</span></span><br><span class="line">nohup ./bin/codis-proxy --ncpu=1 --config=config/proxy.toml --<span class="built_in">log</span>=<span class="built_in">log</span>/proxy.log --<span class="built_in">log</span>-level=WARN &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># start_server.sh</span></span><br><span class="line">./bin/codis-server config/redis-6379.conf</span><br><span class="line">./bin/codis-server config/redis-6380.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># start_fe.sh (可选，如果 8080 被占用需要修改端口)</span></span><br><span class="line">nohup ./bin/codis-fe --ncpu=1 --<span class="built_in">log</span>=<span class="built_in">log</span>/fe.log --<span class="built_in">log</span>-level=WARN --zookeeper=127.0.0.1:2181 --listen=0.0.0.0:8081 &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># start_sentinel.sh (可选)</span></span><br><span class="line">./bin/codis-server config/sentinel.conf --sentinel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录 codis-fe</span></span><br><span class="line">http://192.168.184.131:8081/<span class="comment">#codis-demo</span></span><br><span class="line"><span class="comment"># 添加 codis-proxy</span></span><br><span class="line">New Proxy: 192.168.184.131:11080</span><br><span class="line"><span class="comment"># 添加 codis-server，注意先添加 group，再添加 server 分配到相应 group。Data Center 可以留空</span></span><br><span class="line">New Group: 1</span><br><span class="line">Add Server:</span><br><span class="line">192.168.184.131:6379 to 1</span><br><span class="line">192.168.184.131:6380 to 1</span><br><span class="line"><span class="comment"># 点击扳手图标会自动设置 SLAVEOF，当然线上环境的配置就会复杂些</span></span><br><span class="line">Auto-Rebalance: Rebalance All Slots</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 好的，基本上到这，一个 Codis Demo 搭建过程基本就算完成了。如果你还需要主从，也可以通过增加三个节点然后通过 FE 操作，它自动就可以帮助你做好主从同步。线上环境需要考虑 HA 是否采用 Sentinel 以及还是主从切换。</span></span><br></pre></td></tr></table></figure><h2 id="Codis-常见问题"><a href="#Codis-常见问题" class="headerlink" title="Codis 常见问题"></a>Codis 常见问题</h2><p>在官方文档中列举了 2 个案例，<a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/tutorial_zh.md#25-codis-admin%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7" target="_blank" rel="noopener">Codis Admin（命令行工具）</a></p><p><strong> 注意：使用 codis-admin 是十分危险的。</strong></p><h3 id="codis-dashboard-异常退出的修复"><a href="#codis-dashboard-异常退出的修复" class="headerlink" title="codis-dashboard 异常退出的修复"></a>codis-dashboard 异常退出的修复</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># codis-dashboard 无法启动，并提示:</span></span><br><span class="line">[ERROR] store: acquire lock of codis-demo failed</span><br><span class="line">[error]: zk: node already exists</span><br></pre></td></tr></table></figure><p>当 codis-dashboard 启动时，会在外部存储上存放一条数据，用于存储 dashboard 信息，同时作为 LOCK 存在。当 codis-dashboard 安全退出时，会主动删除该数据。当 codis-dashboard 异常退出时，由于之前 LOCK 未安全删除，重启往往会失败。因此 codis-admin 提供了强制删除工具：</p><ol><li>确认 codis-dashboard 进程已经退出（<strong> 很重要 </strong>）；</li><li>运行 codis-admin 删除 LOCK：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./bin/codis-admin --remove-lock --product=codis-demo --zookeeper=127.0.0.1:2181</span><br></pre></td></tr></table></figure><h3 id="codis-proxy-异常退出的修复"><a href="#codis-proxy-异常退出的修复" class="headerlink" title="codis-proxy 异常退出的修复"></a>codis-proxy 异常退出的修复</h3><p>通常 codis-proxy 都是通过 codis-dashboard 进行移除，移除过程中 codis-dashboard 为了安全会向 codis-proxy 发送 <code>offline</code> 指令，成功后才会将 proxy 信息从外部存储中移除。如果 codis-proxy 异常退出，该操作会失败。此时可以使用 codis-admin 工具进行移除：</p><ol><li>确认 codis-proxy 进程已经退出（<strong> 很重要 </strong>）；</li><li>运行 codis-admin 删除 proxy：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./bin/codis-admin --dashboard=127.0.0.1:18080 --remove-proxy --addr=127.0.0.1:11080 --force</span><br></pre></td></tr></table></figure><p>选项 <code>--force</code> 表示，无论 <code>offline</code> 操作是否成功，都从外部存储中将该节点删除。所以操作前，一定要确认该 codis-proxy 进程已经退出。</p><h2 id="Codis-HA"><a href="#Codis-HA" class="headerlink" title="Codis HA"></a>Codis HA</h2><p>Codis 的架构本身分成 Proxy 集群 + Redis 集群，Proxy 集群的高可用，可以基于 Zookeeper 来做故障转移，而 Redis 集群的高可用是借助于 Redis Sentinel 开源的哨兵集群来实现，那边 Codis 作为非 Redis 组件，需要解决的一个问题就是如何集成 Redis 哨兵集群。</p><h2 id="Codis-in-Kubernetes"><a href="#Codis-in-Kubernetes" class="headerlink" title="Codis in Kubernetes"></a>Codis in Kubernetes</h2><blockquote><p>好处是上线很快，坏处是出了问题你就直接嗝屁了，debug 困难推荐先上测试后上生产</p></blockquote><p><a href="https://github.com/CodisLabs/codis/tree/release3.2/kubernetes" target="_blank" rel="noopener">https://github.com/CodisLabs/codis/tree/release3.2/kubernetes</a></p><h2 id="Codis-监控"><a href="#Codis-监控" class="headerlink" title="Codis 监控"></a>Codis 监控</h2><p>Codis 的监控主要分为 3 部分，衍生部分还包括 Zookeeper，这里就不展开了</p><ol><li>Codis Proxy</li><li>Codis Redis Cluster</li><li>Codis Sentinels</li></ol><h2 id="Redis-迁移至-Codis"><a href="#Redis-迁移至-Codis" class="headerlink" title="Redis 迁移至 Codis"></a>Redis 迁移至 Codis</h2><p>分两种情况:</p><ol><li>原来使用 twemproxy 的用户: 可以, 使用 codis 项目内的 redis-port 工具, 可以实时的同步 twemproxy 底下的 redis 数据到你的 codis 集群上. 搞定了以后, 只需要你修改一下你的配置, 将 twemproxy 的地址改成 codis 的地址就好了. 除此之外, 你什么事情都不用做.</li><li>原来使用 Redis 的用户: 如果你使用了 <a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/unsupported_cmds.md" target="_blank" rel="noopener">doc/unsupported_cmds</a>中提到的命令，是无法直接迁移到 Codis 上的. 你需要修改你的代码, 用其他的方式实现.</li></ol><p>先搭建好 codis 集群并让 codis-proxy 正确运行起来。对线上每一个 redis 实例运行一个 redis-port 来向 codis 导入数据，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">for port in &#123;6379,6380,6479,6480&#125;; do</span><br><span class="line">    nohup redis-port sync --ncpu=4 --from=redis-server:$&#123;port&#125; \</span><br><span class="line">        --target=codis-proxy:19000 &gt; $&#123;port&#125;.log 2&gt;&amp;1 &amp;</span><br><span class="line">    sleep 5</span><br><span class="line">done</span><br><span class="line">tail -f *.log</span><br></pre></td></tr></table></figure><ul><li>每个 redis-port 负责将对应的 redis 数据导入到 codis</li><li>多个 redis-port 之间不互相干扰，除非多个 redis 上的 key 本身出现冲突</li><li>单个 redis-port 可以将负责的数据并行迁移以提高速度，通过 –ncpu 来指定并行数</li><li>导入速度受带宽以及 codis-proxy 处理速度限制(本质是大量的 slotsrestore 操作)</li><li>完成数据迁移，在适当的时候将服务指向 Codis，并将原 redis 下线，旧 redis 下线时，会导致 reids-port 链接断开，于是自动退出</li></ul><p><a href="https://github.com/CodisLabs/redis-port" target="_blank" rel="noopener">redis-port</a><br><a href="https://github.com/alibaba/RedisShake" target="_blank" rel="noopener">RedisShake</a><br><a href="https://github.com/sripathikrishnan/redis-rdb-tools" target="_blank" rel="noopener">redis-rdb-tools</a></p><h2 id="Codis-扩容"><a href="#Codis-扩容" class="headerlink" title="Codis 扩容"></a>Codis 扩容</h2><p>Codis 可以实现在线不停服务进行扩容，具体的步骤如下：</p><ol><li>安装配置 codis-server 主从</li><li>打开 codis 管理界面，新建 server group 并添加刚刚安装的 redis 实例（注意：codis 默认第一个添加的是 master）</li><li>规划 slot 分布，把部分 slot 迁移到新的 server group 中</li></ol><p><strong> 备注说明 </strong></p><ol><li>slot 迁移的过程中，Codis 服务可以正常访问，codis 的迁移机制可以保证数据的一致性</li><li>迁移时，key 都是单个进行迁移，并且不能同时运行多个迁移任务，所以 codis 的迁移时间会比较长。一定要在扩容前留有足够的时间和空间。</li></ol><h2 id="Codis-其他经验分享"><a href="#Codis-其他经验分享" class="headerlink" title="Codis 其他经验分享"></a>Codis 其他经验分享</h2><ol><li><p>关于 HOT KEY， HOT KEY 很影响 Codis/Redis 的性能，这点如果你监控不到位，你就得花一些力气去找到底是哪组出了问题，再 monitor 看看找出是哪个应用干的，比较费时费力，所以在交付 rd 上线时， 我们就严肃声明坚决不允许存在 HOT KEY，宁可使用笨方法多消耗一些内存，也要降低线上故障的风险。</p></li><li><p>关于 BIG KEY,  这点风险更为巨大：</p></li></ol><p>由于 Codis 支持 “resharding without restarting cluster”，如果迁移失败，所导致的后果也是不可简单衡量的。Redis 是串行提供服务的，所以当迁移该 BIG KEY 时，其他的请求就会被 BLOCK 住，这点是十分危险的，访问该组的请求皆会失败。</p><p>由于 Codis-ha 也会依赖该节点的返回来判断 Codis-server 是否挂掉，如果无响应超过设置时间，便会强制提升 SLAVE 至 MASTER，导致整个迁移任务失败。这时如果 Proxy 的信息没有更新的话，并且迁移故障的 KEY 所在 SLOT 可能会存在 KEY 的信息不完整，虽然服务恢复，但是仍有大量 key 失效。</p><p>所以一般不推荐使用 Codis 存大的 HASH 表，LIST 等等，并且在迁移之前，至少要对该 Group 做一次检查 BIG KEY 即：redis-cli –bigkeys 查看是否有 BIG KEY 存在，再酌情迁移。</p><ol start="3"><li>关于 Codis-server，一般 Codis-proxy 或者 Codis-dashboard 我们使用 supervisor 管理，在进程退出的情况下立即拉起来重新服务，而 Codis-Server 则不推荐使用该方式，原因是这样的：一般作为 Codis-server，是关闭 rdb dump 的，如果 Codis-server 挂掉，当重新启动时，是没有 rdb 文件的，或者 rdb 文件是上一次切换之前的。如果挂掉立即重新启动，则该 Codis 有可能是空的，或者数据不是最新，而同时，SLAVE 同步，也会清空数据库，或者同步旧数据。</li></ol><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://mp.weixin.qq.com/s/BoLsVKYyu8yRXZbxd1uuQw" target="_blank" rel="noopener">史上最全 Redis 高可用技术解决方案大全</a><br><a href="https://mp.weixin.qq.com/s/F68-e2umTQIq0aGfif58ow" target="_blank" rel="noopener">深入浅出百亿请求高可用 Redis (codis) 分布式集群揭秘</a><br><a href="https://cloud.tencent.com/developer/article/1006262" target="_blank" rel="noopener">大规模 codis 集群的治理与实践</a><br><a href="https://www.menina.cn/article/61" target="_blank" rel="noopener">避免 Redis (Codis) 的 Timeout 及监控</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzA4Nzg5Nzc5OA==&amp;mid=2651678993&amp;idx=1&amp;sn=195b7e98450befb9bde04ea58756a731&amp;chksm=8bcbaab8bcbc23ae01f8288bcfb2c65d0e8b9ee4610420c252fa1ab5709b7909b26d4d5da67b&amp;mpshare=1&amp;scene=23&amp;srcid&amp;sharer_sharetime=1565249364003&amp;sharer_shareid=456ba82bbd1a1c9f32e5725824095308%23rd" target="_blank" rel="noopener">10 分钟彻底理解 Redis 的持久化和主从复制</a><br><a href="https://zhuanlan.zhihu.com/p/53044266" target="_blank" rel="noopener">Codis AutoRebalance 流程学习</a></p>]]></content>
    
    <summary type="html">
    
      Redis(Codis)分布式集群部署实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Ansible 学习路径</title>
    <link href="https://wsgzao.github.io/post/ansible/"/>
    <id>https://wsgzao.github.io/post/ansible/</id>
    <published>2020-06-21T02:59:49.000Z</published>
    <updated>2020-06-21T08:54:00.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为工作的缘故接触并积极推动 Ansible 在企业级生产环境的落地，独立承担并实现了《基于 ansible 的主机自动化配置管理》项目，此前也先后接触过 Puppet 和 SaltStack，本文不会讨论开源或者自主研发方案的优劣，重点是和大伙儿分享自己在 ansible 技术领域积累的一些项目实战经验，如果大家遇到任何问题也欢迎通过留言或者其他方式进行互动，我尽力做到有效回复。</p><blockquote><p>Ansible is Simple IT Automation</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 06 月 21 日 - 增加 Mitogen for Ansible<br>2020 年 06 月 01 日 - 增加基于 Ansible 的自动化运维开源项目<br>2020 年 01 月 22 日 - 增加 Ansible 参考文章<br>2018 年 05 月 15 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/ansible/">https://wsgzao.github.io/post/ansible/</a></p><p><strong> 扩展阅读 </strong></p><p>ansible - <a href="https://docs.ansible.com/" target="_blank" rel="noopener">https://docs.ansible.com/</a></p><hr><h2 id="Ansible-标准化学习路径"><a href="#Ansible-标准化学习路径" class="headerlink" title="Ansible 标准化学习路径"></a>Ansible 标准化学习路径</h2><blockquote><p>Ansible 相关的书籍在逐步增多，由于 Ansible 版本迭代更新频率高但学习成本低，个人建议书为辅，官方文档为主</p></blockquote><p>Ansible is an IT automation tool. It can configure systems, deploy software, and orchestrate more advanced IT tasks such as continuous deployments or zero downtime rolling updates.</p><p>Ansible’s main goals are simplicity and ease-of-use. It also has a strong focus on security and reliability, featuring a minimum of moving parts, usage of OpenSSH for transport (with other transports and pull modes as alternatives), and a language that is designed around auditability by humans–even those not familiar with the program.</p><p>We believe simplicity is relevant to all sizes of environments, so we design for busy users of all types: developers, sysadmins, release engineers, IT managers, and everyone in between. Ansible is appropriate for managing all environments, from small setups with a handful of instances to enterprise environments with many thousands of instances.</p><p>Ansible manages machines in an agent-less manner. There is never a question of how to upgrade remote daemons or the problem of not being able to manage systems because daemons are uninstalled. Because OpenSSH is one of the most peer-reviewed open source components, security exposure is greatly reduced. Ansible is decentralized–it relies on your existing OS credentials to control access to remote machines. If needed, Ansible can easily connect with Kerberos, LDAP, and other centralized authentication management systems.</p><p>This documentation covers the current released version of Ansible and also some development version features. For recent features, we note in each section the version of Ansible where the feature was added.</p><p>Ansible releases a new major release of Ansible approximately every two months. The core application evolves somewhat conservatively, valuing simplicity in language design and setup. However, the community around new modules and plugins being developed and contributed moves very quickly, adding many new modules in each release.</p><blockquote><p>Ansible Lightbulb 新版本是 Red Hat Ansible Automation Platform Workshops</p></blockquote><p>The Ansible Lightbulb project is an effort to provide a content toolkit and educational reference for effectively communicating and teaching Ansible topics.</p><p>Ansible Lightbulb - <a href="https://github.com/ansible/lightbulb" target="_blank" rel="noopener">https://github.com/ansible/lightbulb</a></p><p>Red Hat Ansible Automation Platform Workshops - <a href="https://ansible.github.io/workshops/" target="_blank" rel="noopener">https://ansible.github.io/workshops/</a></p><blockquote><p>Ansible Documentation 是 Ansible 官方文档，我的建议还是对英文不要害怕，多动手查多敲命令去理解</p></blockquote><p>Ansible Documentation - <a href="http://docs.ansible.com/ansible/latest/index.html" target="_blank" rel="noopener">http://docs.ansible.com/ansible/latest/index.html</a></p><blockquote><p>如果大家需要使用 Role 推荐阅读 Ansible Best Practices</p></blockquote><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_best_practices.html" target="_blank" rel="noopener">Ansible Best Practices</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">inventories/</span><br><span class="line">   production/</span><br><span class="line">      hosts               # inventory file for production servers</span><br><span class="line">      group_vars/</span><br><span class="line">         group1.yml       # here we assign variables to particular groups</span><br><span class="line">         group2.yml</span><br><span class="line">      host_vars/</span><br><span class="line">         hostname1.yml    # here we assign variables to particular systems</span><br><span class="line">         hostname2.yml</span><br><span class="line"></span><br><span class="line">   staging/</span><br><span class="line">      hosts               # inventory file for staging environment</span><br><span class="line">      group_vars/</span><br><span class="line">         group1.yml       # here we assign variables to particular groups</span><br><span class="line">         group2.yml</span><br><span class="line">      host_vars/</span><br><span class="line">         stagehost1.yml   # here we assign variables to particular systems</span><br><span class="line">         stagehost2.yml</span><br><span class="line"></span><br><span class="line">library/                  # if any custom modules, put them here (optional)</span><br><span class="line">module_utils/             # if any custom module_utils to support modules, put them here (optional)</span><br><span class="line">filter_plugins/           # if any custom filter plugins, put them here (optional)</span><br><span class="line"></span><br><span class="line">site.yml                  # master playbook</span><br><span class="line">webservers.yml            # playbook for webserver tier</span><br><span class="line">dbservers.yml             # playbook for dbserver tier</span><br><span class="line"></span><br><span class="line">files/                    # here we assign files for simple plays</span><br><span class="line">plays/                    # here we assign plays as the entrance</span><br><span class="line">tasks/                    # here we assign tasks for plays to call</span><br><span class="line"></span><br><span class="line">roles/</span><br><span class="line">    common/               # this hierarchy represents a &quot;role&quot;</span><br><span class="line">        tasks/            #</span><br><span class="line">            main.yml      #  &lt;-- tasks file can include smaller files if warranted</span><br><span class="line">        handlers/         #</span><br><span class="line">            main.yml      #  &lt;-- handlers file</span><br><span class="line">        templates/        #  &lt;-- files for use with the template resource</span><br><span class="line">            ntp.conf.j2   #  &lt;------- templates end in .j2</span><br><span class="line">        files/            #</span><br><span class="line">            bar.txt       #  &lt;-- files for use with the copy resource</span><br><span class="line">            foo.sh        #  &lt;-- script files for use with the script resource</span><br><span class="line">        vars/             #</span><br><span class="line">            main.yml      #  &lt;-- variables associated with this role</span><br><span class="line">        defaults/         #</span><br><span class="line">            main.yml      #  &lt;-- default lower priority variables for this role</span><br><span class="line">        meta/             #</span><br><span class="line">            main.yml      #  &lt;-- role dependencies</span><br><span class="line">        library/          # roles can also include custom modules</span><br><span class="line">        module_utils/     # roles can also include custom module_utils</span><br><span class="line">        lookup_plugins/   # or other types of plugins, like lookup in this case</span><br><span class="line"></span><br><span class="line">    webtier/              # same kind of structure as &quot;common&quot; was above, done for the webtier role</span><br><span class="line">    monitoring/           # &quot;&quot;</span><br><span class="line">    fooapp/               # &quot;&quot;</span><br></pre></td></tr></table></figure><h2 id="提升-Ansible-执行效率的插件"><a href="#提升-Ansible-执行效率的插件" class="headerlink" title="提升 Ansible 执行效率的插件"></a>提升 Ansible 执行效率的插件</h2><p>众所周知，Ansible 是基于 ssh(当然还有 telnet，winrm 等连接插件)的自动化配置管理工具，其简单易用，无 agent 式的工作方式在很多场景中都有不少优势，不过也是由于这种工作方式导致了它没有其他 c/s 类的工具执行效率高，饱受其他 C/S 类工具使用者的讥讽，对此，Ansible 官方也对 Ansible 的速度效率做了不少优化手段。</p><table><thead><tr><th></th><th>参数名 / 优化类别</th><th>说明</th></tr></thead><tbody><tr><td></td><td>fact cache</td><td>将 facts 信息第一次收集后缓存到 <code>memory</code> 或者 <code>redis</code> 或者文件中。</td><td></td></tr><tr><td></td><td>gather_subset</td><td>可选择性的收集 <code>network</code>,<code>hardware</code> 等信息，而不是全部</td><td></td></tr><tr><td></td><td>control_path</td><td>开启 <code>ssh socket</code> 持久化，复用 ssh 连接</td><td></td></tr><tr><td></td><td>pipelinling</td><td>开启 <code>ssh pipelining</code>, 客户端从管道中读取执行渲染后的脚本，而不是在客户端创建临时文件</td><td></td></tr><tr><td></td><td>fork</td><td>提高并行执行主机的数量</td><td></td></tr><tr><td></td><td>serial</td><td>将 <code>play_hosts`</code>①` 中主机再分批执行</td><td></td></tr><tr><td></td><td>strategy</td><td>默认 <code>linear</code>, 每个主机的单个 task 执行完成会等待其他都完成后再执行下个任务，设置 <code>free</code> 可不等待其他主机，继续往下执行(看起来会比较乱)，还有一个选项 <code>host_pinned</code>，我也不知道干嘛的</td><td></td></tr></tbody></table><p>无意发现了一个 Mitogen 的 Ansible plugin（strategy plugin），当前已迭代到 0.29 版本，看介绍说能提升 1.2x ~ 7x 以上的执行效率，着实惊人！</p><p>它通过高效的远程过程调用来取代 ansible 默认的嵌入式与纯 python shell 调用，它不会优化模块本身的执行效率，只会尽可能快的②去执行模块获取返回 (执行模块前也是有一系列连接，发送数据，传输渲染脚本等操作的) 来提高整体的效率，特性如下</p><p><strong>Expect a 1.25x - 7x speedup</strong> and a <strong>CPU usage reduction of at least 2x</strong>, depending on network conditions, modules executed, and time already spent by targets on useful work. Mitogen cannot improve a module once it is executing, it can only ensure the module executes as quickly as possible.</p><ul><li><p><strong>One connection is used per target</strong>, in addition to one sudo invocation per user account. This is much better than SSH multiplexing combined with pipelining, as significant state can be maintained in RAM between steps, and system logs aren’t spammed with repeat authentication events.</p></li><li><p><strong>A single network roundtrip is used</strong> to execute a step whose code already exists in RAM on the target. Eliminating multiplexed SSH channel creation saves 4 ms runtime per 1 ms of network latency for every playbook step.</p></li><li><p><strong>Processes are aggressively reused</strong>, avoiding the cost of invoking Python and recompiling imports, saving 300-800 ms for every playbook step.</p></li><li><p>Code is ephemerally cached in RAM, <strong>reducing bandwidth usage by an order of magnitude</strong> compared to SSH pipelining, with around 5x fewer frames traversing the network in a typical run.</p></li><li><p><strong>Fewer writes to the target filesystem occur</strong>. In typical configurations, Ansible repeatedly rewrites and extracts ZIP files to multiple temporary directories on the target. Security issues relating to temporary files in cross-account scenarios are entirely avoided.</p></li></ul><p>The effect is most potent on playbooks that execute many <strong>short-lived actions</strong>, where Ansible’s overhead dominates the cost of the operation, for example when executing large <code>with_items</code> loops to run simple commands or write files.</p><p>大体就是执行过程中主机使用一个连接(默认每执行一个 <code>task</code> 或者 <code>loop</code> 循环都会重新打开一次连接的)；渲染的执行代码暂存于内存中；减少多路复用 <code>ssh</code> 隧道的时间消耗；减少临时文件传输的带宽；代码重用，避免代码的重新编译成本等</p><p>实现原理的话，可以去看下<a href="https://mitogen.readthedocs.io/en/latest/howitworks.html" title="官网解释" target="_blank" rel="noopener">官网解释</a>，反正我是没怎么看懂</p><p><em>① . <code>play_hosts</code> 为内置参数，指当前正在执行的 playbook 中的主机列表 </em></p><p><em>②. <code>尽可能快的</code> 指到运行模块前的阶段 </em></p><ol><li>Download and extract <a href="https://networkgenomics.com/try/mitogen-0.2.9.tar.gz" target="_blank" rel="noopener">mitogen-0.2.9.tar.gz</a></li><li>Modify <code>ansible.cfg</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[defaults]</span><br><span class="line">strategy_plugins = /path/to/mitogen-0.2.9/ansible_mitogen/plugins/strategy</span><br><span class="line">strategy = mitogen_linear</span><br></pre></td></tr></table></figure><p>The <code>strategy</code> key is optional. If omitted, the <code>ANSIBLE_STRATEGY=mitogen_linear</code> environment variable can be set on a per-run basis. Like <code>mitogen_linear</code>, the <code>mitogen_free</code> and <code>mitogen_host_pinned</code> strategies exists to mimic the <code>free</code> and <code>host_pinned</code> strategies.</p><p><a href="https://networkgenomics.com/ansible/" target="_blank" rel="noopener">https://networkgenomics.com/ansible/</a></p><p><a href="https://mitogen.networkgenomics.com/ansible_detailed.html" target="_blank" rel="noopener">https://mitogen.networkgenomics.com/ansible_detailed.html</a></p><h2 id="基于-Ansible-的开源项目"><a href="#基于-Ansible-的开源项目" class="headerlink" title="基于 Ansible 的开源项目"></a>基于 Ansible 的开源项目</h2><blockquote><p>第一个是 ansible 官方开源项目，其他都是和 ansible 相关的运维平台开源项目，推荐学习和参考</p></blockquote><p>Ansible - <a href="https://github.com/ansible/ansible" target="_blank" rel="noopener">https://github.com/ansible/ansible</a></p><p>Jumpserver - <a href="http://www.jumpserver.org/" target="_blank" rel="noopener">http://www.jumpserver.org/</a> </p><p>OpsManage - <a href="https://github.com/welliamcao/OpsManage" target="_blank" rel="noopener">https://github.com/welliamcao/OpsManage</a> </p><p>spug - <a href="https://github.com/openspug/spug" target="_blank" rel="noopener">https://github.com/openspug/spug</a></p><p>BigOps - <a href="http://www.bigops.com/" target="_blank" rel="noopener">http://www.bigops.com/</a></p><h2 id="Ansible-项目实践"><a href="#Ansible-项目实践" class="headerlink" title="Ansible 项目实践"></a>Ansible 项目实践</h2><blockquote><p>以下内容来自于《基于 ansible 的主机自动化配置管理》项目，基于 ansible 目前可以满足生产环境所有基线要求，相信对大家有一定的参考价值</p></blockquote><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200122143435.png" alt=""></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200122143458.png" alt=""></p><h3 id="ansible-部署"><a href="#ansible-部署" class="headerlink" title="ansible 部署"></a>ansible 部署</h3><blockquote><p>因为生产环境为内外网物理隔离，所有的安装部署都是离线进行的</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install Packages</span></span><br><span class="line">yum install gcc zlib zlib-devel openssl-devel -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install Python</span></span><br><span class="line">tar xf Python-2.7.14.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-2.7.14</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># renew python env</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named six.moves</span></span><br><span class="line">tar xf six-1.11.0.tar.gz </span><br><span class="line"><span class="built_in">cd</span> six-1.11.0</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named packaging.version</span></span><br><span class="line">tar xf packaging-17.1.tar.gz </span><br><span class="line"><span class="built_in">cd</span> packaging-17.1</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named pyparsing</span></span><br><span class="line">tar xf pyparsing-2.2.0.tar.gz </span><br><span class="line"><span class="built_in">cd</span> pyparsing-2.2.0</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named appdirs</span></span><br><span class="line">tar xf appdirs-1.4.3.tar.gz </span><br><span class="line"><span class="built_in">cd</span> appdirs-1.4.3</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install Setuptools</span></span><br><span class="line">unzip setuptools-38.5.2.zip</span><br><span class="line"><span class="built_in">cd</span> setuptools-38.5.2</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install pip</span></span><br><span class="line">tar xf pip-9.0.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> pip-9.0.1</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># pip 离线下载</span></span><br><span class="line"><span class="comment"># pip download -d DIR -r requirements.txt</span></span><br><span class="line">pip download -d ~/ansible/ ansible</span><br><span class="line"></span><br><span class="line"><span class="comment"># pip 离线安装</span></span><br><span class="line"><span class="comment"># pip install --no-index --find-links=DIR -r requirements.txt</span></span><br><span class="line">pip install --no-index --find-links=pip-ansible-2.3.3/ -r requirements.txt</span><br><span class="line">pip install --no-index --find-links=pip-ansible-2.5.0/ -r requirements.txt -U</span><br><span class="line"></span><br><span class="line"><span class="comment"># pip 离线安装 pipenv</span></span><br><span class="line">pip install --no-index --find-links=pip-pipenv/ pipenv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 pipenv 创建虚拟环境</span></span><br><span class="line">mkdir win_ansible</span><br><span class="line"><span class="built_in">cd</span> win_ansible</span><br><span class="line">pipenv shell</span><br><span class="line">pip install --no-index --find-links=pip-ansible-2.5.2/ -r requirements.txt</span><br></pre></td></tr></table></figure><h3 id="ansible-cfg-配置解析"><a href="#ansible-cfg-配置解析" class="headerlink" title="ansible.cfg 配置解析"></a>ansible.cfg 配置解析</h3><blockquote><p>ansible.cfg 不影响执行结果但合理的配置会有效提升效率</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置文件路径（优先级）</span></span><br><span class="line">./ansible.cfg</span><br><span class="line">/etc/ansible/ansible.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件内容</span></span><br><span class="line">[defaults]</span><br><span class="line"><span class="comment">#inventory = /etc/ansible/hosts</span></span><br><span class="line"><span class="comment">#log_path = /var/log/ansible.log</span></span><br><span class="line">forks = 100 <span class="comment"># 设置并发数</span></span><br><span class="line">host_key_checking = False <span class="comment"># 不检查 SSH 主机登录的密钥</span></span><br><span class="line">display_skipped_hosts = False <span class="comment"># 不显示已跳过的主机</span></span><br><span class="line">retry_files_enabled = False <span class="comment"># 不创建任务失败后的重试文件</span></span><br><span class="line"><span class="comment"># 按照 1d 设置 setup 缓存，优化执行效率</span></span><br><span class="line">gathering = smart</span><br><span class="line">fact_caching_timeout = 86400</span><br><span class="line">fact_caching = jsonfile</span><br><span class="line">fact_caching_connection = cachedir</span><br></pre></td></tr></table></figure><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ul><li>服务端操作系统：RHEL 6/7（Windows 不可作为控制端）</li><li>服务端 Python 版本：2.7.14（实测安装完成无需额外调整）</li><li>Ansible 版本：2.3.3.0（实测 2.4 以上版本已不支持 rhel5.5，客户端需 simplejson）</li><li>管理对象：目前主要针对 RHEL 5/6/7（Windows 使用高版本 Ansible）</li><li>基线标准：参考《主机岗配置基线 v1.1.xlsx》</li></ul><blockquote><p>服务端</p></blockquote><ul><li>操作系统版本：RHEL 6/7</li><li>Python 版本：2.7.14</li><li>安装方式：pip 离线安装依赖包</li></ul><blockquote><p>客户端</p></blockquote><ul><li>操作系统版本：RHEL 5/6/7</li><li>非最小模式安装无需做调整</li><li>RHEL5.5 需要安装 simplejson</li></ul><blockquote><p>核心用法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测 ansible 是否可以正常访问主机</span></span><br><span class="line">ansible-playbook -i hosts playbooks/ping.yml -v</span><br><span class="line"><span class="comment"># 配置好 inventory，执行以下命令创建用户并建立信任关系</span></span><br><span class="line">ansible-playbook -i hosts playbooks/user/default.yml -v</span><br><span class="line"><span class="comment"># 配置时间同步 / 进程服务 / 基线文件</span></span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/cfgset.yml -v</span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/cfgset.yml -v --tags=<span class="string">"repo"</span></span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/cfgset.yml -v --skip-tags=<span class="string">"ntp,repo"</span></span><br><span class="line"><span class="comment"># 更新系统软件包和补丁包</span></span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/pakset.yml -v</span><br><span class="line"><span class="comment"># 修改用户密码</span></span><br><span class="line">ansible-playbook -i hosts_changepw playbooks/user/changepw.yml -v -e <span class="string">"@userpass.json"</span></span><br><span class="line"><span class="comment"># 备份配置，支持自定义日期命名，默认为 "%Y%m%d"</span></span><br><span class="line">ansible-playbook -i hosts backup/backup.yml -v</span><br><span class="line"><span class="comment"># 恢复配置，支持按日期目录全局或者局部主机恢复</span></span><br><span class="line">ansible-playbook -i hosts backup/restore.yml -v -e <span class="string">"var_backup_date=20180305"</span></span><br></pre></td></tr></table></figure><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ul><li>服务端操作系统：RHEL 6/7（Windows 不可作为控制端）</li><li>服务端 Python 版本：2.7.14（实测安装完成无需额外调整）</li><li>Ansible 版本：2.5.0（Windows 原生模块支持需要持续更新 Ansible 新版本）</li><li>管理对象：目前主要针对 Windows 7/2008/2012（不支持 xp/2003）</li><li>基线标准：参考《Windows 安全基线》</li></ul><blockquote><p>服务端</p></blockquote><ul><li>操作系统版本：RHEL 6/7</li><li>Python 版本：2.7.14</li><li>安装方式：pip 离线安装依赖包（目前使用 pipenv 切换管理 Linux 和 Windows）</li></ul><blockquote><p>客户端</p></blockquote><ul><li>操作系统版本：Window 7/2008/2012</li><li>WinRM（Windows 7/2008 需要升级至 Powershell v3.0）</li></ul><blockquote><p>核心用法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测 ansible 是否可以正常访问主机</span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/ping.yml -v</span><br><span class="line"><span class="comment"># 配置好 inventory，执行以下命令创建用户并建立信任关系</span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/user/default.yml -v</span><br><span class="line"><span class="comment"># 配置时间同步 / 进程服务 / 基线文件</span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/cfgset.yml -v</span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/cfgset.yml -v --tags=<span class="string">"wsus"</span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/cfgset.yml -v --skip-tags=<span class="string">"ntp,wsus"</span></span><br><span class="line"><span class="comment"># 更新系统软件包和补丁包</span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/pakset.yml -v</span><br><span class="line"><span class="comment"># 修改用户密码</span></span><br><span class="line">ansible-playbook -i win_hosts_changepw win_playbooks/user/changepw.yml -v -e <span class="string">"@userpass.json"</span></span><br><span class="line"><span class="comment"># 备份配置，支持自定义日期命名，默认为 "%Y%m%d"</span></span><br><span class="line">ansible-playbook -i win_hosts win_backup/backup.yml -v</span><br><span class="line"><span class="comment"># 恢复配置，支持按日期目录全局或者局部主机恢复</span></span><br><span class="line">ansible-playbook -i win_hosts win_backup/restore.yml -v -e <span class="string">"var_backup_date=20180305"</span></span><br></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><blockquote><p>很抱歉我暂时不能分享全部信息，但是这并不妨碍技术上的交流，我会逐步分享有价值的可公开代码</p></blockquote><ol><li>遵循 what/why/how 思路，要理解 ansible 能解决什么问题，为什么选择 ansible，怎么使用 ansible 去解决</li><li>Ansible 学习成本低但不等同于没有难度，学习路径推荐参考官方文档并积极实践，官网没有答案要善用 Google 搜索</li><li>Ansible 纯后台模式只解决了部分问题，还有更多需求要通过基于 Ansible 的自动化运维平台来实现，拥抱开源技术不能固步自封</li></ol><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://docs.ansible.com/ansible/latest/index.html" target="_blank" rel="noopener">Ansible Documentation</a></p><p><a href="https://www.cnblogs.com/michael-xiang/p/10462749.html" target="_blank" rel="noopener">Ansible 入门指南 - 学习总结</a></p><p><a href="http://showme.codes/2019-09-19/understand-ansible/" target="_blank" rel="noopener">这样理解 Ansible 更容易</a></p><p><a href="https://anoyi.com/p/62388a4fcbc6" target="_blank" rel="noopener">前世今生：1 小时学会 Ansible</a></p><p><a href="https://lework.github.io/2016/11/19/Ansible-zhuan-ti-wen-zhang-zong-lan/" target="_blank" rel="noopener">Ansible 专题文章总揽</a></p><p><a href="https://www.zsythink.net/archives/tag/ansible/page/6/" target="_blank" rel="noopener">朱双印 - ansible 系列</a></p><p><a href="http://www.cnblogs.com/f-ck-need-u/p/7576137.html#ansible" target="_blank" rel="noopener">骏马金龙 - ansible </a></p><p><a href="https://www.bilibili.com/video/av33611758?from=search&amp;seid=7420958755659258683" target="_blank" rel="noopener">B 站视频 - ansible 教程 - 马哥 2019 全新 ansible 入门到精通</a></p><p><a href="https://www.cnblogs.com/kevingrace/p/11647338.html" target="_blank" rel="noopener">Ansible 日常使用技巧 - 运维总结</a></p><p><a href="http://blog.leanote.com/post/benmo/Ansible-%E5%A5%87%E6%B7%AB%E6%8A%80%E5%B7%A7" target="_blank" rel="noopener">Ansible– 奇淫技巧</a></p>]]></content>
    
    <summary type="html">
    
      Ansible is Simple IT Automation
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>golang 学习路径</title>
    <link href="https://wsgzao.github.io/post/golang/"/>
    <id>https://wsgzao.github.io/post/golang/</id>
    <published>2020-06-17T06:59:49.000Z</published>
    <updated>2020-06-18T03:45:51.354Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>golang 学习路径</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 06 月 17 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/golang/">https://wsgzao.github.io/post/golang/</a></p><hr><h2 id="安装-Go-运行环境"><a href="#安装-Go-运行环境" class="headerlink" title="安装 Go 运行环境"></a>安装 Go 运行环境</h2><p><a href="https://golang.org/doc/install" target="_blank" rel="noopener">Getting Started</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># download</span></span><br><span class="line">wget https://dl.google.com/go/go1.13.12.linux-amd64.tar.gz</span><br><span class="line"><span class="comment">#tar -C /usr/local -xzf go$VERSION.$OS-$ARCH.tar.gz</span></span><br><span class="line">tar -C /usr/<span class="built_in">local</span> -xzf go1.13.12.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># config env</span></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line">go version</span><br><span class="line">go version go1.13.12 linux/amd64</span><br></pre></td></tr></table></figure><h2 id="编译-Codis"><a href="#编译-Codis" class="headerlink" title="编译 Codis"></a>编译 Codis</h2><blockquote><p>以 Codis 为例，官方步骤可能有坑</p></blockquote><p><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/tutorial_zh.md" target="_blank" rel="noopener">Codis 使用文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install package</span></span><br><span class="line">yum install -y git gcc autoconf automake m4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置编译环境，在 / etc/profile 文件中输入下面三行 </span></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin</span><br><span class="line"><span class="built_in">export</span> GOPATH=/usr/<span class="built_in">local</span>/codis/gopath</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOPATH</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载 Codis 源码 </span></span><br><span class="line">mkdir -p <span class="variable">$GOPATH</span>/src/github.com/CodisLabs</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$_</span> &amp;&amp; git <span class="built_in">clone</span> https://github.com/CodisLabs/codis.git -b release3.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 redis 依赖，以免报 jemalloc 版本等错误 (Codis 官方遗漏的步骤)</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/CodisLabs/codis/extern/redis-3.2.11/deps</span><br><span class="line">make hiredis jemalloc linenoise lua geohash-int</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 Codis 源代码，直接通过 make 编译，可以看到如下输出：</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/CodisLabs/codis</span><br><span class="line">make</span><br><span class="line">===============================================================================</span><br><span class="line">go build -i -o bin/codis-dashboard ./cmd/dashboard</span><br><span class="line">go build -i -tags <span class="string">"cgo_jemalloc"</span> -o bin/codis-proxy ./cmd/proxy</span><br><span class="line">go build -i -o bin/codis-admin ./cmd/admin</span><br><span class="line">go build -i -o bin/codis-ha ./cmd/ha</span><br><span class="line">go build -i -o bin/codis-fe ./cmd/fe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看编译后的版本 </span></span><br><span class="line">cat bin/version</span><br><span class="line">version = 2018-11-04 16:22:35 +0800 @de1ad026e329561c22e2a3035fbfe89dc7fef764 @3.2.2-12-gde1ad02</span><br><span class="line">compile = 2020-06-17 06:39:48 -0400 by go version go1.13.12 linux/amd64</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2>]]></content>
    
    <summary type="html">
    
      golang学习路径
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>VMware Fusion NAT 无法连网解决方案</title>
    <link href="https://wsgzao.github.io/post/vmware-fusion/"/>
    <id>https://wsgzao.github.io/post/vmware-fusion/</id>
    <published>2020-06-16T06:59:49.000Z</published>
    <updated>2020-06-17T06:37:55.976Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为在 macOS 下实在仍受不了 VirtualBox 的各种 Bug 和低性能，转投熟悉的 VMware Fusion 后本来一直都挺稳定的，但在一次 Linked Clone 链接克隆中发现 NAT 网络下 VM 可以访问外网但宿主机和虚拟机之间的网络却无法 ping 通，查阅了非常多的资料仍然无解差点就要暴力选择添加一块新网卡做 host-only，最后发现重启下 VMware Fusion 网络就恢复了，这大概就是传说中的无脑重启解决一切问题。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 06 月 16 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/vmware-fusion/">https://wsgzao.github.io/post/vmware-fusion/</a></p><hr><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><ol><li>创建 1 台 NAT 网络类型的 CentOS 虚拟机，IP 为默认 DHCP 段的 192.168.184.128，宿主机和虚拟机网络互通，虚拟机可以正常访问外网</li><li>创建 1 台 Linked Clone 链接克隆 CentOS 虚拟机，IP 为 192.168.184.129，宿主机和虚拟机网络无法互通，虚拟机可以正常访问外网</li></ol><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>网上解决方案：</p><ol><li>检查 macOS 是否联网</li><li>检查 macOS 是否给予 VMware 权限</li><li>重启虚拟机</li><li>重启 VMware</li><li>重启 macOS</li></ol><blockquote><p>以上方法通通无效</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重启 vmware network 服务解决问题</span></span><br><span class="line">sudo /Applications/VMware\ Fusion.app/Contents/Library/vmnet-cli --stop</span><br><span class="line">sudo /Applications/VMware\ Fusion.app/Contents/Library/vmnet-cli --start</span><br></pre></td></tr></table></figure><h2 id="修改-VMware-Fusion-networking"><a href="#修改-VMware-Fusion-networking" class="headerlink" title="修改 VMware Fusion networking"></a>修改 VMware Fusion networking</h2><h3 id="配置-VMware-Fusion-虚拟网络配置"><a href="#配置-VMware-Fusion-虚拟网络配置" class="headerlink" title="配置 VMware Fusion 虚拟网络配置"></a>配置 VMware Fusion 虚拟网络配置</h3><p>VMware Fusion 安装完成后，会在 macOS 中新建两个网卡：vmnet1 以及 vmnet8（在 <code>/Library/Preferences/VMware Fusion</code> 下可以看到）</p><ol><li>vmnet1 是 Host-only 模式</li><li>vmnet8 是 NAT 模式</li></ol><p>这里仅对网卡 vmnet8 进行修改（修改过程中需关闭 VMWare Fusion）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /Library/Preferences/VMware\ Fusion/networking</span><br><span class="line"></span><br><span class="line">VERSION=1,0</span><br><span class="line">answer VNET_1_DHCP yes</span><br><span class="line">answer VNET_1_DHCP_CFG_HASH E805FD2F642680617F0D09147C8D5C5ED962ED29</span><br><span class="line">answer VNET_1_HOSTONLY_NETMASK 255.255.255.0</span><br><span class="line">answer VNET_1_HOSTONLY_SUBNET 172.16.131.0</span><br><span class="line">answer VNET_1_VIRTUAL_ADAPTER yes</span><br><span class="line">answer VNET_8_DHCP yes</span><br><span class="line">answer VNET_8_DHCP_CFG_HASH ABBB4D6B9DEC5639F2756A1991B197986AB5597E</span><br><span class="line">answer VNET_8_HOSTONLY_NETMASK 255.255.255.0</span><br><span class="line">answer VNET_8_HOSTONLY_SUBNET 192.168.184.0</span><br><span class="line">answer VNET_8_NAT yes</span><br><span class="line">answer VNET_8_VIRTUAL_ADAPTER yes</span><br><span class="line">add_bridge_mapping en0 2</span><br></pre></td></tr></table></figure><ol><li>将 DHCP 设置为 no， 即使用静态 IP。 将 SUBNET 修改为自己想用的网段，比如自定义 192.168.111.0 网段</li><li>保存退出</li></ol><p>注意：只修改 vmnet8 的配置， 不要修改 vmnet1 的配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /Library/Preferences/VMware\ Fusion/vmnet8/nat.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># VMware NAT configuration file</span></span><br><span class="line"><span class="comment"># Manual editing of this file is not recommended. Using UI is preferred.</span></span><br><span class="line"></span><br><span class="line">[host]</span><br><span class="line"></span><br><span class="line"><span class="comment"># NAT gateway address</span></span><br><span class="line">ip = 192.168.184.2</span><br><span class="line">netmask = 255.255.255.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># VMnet device if not specified on command line</span></span><br><span class="line">device = vmnet8</span><br><span class="line"></span><br><span class="line"><span class="comment"># Allow PORT/EPRT FTP commands (they need incoming TCP stream ...)</span></span><br><span class="line">activeFTP = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Allows the source to have any OUI.  Turn this on if you change the OUI</span></span><br><span class="line"><span class="comment"># in the MAC address of your virtual machines.</span></span><br><span class="line">allowAnyOUI = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Controls if (TCP) connections should be reset when the adapter they are</span></span><br><span class="line"><span class="comment"># bound to goes down</span></span><br><span class="line">resetConnectionOnLinkDown = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Controls if (TCP) connection should be reset when guest packet's destination</span></span><br><span class="line"><span class="comment"># is NAT's IP address</span></span><br><span class="line">resetConnectionOnDestLocalHost = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Controls if enable nat ipv6</span></span><br><span class="line">natIp6Enable = 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># Controls if enable nat ipv6</span></span><br><span class="line">natIp6Prefix = fd15:4ba5:5a2b:1008::/64</span><br><span class="line"></span><br><span class="line">[tcp]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Value of timeout in TCP TIME_WAIT state, in seconds</span></span><br><span class="line">timeWaitTimeout = 30</span><br><span class="line"></span><br><span class="line">[udp]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Timeout in seconds. Dynamically-created UDP mappings will purged if</span></span><br><span class="line"><span class="comment"># idle for this duration of time 0 = no timeout, default = 60; real</span></span><br><span class="line"><span class="comment"># value might be up to 100% longer</span></span><br><span class="line">timeout = 60</span><br><span class="line"></span><br><span class="line">[netbios]</span><br><span class="line"><span class="comment"># Timeout for NBNS queries.</span></span><br><span class="line">nbnsTimeout = 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># Number of retries for each NBNS query.</span></span><br><span class="line">nbnsRetries = 3</span><br><span class="line"></span><br><span class="line"><span class="comment"># Timeout for NBDS queries.</span></span><br><span class="line">nbdsTimeout = 3</span><br><span class="line"></span><br><span class="line">[incomingtcp]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use these with care - anyone can enter into your VM through these...</span></span><br><span class="line"><span class="comment"># The format and example are as follows:</span></span><br><span class="line"><span class="comment">#&lt;external port number&gt; = &lt;VM's IP address&gt;:&lt;VM's port number&gt;</span></span><br><span class="line"><span class="comment">#8080 = 172.16.3.128:80</span></span><br><span class="line"></span><br><span class="line">[incomingudp]</span><br><span class="line"></span><br><span class="line"><span class="comment"># UDP port forwarding example</span></span><br><span class="line"><span class="comment">#6000 = 172.16.3.0:6001</span></span><br></pre></td></tr></table></figure><p>设置网关为 192.168.111.2，网关的 IP 要和上一步中的 IP 保持网关一致，至此 VMware Fusion 的配置完毕。</p><h3 id="配置虚拟机"><a href="#配置虚拟机" class="headerlink" title="配置虚拟机"></a>配置虚拟机</h3><ol><li>将虚拟机网络切换到 NAT 模式</li><li>打开虚拟机，配置虚拟机网络配置信息</li></ol><p>vi /etc/sysconfig/network-scripts/ifcfg-ens33</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">PEERDNS=yes</span><br><span class="line">PEERROUTES=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">NAME=ens33</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.111.100      // 自定义的虚拟机 IP， 需与 VMware Fusion 配置的 IP 在同一个网段上 </span><br><span class="line">GATEWAY=192.168.111.2       // 配置的网关地址</span><br><span class="line">NETMASK=255.255.255.0       // 配置的掩码</span><br><span class="line">DNS1=114.114.114.114        // macOS 本机的 DNS 地址。 系统偏好设置 -&gt; 网络 -&gt; 在左侧选择当前使用的网络，点击右下角的“高级” 按钮 -&gt; 切换 Tab 页，可找到 DNS 地址。</span><br><span class="line">DNS2=8.8.8.8                // 同上</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存退出，重启网络服务</span></span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://kb.vmware.com/s/article/1016466" target="_blank" rel="noopener">Troubleshooting networking and internet connection issues in VMware Fusion (1016466)</a></p><p><a href="https://kb.vmware.com/s/article/1016466?lang=zh_CN" target="_blank" rel="noopener">VMware Fusion 中的网络和 Internet 连接问题故障排除 (1016466)</a></p>]]></content>
    
    <summary type="html">
    
      VMware Fusion NAT无法连网解决方案
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Scribe 安装使用</title>
    <link href="https://wsgzao.github.io/post/scribe/"/>
    <id>https://wsgzao.github.io/post/scribe/</id>
    <published>2020-06-09T06:59:49.000Z</published>
    <updated>2020-06-10T04:03:47.322Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Scribe 是 Facebook 开源的日志收集工具，我建议大家还是老老实实使用 ELK/EFK 或者 Splunk，不要瞎折腾 Scribe</p><blockquote><p>Centos 安装 Scribe 真是累</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 06 月 09 日 - 增加 Docker 容器部署 Scribe<br>2018 年 09 月 27 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/scribe/">https://wsgzao.github.io/post/scribe/</a></p><hr><h2 id="Scribe-简介"><a href="#Scribe-简介" class="headerlink" title="Scribe 简介"></a>Scribe 简介</h2><p>Scribe is a server for aggregating log data that’s streamed in real time from clients. It is designed to be scalable and reliable.ß</p><p>See the Scribe Wiki for documentation:<br><a href="http://wiki.github.com/facebook/scribe" target="_blank" rel="noopener">http://wiki.github.com/facebook/scribe</a></p><h2 id="install-scribe"><a href="#install-scribe" class="headerlink" title="install scribe"></a>install scribe</h2><blockquote><p>OS: CentOS 7.x</p></blockquote><p>This guide shows how to install the precompiled scribed binary and its dependencies on a new server. Care must be taken to use the required versions for <code>boost (1.44.0)</code>, <code>thrift (0.7.0)</code> and <code>libevent (1.4.10)</code>. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install necessary tools</span></span><br><span class="line">sudo yum install git make flex bison libtool automake openssl-devel libevent libevent-devel python-devel gcc-c++ byacc java-1.7.0-openjdk ant autoconf boost-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># update autoconf</span></span><br><span class="line"><span class="comment"># http://ftp.gnu.org/gnu/autoconf/</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">sudo rpm -e --nodeps `rpm -qf /usr/bin/autoconf`</span><br><span class="line">wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz</span><br><span class="line">tar xzf autoconf-2.69.tar.gz</span><br><span class="line"><span class="built_in">cd</span> autoconf-2.69/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"><span class="comment"># make sure /usr/local/bin is in system PATH: add following line to ~/.bashrc</span></span><br><span class="line">vi ~/.bashrc</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># install boost</span></span><br><span class="line"><span class="comment"># http://jaist.dl.sourceforge.net/project/boost/boost/</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget http://jaist.dl.sourceforge.net/project/boost/boost/1.44.0/boost_1_44_0.tar.gz</span><br><span class="line">tar xzf boost_1_44_0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> boost_1_44_0/</span><br><span class="line">./bootstrap.sh</span><br><span class="line">sudo ./bjam install</span><br><span class="line"></span><br><span class="line"><span class="comment"># install thrift</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/apache/thrift.git</span><br><span class="line"><span class="built_in">cd</span> thrift/</span><br><span class="line">git fetch</span><br><span class="line">git branch -a</span><br><span class="line">git checkout 0.7.x</span><br><span class="line">./bootstrap.sh</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">cp compiler/cpp/thrifty.hh compiler/cpp/thrifty.h</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"><span class="built_in">cd</span> lib/py/</span><br><span class="line">sudo python setup.py install</span><br><span class="line"></span><br><span class="line"><span class="comment"># install fb303</span></span><br><span class="line"><span class="built_in">cd</span> ~/thrift/contrib/fb303/</span><br><span class="line">./bootstrap.sh</span><br><span class="line">./configure CPPFLAGS=<span class="string">"-DHAVE_INTTYPES_H -DHAVE_NETINET_IN_H"</span></span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"><span class="built_in">cd</span> py/</span><br><span class="line">sudo python setup.py install</span><br><span class="line"></span><br><span class="line"><span class="comment"># install libevent</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget https://github.com/downloads/libevent/libevent/libevent-1.4.10-stable.tar.gz</span><br><span class="line">tar xf libevent-1.4.10-stable.tar.gz </span><br><span class="line"><span class="built_in">cd</span> libevent-1.4.10-stable</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># Copy the scribed binary and put it in the desired directory</span></span><br><span class="line">scp scribe.tar.gz 10.65.32.134:/tmp</span><br><span class="line">scp scribed 10.65.32.134:/tmp</span><br><span class="line"><span class="comment"># unzip and mkdir</span></span><br><span class="line">mkdir /opt/running</span><br><span class="line"><span class="built_in">cd</span> /opt/running</span><br><span class="line">cp /tmp/scribe.tar.gz .</span><br><span class="line">tar xzvf scribe.tar.gz</span><br><span class="line">rm -f scribe.tar.gz</span><br><span class="line">mkdir -p /data/gop/live/primary/gop</span><br><span class="line">mkdir -p /data/gop/live/secondary/gop</span><br><span class="line">ln -s /data/gop/live/primary/gop/ /data/shortcut_gop</span><br><span class="line"><span class="comment"># rm -r /data/shortcut_gop</span></span><br><span class="line">cp /tmp/scribed /usr/<span class="built_in">local</span>/bin/scribed</span><br><span class="line"><span class="built_in">cd</span> scribe/</span><br><span class="line"></span><br><span class="line">[root@vm4 scribe]<span class="comment"># cat run_scribed.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="built_in">export</span> LD_LIBRARY_PATH=/usr/lib:/usr/<span class="built_in">local</span>/lib</span><br><span class="line">        /usr/<span class="built_in">local</span>/bin/scribed scribe_11315.conf 1&gt;output/scribe.log 2&gt;output/scribe.err</span><br><span class="line">        sleep 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">nohup sh run_scribed.sh &amp;</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-65-32-134 scribe]<span class="comment"># netstat -tlnp</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><br><span class="line">tcp        0      0 0.0.0.0:10050           0.0.0.0:*               LISTEN      55310/zabbix_agentd</span><br><span class="line">tcp        0      0 0.0.0.0:38422           0.0.0.0:*               LISTEN      52781/sshd</span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1305/sshd</span><br><span class="line">tcp6       0      0 :::10050                :::*                    LISTEN      55310/zabbix_agentd</span><br><span class="line">tcp6       0      0 :::11315                :::*                    LISTEN      4294/scribed</span><br><span class="line">tcp6       0      0 :::38422                :::*                    LISTEN      52781/sshd</span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      1305/sshd</span><br></pre></td></tr></table></figure><h2 id="自动配置-scribe-sh"><a href="#自动配置-scribe-sh" class="headerlink" title="自动配置 scribe.sh"></a>自动配置 scribe.sh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line"><span class="comment">#scribe server installation for CentOS 7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$#</span>"</span> -ne 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Usage: bash <span class="variable">$0</span> project_name"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">yum -y install git make flex bison libtool automake openssl-devel libevent libevent-devel python-devel gcc-c++ byacc java-1.7.0-openjdk ant</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#===============update autoconf===============</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">sudo rpm -e --nodeps `rpm -qf /usr/bin/autoconf`</span><br><span class="line">wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz</span><br><span class="line">tar xzf autoconf-2.69.tar.gz</span><br><span class="line"><span class="built_in">cd</span> autoconf-2.69/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export PATH=<span class="variable">$PATH</span>:/usr/local/bin"</span> &gt;&gt; /etc/bashrc</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/bin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#.===============install boost===============</span></span><br><span class="line">wget http://jaist.dl.sourceforge.net/project/boost/boost/1.44.0/boost_1_44_0.tar.gz</span><br><span class="line">tar xzf boost_1_44_0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> boost_1_44_0/</span><br><span class="line">./bootstrap.sh</span><br><span class="line">./bjam install</span><br><span class="line"></span><br><span class="line"><span class="comment">#add new lib path for libboost</span></span><br><span class="line"><span class="comment">#echo "/usr/local/lib" &gt;&gt; /etc/ld.so.conf.d/localbin.conf</span></span><br><span class="line"><span class="comment">#ldconfig</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#===============install thrift===============</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/apache/thrift.git</span><br><span class="line"><span class="built_in">cd</span> thrift/</span><br><span class="line">git fetch</span><br><span class="line">git branch -a</span><br><span class="line">git checkout 0.7.x</span><br><span class="line">./bootstrap.sh</span><br><span class="line">./configure</span><br><span class="line">mv compiler/cpp/thrifty.hh compiler/cpp/thrifty.h</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> lib/py</span><br><span class="line">python setup.py install</span><br><span class="line"></span><br><span class="line"><span class="comment">#===============install fb303===============</span></span><br><span class="line"><span class="built_in">cd</span> ~/thrift/contrib/fb303/</span><br><span class="line">./bootstrap.sh</span><br><span class="line">./configure CPPFLAGS=<span class="string">"-DHAVE_INTTYPES_H -DHAVE_NETINET_IN_H"</span></span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> py/</span><br><span class="line">python setup.py install</span><br><span class="line"></span><br><span class="line"><span class="comment">#===============install libevent =============== </span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget https://github.com/downloads/libevent/libevent/libevent-1.4.10-stable.tar.gz</span><br><span class="line">tar xf libevent-1.4.10-stable.tar.gz </span><br><span class="line"><span class="built_in">cd</span> libevent-1.4.10-stable</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#setup scribe server</span></span><br><span class="line">mkdir -p /opt/scribe_server/<span class="variable">$PROJECT</span>/</span><br><span class="line"><span class="built_in">cd</span> /opt/scribe_server/<span class="variable">$PROJECT</span>/</span><br><span class="line">cat &lt;&lt;EOF&gt;&gt;scribed.conf</span><br><span class="line">port=12315</span><br><span class="line">max_msg_per_second=2000000</span><br><span class="line">check_interval=5</span><br><span class="line">new_thread_per_category=yes</span><br><span class="line">num_thrift_server_threads=5</span><br><span class="line"></span><br><span class="line">&lt;store&gt;</span><br><span class="line">category=default</span><br><span class="line"><span class="built_in">type</span>=buffer</span><br><span class="line"></span><br><span class="line">target_write_size=20480</span><br><span class="line">max_write_interval=1</span><br><span class="line">buffer_send_rate=2</span><br><span class="line">retry_interval=30</span><br><span class="line">retry_interval_range=10</span><br><span class="line"></span><br><span class="line">&lt;primary&gt;</span><br><span class="line"><span class="built_in">type</span>=file</span><br><span class="line">fs_type=std</span><br><span class="line">file_path=/data/scribe_primary/<span class="variable">$&#123;PROJECT&#125;</span></span><br><span class="line">max_size=1000000000</span><br><span class="line">rotate_period=daily</span><br><span class="line">rotate_hour=0</span><br><span class="line">&lt;/primary&gt;</span><br><span class="line"></span><br><span class="line">&lt;secondary&gt;</span><br><span class="line"><span class="built_in">type</span>=file</span><br><span class="line">fs_type=std</span><br><span class="line">file_path=/data/scribe_secondary/<span class="variable">$&#123;PROJECT&#125;</span></span><br><span class="line">max_size=1000000000</span><br><span class="line">rotate_period=daily</span><br><span class="line">rotate_hour=0</span><br><span class="line">&lt;/secondary&gt;</span><br><span class="line">&lt;/store&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF&gt;&gt;run_scribe.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/usr/lib:/usr/<span class="built_in">local</span>/lib</span><br><span class="line">scribed scribed.conf 1&gt;&gt;output/scribe.log 2&gt;&gt;output/scribe.err</span><br><span class="line">sleep 2</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">chmod +x run_scribe.sh</span><br><span class="line">mkdir output</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Done! Please modify config and iptables, and download scribed"</span></span><br></pre></td></tr></table></figure><h2 id="Docker-容器部署-Scribe"><a href="#Docker-容器部署-Scribe" class="headerlink" title="Docker 容器部署 Scribe"></a>Docker 容器部署 Scribe</h2><blockquote><p>上述方案受到依赖环境库影响手动部署非常困难，推荐使用 docker 方式快速部署</p></blockquote><p><a href="https://hub.docker.com/r/polonaiz/facebook-scribe" target="_blank" rel="noopener">polonaiz/facebook-scribe</a></p><p>Scribe is a server for aggregating log data streamed in real time from a large number of servers. (<a href="https://github.com/facebookarchive/scribe" target="_blank" rel="noopener">https://github.com/facebookarchive/scribe</a>)</p><p>Dockerfile: <a href="https://github.com/polonaiz/facebook-scribe-docker/blob/master/Dockerfile" target="_blank" rel="noopener">https://github.com/polonaiz/facebook-scribe-docker/blob/master/Dockerfile</a></p><p>Usage: <a href="https://github.com/polonaiz/facebook-scribe-docker/blob/master/Makefile" target="_blank" rel="noopener">https://github.com/polonaiz/facebook-scribe-docker/blob/master/Makefile</a></p><p>Default Configuration: <a href="https://github.com/polonaiz/facebook-scribe-docker/blob/master/default.conf" target="_blank" rel="noopener">https://github.com/polonaiz/facebook-scribe-docker/blob/master/default.conf</a></p><blockquote><p>基于 polonaiz/facebook-scribe 修改后的 docker image，配置参数和线上保持一致</p></blockquote><p><a href="https://hub.docker.com/r/wsgzao/facebook-scribe" target="_blank" rel="noopener">wsgzao/facebook-scribe</a></p><p><a href="https://wsgzao.github.io/post/find/">基于 bash find 命令执行 log 日志备份和清理的实践</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://github.com/facebookarchive/scribe" target="_blank" rel="noopener">Facebook Scribe</a><br><a href="https://gist.github.com/PinkyJie/5370470" target="_blank" rel="noopener">scribe-centos</a></p>]]></content>
    
    <summary type="html">
    
      Centos安装Scribe真是累
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Bash 脚本递归查询批量修改文件名</title>
    <link href="https://wsgzao.github.io/post/bash-recursive/"/>
    <id>https://wsgzao.github.io/post/bash-recursive/</id>
    <published>2020-05-31T06:59:49.000Z</published>
    <updated>2020-06-01T12:05:55.665Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>需求是批量修改 <em>.crt 和 </em>.key 为 ssl.chain.crt 和 server.key，为什么会有这样的需求主要是踩了一个大坑 <a href="https://support.sectigo.com/articles/Knowledge/Sectigo-AddTrust-External-CA-Root-Expiring-May-30-2020" target="_blank" rel="noopener">Sectigo AddTrust External CA Root Expiring May 30, 2020</a>，说多了都是泪。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 05 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/bash-recursive/">https://wsgzao.github.io/post/bash-recursive/</a></p><hr><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><ol><li>需要遍历目录</li><li>需要重命名 <em>.key 和 </em>.crt 结尾的文件为 server.key 和 ssl.chain.crt</li></ol><h2 id="linux-命令-递归修改文件名-包括文件夹"><a href="#linux-命令-递归修改文件名-包括文件夹" class="headerlink" title="linux 命令 递归修改文件名 (包括文件夹)"></a>linux 命令 递归修改文件名 (包括文件夹)</h2><blockquote><p>网上搜索了关键词，发现这个脚本写得比较清晰，但还是需要修改下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">changeName</span></span>()&#123;</span><br><span class="line">    <span class="comment">#new=`echo $1|sed 's/^/abc/g'`</span></span><br><span class="line">    new=`<span class="built_in">echo</span> <span class="variable">$1</span>|sed -r <span class="string">'s/abc(.*$)/\1/g'</span>`</span><br><span class="line">    <span class="built_in">echo</span> changeName old: <span class="variable">$1</span> new: <span class="variable">$new</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$1</span> != <span class="variable">$new</span> ];<span class="keyword">then</span></span><br><span class="line">        mv <span class="variable">$1</span> <span class="variable">$new</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">travFolder</span></span>()&#123;</span><br><span class="line">    <span class="comment">#echo "travFolder start"</span></span><br><span class="line">    flist=`ls <span class="variable">$1</span>`</span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$1</span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> <span class="variable">$flist</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="comment">#echo traverse do $f</span></span><br><span class="line">        <span class="built_in">local</span> old=<span class="variable">$f</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">test</span> -d <span class="variable">$f</span></span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            <span class="comment">#echo "traverse dir:$&#123;f&#125;"</span></span><br><span class="line">            travFolder <span class="variable">$f</span></span><br><span class="line">            <span class="comment">#echo "traverse rename dir:$&#123;f&#125;"</span></span><br><span class="line">            changeName <span class="variable">$old</span> <span class="comment">#rename folder</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="comment">#echo "traverse file:$f"</span></span><br><span class="line">            changeName <span class="variable">$f</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">cd</span> ../</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">param=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$1</span>"</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">    param=<span class="string">"./"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"empty string: <span class="variable">$param</span>"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    param=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">travFolder <span class="variable">$param</span></span><br></pre></td></tr></table></figure><h2 id="修改后的代码"><a href="#修改后的代码" class="headerlink" title="修改后的代码"></a>修改后的代码</h2><blockquote><p>如果你考虑使用 rename 简化代码，可以参考 Stack Overflow 的一篇文章</p></blockquote><p><a href="https://stackoverflow.com/a/24103055" target="_blank" rel="noopener">How to Batch Rename Files in a macOS Terminal?</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">travFolder</span></span>()&#123;</span><br><span class="line">    <span class="comment">#echo "travFolder start"</span></span><br><span class="line">    flist=`ls <span class="variable">$1</span>`</span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$1</span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.key; <span class="keyword">do</span> mv <span class="string">"<span class="variable">$f</span>"</span> <span class="string">"server.key"</span>; <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.crt; <span class="keyword">do</span> mv <span class="string">"<span class="variable">$f</span>"</span> <span class="string">"ssl.chain.crt"</span>; <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> <span class="variable">$flist</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="comment">#echo traverse do $f</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">test</span> -d <span class="variable">$f</span></span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            <span class="comment">#echo "traverse dir:$&#123;f&#125;"</span></span><br><span class="line">            travFolder <span class="variable">$f</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">cd</span> ../</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">param=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$1</span>"</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">    param=<span class="string">"./"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"empty string: <span class="variable">$param</span>"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    param=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">travFolder <span class="variable">$param</span></span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://github.com/wangdoc/bash-tutorial" target="_blank" rel="noopener">Bash 教程 </a><br><a href="https://www.cnblogs.com/yerikMu/p/11640548.html" target="_blank" rel="noopener">linux 命令 递归修改文件名 (包括文件夹)</a></p>]]></content>
    
    <summary type="html">
    
      Bash脚本递归查询批量修改文件名
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Kubernetes 学习路径</title>
    <link href="https://wsgzao.github.io/post/kubernetes/"/>
    <id>https://wsgzao.github.io/post/kubernetes/</id>
    <published>2020-05-30T06:59:49.000Z</published>
    <updated>2020-06-01T11:38:51.591Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Kubernetes 已经成为容器编排标准，没有 OpenStack 复杂而庞大的知识体系，但是需要老老实实学习的知识点也不少，由于 K8s 每年的改动也挺多，我这边文章暂时分享一些我觉得有用的链接，方便大家系统性学习和思考</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 05 月 30 日 - 更新 Kubernetes 跟着官方文档从零搭建 K8S 实践<br>2020 年 04 月 16 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/kubernetes/">https://wsgzao.github.io/post/kubernetes/</a></p><hr><h2 id="Kubernetes-跟着官方文档从零搭建-K8S"><a href="#Kubernetes-跟着官方文档从零搭建-K8S" class="headerlink" title="Kubernetes 跟着官方文档从零搭建 K8S"></a>Kubernetes 跟着官方文档从零搭建 K8S</h2><p>本文将带领读者一起, 参照着 Kubernetes 官方文档, 对其安装部署进行讲解. Kubernetes 更新迭代很快, 书上、网上等教程可能并不能适用于新版本, 但官方文档能.</p><p>阅读这篇文章你能收获到:</p><ul><li>如何阅读 Kubernetes 官方安装指南并搭建一个 Kubernetes 环境</li><li>Kubernetes 安装过程中的注意事项</li><li>避过常见的坑</li></ul><p>阅读本文你需要:</p><ul><li>熟悉 Linux 命令</li><li>知道 Kubernetes 是用来干什么的 (不然装它干啥(ಥ_ಥ))</li><li>知道 Docker</li></ul><h3 id="Before-installing-kubeadm"><a href="#Before-installing-kubeadm" class="headerlink" title="Before installing kubeadm"></a>Before installing kubeadm</h3><blockquote><p>K8s 官网写的非常详细，列举实际操作的步骤供大家参考</p></blockquote><p>This page shows how to install the <code>kubeadm</code> toolbox. For information how to create a cluster with kubeadm once you have performed this installation process, see the <a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/" target="_blank" rel="noopener">Using kubeadm to Create a Cluster</a> page.</p><ul><li><a href="#before-you-begin">Before you begin</a></li><li><a href="#verify-mac-address">Verify the MAC address and product_uuid are unique for every node</a></li><li><a href="#check-network-adapters">Check network adapters</a></li><li><a href="#letting-iptables-see-bridged-traffic">Letting iptables see bridged traffic</a></li><li><a href="#check-required-ports">Check required ports</a></li><li><a href="#installing-runtime">Installing runtime</a></li><li><a href="#installing-kubeadm-kubelet-and-kubectl">Installing kubeadm, kubelet and kubectl</a></li><li><a href="#configure-cgroup-driver-used-by-kubelet-on-control-plane-node">Configure cgroup driver used by kubelet on control-plane node</a></li><li><a href="#troubleshooting">Troubleshooting</a></li><li><a href="#whats-next">What’s next</a></li></ul><p>服务器或虚拟机数量：2<br>机器配置: CPU &gt;= 2, 内存 &gt;= 2G<br>操作系统：本文为 CentOS 7<br>备注：根据不同操作系统需认真阅读和理解官方文档说明</p><ul><li>One or more machines running one of:<ul><li>Ubuntu 16.04+</li><li>Debian 9+</li><li>CentOS 7</li><li>Red Hat Enterprise Linux (RHEL) 7</li><li>Fedora 25+</li><li>HypriotOS v1.0.1+</li><li>Container Linux (tested with 1800.6.0)</li></ul></li><li>2 GB or more of RAM per machine (any less will leave little room for your apps)</li><li>2 CPUs or more</li><li>Full network connectivity between all machines in the cluster (public or private network is fine)</li><li>Unique hostname, MAC address, and product_uuid for every node. See <a href="#verify-mac-address">here</a> for more details.</li><li>Certain ports are open on your machines. See <a href="#check-required-ports">here</a> for more details.</li><li>Swap disabled. You <strong>MUST</strong> disable swap in order for the kubelet to work properly.</li></ul><p>从官网找到<a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/" target="_blank" rel="noopener">kubeadm 安装文档入口</a>, 文档很详细. 英文阅读没有障碍的读者推荐直接查看英文文档, 中文文档不全且更新不及时安装时可能存在问题.</p><blockquote><p>以下操作应用于 k8s-master 和 k8s-worker</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改主机名</span></span><br><span class="line">hostnamectl <span class="built_in">set</span>-hostname k8s-master</span><br><span class="line">hostnamectl <span class="built_in">set</span>-hostname k8s-worker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 hosts</span></span><br><span class="line">vim /etc/hosts</span><br><span class="line">10.71.16.32 k8s-master</span><br><span class="line">10.71.16.33 k8s-worker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确认 MAC 和 product_uuid 的唯一性</span></span><br><span class="line"><span class="comment"># 查看 MAC</span></span><br><span class="line">ifconfig -a    </span><br><span class="line"><span class="comment"># 查看 product_uuid</span></span><br><span class="line">cat /sys/class/dmi/id/product_uuid </span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查网络端口和防火墙，这个根据实际情况配置，应该没有难度，如果是内部测试可以直接禁用防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁用 SELinux</span></span><br><span class="line"><span class="comment"># 关闭 selinux，重启后生效</span></span><br><span class="line">sed -i <span class="string">'s/SELINUX=enforcing/SELINUX=disabled/g'</span> /etc/sysconfig/selinux</span><br><span class="line"><span class="comment"># 设置 selinux 状态，临时生效命令</span></span><br><span class="line">setenforce 0</span><br><span class="line"><span class="comment"># 检查 selinux 状态</span></span><br><span class="line">sestatus</span><br><span class="line">SELinux status: disabled</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁用交换分区</span></span><br><span class="line"><span class="comment"># 将 swap 注释掉，重启后生效</span></span><br><span class="line">vim /etc/fstab </span><br><span class="line"><span class="comment">#UUID=30e08a6d-75ba-4750-ab6d-2d11f6137c97 swap                    swap    defaults        0 0</span></span><br><span class="line"><span class="comment"># 临时禁用 swap</span></span><br><span class="line">swapoff -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># Letting iptables see bridged traffic</span></span><br><span class="line">cat &lt;&lt;EOF | sudo tee /etc/sysctl.d/k8s.conf</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sudo sysctl --system</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make sure that the br_netfilter module is loaded before this step. This can be done by running </span></span><br><span class="line">lsmod | grep br_netfilter</span><br><span class="line"><span class="comment"># To load it explicitly call </span></span><br><span class="line">sudo modprobe br_netfilter</span><br></pre></td></tr></table></figure><h3 id="Installing-runtime"><a href="#Installing-runtime" class="headerlink" title="Installing runtime"></a>Installing runtime</h3><blockquote><p>选择安装 Docker, 注意阅读官网文档的推荐版本，若网络不好, 可换用国内源</p></blockquote><p><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-runtime" target="_blank" rel="noopener">Installing runtime</a></p><p><a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener">https://docs.docker.com/engine/install/centos/</a></p><p><a href="https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker" target="_blank" rel="noopener">https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"># (Install Docker CE)</span><br><span class="line">## Set up the repository</span><br><span class="line">### Install required packages</span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line">## Add the Docker repository</span><br><span class="line">yum-config-manager --add-repo \</span><br><span class="line">  https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"># Install Docker CE</span><br><span class="line">yum update -y &amp;&amp; yum install -y \</span><br><span class="line">  containerd.io-1.2.13 \</span><br><span class="line">  docker-ce-19.03.8 \</span><br><span class="line">  docker-ce-cli-19.03.8</span><br><span class="line">  </span><br><span class="line">## Create /etc/docker</span><br><span class="line">mkdir /etc/docker</span><br><span class="line"></span><br><span class="line"># Set up the Docker daemon</span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span><br><span class="line">  &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">  &quot;log-opts&quot;: &#123;</span><br><span class="line">    &quot;max-size&quot;: &quot;100m&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;storage-driver&quot;: &quot;overlay2&quot;,</span><br><span class="line">  &quot;storage-opts&quot;: [</span><br><span class="line">    &quot;overlay2.override_kernel_check=true&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line"></span><br><span class="line"># Restart Docker</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"># 利用 docker-cn 提供的镜像源</span><br><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&apos;EOF&apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="Installing-kubeadm-kubelet-and-kubectl"><a href="#Installing-kubeadm-kubelet-and-kubectl" class="headerlink" title="Installing kubeadm, kubelet and kubectl"></a>Installing kubeadm, kubelet and kubectl</h3><p><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl" target="_blank" rel="noopener">Installing kubeadm, kubelet and kubectl</a></p><p>官网有一行配置是错误的，首次部署 K8s 时请移除改行，exclude=kubelet kubeadm kubectl</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\<span class="variable">$basearch</span></span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># Set SELinux in permissive mode (effectively disabling it)</span></span><br><span class="line">setenforce 0</span><br><span class="line"></span><br><span class="line">yum install -y kubelet kubeadm kubectl –disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> –now kubelet</span><br></pre></td></tr></table></figure><blockquote><p>配置国内 kubeadm 源</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Debian/Ubuntu</span></span><br><span class="line">apt-get update &amp;&amp; apt-get install -y apt-transport-https</span><br><span class="line">curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class="line">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y kubelet kubeadm kubectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS/RHEL/Fedora</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">setenforce 0</span><br><span class="line">yum install -y kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure><h3 id="初始化-k8s-master"><a href="#初始化-k8s-master" class="headerlink" title="初始化 k8s-master"></a>初始化 k8s-master</h3><blockquote><p>以下操作应用于 k8s-master</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成初始化文件 </span></span><br><span class="line">kubeadm config <span class="built_in">print</span> init-defaults &gt; kubeadm-init.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 该文件有两处需要修改:</span></span><br><span class="line"><span class="comment">## 将 advertiseAddress: 1.2.3.4 修改为本机地址</span></span><br><span class="line"><span class="comment">### (若国内网络) 将 imageRepository: k8s.gcr.io 修改为 imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 kubeadm-init.yaml</span></span><br><span class="line">vim kubeadm-init.yaml</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class="line">bootstrapTokens:</span><br><span class="line">- groups:</span><br><span class="line">  - system:bootstrappers:kubeadm:default-node-token</span><br><span class="line">  token: abcdef.0123456789abcdef</span><br><span class="line">  ttl: 24h0m0s</span><br><span class="line">  usages:</span><br><span class="line">  - signing</span><br><span class="line">  - authentication</span><br><span class="line">kind: InitConfiguration</span><br><span class="line">localAPIEndpoint:</span><br><span class="line">  advertiseAddress: 10.71.16.32</span><br><span class="line">  bindPort: 6443</span><br><span class="line">nodeRegistration:</span><br><span class="line">  criSocket: /var/run/dockershim.sock</span><br><span class="line">  name: k8s-master</span><br><span class="line">  taints:</span><br><span class="line">  - effect: NoSchedule</span><br><span class="line">    key: node-role.kubernetes.io/master</span><br><span class="line">---</span><br><span class="line">apiServer:</span><br><span class="line">  timeoutForControlPlane: 4m0s</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class="line">certificatesDir: /etc/kubernetes/pki</span><br><span class="line">clusterName: kubernetes</span><br><span class="line">controllerManager: &#123;&#125;</span><br><span class="line">dns:</span><br><span class="line">  <span class="built_in">type</span>: CoreDNS</span><br><span class="line">etcd:</span><br><span class="line">  <span class="built_in">local</span>:</span><br><span class="line">    dataDir: /var/lib/etcd</span><br><span class="line">imageRepository: k8s.gcr.io</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: v1.18.0</span><br><span class="line">networking:</span><br><span class="line">  dnsDomain: cluster.local</span><br><span class="line">  serviceSubnet: 10.96.0.0/12</span><br><span class="line">scheduler: &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载镜像</span></span><br><span class="line">kubeadm config images pull --config kubeadm-init.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行初始化</span></span><br><span class="line">kubeadm init --config kubeadm-init.yaml</span><br><span class="line"></span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接下来配置环境, 让当前用户可以执行 kubectl 命令:</span></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">"kubectl apply -f [podnetwork].yaml"</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后两行需要保存下来, kubeadm join ... 是 worker 节点加入所需要执行的命令</span></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 10.71.16.32:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:67e23b74df39cfca4dd0ba3d747139cb0dd4ea5c546a12c60e84b3c9b057fc6e </span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试一下此处的 NotReady 是因为网络还没配置</span></span><br><span class="line">kubectl get node</span><br><span class="line"></span><br><span class="line">NAME         STATUS      ROLES    AGE    VERSION</span><br><span class="line">k8s-master   NotReady    master   12m    v1.18.3</span><br></pre></td></tr></table></figure><blockquote><p>配置网络，注意文档中的最新版本差异</p></blockquote><p><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/" target="_blank" rel="noopener">create-cluster-kubeadm</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载描述文件</span></span><br><span class="line"><span class="comment"># https://docs.projectcalico.org/releases</span></span><br><span class="line"><span class="comment"># https://docs.projectcalico.org/v3.14/manifests/calico.yaml</span></span><br><span class="line">wget https://docs.projectcalico.org/manifests/calico.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开 calico.yaml, 将 192.168.0.0/16 修改为 10.96.0.0/12</span></span><br><span class="line">cat kubeadm-init.yaml | grep serviceSubnet:</span><br><span class="line">serviceSubnet: 10.96.0.0/12</span><br><span class="line"><span class="comment"># 需要注意的是, calico.yaml 中的 IP 和 kubeadm-init.yaml 需要保持一致, 要么初始化前修改 kubeadm-init.yaml, 要么初始化后修改 calico.yaml</span></span><br><span class="line">vim calico.yaml</span><br><span class="line">            <span class="comment"># The default IPv4 pool to create on startup if none exists. Pod IPs will be</span></span><br><span class="line">            <span class="comment"># chosen from this range. Changing this value after installation will have</span></span><br><span class="line">            <span class="comment"># no effect. This should fall within `--cluster-cidr`.</span></span><br><span class="line">            - name: CALICO_IPV4POOL_CIDR</span><br><span class="line">              value: <span class="string">"10.96.0.0/12"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化网络</span></span><br><span class="line">kubectl apply -f calico.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时查看 node 信息, master 的状态已经是 Ready 了</span></span><br><span class="line">kubectl get node</span><br><span class="line">NAME         STATUS   ROLES    AGE   VERSION</span><br><span class="line">k8s-master   Ready    master   15m   v1.18.3</span><br></pre></td></tr></table></figure><blockquote><p>安装 Dashboard，注意官方文档的更新</p></blockquote><p><a href="https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/" target="_blank" rel="noopener">Web UI (Dashboard)</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deploying the Dashboard UI</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署完毕后, 执行 kubectl get pods --all-namespaces 查看 pods 状态</span></span><br><span class="line">kubectl get pods --all-namespaces | grep dashboard</span><br><span class="line">kubernetes-dashboard   dashboard-metrics-scraper-6b4884c9d5-79rvt       1/1     Running   0          4h5m</span><br><span class="line">kubernetes-dashboard   kubernetes-dashboard-7b544877d5-zb4bl            1/1     Running   0          4h5m</span><br></pre></td></tr></table></figure><blockquote><p>创建用户，如果方便登录测试可以创建匿名账户</p></blockquote><p><a href="https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md" target="_blank" rel="noopener">Creating sample user</a></p><p>创建一个用于登录 Dashboard 的用户. 创建文件 dashboard-adminuser.yaml 内容如下:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">admin-user</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">admin-user</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">cluster-admin</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">- kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">admin-user</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br></pre></td></tr></table></figure><p>执行命令 kubectl apply -f dashboard-adminuser.yaml</p><p>创建用于登录 Dashboard 的匿名用户. 创建文件 dashboard-annoymous.yaml 内容如下:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard-anonymous</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">- apiGroups:</span> <span class="string">[""]</span></span><br><span class="line"><span class="attr">  resources:</span> <span class="string">["services/proxy"]</span></span><br><span class="line"><span class="attr">  resourceNames:</span> <span class="string">["https:kubernetes-dashboard:"]</span></span><br><span class="line"><span class="attr">  verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"create"</span><span class="string">,</span> <span class="string">"update"</span><span class="string">,</span> <span class="string">"patch"</span><span class="string">,</span> <span class="string">"delete"</span><span class="string">]</span></span><br><span class="line"><span class="attr">- nonResourceURLs:</span> <span class="string">["/ui",</span> <span class="string">"/ui/*"</span><span class="string">,</span> <span class="string">"/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/*"</span><span class="string">]</span></span><br><span class="line"><span class="attr">  verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"create"</span><span class="string">,</span> <span class="string">"update"</span><span class="string">,</span> <span class="string">"patch"</span><span class="string">,</span> <span class="string">"delete"</span><span class="string">]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard-anonymous</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard-anonymous</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">- kind:</span> <span class="string">User</span></span><br><span class="line"><span class="attr">  name:</span> <span class="attr">system:anonymous</span></span><br></pre></td></tr></table></figure><p>执行命令 kubectl apply -f dashboard-annoymous.yaml.yaml</p><blockquote><p>生成证书，这步非必须，根据情况生成并导入客户端</p></blockquote><p><a href="https://github.com/kubernetes/dashboard/blob/master/docs/user/accessing-dashboard/README.md" target="_blank" rel="noopener">Accessing Dashboard</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">'client-certificate-data'</span> ~/.kube/config | head -n 1 | awk <span class="string">'&#123;print $2&#125;'</span> | base64 -d &gt;&gt; kubecfg.crt</span><br><span class="line">grep <span class="string">'client-key-data'</span> ~/.kube/config | head -n 1 | awk <span class="string">'&#123;print $2&#125;'</span> | base64 -d &gt;&gt; kubecfg.key</span><br><span class="line">openssl pkcs12 -<span class="built_in">export</span> -clcerts -inkey kubecfg.key -<span class="keyword">in</span> kubecfg.crt -out kubecfg.p12 -name <span class="string">"kubernetes-client"</span></span><br></pre></td></tr></table></figure><p>第三条命令生成证书时会提示输入密码, 可以直接两次回车跳过</p><p><code>kubecfg.p12</code> 即需要导入客户端机器的证书. 将证书拷贝到客户端机器上, 导入即可</p><p>需要注意的是: 若生成证书时跳过了密码, 导入时提示填写密码直接回车即可, 不要纠结密码哪来的</p><p>此时我们可以登录面板了, 访问地址:<br>https://{k8s-master-ip}:6443/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#/login<br>登录时会提示选择证书, 确认后会提示输入当前用户名密码(注意是电脑的用户名密码)</p><blockquote><p>登录 Dashboard</p></blockquote><p>执行 <code>kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk &#39;{print $1}&#39;)</code>, 获取 Token.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk <span class="string">'&#123;print $1&#125;'</span>)</span><br><span class="line"></span><br><span class="line">Name:         admin-user-token-wdj28</span><br><span class="line">Namespace:    kube-system</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: admin-user</span><br><span class="line">              kubernetes.io/service-account.uid: f97e69ff-c4aa-45d4-bbb2-5221f3fb43cc</span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">ca.crt:     1025 bytes</span><br><span class="line">namespace:  11 bytes</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IlMxUGJ5TTR0cUQzd3JSODZfdWNScU14YXdHdmpLakdwSldrdTdhT1UyV2cifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLXdkajI4Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJmOTdlNjlmZi1jNGFhLTQ1ZDQtYmJiMi01MjIxZjNmYjQzY2MiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06YWRtaW4tdXNlciJ9.wTdqAJfK0Z7C43SU0mAwoQw2dCdBcUD6A3uVo03OkW-r8Y630NP6MQqwmpi4IERohYjY6528oW0Ucj_2ukWu8z5eUAabNgL-_BQGXe2Zg1oGRK_LY90JN_L6f8mpYrPDFLfjSnUAdgb3zzCzhzIa2RihiYZW-mGm_ucfK5xt3dpFbDeIeEgePyFjUiX5ZdoMJEuerd6zgee1yeXEctQD4TRRxxtFebcLRgFDWVfOz0xWRNN1qSOB5v1ChkaQ5a6YxvGwjcrwrQaVN8bp73Zueu7FwmbkObT_EpWy0aZ7csTcSuNZ2K8QTpXr6NtN5xIcTpyMmIHmc9qCaskr5uM3qA</span><br></pre></td></tr></table></figure><p>复制该 Token 到登录页, 点击登录即可</p><h3 id="添加-k8s-worker"><a href="#添加-k8s-worker" class="headerlink" title="添加 k8s-worker"></a>添加 k8s-worker</h3><blockquote><p>添加 Worker 节点，以下操作应用于 k8s-worker</p></blockquote><p>重复执行 <code>前期准备 - 修改 hostname</code> ~ <code>安装 Kubernetes - 修改网络配置</code> 的全部操作, 初始化一个 Worker 机器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 执行如下命令将 Worker 加入集群，此处的秘钥是初始化 Master 后生成的</span><br><span class="line">kubeadm join 10.71.16.32:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:67e23b74df39cfca4dd0ba3d747139cb0dd4ea5c546a12c60e84b3c9b057fc6e </span><br><span class="line"># 添加完毕后, 在 Master 上查看节点状态</span><br><span class="line">kubectl get node</span><br><span class="line">NAME         STATUS   ROLES    AGE   VERSION</span><br><span class="line">k8s-master   Ready    master   10h   v1.18.3</span><br><span class="line">k8s-worker   Ready    &lt;none&gt;   96s   v1.18.3</span><br></pre></td></tr></table></figure><p><a href="https://github.com/kubernetes/dashboard" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard</a></p><p><a href="https://blog.piaoruiqing.com/2019/09/17/kubernetes-1-installation/" target="_blank" rel="noopener">Kubernetes(一) 跟着官方文档从零搭建 K8S</a></p><h2 id="Kubernetes-应用部署"><a href="#Kubernetes-应用部署" class="headerlink" title="Kubernetes 应用部署"></a>Kubernetes 应用部署</h2><p>本文将与读者一起, 学习如何在 Kubernetes 上部署应用. 包括: 如何部署应用、发布文件讲解、将本地项目打包发布等.</p><p>阅读这篇文章你能收获到:</p><ul><li>学会如何在 k8s 部署应用</li><li>如何打包 Docker 镜像、上传到私有库</li></ul><p>阅读本文你需要:</p><ul><li>熟悉 Linux 命令</li><li>有一个 Kubernetes 环境 </li></ul><h3 id="理解描述文件"><a href="#理解描述文件" class="headerlink" title="理解描述文件"></a>理解描述文件</h3><p>首先, 我们通过在 Kubernetes 部署 Nginx 来理解描述文件.</p><p>一般地, Kubernetes 使用 yaml(或 json)来描述发布配置. 下面是一个简单的描述文件: <code>nginx-pod.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span>      <span class="comment"># 描述文件所遵循 KubernetesAPI 的版本</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span>           <span class="comment"># 描述的类型是 pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-pod</span>   <span class="comment"># pod 的名称</span></span><br><span class="line"><span class="attr">  labels:</span>           <span class="comment"># 标签</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">nginx-pod</span></span><br><span class="line"><span class="attr">    env:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  containers:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">nginx-pod</span>     <span class="comment"># 容器名</span></span><br><span class="line"><span class="attr">      image:</span> <span class="attr">nginx:1.18</span>   <span class="comment"># 镜像名称及版本</span></span><br><span class="line"><span class="attr">      imagePullPolicy:</span> <span class="string">IfNotPresent</span>   <span class="comment"># 如果本地不存在就去远程仓库拉取</span></span><br><span class="line"><span class="attr">      ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">80</span>   <span class="comment"># pod 对外端口</span></span><br><span class="line"><span class="attr">  restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure><p>我们登录 Master 节点, 使用 <code>kubectl</code> 命令来部署这个文件所描述的应用. (当然, 使用 dashboard 发布也可)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f nginx-pod.yaml</span><br><span class="line">pod/nginx-pod created</span><br><span class="line"></span><br><span class="line">kubectl get pods</span><br><span class="line">NAME        READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-pod   1/1     Running   0          39s</span><br></pre></td></tr></table></figure><p><code>kubectl get pods</code> 命令是用来查看 pod 列表的, 使用 <code>grep</code> 筛选出 nginx 相关的 pod. 此时 nginx 已经发布完成了. 我们可以从 dashboard 来直观地查看到应用状态.</p><p>备注: 删除 pod 可使用 <code>kubectl delete -f nginx-pod.yaml</code> 命令, 也可直接在 dashboard 进行操作.</p><h3 id="如何访问服务"><a href="#如何访问服务" class="headerlink" title="如何访问服务"></a>如何访问服务</h3><p>上一小节我们部署了一个 Nginx pod, 但我们无法访问到该 Nginx.</p><p>想要访问到 pod 中的服务, 最简单的方式就是通过端口转发, 执行如下命令, 将宿主机的 <code>9999</code> 端口与 nginx-pod 的 <code>80</code> 端口绑定:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl port-forward --address 0.0.0.0 nginx-pod 9999:80</span><br><span class="line">Forwarding from 0.0.0.0:9999 -&gt; 80</span><br><span class="line">Handling connection <span class="keyword">for</span> 9999</span><br></pre></td></tr></table></figure><p>此时, 我们可以通过访问宿主机 9999 端口来访问 Nginx.</p><h3 id="部署本地项目"><a href="#部署本地项目" class="headerlink" title="部署本地项目"></a>部署本地项目</h3><p>将本地开发的项目发布到 Kubernetes, 需要将项目打包成 Docker 镜像, 然后将镜像推送到仓库(公开 / 私有仓库都可).</p><p>首先, 我们需要一个可以运行的本地项目, 笔者使用 spring-boot 构建了一个简单的 web 项目:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/k8s-test"</span>)</span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">K8sTestApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/timestamp"</span>)</span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;?&gt; getTimestamp() &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(System.currentTimeMillis() + <span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(K8sTestApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打包-Docker-镜像"><a href="#打包-Docker-镜像" class="headerlink" title="打包 Docker 镜像"></a>打包 Docker 镜像</h3><p><a href="https://docs.docker.com/engine/reference/builder/" target="_blank" rel="noopener">Dockerfile reference</a></p><p>有了项目, 我们需要将其打包成一个 Docker 镜像, <code>Dockerfile</code> 内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM java:8-alpine</span><br><span class="line">COPY ./k8s-test-0.0.1-SNAPSHOT.jar /usr/app/</span><br><span class="line">WORKDIR /usr/app</span><br><span class="line">ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;k8s-test-0.0.1-SNAPSHOT.jar&quot;]</span><br></pre></td></tr></table></figure><ul><li><code>FROM java:8-alpine</code>: 该镜像基于 <code>java-8-alpine</code> 镜像.</li><li><code>COPY ./target/k8s-test-0.0.1-SNAPSHOT.jar /usr/app/</code>: 将编译打包好的 jar 拷贝到镜像的 <code>/usr/app</code> 目录下.</li><li><code>WORKDIR /usr/app</code>: 工作目录指定为 <code>/usr/app</code>.</li><li><code>ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;k8s-test-0.0.1-SNAPSHOT.jar&quot;]</code>: 启动 docker 时执行 <code>java -jar k8s-test-0.0.1-SNAPSHOT.jar</code> 命令</li></ul><p>进入到 Dockerfile 所在目录执行 <code>docker build -t piaoruiqing/k8s-test .</code> 进行打包. 注意不要遗漏掉命令最后面的 <code>.</code> , 它代表当前目录.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 打包</span><br><span class="line">docker build -t piaoruiqing/k8s-test .</span><br><span class="line"># 通过 docker images 命令可以查看本地镜像列表:</span><br><span class="line">docker images | grep k8s</span><br><span class="line">piaoruiqing/k8s-test     latest         efe9e9625376        4 minutes ago       174MB</span><br></pre></td></tr></table></figure><h3 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h3><p>留空给 Harbor</p><p><a href="https://blog.piaoruiqing.com/2019/09/28/kubernetes-2-deploy/" target="_blank" rel="noopener">Kubernetes(二) 应用部署</a></p><h2 id="如何从外部访问服务"><a href="#如何从外部访问服务" class="headerlink" title="如何从外部访问服务"></a>如何从外部访问服务</h2><p>通过前文的讲解,《跟着官方文档从零搭建 K8S》、《应用部署》相信读者已经对 Kubernetes 安装及部署应用有了一定的了解. 接下来, 本文将针对如何将服务暴露给外部进行讲解.</p><p>阅读这篇文章你能收获到:</p><ul><li>了解 Kubernetes 暴露服务的几种方案及其优缺点.</li></ul><p>阅读本文你需要:</p><ul><li>了解基本的 Kubernetes 命令</li><li>有一个 Kubernetes 环境</li></ul><h3 id="将服务暴露给外部客户端的几种方式"><a href="#将服务暴露给外部客户端的几种方式" class="headerlink" title="将服务暴露给外部客户端的几种方式"></a>将服务暴露给外部客户端的几种方式</h3><ul><li>通过 <code>port-forward</code> 转发, 这种方式在之前的文章中有提到过, 操作方便、适合调试时使用, <strong> 不适用于生产环境 </strong>.</li><li>通过 <code>NodePort</code>, 此时集群中每一个节点 (Node) 都会监听指定端口, 我们通过任意节点的端口即可访问到指定服务. 但过多的服务会开启大量端口难以维护.</li><li>通过 <code>LoadBalance</code> 来暴露服务. <code>LoadBalance(负载均衡 LB)</code> 通常由云服务商提供, 如果云环境中不提供 LB 服务, 我们通常直接使用 <code>Ingress</code>, 或使用 <code>MetalLB</code> 来自行配置 LB.</li><li>通过 <code>Ingress</code> 公开多个服务. <code>Ingress</code> 公开了从群集外部到群集内 <code>services</code> 的 HTTP 和 HTTPS 路由. 流量路由由 <code>Ingress</code> 资源上定义的规则控制. 在云服务商不提供 LB 服务的情况下, 我们可以直接使用 <code>Ingress</code> 来暴露服务. (另外, 使用 <code>LB + Ingress</code> 的部署方案可以避免过多 LB 应用带来的花费).</li></ul><p><a href="https://blog.piaoruiqing.com/2019/10/20/kubernetes-3-access-service/" target="_blank" rel="noopener">Kubernetes(三) 如何从外部访问服务</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://kubernetes.io/docs/" target="_blank" rel="noopener">Kubernetes Documentation</a></p><p><a href="https://cloud.google.com/kubernetes-engine/docs/" target="_blank" rel="noopener">Google Kubernetes Engine 文档</a></p><p><a href="https://weread.qq.com/web/reader/98f32600716bc23e98f6d96k16732dc0161679091c5aeb1" target="_blank" rel="noopener">Kubernetes 进阶实战</a></p><p><a href="https://time.geekbang.org/column/intro/116" target="_blank" rel="noopener">深入剖析 Kubernetes</a></p><p><a href="https://github.com/feiskyer/kubernetes-handbook" target="_blank" rel="noopener">Kubernetes 指南</a></p>]]></content>
    
    <summary type="html">
    
      Kubernetes学习路径
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>LeetCode 学习路径</title>
    <link href="https://wsgzao.github.io/post/leetcode/"/>
    <id>https://wsgzao.github.io/post/leetcode/</id>
    <published>2020-05-13T06:59:49.000Z</published>
    <updated>2020-06-12T09:16:04.295Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://leetcode.com/" target="_blank" rel="noopener">LeetCode</a>或者国内版本 <a href="https://leetcode-cn.com/" target="_blank" rel="noopener">力扣</a> 对大家来说都是非常棒的算法学习平台，现阶段大部分人面试大厂前都会准备刷题，虽然有争议但通过刷题顺利进入大厂的案例都佐证了刷题的重要性，每个人对刷题的理解都不一样，但重要的是我们都在思考解决方法，没有停下来做一条闲鱼。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 05 月 13 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/leetcode/">https://wsgzao.github.io/post/leetcode/</a></p><hr><h2 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h2><blockquote><p>图书资源比较经典的有《剑指 offer》《算法竞赛进阶指南》等</p></blockquote><p><a href="https://github.com/doocs/leetcode" target="_blank" rel="noopener">LeetCode solutions in any programming language</a></p><p><a href="https://github.com/azl397985856/leetcode" target="_blank" rel="noopener">leetcode 题解，记录自己的 leetcode 解题之路</a></p><p><a href="https://github.com/MisterBooo/LeetCodeAnimation" target="_blank" rel="noopener">LeetCodeAnimation 用动画的形式呈现解 LeetCode 题目的思路</a></p><p><a href="https://www.jiuzhang.com/solution/" target="_blank" rel="noopener">LintCode（领扣）/ LeetCode 参考答案查询</a></p><p><a href="https://time.geekbang.org/column/intro/100017301" target="_blank" rel="noopener">极客时间 - 数据结构与算法之美</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.zhihu.com/question/280279208/answer/685132550" target="_blank" rel="noopener">大家都是如何刷 LeetCode 的？</a></p>]]></content>
    
    <summary type="html">
    
      LeeCode学习路径
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>图解 HTTPS</title>
    <link href="https://wsgzao.github.io/post/https/"/>
    <id>https://wsgzao.github.io/post/https/</id>
    <published>2020-05-10T06:59:49.000Z</published>
    <updated>2020-05-10T09:26:23.216Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200510171326.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://weread.qq.com/web/reader/3da32b505dd9f43da9a1aca" target="_blank" rel="noopener">图解 HTTP</a>这本书蛮多人推荐的，在搜索 HTTPS 相关知识的时候正好看到 <a href="https://www.waitalone.cn/technology/https.html" target="_blank" rel="noopener">图解 HTTPS</a> 的文章，细节解释通俗易懂，申请个人转载方便回顾学习。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 05 月 10 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/https/">https://wsgzao.github.io/post/https/</a></p><hr><h2 id="存在即合理"><a href="#存在即合理" class="headerlink" title="存在即合理"></a>存在即合理</h2><p>http 是非常常见的应用层协议，是超文本传输协议的简称，其传输的内容都是明文的。在这个混乱的世界，明文传输信息想想就可怕，网络 “小混混” 的手段远比我们这些凡人高明得多，他们有一万种方式劫持，篡改我们的数据。对于一个网站或者服务，如果你给你的用户两个选择：</p><ol><li>通讯数据明文传输，速度快；</li><li>通讯数据加密传输，但是速度可能会稍微慢一点；</li></ol><p>我想，只要脑袋没有长歪的用户都宁愿牺牲一点速度去换取数据传输的安全。</p><p>这样，https 的存在就具备了合理性，https 中的 s 表示 SSL 或者 TLS，就是在原 http 的基础上加上一层用于数据加密、解密、身份认证的安全层。</p><h2 id="一层层揭开-HTTPS-神秘面纱"><a href="#一层层揭开-HTTPS-神秘面纱" class="headerlink" title="一层层揭开 HTTPS 神秘面纱"></a>一层层揭开 HTTPS 神秘面纱</h2><p>本文试图通过层层渐进方式来通俗的阐述 https 的原理，若有错误，欢迎大家指正。</p><p>虽然要层层渐进，但是我们不妨先奉上刚画好的还热乎着的 https 通信完整流程图：</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200510171633.png" alt=""></p><p>从上图可以看到，右边有一堆钥匙，一看到钥匙我们就能想到这个过程免不了加密。另外，那些钥匙长得还不一样，有些只有一把，有些是一对，嗯，是的，你看得真仔细。</p><p>好的，扯远了，现在开始层层渐进。</p><h3 id="第一层（安全传输数据）"><a href="#第一层（安全传输数据）" class="headerlink" title="第一层（安全传输数据）"></a>第一层（安全传输数据）</h3><p>假如我们要实现一个功能：<strong> 一个用户 A 给一个用户 B 发消息，但是要保证这个消息的内容只能被 A 和 B 知道，其他的无论是墨渊上神还是太上老君都没办法破解或者篡改消息的内容。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200510171725.png" alt=""></p><p>如上图，需求就是这么简单，A 给 B 发一条消息，因为比较私密，不想被其他人看到。</p><p>由于消息不想被其他人看到，所以我们自然而然就会想到为消息加密，并且只有 A 和 B 才有解密的密钥。这里需要考虑几点：</p><ol><li>使用什么加密方式？</li><li>密钥怎么告知对方？</li></ol><p>对于第一个问题，加密算法分为两类：对称加密和非对称加密，这里我们选择对称机密，原因有如下几个：</p><ol><li>对称加密速度快，加密时 CPU 资源消耗少；</li><li>非对称加密对待加密的数据的长度有比较严格的要求，不能太长，但是实际中消息可能会很长（比如你给你女朋友发情书），因此非对称加密就满足不了；</li></ol><p>对于第二个问题，这是导致整个 https 通信过程很复杂的根本原因。 如果 A 或 B 直接把他们之间用于解密的密钥通过互联网传输给对方，那一旦密钥被第三者劫持，第三者就能正确解密 A,B 之间的通信数据。</p><h3 id="第二层（安全传输密钥）"><a href="#第二层（安全传输密钥）" class="headerlink" title="第二层（安全传输密钥）"></a>第二层（安全传输密钥）</h3><p>通过第一层的描述，第二层需要解决的问题是：安全地传输 A,B 之间用于解密数据的密钥。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200510171839.png" alt=""></p><p>因为如果传输过程中这把密钥被第三者拿到了，就能解密传通信数据，所以，这把密钥必须得加密，就算第三者劫持到这把加密过的密钥，他也不能解密，得到真正的密钥。</p><p>这里有一个问题，那要用什么方式加密这把密钥呢？如果使用对称加密，那这个对称加密的密钥又怎么安全地告诉对方呢？完了，陷入死循环了…. 所以，一定不能用对称加密</p><p>那就是用非对称加密咯，那如何应用非对称加密来加密那把密钥呢？</p><p>考虑如下方式：</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200510171859.png" alt=""></p><ol><li>客户端： 我要发起 HTTPS 请求，麻烦给我一个非对称加密的公钥；</li><li>服务器： (生成一对非对称加密的密钥对，然后把公钥发给客户端)，接着，这是公钥；</li><li>客户端：（收到公钥，生成一个随机数，作为上图中那一把密钥，用刚才收到的公钥加密这个密钥，然后发给服务器）这是我刚生成的加密过的密钥；</li><li>服务器：（收到加密后的密钥，用本地的第一步自己生成的非对称加密的私钥解密，得到真正的密钥）;</li><li>现在，客户端和服务器都知道了这把密钥，就能愉快地用这个密钥对称加密数据…</li></ol><p>分析一下上面步骤的可行性：</p><ul><li>上述步骤中最终用于加密数据的密钥是客户端生成并且用公钥加密之后传给服务器的，因为私钥只有服务器才有，所以也就只有服务器才能解开客户端上报的密钥；</li><li>要保证传输的密钥只能被服务器解密，就得保证用于加密密钥的公钥一定是服务器下发的，绝对不可能被第三方篡改过；</li></ul><p>因为还可能存在一种 “中间人攻击” 的情况，如下图：</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200510171918.png" alt=""></p><p>这种情况下，客户端和服务器之间通信的数据就完全被坏人破解了。</p><h3 id="第三层（安全传输公钥）"><a href="#第三层（安全传输公钥）" class="headerlink" title="第三层（安全传输公钥）"></a>第三层（安全传输公钥）</h3><p>从上一层可以知道，要保证数据的安全，就必须得保证服务器给客户端下发的公钥是真正的公钥，而不是中间人伪造的公钥。那怎么保证呢？</p><p>那就得引入数字证书了，数字证书是服务器主动去权威机构申请的，证书中包含了上一个图中的加密过的 A 公钥和权威机构的信息，所以服务器只需要给客户端下发数字证书即可。现在流程图如下：</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200510171949.png" alt=""></p><p>那数字证书中的 A 公钥是如何加密的呢？</p><p>答案是非对称加密，只不过这里是使用只有权威机构自己才有的私钥加密。</p><p>等一下，既然 A 公钥被权威机构的私钥加密了，那客户端收到证书之后怎么解密证书中的 A 公钥呢? 需要有权威机构的公钥才能解密啊！那这个权威机构的公钥又是怎么安全地传输给客户端的呢？感觉进入了鸡生蛋，蛋生鸡的悖论了~~</p><p>别慌，<strong> 答案是权威机构的公钥不需要传输，因为权威机构会和主流的浏览器或操作系统合作，将他们的公钥内置在浏览器或操作系统环境中。</strong> 客户端收到证书之后，只需要从证书中找到权威机构的信息，并从本地环境中找到权威机构的公钥，就能正确解密 A 公钥。</p><p>这样就绝对安全了吗？既然权威技能能给服务器签发数字证书，那为什么就不可能给中间人签发数字证书呢? 毕竟赚钱的生意权威机构也不会拒绝的呀。</p><p>试想一下：</p><blockquote><p>服务器给客户端下发数字证书时证书被中间人劫持了，中间人将服务器的证书替换成自己的证书下发给客户端，客户端收到之后能够通过权威机构的公钥解密证书内容（因为中间人的证书也是权威机构私钥加密的），从而获取公钥，但是，这里的公钥并不是服务器原本的 A 公钥，而是中间人自己证书中的 B 公钥。从第二层可知，如果不能保证客户端收到的公钥是服务器下发的，那整个通信数据的安全就没法保证。简单总结就是证书被调包~</p></blockquote><p>所以，还得保证客户端收到的证书就是服务器下发的证书，没有被中间人篡改过。</p><h3 id="四层（安全传输证书）"><a href="#四层（安全传输证书）" class="headerlink" title="四层（安全传输证书）"></a>四层（安全传输证书）</h3><p>这一层，我们的任务是：保证客户端收到的证书是服务器下发的证书，没有被中间人篡改过。</p><p>所以，这里就有两个需求:</p><ul><li>证明证书内容没有被第三方篡改过；</li><li>证明证书是服务器下发的；</li></ul><p>其实这些问题，数字证书本身已经提供方案了，数字证书中除了包含加密之后的服务器公钥，权威机构的信息之外，还包含了证书内容的签名(先通过 Hash 函数计算得到证书数字摘要，然后用权威机构私钥加密数字摘要得到数字签名)，签名计算方法以及证书对应的域名。这样一来，客户端收到证书之后：</p><ul><li>使用权威机构的公钥解密数字证书，得到证书内容（服务器的公钥）以及证书的数字签名，然后根据证书上描述的计算证书签名的方法计算一下当前证书的签名，与收到的签名作对比，如果一样，表示证书一定是服务器下发的，没有被中间人篡改过。因为中间人虽然有权威机构的公钥，能够解析证书内容并篡改，但是篡改完成之后中间人需要将证书重新加密，但是中间人没有权威机构的私钥，无法加密，强行加密只会导致客户端无法解密，如果中间人强行乱修改证书，就会导致证书内容和证书签名不匹配。所以证书签名就能判断证书是否被篡改</li><li>再考虑证书被掉包的情况：中间人同样可以向权威机构申请一份证书，然后在服务器给客户端下发证书的时候劫持原证书，将自己的假证书下发给客户端，客户端收到之后依然能够使用权威机构的公钥解密证书，并且证书签名也没问题。但是这个时候客户端还需要检查证书中的域名和当前访问的域名是否一致。如果不一致，会发出警告！</li></ul><p>从上面的分析可以看到，数字证书中的信息确实能让客户端辨别证书的真伪。</p><p>原文转自：<a href="https://zhuanlan.zhihu.com/p/25976060" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/25976060</a></p><p>修复了文中的一处错误</p>]]></content>
    
    <summary type="html">
    
      图解HTTPS
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Keepalived 原理介绍和配置实践</title>
    <link href="https://wsgzao.github.io/post/keepalived/"/>
    <id>https://wsgzao.github.io/post/keepalived/</id>
    <published>2020-05-08T06:59:49.000Z</published>
    <updated>2020-06-11T08:45:24.784Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要讲述 Keepalived 原理介绍和配置实践</p><blockquote><p>Keepalived 原理介绍和配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 05 月 08 日 - 增加 virual_router_id 冲突解决思路和单播模式的应用<br>2020 年 03 月 20 日 - 增加 Keepalived 双活实践<br>2019 年 09 月 03 日 - 拆分 LVS-Keepalived 中 Keepalived<br>2019 年 08 月 23 日 - 更新 LVS/NAT、LVS/DR、LVS/TUN 三种模式的原理和配置实践<br>2018 年 12 月 03 日 - 精简和更新配置步骤<br>2018 年 07 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/keepalived/">https://wsgzao.github.io/post/keepalived/</a></p><p><strong> 扩展阅读 </strong></p><p>LVS - <a href="http://www.linuxvirtualserver.org/zh/index.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/zh/index.html</a><br>Keepalived - <a href="http://www.keepalived.org/" target="_blank" rel="noopener">http://www.keepalived.org/</a></p><hr><h2 id="ReadMe"><a href="#ReadMe" class="headerlink" title="ReadMe"></a>ReadMe</h2><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>Keepalived - <a href="http://www.keepalived.org/doc/" target="_blank" rel="noopener">http://www.keepalived.org/doc/</a><br>The Keepalived Solution - <a href="http://www.linuxvirtualserver.org/docs/ha/keepalived.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/docs/ha/keepalived.html</a><br>LVS 和 Keepalived 官方中文手册 PDF - <a href="https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg</a></p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><blockquote><p>以下术语涉及 LVS 三种工作模式的原理</p></blockquote><ul><li>LB (Load Balancer 负载均衡) </li><li>HA (High Available 高可用) </li><li>Failover (失败切换) </li><li>Cluster (集群) </li><li>LVS (Linux Virtual Server Linux 虚拟服务器) </li><li>DS (Director Server)，指的是前端负载均衡器节点</li><li>RS (Real Server)，后端真实的工作服务器</li><li>VIP (Virtual IP)，虚拟的 IP 地址，向外部直接面向用户请求，作为用户请求的目标的 IP 地址</li><li>DIP (Director IP)，主要用于和内部主机通讯的 IP 地址</li><li>RIP (Real Server IP)，后端服务器的 IP 地址</li><li>CIP (Client IP)，访问客户端的 IP 地址</li></ul><h2 id="负载均衡-LB"><a href="#负载均衡-LB" class="headerlink" title="负载均衡(LB)"></a>负载均衡(LB)</h2><blockquote><p>负载均衡实现方法有两种：硬件实现和软件实现</p></blockquote><p>硬件比较常见的有：</p><ol><li>F5 Big-IP</li><li>Citrix Netscaler</li></ol><p>软件比较常见的有：</p><ol><li>LVS（Linux Virtual Server）</li><li>HAProxy</li><li>Nginx</li></ol><p>LVS 特点是：</p><ol><li>首先它是基于 4 层的网络协议的，抗负载能力强，对于服务器的硬件要求除了网卡外，其他没有太多要求；</li><li>配置性比较低，这是一个缺点也是一个优点，因为没有可太多配置的东西，大大减少了人为出错的几率；</li><li>应用范围比较广，不仅仅对 web 服务做负载均衡，还可以对其他应用（mysql）做负载均衡；</li><li>LVS 架构中存在一个虚拟 IP 的概念，需要向 IDC 多申请一个 IP 来做虚拟 IP。</li></ol><p>Nginx 负载均衡器的特点是：</p><ol><li>工作在网络的 7 层之上，可以针对 http 应用做一些分流的策略，比如针对域名、目录结构；</li><li>Nginx 安装和配置比较简单，测试起来比较方便；</li><li>也可以承担高的负载压力且稳定，一般能支撑超过上万次的并发；</li><li>Nginx 可以通过端口检测到服务器内部的故障，比如根据服务器处理网页返回的状态码、超时等等，并且会把返回错误的请求重新提交到另一个节点，不过其中缺点就是不支持 url 来检测；</li><li>Nginx 对请求的异步处理可以帮助节点服务器减轻负载；</li><li>Nginx 能支持 http 和 Email，这样就在适用范围上面小很多；</li><li>默认有三种调度算法: 轮询、weight 以及 ip_hash（可以解决会话保持的问题），还可以支持第三方的 fair 和 url_hash 等调度算法；</li></ol><p>HAProxy 的特点是：</p><ol><li>HAProxy 是工作在网络 7 层之上；</li><li>支持 Session 的保持，Cookie 的引导等；</li><li>支持 url 检测后端的服务器出问题的检测会有很好的帮助；</li><li>支持的负载均衡算法：动态加权轮循(Dynamic Round Robin)，加权源地址哈希(Weighted Source Hash)，加权 URL 哈希和加权参数哈希(Weighted Parameter Hash)；</li><li>单纯从效率上来讲 HAProxy 更会比 Nginx 有更出色的负载均衡速度；</li><li>HAProxy 可以对 Mysql 进行负载均衡，对后端的 DB 节点进行检测和负载均衡。</li></ol><h2 id="keepalived-简介"><a href="#keepalived-简介" class="headerlink" title="keepalived 简介"></a>keepalived 简介</h2><p>Keepalived 是运行在 lvs 之上，是一个用于做双机热备（HA）的软件，它的主要功能是实现真实机的故障隔离及负载均衡器间的失败切换，提高系统的可用性。</p><h3 id="运行原理"><a href="#运行原理" class="headerlink" title="运行原理"></a>运行原理</h3><p>keepalived 通过选举（看服务器设置的权重）挑选出一台热备服务器做 MASTER 机器，MASTER 机器会被分配到一个指定的虚拟 ip，外部程序可通过该 ip 访问这台服务器，如果这台服务器出现故障（断网，重启，或者本机器上的 keepalived crash 等），keepalived 会从其他的备份机器上重选（还是看服务器设置的权重）一台机器做 MASTER 并分配同样的虚拟 IP，充当前一台 MASTER 的角色。</p><h3 id="选举策略"><a href="#选举策略" class="headerlink" title="选举策略"></a>选举策略</h3><p>选举策略是根据 VRRP 协议，完全按照权重大小，权重最大（0～255）的是 MASTER 机器，下面几种情况会触发选举</p><ol><li>keepalived 启动的时候</li><li>master 服务器出现故障（断网，重启，或者本机器上的 keepalived crash 等，而本机器上其他应用程序 crash 不算）</li><li>有新的备份服务器加入且权重最大</li></ol><h2 id="keepalived-的配置文件说明"><a href="#keepalived-的配置文件说明" class="headerlink" title="keepalived 的配置文件说明"></a>keepalived 的配置文件说明</h2><p>Keepalived 是运行在 lvs 之上, 它的主要功能是实现 RealServer(真实服务器)的故障隔离及 Director(负载均衡器)间的 FailOver(失败切换). </p><ul><li>keepalived 是 lvs 的扩展项目, 因此它们之间具备良好的兼容性</li><li>对 RealServer 的健康检查, 实现对失效机器 / 服务的故障隔离</li><li>负载均衡器之间的失败切换 failover</li></ul><h3 id="全局定义"><a href="#全局定义" class="headerlink" title="全局定义"></a>全局定义</h3><p>全局配置又包括两个子配置</p><ol><li>全局定义(global definition)</li><li>静态路由配置(static ipaddress/routes)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局定义 (global definition) </span></span><br><span class="line">global_defs &#123;                      </span><br><span class="line">   notification_email &#123;      </span><br><span class="line">   acassen@firewall.loc     </span><br><span class="line">   failover@firewall.loc</span><br><span class="line">   sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc   </span><br><span class="line">   smtp_server 192.168.200.1                         </span><br><span class="line">   smtp_connect_timeout 30                                  </span><br><span class="line">   router_id LVS_DEVEL     </span><br><span class="line">&#125;</span><br><span class="line">notification_email: 表示 keepalived 在发生诸如切换操作时需要发送 email 通知以及 email 发送给哪些邮件地址邮件地址可以多个每行一个</span><br><span class="line">notification_email_from admin@example.com: 表示发送通知邮件时邮件源地址是谁</span><br><span class="line">smtp_server 127.0.0.1: 表示发送 email 时使用的 smtp 服务器地址这里可以用本地的 sendmail 来实现</span><br><span class="line">smtp_connect_timeout 30: 连接 smtp 连接超时时间</span><br><span class="line">router_id node1: 机器标识，通常配置主机名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态地址和路由配置范例</span></span><br><span class="line">static_ipaddress &#123;</span><br><span class="line">    192.168.1.1/24 brd + dev eth0 scope global</span><br><span class="line">    192.168.1.2/24 brd + dev eth1 scope global</span><br><span class="line">&#125;</span><br><span class="line">static_routes &#123;</span><br><span class="line">    src <span class="variable">$SRC_IP</span> to <span class="variable">$DST_IP</span> dev <span class="variable">$SRC_DEVICE</span></span><br><span class="line">    src <span class="variable">$SRC_IP</span> to <span class="variable">$DST_IP</span> via <span class="variable">$GW</span> dev <span class="variable">$SRC_DEVICE</span></span><br><span class="line">&#125;</span><br><span class="line"> 这里实际上和系统里面命令配置 IP 地址和路由一样例如 </span><br><span class="line">192.168.1.1/24 brd + dev eth0 scope global 相当于: ip addr add 192.168.1.1/24 brd + dev eth0 scope global</span><br><span class="line"> 就是给 eth0 配置 IP 地址路由同理, 一般这个区域不需要配置 </span><br><span class="line"> 这里实际上就是给服务器配置真实的 IP 地址和路由的在复杂的环境下可能需要配置一般不会用这个来配置我们可以直接用 vi /etc/sysconfig/network-script/ifcfg-eth1 来配置切记这里可不是 VIP 不要搞混淆了切记切记</span><br></pre></td></tr></table></figure><h3 id="VRRPD-配置"><a href="#VRRPD-配置" class="headerlink" title="VRRPD 配置"></a>VRRPD 配置</h3><p>包括三个类:</p><ol><li>VRRP 同步组(synchroization group) </li><li>VRRP 实例(VRRP Instance) </li><li>VRRP 脚本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># VRRP 同步组 (synchroization group) 配置范例 </span></span><br><span class="line">vrrp_sync_group VG_1 &#123;   // 注意 vrrp_sync_group  后面可自定义名称如 lvs_httpd ,httpd</span><br><span class="line">group &#123;</span><br><span class="line">http</span><br><span class="line">mysql</span><br><span class="line">&#125;</span><br><span class="line">notify_master /path/to/to_master.sh</span><br><span class="line">notify_backup /path_to/to_backup.sh</span><br><span class="line">notify_fault <span class="string">"/path/fault.sh VG_1"</span></span><br><span class="line">notify /path/to/notify.sh</span><br><span class="line">smtp_alert </span><br><span class="line">&#125;</span><br><span class="line"> 其中 http 和 mysql 是实例名和下面的实例名一致 </span><br><span class="line">notify_master /path/to/to_master.sh // 表示当切换到 master 状态时要执行的脚本</span><br><span class="line">notify_backup /path_to/to_backup.sh // 表示当切换到 backup 状态时要执行的脚本</span><br><span class="line">notify_fault <span class="string">"/path/fault.sh VG_1"</span>  // keepalived 出现故障时执行的脚本</span><br><span class="line">notify /path/to/notify.sh  </span><br><span class="line">smtp_alert           // 表示切换时给 global defs 中定义的邮件地址发送邮件通知</span><br><span class="line"></span><br><span class="line"><span class="comment"># VRRP 实例(instance) 配置范例</span></span><br><span class="line">vrrp_instance http &#123;  // 注意 vrrp_instance 后面可自定义名称如 lvs_httpd ,httpd</span><br><span class="line">state MASTER</span><br><span class="line">interface eth0</span><br><span class="line">dont_track_primary</span><br><span class="line">track_interface &#123;</span><br><span class="line">eth0</span><br><span class="line">eth1</span><br><span class="line">&#125;</span><br><span class="line">mcast_src_ip &lt;IPADDR&gt;</span><br><span class="line">garp_master_delay 10</span><br><span class="line">virtual_router_id 51</span><br><span class="line">priority 100</span><br><span class="line">advert_int 1</span><br><span class="line">authentication &#123;</span><br><span class="line">auth_type PASS</span><br><span class="line">autp_pass 1234</span><br><span class="line">&#125;</span><br><span class="line">virtual_ipaddress &#123;</span><br><span class="line"><span class="comment">#&lt;IPADDR&gt;/&lt;MASK&gt; brd &lt;IPADDR&gt; dev &lt;STRING&gt; scope &lt;SCOPT&gt; label &lt;LABEL&gt;</span></span><br><span class="line">192.168.200.17/24 dev eth1</span><br><span class="line">192.168.200.18/24 dev eth2 label eth2:1</span><br><span class="line">&#125;</span><br><span class="line">virtual_routes &#123;</span><br><span class="line"><span class="comment"># src &lt;IPADDR&gt; [to] &lt;IPADDR&gt;/&lt;MASK&gt; via|gw &lt;IPADDR&gt; dev &lt;STRING&gt; scope &lt;SCOPE&gt; tab</span></span><br><span class="line">src 192.168.100.1 to 192.168.109.0/24 via 192.168.200.254 dev eth1</span><br><span class="line">192.168.110.0/24 via 192.168.200.254 dev eth1</span><br><span class="line">192.168.111.0/24 dev eth2</span><br><span class="line">192.168.112.0/24 via 192.168.100.254</span><br><span class="line">&#125;</span><br><span class="line">nopreempt</span><br><span class="line">preemtp_delay 300</span><br><span class="line">debug</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>state: state 指定 instance(Initial)的初始状态就是说在配置好后这台 服务器的初始状态就是这里指定的但这里指定的不算还是得要通过竞选通过优先级来确定里如果这里设置为 master 但如若他的优先级不及另外一台 那么这台在发送通告时会发送自己的优先级另外一台发现优先级不如自己的高那么他会就回抢占为 master</p><p>interface: 实例绑定的网卡因为在配置虚拟 VIP 的时候必须是在已有的网卡上添加的</p><p>dont track primary: 忽略 VRRP 的 interface 错误</p><p>track interface: 跟踪接口设置额外的监控里面任意一块网卡出现问题都会进入故障 (FAULT) 状态例如用 nginx 做均衡器的时候内网必须正常工作如果内网出问题了这个均衡器也就无法运作了所以必须对内外网同时做健康检查</p><p>mcast src ip: 发送多播数据包时的源 IP 地址这里注意了这里实际上就是在那个地址上发送 VRRP 通告这个非常重要一定要选择稳定的网卡端口来发送这里相当于 heartbeat 的心跳端口如果没有设置那么就用默认的绑定的网卡的 IP 也就是 interface 指定的 IP 地址</p><p>garp master delay: 在切换到 master 状态后延迟进行免费的 ARP(gratuitous ARP)请求，默认 5s</p><p>virtual router id: 这里设置 VRID 这里非常重要相同的 VRID 为一个组他将决定多播的 MAC 地址</p><p>priority 100: 设置本节点的优先级优先级高的为 master</p><p>advert int: 设置 MASTER 与 BACKUP 负载均衡之间同步即主备间通告时间检查的时间间隔, 单位为秒，默认 1s</p><p>virtual ipaddress: 这里设置的就是 VIP 也就是虚拟 IP 地址他随着 state 的变化而增加删除当 state 为 master 的时候就添加当 state 为 backup 的时候删除这里主要是有优先级来决定的和 state 设置的值没有多大关系这里可以设置多个 IP 地址</p><p>virtual routes: 原理和 virtual ipaddress 一样只不过这里是增加和删除路由</p><p>lvs sync daemon interface: lvs syncd 绑定的网卡，类似 HA 中的心跳检测绑定的网卡</p><p>authentication: 这里设置认证</p><p>auth type: 认证方式可以是 PASS 或 AH 两种认证方式</p><p>auth pass: 认证密码</p><p>nopreempt: 设置不抢占 master，这里只能设置在 state 为 backup 的节点上而且这个节点的优先级必须别另外的高，比如 master 因为异常将调度圈交给了备份 serve，master serve 检修后没问题，如果不设置 nopreempt 就会将调度权重新夺回来，这样就容易造成业务中断问题</p><p>preempt delay: 抢占延迟多少秒，即延迟多少秒后竞选 master</p><p>debug：debug 级别</p><p>notify master：和 sync group 这里设置的含义一样可以单独设置例如不同的实例通知不同的管理人员 http 实例发给网站管理员 mysql 的就发邮件给 DBA</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># VRRP 脚本 </span></span><br><span class="line"><span class="comment"># 如下所示为相关配置示例</span></span><br><span class="line">vrrp_script check_running &#123;</span><br><span class="line">   script <span class="string">"/usr/local/bin/check_running"</span></span><br><span class="line">   interval 10</span><br><span class="line">   weight 10</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance http &#123;</span><br><span class="line">   state BACKUP</span><br><span class="line">   smtp_alert</span><br><span class="line">   interface eth0</span><br><span class="line">   virtual_router_id 101</span><br><span class="line">   priority 90</span><br><span class="line">   advert_int 3</span><br><span class="line">   authentication &#123;</span><br><span class="line">   auth_type PASS</span><br><span class="line">   auth_pass whatever</span><br><span class="line">   &#125;</span><br><span class="line">   virtual_ipaddress &#123;</span><br><span class="line">   1.1.1.1</span><br><span class="line">   &#125;</span><br><span class="line">   track_script &#123;</span><br><span class="line">   check_running </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 首先在 vrrp_script 区域定义脚本名字和脚本执行的间隔和脚本执行的优先级变更, 如下所示:</span></span><br><span class="line">vrrp_script check_running &#123;</span><br><span class="line">            script <span class="string">"/usr/local/bin/check_running"</span></span><br><span class="line">            interval 10     <span class="comment"># 脚本执行间隔</span></span><br><span class="line">            weight 10       <span class="comment"># 脚本结果导致的优先级变更 10 表示优先级 + 10-10 则表示优先级 - 10</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment"># 然后在实例(vrrp_instance) 里面引用有点类似脚本里面的函数引用一样先定义后引用函数名</span></span><br><span class="line">track_script &#123;</span><br><span class="line">      check_running </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:<br>VRRP 脚本 (vrrp_script) 和 VRRP 实例 (vrrp_instance) 属于同一个级别<br>keepalived 会定时执行脚本并对脚本执行的结果进行分析，动态调整 vrrp_instance 的优先级。一般脚本检测返回的值为 0，说明脚本检测成功，如果为非 0 数值，则说明检测失败<br>如果脚本执行结果为 0，并且 weight 配置的值大于 0，则优先级相应的增加, 如果 weight 为非 0，则优先级不变<br>如果脚本执行结果非 0，并且 weight 配置的值小于 0，则优先级相应的减少, 如果 weight 为 0，则优先级不变<br>其他情况，维持原本配置的优先级，即配置文件中 priority 对应的值。<br>这里需要注意的是：<br>1） 优先级不会不断的提高或者降低<br>2） 可以编写多个检测脚本并为每个检测脚本设置不同的 weight<br>3） 不管提高优先级还是降低优先级，最终优先级的范围是在[1,254]，不会出现优先级小于等于 0 或者优先级大于等于 255 的情况<br>这样可以做到利用脚本检测业务进程的状态，并动态调整优先级从而实现主备切换。</p><h3 id="virtual-server-虚拟主机配置"><a href="#virtual-server-虚拟主机配置" class="headerlink" title="virtual_server 虚拟主机配置"></a>virtual_server 虚拟主机配置</h3><p>关于 keeplived 的虚拟主机配置有三种如下所示<br>virtual server IP port<br>virtual server fwmark int<br>virtual server group string</p><p>以常用的第一种为例<br>virtual_server 192.168.1.2 80<br>含义: 设置一个 virtual server: VIP:Vport</p><p>delay_loop 3<br>含义: 设置 service polling 的 delay 时间即服务轮询的时间间隔</p><p>lb_algo rr|wrr|lc|wlc|lblc|sh|dh<br>含义: 设置 LVS 调度算法</p><p>lb_kind NAT|DR|TUN<br>含义: 设置 LVS 集群模式  </p><p>persistence_timeout 120<br>含义: 设置会话保持时间秒为单位即以用户在 120 秒内被分配到同一个后端 realserver, 超过此时间就重新分配</p><p>persistence_granularity <netmask><br>含义: 设置 LVS 会话保持粒度 ipvsadm 中的 - M 参数默认是 0xffffffff 即每个客户端都做会话保持</netmask></p><p>protocol TCP<br>含义: 设置健康检查用的是 TCP 还是 UDP</p><p>ha_suspend<br>含义: suspendhealthchecker’s activity</p><p>virtualhost <string><br>含义: HTTP_GET 做健康检查时检查的 web 服务器的虚拟主机即 host 头</string></p><p>sorry_server <ipaddr> <port><br>含义: 设置 backupserver 就是当所有后端 realserver 节点都不可用时就用这里设置的也就是临时把所有的请求都发送到这里</port></ipaddr></p><p>real_server <ipaddr> <port><br>含义: 设置后端真实节点主机的权重等设置主要后端有几台这里就要设置几个</port></ipaddr></p><p>weight 1<br>含义: 设置给每台的权重 0 表示失效 (不知给他转发请求知道他恢复正常) 默认是 1</p><p>inhibit_on_failure<br>含义: 表示在节点失败后把他权重设置成 0 而不是冲 IPVS 中删除</p><p>notify_up <string> | <quoted-string><br>含义: 设置检查服务器正常 (UP) 后要执行的脚本<br>notify_down <string> | <quoted-string><br>含义: 设置检查服务器失败 (down) 后要执行的脚本</quoted-string></string></quoted-string></string></p><p>注: keepalived 检查机制说明<br>keepalived 健康检查方式有: HTTP_GET|SSL_GET|TCP_CHECK|SMTP_CHECK|MISC_CHECK 几种如下所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#HTTP/HTTPS 方式 </span></span><br><span class="line">HTTP_GET|SSL_GET &#123;      <span class="comment"># 设置健康检查方式</span></span><br><span class="line"></span><br><span class="line">url &#123;                   <span class="comment"># 设置要检查的 URL 可以有多个</span></span><br><span class="line">path /                  <span class="comment"># 设置 URL 具体路径</span></span><br><span class="line">digest &lt;STRING&gt;         <span class="comment"># 检查后的摘要信息这些摘要信息可以通过 genhash 命令工具获取                                   </span></span><br><span class="line">status_code 200         <span class="comment"># 设置返回状态码</span></span><br><span class="line">&#125;</span><br><span class="line">connect_port 80         <span class="comment"># 设置监控检查的端口</span></span><br><span class="line">bindto  &lt;IPADD&gt;         <span class="comment"># 设置健康检查的 IP 地址</span></span><br><span class="line">connect_timeout   3     <span class="comment"># 设置连接超时时间</span></span><br><span class="line">nb_get_retry  3         <span class="comment"># 设置重连次数</span></span><br><span class="line">delay_before_retry  2   <span class="comment"># 设置重连间隔</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">#TCP 方式  </span></span><br><span class="line">TCP_CHECK     &#123;</span><br><span class="line">connect_port 80         <span class="comment"># 设置监控检查的端口</span></span><br><span class="line">bindto  &lt;IPADD&gt;         <span class="comment"># 设置健康检查的 IP 地址</span></span><br><span class="line">connect_timeout   3     <span class="comment"># 设置连接超时时间</span></span><br><span class="line">nb_get_retry  3         <span class="comment"># 设置重连次数</span></span><br><span class="line">delay_before_retry  2   <span class="comment"># 设置重连间隔</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#SMTP 方式 (这个可以用来给邮件服务器做集群)</span></span><br><span class="line">SMTP_CHECK &#123;</span><br><span class="line">host &#123;</span><br><span class="line">connect_ip &lt;IP ADDRESS&gt;</span><br><span class="line">connect_port &lt;PORT&gt;     <span class="comment"># 默认检查 25 端口</span></span><br><span class="line">14 KEEPALIVED</span><br><span class="line">bindto &lt;IP ADDRESS&gt;</span><br><span class="line">&#125;</span><br><span class="line">connect_timeout &lt;INTEGER&gt;</span><br><span class="line">retry &lt;INTEGER&gt;</span><br><span class="line">delay_before_retry &lt;INTEGER&gt;</span><br><span class="line">helo_name &lt;STRING&gt;|&lt;QUOTED-STRING&gt;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">#MISC 方式 这个可以用来检查很多服务器只需要自己会些脚本即可</span></span><br><span class="line">MISC_CHECK &#123;</span><br><span class="line">misc_path &lt;STRING&gt;|&lt;QUOTED-STRING&gt;  <span class="comment"># 外部程序或脚本</span></span><br><span class="line">misc_timeout &lt;INT&gt;                  <span class="comment"># 脚本或程序执行超时时间</span></span><br><span class="line">misc_dynamic                                              </span><br><span class="line"><span class="comment"># 这个就很好用了可以非常精确的来调整权重是后端每天服务器的压力都能均衡调配这个主要是通过执行的程序或脚本返回的状态代码来动态调整 weight 值使权重根据真实的后端压力来适当调整不过这需要有过硬的脚本功夫才行哦</span></span><br><span class="line"><span class="comment"># 返回 0 健康检查没问题不修改权重</span></span><br><span class="line"><span class="comment"># 返回 1 健康检查失败权重设置为 0</span></span><br><span class="line"><span class="comment"># 返回 2-255 健康检查没问题但是权重却要根据返回代码修改为返回码 - 2 例如如果程序或脚本执行后返回的代码为 200# 那么权重这回被修改为 200-2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上就是 keepalived 的配置项说明虽然配置项很多但很多时候很多配置项保持默认即可，以下是默认配置文件，方便大家做个对比参考</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-65-32-140 wangao]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">     failover@firewall.loc</span><br><span class="line">     sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">   vrrp_strict</span><br><span class="line">   vrrp_garp_interval 0</span><br><span class="line">   vrrp_gna_interval 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.200.16</span><br><span class="line">        192.168.200.17</span><br><span class="line">        192.168.200.18</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 192.168.200.100 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 192.168.201.100 443 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        SSL_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /</span><br><span class="line">              digest ff20ad2481f97b1754ef3e12ecd3a9cc</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /mrtg/</span><br><span class="line">              digest 9b3a0c85a887a256d6939da88aabd8cd</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.10.2 1358 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    sorry_server 192.168.200.200 1358</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.2 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.3 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.10.3 1358 &#123;</span><br><span class="line">    delay_loop 3</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.4 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.5 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最简单的-Keepalived-HA-配置实例"><a href="#最简单的-Keepalived-HA-配置实例" class="headerlink" title="最简单的 Keepalived HA 配置实例"></a>最简单的 Keepalived HA 配置实例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 keepalived,ipvsadm</span></span><br><span class="line">yum install keepalived -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果开启防火墙，请添加 VRRP 白名单</span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 keepalived 配置文件，master 和 backup 节点配置文件一样</span></span><br><span class="line">vi /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group VI_GOP_NC1_HA &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_GOP_NC1_HA_PRI</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_GOP_NC1_HA_PRI &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 139</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.65.33.139/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动启动节点即为 master</span></span><br><span class="line">service keepalived start</span><br></pre></td></tr></table></figure><h2 id="Keepalived-双活实践"><a href="#Keepalived-双活实践" class="headerlink" title="Keepalived 双活实践"></a>Keepalived 双活实践</h2><blockquote><p>最简单的 keepalived 双活，只需要修改 state 和 priority</p></blockquote><ul><li>优点：配置文件简单</li><li>缺点：<ul><li>当 master 恢复后会自动回切，影响业务流量</li><li>两个节点配置不完全一致，对自动化运维管理不友好</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"># node1</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 32</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.32/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 33</span><br><span class="line">    priority 98</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.33/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># node2</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 32</span><br><span class="line">    priority 98</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.32/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 33</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.33/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>合理的 keepalived 双活</p></blockquote><ul><li>优点：<ul><li>添加 nopreempt 可以防止自动回切</li><li>添加 track_script 可以人为控制切换</li><li>节点之间配置完全一致，便于自动化运维管理</li></ul></li><li>缺点：配置文件较为复杂</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"># node1</span><br><span class="line">vrrp_script maint-10.71.17.32 &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/10.71.17.32 ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-10.71.17.33 &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/10.71.17.33 ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 32</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.32/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-10.71.17.32</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 33</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.33/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-10.71.17.33</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># node2</span><br><span class="line">vrrp_script maint-10.71.17.32 &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/10.71.17.32 ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-10.71.17.33 &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/10.71.17.33 ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 32</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.32/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-10.71.17.32</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 33</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.33/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-10.71.17.33</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果需要配合自定义脚本监控使用，可以参考<a href="https://wsgzao.github.io/post/redis/">Redis 主从同步配置实践</a></p><h2 id="简单的-Keepalived-邮件告警实例"><a href="#简单的-Keepalived-邮件告警实例" class="headerlink" title="简单的 Keepalived 邮件告警实例"></a>简单的 Keepalived 邮件告警实例</h2><ol><li>编写 sendmail.py 邮件发送脚本</li><li>在 keepalived.conf 中配置 notify_backup</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"></span><br><span class="line">EMAIL_CONFIG = &#123;</span><br><span class="line">    <span class="string">'EMAIL_HOST'</span>: <span class="string">'xxx'</span>,</span><br><span class="line">    <span class="string">'EMAIL_HOST_USER'</span>: <span class="string">'xxx'</span>,</span><br><span class="line">    <span class="string">'EMAIL_RECEIVER'</span>: <span class="string">'xxx'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_get_private_ip</span><span class="params">()</span>:</span></span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        sock.connect((<span class="string">'10.255.255.255'</span>, <span class="number">1</span>))</span><br><span class="line">        <span class="keyword">return</span> sock.getsockname()[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'127.0.0.1'</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        sock.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_email</span><span class="params">()</span>:</span></span><br><span class="line">    ip = _get_private_ip()</span><br><span class="line">    hostname = socket.gethostname()</span><br><span class="line">    message = <span class="string">'Subject: Keepalived Failover Alert %s \n\nHOSTNAME %s on LANIP %s HA status has changed to %s'</span> % (</span><br><span class="line">        sys.argv[<span class="number">1</span>], hostname, ip, sys.argv[<span class="number">1</span>])</span><br><span class="line">    server = smtplib.SMTP(EMAIL_CONFIG[<span class="string">"EMAIL_HOST"</span>])</span><br><span class="line">    server.sendmail(EMAIL_CONFIG[<span class="string">'EMAIL_HOST_USER'</span>],</span><br><span class="line">                    EMAIL_CONFIG[<span class="string">'EMAIL_RECEIVER'</span>], message)</span><br><span class="line">    server.quit()</span><br><span class="line"></span><br><span class="line">send_email()</span><br></pre></td></tr></table></figure><blockquote><p>如果有设置 vrrp_sync_group 可以添加在这里通过群组控制，如果没有就跟在 vrrp_instance 独立设置</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">           # notify scripts and alerts are optional</span><br><span class="line">           #</span><br><span class="line">           # filenames of scripts to run on transitions can be unquoted (if</span><br><span class="line">           # just filename) or quoted (if it has parameters)</span><br><span class="line">           # The username and groupname specify the user and group</span><br><span class="line">           # under which the scripts should be run. If username is</span><br><span class="line">           # specified, the group defaults to the group of the user.</span><br><span class="line">           # If username is not specified, they default to the</span><br><span class="line">           # global script_user and script_group to MASTER transition</span><br><span class="line">           notify_master /path/to_master.sh [username [groupname]]</span><br><span class="line"></span><br><span class="line">           # to BACKUP transition</span><br><span class="line">           notify_backup /path/to_backup.sh [username [groupname]]</span><br><span class="line"></span><br><span class="line">           # FAULT transition</span><br><span class="line">           notify_fault &quot;/path/fault.sh VG_1&quot; [username [groupname]]</span><br><span class="line"></span><br><span class="line">vrrp_sync_group NC-CLOUD-LOADTEST &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        NC-CLOUD-LOADTEST-PUB</span><br><span class="line">        NC-CLOUD-LOADTEST-PRI</span><br><span class="line">    &#125;</span><br><span class="line">    notify_master &quot;/bin/python /etc/keepalived/sendmail.py master&quot;</span><br><span class="line">    notify_backup &quot;/bin/python /etc/keepalived/sendmail.py backup&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Keepalived-Notification-and-Tracking-Scripts"><a href="#Keepalived-Notification-and-Tracking-Scripts" class="headerlink" title="Keepalived Notification and Tracking Scripts"></a>Keepalived Notification and Tracking Scripts</h2><p>Keepalived 官方的文档并没有给出实践案例，我对上面的代码改进之后的效果如下</p><ol><li>实现双活，支持不中断 LVS 人工干预任意节点运行位置</li><li>实现 status 状态无变化时无告警邮件</li></ol><p>Keepalived is a Linux implementation of the VRRP (Virtual Router Redundancy Protocol) protocol to make IPs highly available. Keepalived check and notify scripts can be used to check anything you want to ensure the Master is on the right node and take action if a state change.</p><p><a href="https://www.keepalived.org/manpage.html" target="_blank" rel="noopener">notify scripts and alerts are optional</a></p><p><a href="https://docs.oracle.com/en/operating-systems/oracle-linux/7/admin/section_hxz_zdw_pr.html" target="_blank" rel="noopener">About Keepalived Notification and Tracking Scripts</a></p><p>Check script has two reutrn value: </p><ul><li>0 for everything is fine</li><li>1 or other than 0 means something went wrong.</li></ul><p>For example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vrrp_script maint-xxx &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/xxx ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This script defines file check to check whether the file xxx is exist. The check interval is 2 seconds, check fail and succeed twice for KO and OK.</p><p>The check script is used in a <code>vrrp_instance</code> as follows</p><p>The <code>track_script</code> returns other code than 0 two times, the VRRP instance will change the state to <code>FAULT</code>, or the instance will change the state to <code>running</code>if return code 0 two times.</p><blockquote><p>keepalived.conf</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">vrrp_sync_group VI_GROUP_xxx &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_xxx</span><br><span class="line">        VI_PUB_xxx</span><br><span class="line">    &#125;</span><br><span class="line">    notify /etc/keepalived/notify.sh</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_sync_group VI_GROUP_xxx &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_xxx</span><br><span class="line">        VI_PUB_xxx</span><br><span class="line">    &#125;</span><br><span class="line">    notify /etc/keepalived/notify.sh</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-xxx &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/xxx ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 10</span><br><span class="line">    fall 6</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-xxx &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/xxx ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 10</span><br><span class="line">    fall 6</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-xxx &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/xxx ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 10</span><br><span class="line">    fall 6</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-xxx &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/xxx ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 10</span><br><span class="line">    fall 6</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_xxx &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 138</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xxx/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-xxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_xxx &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 139</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xxx/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-xxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PUB_xxx &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond1</span><br><span class="line">    virtual_router_id 101</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xxx/26 dev bond1</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-xxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PUB_xxx &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond1</span><br><span class="line">    virtual_router_id 102</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xxx/26 dev bond1</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-xxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>notify.sh</p></blockquote><p>Keepalived tasks some action depending on the VRRP state.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vrrp_sync_group VI_GROUP_xxx &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_xxx</span><br><span class="line">        VI_PUB_xxx</span><br><span class="line">    &#125;</span><br><span class="line">    notify /etc/keepalived/notify.sh</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The script is called after any state change with the following parameters:</p><p>$1 = “GROUP” or “INSTANCE”<br>$2 = name of group or instance<br>$3 = target state of transition (“MASTER”, “BACKUP”, “FAULT”)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">TYPE=<span class="variable">$1</span></span><br><span class="line">NAME=<span class="variable">$2</span></span><br><span class="line">STATE=<span class="variable">$3</span></span><br><span class="line">FILE=<span class="string">"/etc/keepalived/<span class="variable">$&#123;NAME&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  touch <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">ORI_STATE=`cat <span class="variable">$&#123;FILE&#125;</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;STATE&#125;</span> == <span class="variable">$&#123;ORI_STATE&#125;</span> ];<span class="keyword">then</span></span><br><span class="line">   <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$STATE</span> <span class="keyword">in</span></span><br><span class="line">            <span class="string">"MASTER"</span>) /bin/python /etc/keepalived/sendmail.py <span class="variable">$&#123;STATE&#125;</span> <span class="variable">$&#123;TYPE&#125;</span> <span class="variable">$&#123;NAME&#125;</span></span><br><span class="line">                      <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;STATE&#125;</span>"</span> &gt; <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span></span><br><span class="line">                      <span class="built_in">exit</span> 0</span><br><span class="line">                      ;;</span><br><span class="line">            <span class="string">"BACKUP"</span>) /bin/python /etc/keepalived/sendmail.py <span class="variable">$&#123;STATE&#125;</span> <span class="variable">$&#123;TYPE&#125;</span> <span class="variable">$&#123;NAME&#125;</span></span><br><span class="line">                      <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;STATE&#125;</span>"</span> &gt; <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span></span><br><span class="line">                      <span class="built_in">exit</span> 0</span><br><span class="line">                      ;;</span><br><span class="line">            <span class="string">"FAULT"</span>)  /bin/python /etc/keepalived/sendmail.py <span class="variable">$&#123;STATE&#125;</span> <span class="variable">$&#123;TYPE&#125;</span> <span class="variable">$&#123;NAME&#125;</span></span><br><span class="line">                      <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;STATE&#125;</span>"</span> &gt; <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span></span><br><span class="line">                      <span class="built_in">exit</span> 0</span><br><span class="line">                      ;;</span><br><span class="line">            *)        <span class="built_in">echo</span> <span class="string">"unknown state"</span></span><br><span class="line">                      <span class="built_in">exit</span> 1</span><br><span class="line">                      ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><blockquote><p>sendmail.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EMAIL_CONFIG = &#123;</span><br><span class="line">    <span class="string">'EMAIL_HOST'</span>: <span class="string">'xxx'</span>,</span><br><span class="line">    <span class="string">'EMAIL_HOST_USER'</span>: <span class="string">'xxx'</span>,</span><br><span class="line">    <span class="string">'EMAIL_RECEIVER'</span>: <span class="string">'xxx'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_get_private_ip</span><span class="params">()</span>:</span></span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        sock.connect((<span class="string">'10.255.255.255'</span>, <span class="number">1</span>))</span><br><span class="line">        <span class="keyword">return</span> sock.getsockname()[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'127.0.0.1'</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        sock.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_email</span><span class="params">()</span>:</span></span><br><span class="line">    ip = _get_private_ip()</span><br><span class="line">    hostname = socket.gethostname()</span><br><span class="line">    message = <span class="string">'Subject: Keepalived Failover Alert %s \n\nHOSTNAME %s on LANIP %s %s %s status has changed to %s'</span> % (</span><br><span class="line">        sys.argv[<span class="number">1</span>], hostname, ip, sys.argv[<span class="number">2</span>], sys.argv[<span class="number">3</span>], sys.argv[<span class="number">1</span>])</span><br><span class="line">    server = smtplib.SMTP(EMAIL_CONFIG[<span class="string">"EMAIL_HOST"</span>])</span><br><span class="line">    server.sendmail(EMAIL_CONFIG[<span class="string">'EMAIL_HOST_USER'</span>],</span><br><span class="line">                    EMAIL_CONFIG[<span class="string">'EMAIL_RECEIVER'</span>], message)</span><br><span class="line">    server.quit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">send_email()</span><br></pre></td></tr></table></figure><h2 id="Keepalived-常见问题"><a href="#Keepalived-常见问题" class="headerlink" title="Keepalived 常见问题"></a>Keepalived 常见问题</h2><blockquote><p>virual_router_id 冲突</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 检查 keepalived 错误日志会发现</span><br><span class="line">tailf /var/log/messages</span><br><span class="line"></span><br><span class="line">May  7 23:25:18 xxx Keepalived_vrrp[90851]: bogus VRRP packet received on bond1 !!!</span><br><span class="line">May  7 23:25:18 xxx Keepalived_vrrp[90851]: VRRP_Instance(VI_PUB_xxx) ignoring received advertisment...</span><br><span class="line">May  7 23:25:19 xxx Keepalived_vrrp[90851]: (VI_PUB_xxx): ip address associated with VRID 101 not present in MASTER advert : xxx</span><br><span class="line"></span><br><span class="line"># 通过检查配置文件的方法效率太低</span><br><span class="line">grep &apos;virtual_router_id&apos; /etc/keepalived/keepalived.conf</span><br><span class="line">    virtual_router_id 148</span><br><span class="line">    virtual_router_id 149</span><br><span class="line">    virtual_router_id 101</span><br><span class="line">    virtual_router_id 104</span><br><span class="line"></span><br><span class="line"># 如果是 vrrp 广播可以通过 tcpdump 抓包分析</span><br><span class="line">tcpdump -i bond1 -nn &apos; vrrp&apos;</span><br><span class="line"></span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on bond1, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">00:16:44.919824 IP xxx &gt; 224.0.0.18: VRRPv2, Advertisement, vrid 105, prio 100, authtype simple, intvl 1s, length 20</span><br><span class="line">00:16:44.995030 IP xxx &gt; 224.0.0.18: VRRPv2, Advertisement, vrid 101, prio 100, authtype simple, intvl 1s, length 20</span><br><span class="line">00:16:44.995046 IP xxx &gt; 224.0.0.18: VRRPv2, Advertisement, vrid 104, prio 100, authtype simple, intvl 1s, length 20</span><br><span class="line">00:16:44.996107 IP xxx &gt; 224.0.0.18: VRRPv2, Advertisement, vrid 123, prio 100, authtype simple, intvl 1s, length 20</span><br></pre></td></tr></table></figure><blockquote><p>keepalived 单播模式</p></blockquote><p>keepalived 在组播模式下所有的信息都会向 224.0.0.18 的组播地址发送，产生众多的无用信息，并且会产生干扰和冲突，所以需要将其组播的模式改为单播。这是一种安全的方法，避免局域网内有大量的 keepalived 造成虚拟路由 id 的冲突。</p><p>单薄模式需要关闭 vrrp_strict，严格遵守 vrrp 协议这个选项</p><p>单薄需要在 VIP 实例配置段加入单播的源地址和目标地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">   #vrrp_strict                         #将严格遵守 vrrp 协议这一项关闭，否则会因为不是组播而无法启动 keepalived</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"># 主备节点地址注意互换</span><br><span class="line">    unicast_src_ip 172.20.27.10         #配置单播的源地址</span><br><span class="line">    unicast_peer &#123; </span><br><span class="line">    172.20.27.11                        #配置单播的目标地址</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># See description of global vrrp_strict</span><br><span class="line"># If vrrp_strict is not specified, it takes the value of vrrp_strict</span><br><span class="line"># If strict_mode without a parameter is specified, it defaults to on</span><br><span class="line">strict_mode [on|off|true|false|yes|no]</span><br><span class="line"></span><br><span class="line"># default IP for binding vrrpd is the primary IP</span><br><span class="line"># on interface. If you want to hide the location of vrrpd,</span><br><span class="line"># use this IP as src_addr for multicast or unicast vrrp</span><br><span class="line"># packets. (since it&apos;s multicast, vrrpd will get the reply</span><br><span class="line"># packet no matter what src_addr is used).</span><br><span class="line"># optional</span><br><span class="line">mcast_src_ip &lt;IPADDR&gt;</span><br><span class="line">unicast_src_ip &lt;IPADDR&gt;</span><br><span class="line"></span><br><span class="line"># Do not send VRRP adverts over a VRRP multicast group.</span><br><span class="line"># Instead it sends adverts to the following list of</span><br><span class="line"># ip addresses using unicast. It can be cool to use</span><br><span class="line"># the VRRP FSM and features in a networking</span><br><span class="line"># environment where multicast is not supported!</span><br><span class="line"># IP addresses specified can be IPv4 as well as IPv6.</span><br><span class="line">unicast_peer &#123;</span><br><span class="line">    &lt;IPADDR&gt;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.51cto.com/11886307/2406618" target="_blank" rel="noopener">keepalived 单播模式</a></p><h2 id="LVS-和-Keepalived-系列"><a href="#LVS-和-Keepalived-系列" class="headerlink" title="LVS 和 Keepalived 系列"></a>LVS 和 Keepalived 系列</h2><p><a href="https://wsgzao.github.io/post/lvs-keepalived/">LVS 和 Keepalived 的原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs/">LVS 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/keepalived/">Keepalived 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-nat/">LVS-NAT 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-dr/">LVS-DR 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-tun/">LVS-TUN 原理介绍和配置实践</a></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.keepalived.org/manpage.html" target="_blank" rel="noopener">Keepalived Configuration Manual Page</a></p><p><a href="https://www.keepalived.org/doc/" target="_blank" rel="noopener">Keepalived User Guide</a></p><p><a href="http://arganzheng.life/keepalived-in-action.html" target="_blank" rel="noopener">keepalived 实战</a></p><p><a href="https://monster0303.github.io/posts/4b9d0a4f/" target="_blank" rel="noopener">实现高可用集群的神器 详解 Keepalived</a></p><p><a href="https://monster0303.github.io/posts/257304ac/" target="_blank" rel="noopener">LVS 小宇宙爆发！ 当 Keepalived 遇上 LVS，实现集群高可用</a></p>]]></content>
    
    <summary type="html">
    
      Keepalived原理介绍和配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Python 学习路径</title>
    <link href="https://wsgzao.github.io/post/python/"/>
    <id>https://wsgzao.github.io/post/python/</id>
    <published>2020-05-05T06:59:49.000Z</published>
    <updated>2020-05-10T14:43:22.912Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Python 2 最后一个版本发布，我们正式迈入 Python 3 时代。北京时间 2020 年 4 月 20 日 23 点 06 分，Python 2 维护者兼发布经理本杰明 · 彼得森（Benjamin Peterson）在邮件组中正式声明，Python 2.7.18 正式发布，并且这将是 Python 2 的最后一个版本。过去人们总是喜欢讨论到底选择是 Python 2 还是 Python 3，那么现在除了维护历史项目之外，我们应该在新项目中尽可能的去学习和使用 Python 3，积极拥抱变化。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 05 月 05 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/python/">https://wsgzao.github.io/post/python/</a></p><hr><h2 id="Python-2-落幕，感恩开发者"><a href="#Python-2-落幕，感恩开发者" class="headerlink" title="Python 2 落幕，感恩开发者"></a>Python 2 落幕，感恩开发者</h2><p>Python 是荷兰程序员 Guido van Rossum 在 1991 年设计的一种解释型编程语言， <strong>Python 2 的代码库距今其实已经有 20 年的历史了，而 Python 3 则是在 2008 年才正式公开发布。</strong></p><p>因为 Python 3 与 Python 2 的向后兼容性很低，尤其是与 Unicode 相关的问题成为了瓶颈，所以之间的过渡并不容易。因此，Python 软件基金会原定于 2015 年对 Python 2 终止服务的计划，延期到了 2020 年。</p><p><strong> 如今，Python 2 中主要的库已完成向 Python 3 的过渡，Python 2 也就逐渐进入被放弃的阶段。</strong></p><p>在今年的 1 月 1 日，Python 2.7 就已正式停止维护，但消息发布时也告知了还有最后一个版本尚未发布。随着此次最终版本的正式发布，Python 2 也划上了完美的句号。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200506114913.png" alt=""></p><p>Python 核心开发团队在邮件中表示，“自 11 年前发布 Python 2.6 以来，Python 2.7 一直处于积极开发中。这些年来，CPython 的核心开发人员和贡献者认真地将 bug 修复应用到 2.7 分支， <strong> 这是一项艰巨的任务，因为 Python 2 和 3 分支存在着很多差异。</strong> ”</p><p>官方感谢了 Python 的开发者以及 CPython 社区的奉献精神，并表示 “Python 2 真的很幸运”。</p><h2 id="正式迈入-Python-3-时代"><a href="#正式迈入-Python-3-时代" class="headerlink" title="正式迈入 Python 3 时代"></a>正式迈入 Python 3 时代</h2><p>随着 Python 2 退出历史舞台，大部分的开发者已经主动或者被迫选择迁移到 Python 3。</p><p>但还存在着一些 “极端分子”。据国外的一份调查问卷的结果显示，有 5％ 的人决定将其应用程序保留在 Python 2 中，还有 2％的人表示将放弃 Python 来用另一种语言重写其程序。</p><p>但其实，将代码从 Python 2 升级到 Python 3 并不难。Python 3 当中有很多操作符可以实现 Python 2 中的操作。 <strong> 官方还发布了一个工具「2to3」来帮助开发者进行过渡。</strong></p><p>不过很多的操作习惯确实需要重新适应了。</p><p>Python 2, thank you for your years of faithful service.</p><p>Python 3, your time is now.</p><p>邮件原文：</p><p><a href="https://mail.python.org/archives/list/python-dev@python.org/message/OFCIETIXLX34X7FVK5B5WPZH22HXV342/" target="_blank" rel="noopener">https://mail.python.org/archives/list/python-dev@python.org/message/OFCIETIXLX34X7FVK5B5WPZH22HXV342/</a></p><p>Python 2.7.18 下载地址：</p><p><a href="https://www.python.org/downloads/release/python-2718" target="_blank" rel="noopener">https://www.python.org/downloads/release/python-2718</a></p><p>2to3 工具地址：</p><p><a href="https://docs.python.org/2/library/2to3.html" target="_blank" rel="noopener">https://docs.python.org/2/library/2to3.html</a></p><h2 id="Python-常见问题"><a href="#Python-常见问题" class="headerlink" title="Python 常见问题"></a>Python 常见问题</h2><p><a href="https://github.com/pypa/setuptools/issues/1458" target="_blank" rel="noopener">#1458</a>: Drop support for Python 2. Setuptools now requires Python 3.5 or later. Install setuptools using pip &gt;=9 or pin to Setuptools &lt;45 to maintain 2.7 support.</p><pre><code>pip install setuptools==44</code></pre><h2 id="学习路径"><a href="#学习路径" class="headerlink" title="学习路径"></a>学习路径</h2><blockquote><p>Python 的教育资源已经井喷了，这里选择我自己学习后还不错的资源</p></blockquote><p><a href="https://www.bilibili.com/video/av73007133/" target="_blank" rel="noopener">Python for Beginners</a> - 微软官方推出的 Python 视频教程，一共 44 集但平均 5-6 分钟一集，入门 Python 锻炼英语的不二选择</p><p><a href="https://www.bilibili.com/video/BV1WT4y137cD" target="_blank" rel="noopener">More Python for Beginners</a> - 微软官方 Python 进阶教程，继续学习</p><p><a href="https://github.com/selfteaching/the-craft-of-selfteaching" target="_blank" rel="noopener">自学是门手艺</a> - 作者李笑来，抛开传奇经历和流言蜚语，这本以 Python 为自学切入点的开源书写得非常用心，传授的不仅局限于 Python，还包括更重要的自学能力，以及对于人生的思考</p><p><a href="https://www.liaoxuefeng.com/wiki/1016959663602400" target="_blank" rel="noopener">Python 教程</a> - 作者廖雪峰，之前很多人的 Linux 启蒙来自于《鸟哥的 Linux 私房菜》，那么 Python 2 时代也大概率会阅读廖雪峰的文章，适合有一定 Python 基础的人</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://docs.python.org/3/tutorial/index.html" target="_blank" rel="noopener">The Python Tutorial</a></p>]]></content>
    
    <summary type="html">
    
      Python学习路径
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Google Chrome 浏览器插件和油猴脚本推荐</title>
    <link href="https://wsgzao.github.io/post/chrome-extensions/"/>
    <id>https://wsgzao.github.io/post/chrome-extensions/</id>
    <published>2020-05-05T03:59:49.000Z</published>
    <updated>2020-05-25T08:59:29.250Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191022143419.jpg" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>到了新加坡再也不用考虑科学上网的问题，加上 macOS 跨平台浏览器做得比较成熟的自然是 Google Chrome 和 Firefox，在 Windows 平台用了十几年的 Maxthon，期间也尝试过无数第三方浏览器，傲游浏览器努力改变着世界却也渐行渐远，有着同样命运的应该还包括我从 M8 用到 MX2 的魅族吧。回到 Google Chrome 浏览器插件和油猴脚本推荐正题，Google Chrome 除了最重要的快以外，更重要的是 Chrome Web Store 上一系列好用插件，我很喜欢 Chrome 简单纯粹的设计和极致的性能。在插件的推荐上分为 <code>通用</code> 和 <code>开发者</code> 两部分来写方便区分，大部分 Chrome 可用的插件 Firefox 也同样适用，如果有遗漏或有更好用的同类型插件和脚本欢迎留言分享。</p><blockquote><p>Google Chrome 浏览器插件和油猴脚本推荐</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 05 月 25 日 - 增加彩云小译，Bilibili Evolved，anti-redirect，能不能好好说话，一键离线下载 +<br>2020 年 03 月 11 日 - 增加 Remu、GitHub Repository Size、计时器掌控者、Clipboard History Pro<br>2019 年 10 月 09 日 - 更新 OneTab、简悦、广告终结者、Copyfish、Awesome screenshot and screen video<br>2019 年 08 月 20 日 - 添加自用部分插件和脚本，增加谷粒 Chrome 插件英雄榜<br>2019 年 08 月 01 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/chrome-extensions/">https://wsgzao.github.io/post/chrome-extensions/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://github.com/zhaoolee/ChromeAppHeroes" target="_blank" rel="noopener">谷粒 Chrome 插件英雄榜</a></p><p><a href="https://www.runningcheese.com/extensions" target="_blank" rel="noopener">Chrome Firefox 双修，2019 年度最喜欢浏览器拓展</a></p><p><a href="https://www.runningcheese.com/userscripts" target="_blank" rel="noopener">脚本里的 “赤兔”，2019 年度最喜欢油猴脚本</a></p><hr><h2 id="Chrome-插件推荐"><a href="#Chrome-插件推荐" class="headerlink" title="Chrome 插件推荐"></a>Chrome 插件推荐</h2><blockquote><p>以下链接大部分都是 Google Chrome Webstore，如果无法访问可以考虑从第三方下载到本地导入</p></blockquote><p><a href="https://chrome.google.com/webstore/category/extensions" target="_blank" rel="noopener">Chrome Web Store</a></p><p><a href="https://www.crx4chrome.com/" target="_blank" rel="noopener">Crx4Chrome</a></p><p><a href="https://chrome-extension-downloader.com/" target="_blank" rel="noopener">Chrome Extension Downloader</a></p><h3 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h3><p><a href="https://chrome.google.com/webstore/detail/simpleextmanager/kniehgiejgnnpgojkdhhjbgbllnfkfdk" target="_blank" rel="noopener">SimpleExtManager</a> - 我个人首推的管理插件小工具，对于插件控们一定灰常有帮助</p><p><a href="https://chrome.google.com/webstore/detail/ie-tab/hehijbfgiekmjfkfjpbkbammjbdenadd" target="_blank" rel="noopener">IE Tab</a> - 为了向下兼容那些没有与时俱进的网站，大多数时候我们只能选择妥协</p><p><a href="https://www.one-tab.com/" target="_blank" rel="noopener">OneTab</a> - 宣称节约 95% 内存的前提是静态网页，类似一个临时书签的记忆功能，习惯保留海量页面的朋友可以试试</p><p><a href="https://chrome.google.com/webstore/detail/undo-closed-tabs-button/ieehkmoiljghfkejgahoheemdjpdinml" target="_blank" rel="noopener">Undo Closed Tabs Button</a> - Google 原生取消了恢复网页的按钮的设计，你可以通过快捷键或者历史记录恢复，但这个小工具确实可以帮到我</p><p><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener">Tampermonkey</a> - 老牌的油猴管理工具，和 Violentmonkey 暴力猴相比哪款用得顺手选择哪个</p><p><a href="https://chrome.google.com/webstore/detail/cdonnmffkdaoajfknoeeecmchibpmkmg?hl=en" target="_blank" rel="noopener">沙拉查词 - 聚合词典划词翻译</a> - 我个人觉得这是目前 Chrome 划词翻译插件中体验最好的</p><p><a href="https://chrome.google.com/webstore/detail/grammarly-for-chrome/kbfnbcaeplbcioakkpcpgfkobkghlhen" target="_blank" rel="noopener">Grammarly for Chrome</a> - 智能检查英文语法拼写错误，在 Web 写邮件和文档时会发现它的重要价值</p><p><a href="https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc" target="_blank" rel="noopener">Evernote Web Clipper</a> - 中文称为印象笔记，平时会把优质的内容保存到 Evernote 中，虽然没有 OneNote 功能强大但胜在简单方便可跨平台同步</p><p><a href="https://chrome.google.com/webstore/detail/simpread-reader-view/ijllcpnolfcooahcekpamkbidhejabll" target="_blank" rel="noopener">简悦 - SimpRead</a> - 沉浸式阅读模式，还支持丰富的导出功能比如 Markdown/PDF 等</p><p><a href="https://chrome.google.com/webstore/detail/lingocloud-web-translatio/jmpepeebcbihafjjadogphmbgiffiajh/related?hl=zh-CN" target="_blank" rel="noopener">彩云小译 - 网页翻译插件</a> - 号称超越 Google 翻译和 DeepL？</p><p><a href="https://chrome.google.com/webstore/detail/enable-right-click/gpeddepmnbmkjfnhifmggnjdggibjjkf" target="_blank" rel="noopener">破解右键锁</a> - 比 Enable Copy 更加强大，不过大众点评的评论好像无解</p><p><a href="https://clipboardextension.com/" target="_blank" rel="noopener">Clipboard History Pro</a> - 借助 Google Chrome 浏览器扩展记录剪贴板历史的小工具</p><p><a href="https://chrome.google.com/webstore/detail/mbklgpngoohbbagagdfoccaclpdhgihd" target="_blank" rel="noopener">爱搜资源云盘助手</a> - 插件方便是方便，但是可能会涉及用户隐私数据，如果介意需要慎用类似插件</p><p><a href="https://chrome.google.com/webstore/detail/awesome-screenshot-screen/nlipoenfbbikpbjkfpfillcgkoblgpmj" target="_blank" rel="noopener">Awesome screenshot and screen video</a> - 网页截图 + 录屏，代替 FireShot</p><p><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="noopener">Proxy SwitchyOmega</a> - 轻松快捷地管理和切换多个代理设置</p><p><a href="https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm" target="_blank" rel="noopener">uBlock Origin</a> - 类似 Adblock Plus(ABP)，用于代替一款高效的网络请求过滤工具，占用极低的内存和 CPU，推荐额外添加适合自己的规则效果更佳，国内用户可以安装配置更简单的广告终结者</p><h3 id="开发者"><a href="#开发者" class="headerlink" title="开发者"></a>开发者</h3><p><a href="https://github.com/jaywcjlove/oscnews" target="_blank" rel="noopener">oscnews</a> - jaywcjlove 制作的新插件，目前我的主要用途是辅助新建标签页浏览开源中国更新资讯和 GitHub 趋势榜，从作者 TODO 计划来看，Github Start 管理和集成 octotree 部分功能都非常吸引人，加油</p><p><a href="https://github.com/zenghongtu/Remu" target="_blank" rel="noopener">Remu</a> - 通过标签分类来对 GitHub Stars 进行高效管理，借助 Gists 强大能力实现跨平台的数据同步</p><p><a href="https://github.com/harshjv/github-repo-size" target="_blank" rel="noopener">GitHub Repository Size</a> - 顾名思义，可以查看 GitHub 中某个 Repo 的大小，是一个小巧实用的工具</p><p><a href="https://github.com/zxlie/FeHelper" target="_blank" rel="noopener">FeHelper</a> - WEB 前端助手，All In One 的一个工具，包含多个独立小应用，比如：Json 工具、代码美化、代码压缩、二维码、Postman、markdown、网页油猴、便签笔记、信息加密与解密、随机密码生成、Crontab 等等</p><p><a href="https://github.com/openstyles/stylus" target="_blank" rel="noopener">Stylus</a> - Stylus 是基于 Stylish 调整网页外观的用户样式管理器</p><p><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc" target="_blank" rel="noopener">Octotree</a> - 在 GitHub 上显示代码树</p><p><a href="http://www.pullywood.com/ImageAssistant/" target="_blank" rel="noopener">ImageAssistant</a> - 国人开发的图片助手 (ImageAssistant) 批量图片下载器</p><p><a href="https://github.com/BlackGlory/copycat" target="_blank" rel="noopener">Copycat</a> - 我主要是为了复制网页直接转化为 markdown</p><p><a href="https://ocr.space/copyfish" target="_blank" rel="noopener">Copyfish</a> - 免费版已经支持中文和英文的 OCR 在线识别，够用且准确</p><p><a href="https://github.com/oppoic/JSONViewer/" target="_blank" rel="noopener">JSONViewer</a> - 一个页面格式化多条 JSON，提升工作效率</p><p><a href="https://github.com/gildas-lormeau/SingleFile" target="_blank" rel="noopener">SingleFile</a> - 将完整的页面保存到一个 HTML 文件中</p><p><a href="https://www.uku.im" target="_blank" rel="noopener">Unblock Youku</a> - 我平时很少看国内在线视频，不过这款良心插件已经坚持了 5 年，作者不容易。如果速度不稳定大家也可以购买国内的阿里云、腾讯云等，我始终相信云即未来</p><p><a href="https://github.com/vinta/pangu.js" target="_blank" rel="noopener">为什么你们就是不能加个空格呢？</a> - 对文字排版有强迫症的福音吧</p><p><a href="https://github.com/sciooga/v2ex-plus" target="_blank" rel="noopener">v2ex plus</a> - 可能是 v2ex 最好用的扩展</p><h2 id="油猴脚本推荐"><a href="#油猴脚本推荐" class="headerlink" title="油猴脚本推荐"></a>油猴脚本推荐</h2><blockquote><p>我个人的选择是 TemperMoneky &gt; ViolentMoneky</p></blockquote><p><a href="https://www.tampermonkey.net" target="_blank" rel="noopener">Tampermonkey</a> - Tampermonkey 是一款免费的浏览器扩展和最为流行的用户脚本管理器</p><p><a href="https://greasyfork.org/zh-CN" target="_blank" rel="noopener">Greasy Fork</a> - 这里是一个提供用户脚本的网站</p><h3 id="通用-1"><a href="#通用-1" class="headerlink" title="通用"></a>通用</h3><p><a href="https://greasyfork.org/zh-CN/scripts/329484" target="_blank" rel="noopener">豆瓣资源下载大师</a> - 装这一个脚本就够了！可能是你遇到的最好的豆瓣增强脚本</p><p><a href="https://greasyfork.org/zh-CN/scripts/396377" target="_blank" rel="noopener">一键离线下载 +</a> - 一键自动将磁链、电驴或其他下载资源离线下载至网盘，自动将磁力链接转换为种子。</p><p><a href="https://greasyfork.org/zh-CN/scripts/370634" target="_blank" rel="noopener">懒人专用，自用组合型多功能脚本</a> - 为避免争议，各位可以阅读脚本描述后决定是否使用</p><p><a href="https://greasyfork.org/zh-CN/scripts/372673" target="_blank" rel="noopener">计时器掌控者</a> - 控制网页计时器速度 | 加速跳过页面计时广告 | 视频快进（慢放）| 跳过广告 | 支持几乎所有网页</p><p><a href="https://github.com/the1812/Bilibili-Evolved" target="_blank" rel="noopener">Bilibili Evolved</a> - 强大的哔哩哔哩增强脚本: 下载视频, 音乐, 封面, 弹幕 / 简化直播间, 评论区, 首页 / 自定义顶栏, 删除广告, 夜间模式 / 触屏设备支持</p><p><a href="https://greasyfork.org/zh-CN/scripts/25718" target="_blank" rel="noopener">解除 B 站区域限制</a> - 通过替换获取视频地址接口的方式，实现解除 B 站区域限制</p><p><a href="https://github.com/itorr/nbnhhsh" target="_blank" rel="noopener">能不能好好说话</a> - 拼音首字母缩写翻译工具</p><p><a href="https://tiansh.github.io/yawf/" target="_blank" rel="noopener">YAWF</a> - 新浪微博根据关键词、作者、话题、来源等过滤微博，清理版面，以及其他改造功能</p><p><a href="https://github.com/axetroy/anti-redirect" target="_blank" rel="noopener">anti-redirect</a> - 去除各搜索引擎 / 常用网站的重定向</p><p><a href="https://greasyfork.org/zh-CN/scripts/367724" target="_blank" rel="noopener">知乎、简书、csdn、实验楼剪切板消毒</a> - 去除剪贴板小尾巴</p><h3 id="开发者-1"><a href="#开发者-1" class="headerlink" title="开发者"></a>开发者</h3><blockquote><p>不解释，大伙都是为了努力学习新知识，但你值得拥有一种更舒服的姿势</p></blockquote><p><a href="https://greasyfork.org/zh-CN/scripts/23840" target="_blank" rel="noopener">大人的 Greasyfork</a></p><p><a href="https://sleazyfork.org/zh-CN/scripts/25781" target="_blank" rel="noopener">JAV 老司机</a></p><p><a href="https://greasyfork.org/zh-CN/scripts/23316" target="_blank" rel="noopener">琉神转</a></p>]]></content>
    
    <summary type="html">
    
      Google Chrome浏览器插件和油猴脚本推荐
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Redfish 下一代数据中心管理标准详解和实践</title>
    <link href="https://wsgzao.github.io/post/redfish/"/>
    <id>https://wsgzao.github.io/post/redfish/</id>
    <published>2020-04-28T06:59:49.000Z</published>
    <updated>2020-05-04T03:58:51.588Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200428185557.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>纵观现在的服务器从以前闭源的管理系统，如 DELL 的 OpenManage 和 iDRAC，华为的 iBMC，惠普的 OneView 和 iLO，联想的 XClarity 和 XClarity Controller 嵌入式管理，IMM2（收购自 IBM 的 SystemX PC Server 系列）等等，都在积极拥抱开源自动化工具如 Ansible 等开源软件，在这种情况下被称作下一代数据中心管理标准的 Redfish 出现了。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 04 月 28 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/redfish/">https://wsgzao.github.io/post/redfish/</a></p><hr><h2 id="Redfish-简介"><a href="#Redfish-简介" class="headerlink" title="Redfish 简介"></a>Redfish 简介</h2><p>DMTF’s Redfish® is a standard designed to deliver simple and secure management for converged, hybrid IT and the Software Defined Data Center (SDDC). Both human readable and machine capable, Redfish leverages common Internet and web services standards to expose information directly to the modern tool chain.</p><p><a href="https://www.dmtf.org/standards/redfish" target="_blank" rel="noopener">https://www.dmtf.org/standards/redfish</a></p><p><code>DMTF</code> 的 <code>Redfish®</code> 是一个标准 <code>API</code>，旨在为融合、混合 <code>IT</code> 和软件定义数据中心（<code>SDDC</code>）提供简单和安全管理。</p><p>在 <code>Redfish</code> 出现之前，现代数据中心环境中缺乏互操作管理标准。随着机构越来越青睐于大规模的解决方案，传统标准不足以成功管理大量简单的多节点服务器或混合基础设施。<code>IPMI</code> 是一种较早的带外管理标准，仅限于 “最小公共集” 命令集（例如，开机 / 关机 / 重启、温度值、文本控制台等），由于供应商扩展在所有平台上并不常见，导致了客户常用的功能集减少。许多用户开发了自己的紧密集成工具，但是也不得不依赖带内管理软件。</p><p>而对于企业级用户来说，设备都是上千台，其需要统一的管理界面，就要对接不同供应商的 <code>API</code>。当基本 <code>IPMI</code> 功能已经不太好满足大规模 <code>Scale-out</code> 环境时，如何以更便捷的方式调用服务器高级管理功能就是一个新的需求。</p><p>为了寻求一个基于广泛使用的工具来加快发展的现代接口，现如今，客户需要一个使用互联网和 <code>web</code> 服务环境中常见的协议、结构和安全模型定义的 <code>API</code>。</p><p><code>Redfish</code> 可扩展平台管理 <code>API</code>（<code>The Redfish Scalable Platforms Management API</code>）是一种新的规范，其使用 <code>RESTful</code> 接口语义来访问定义在模型格式中的数据，用于执行带外系统管理 （<code>out of band systems management</code>）。其适用于大规模的服务器，从独立的服务器到机架式和刀片式的服务器环境，而且也同样适用于大规模的云环境。</p><p><code>Redfish</code> 的第 <code>1</code> 版侧重于服务器，为 <code>IPMI-over-LAN</code> 提供了一个安全、多节点的替代品。随后的 <code>Redfish</code> 版本增加了对网络接口(例如 <code>NIC</code>、<code>CNA</code> 和 <code>FC HBA</code>)、<code>PCIe</code> 交换、本地存储、<code>NVDIMM</code>、多功能适配器和可组合性以及固件更新服务、软件更新推送方法和安全特权映射的管理。此外，<code>Redfish</code> 主机接口规范允许在操作系统上运行应用程序和工具，包括在启动前（固件）阶段与 <code>Redfish</code> 管理服务沟通。</p><p>在定义 <code>Redfish</code> 标准时，协议与数据模型可分开并允许独立地修改。以模式为基础的数据模型是可伸缩和可扩展的，并且随着行业的发展，它将越来越具有人类可读性定义。</p><h2 id="Redfish-应用场景"><a href="#Redfish-应用场景" class="headerlink" title="Redfish 应用场景"></a>Redfish 应用场景</h2><p>可能上面那一大段晦涩的介绍描述让你难以理解 <code>Redfish</code> 的用处，简而言之，如今大多数服务器厂商（比如 <code>Supermicro</code>、<code>Dell</code> 等等）都会自带 <code>IPMI</code> 系统，这个系统是独立装在主板芯片上，用户可以通过浏览器远程控制服务器，比如开关、装系统、进入服务器终端等等，而不用跑到机房忍受过高或过低的温度、忍受服务器嘈杂的声音、忍受蹩脚的显示器……</p><p>传统的 <code>IPMI</code> 是带来了很多的便捷，但是当服务器规模变大后，单一服务器的管理已经满足不了需求，用户期望能够批量管理服务器，比如笔者想一次性给 <code>100</code> 个服务器安装系统，并且这 <code>100</code> 个服务器并不都是同一厂商，不同厂商的 <code>IPMI</code> 操作都不一样，比如 <code>Dell</code> 是 <code>iDRAC</code>，你还需要专门学习 <code>iDRAC</code> 使用和各种对接，这会带来很多困扰。而 <code>Redfish</code> 标准的出现彻底改变这种情况，它是凌驾于所有服务器之上的一个标准，对服务器的基本操作都是统一的，并且是基于 <code>Restful API</code> 的方式实现。所以客户可以利用 <code>ansible</code> 等工具轻松实现自动化批量管理大规模服务器。</p><p>服务器供应商都希望成为 <code>Redfish</code> 生态系统的一份子，但他们不想放弃对自家的服务器的管控机制。因此，他们会在 <code>Redfish</code> 规定范围之外，持续强化其 <code>API</code> 支持的功能，比如 <code>Dell</code> 的 <code>Redfish</code> 接口就要比 <code>Supermicro</code> 多很多，强大很多。</p><h2 id="为什么选择-REST、HTTP-以及-JSON"><a href="#为什么选择-REST、HTTP-以及-JSON" class="headerlink" title="为什么选择 REST、HTTP 以及 JSON?"></a>为什么选择 REST、HTTP 以及 JSON?</h2><p>Redfish 将语言支持与普遍存在的 REST、HTTP 和 JSON 相结合，使 IT 管理任务能够与其他 IT 和 dev/ops 任务的技能集和工具链结合使用。随着云生态系统采用 REST，RESTful 协议正在迅速取代 SOAP，web  API 接口也紧随其后。RESTful 协议比 SOAP 学习起来要快得多，而且它具有数据模式（因为 REST 严格来说不是协议）的简单性，可以直接映射到 HTTP 操作。</p><p>HTTP 以其常用的安全模型和网络配置为管理员所熟知。</p><p>JSON 正迅速成为现代数据格式。它本质上是人类可读的，比 XML 更简洁，拥有大量现代语言支持，是 web 服务 API 中增长最快的数据格式。</p><p>对于嵌入式可管理性环境，JSON 还有一个额外的优势：大多数基板管理控制器（BMC）已经支持 web 服务器，通过浏览器来管理服务器已经非常普遍（通常通过 Java 脚本驱动的接口）。通过在 Redfish 中使用 JSON，可以在浏览器中直接查看来自 Redfish 服务的数据，从而确保数据和编程接口在语义和价值上是一致的。</p><p>除了 REST、HTTP 和 JSON 之外，Redfish 还采用常见的 OData v4 约定来描述模式、URL 约定和命名，以及 JSON 有效负载中常见属性的结构。越来越多的通用客户端库、应用程序和工具生态系统使用 Redfish。</p><p>它有多简单? 下面显示了使用 Redfish 从服务器检索序列号的示例 Python 代码：此示例中的输出如下所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rawData= urllib.urlopen(‘http://192.168.1.135/redfish/v1/Systems/1’) </span><br><span class="line">jsonData=json.loads(rawData)</span><br><span class="line">print(jsonData[‘SerialNumber’])</span><br><span class="line"></span><br><span class="line">1A87CA442K</span><br></pre></td></tr></table></figure><h2 id="Redfish-实践"><a href="#Redfish-实践" class="headerlink" title="Redfish 实践"></a>Redfish 实践</h2><blockquote><p>更多硬件厂商的 Redfish API 接口可以浏览参考文章</p></blockquote><p><a href="https://pythonhosted.org/python-redfish/readme.html" target="_blank" rel="noopener">The python-redfish project</a></p><p><a href="https://bbs.huaweicloud.com/forum/thread-40434-1-1.html" target="_blank" rel="noopener">Python 环境 redfish 接口获取泰山服务器和鲲鹏 CPU 信息</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">pip install python-redfish</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redfish</span><br><span class="line"> </span><br><span class="line">login_host=<span class="string">"https://10.93.20.10"</span></span><br><span class="line">login_account=<span class="string">"ADMIN"</span></span><br><span class="line">login_password=<span class="string">"ADMIN"</span></span><br><span class="line">REDFISH_OBJ = redfish.redfish_client(base_url=login_host, username=login_account, password=login_password, default_prefix=<span class="string">'/redfish/v1'</span>)</span><br><span class="line">REDFISH_OBJ.login(auth=<span class="string">"session"</span>)</span><br><span class="line">response = REDFISH_OBJ.get(<span class="string">"/redfish/v1/Systems/1"</span>, <span class="keyword">None</span>)</span><br><span class="line">print(response)</span><br><span class="line">REDFISH_OBJ.logout()</span><br></pre></td></tr></table></figure><blockquote><p>基于 Redfish 你可以获取详细的硬件资产信息与 CMDB 联动</p></blockquote><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200428214055.png" alt=""></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.dmtf.org/standards/redfish" target="_blank" rel="noopener">DMTF’s Redfish</a></p><p><a href="https://www.dmtf.org/sites/default/files/Redfish_tech_note_converged_hybrid_it.pdf" target="_blank" rel="noopener">Redfish 融合、混合 IT 的简单和安全管理</a></p><p><a href="https://www.dmtf.org/sites/default/files/DSP2044%20Redfish%20%E7%99%BD%E7%9A%AE%E4%B9%A6%201.0.0.pdf" target="_blank" rel="noopener">Redfish 白皮书</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAwODExNjI3NA==&amp;mid=2649775148&amp;idx=1&amp;sn=9638581928f7fa98714c1ad24fafccdb&amp;chksm=83773d71b400b467a9b72cbe8ae433393ab4e9f0b306c309d757ea08ba7bb4e27ddc24943951#rd" target="_blank" rel="noopener">Redfish：下一代数据中心管理标准</a></p><p><a href="https://www.tony-yin.site/2019/04/20/Redfish_Introduction/" target="_blank" rel="noopener">Redfish 详解</a></p><p><a href="https://www.supermicro.com/manuals/other/RedfishRefGuide.pdf" target="_blank" rel="noopener">Supermicro Redfish Reference Guide</a></p><p><a href="https://www.dell.com/support/article/en-sg/sln310624/redfish-api-with-dell-integrated-remote-access-controller?lang=en" target="_blank" rel="noopener">Redfish API with Dell integrated Remote Access Controller</a></p><p><a href="https://support.huawei.com/enterprise/zh/doc/EDOC1000126991?idPath=7919749|9856522|9856629|250783947" target="_blank" rel="noopener">华为服务器 iBMC Redfish 接口说明</a></p>]]></content>
    
    <summary type="html">
    
      Redfish下一代数据中心管理标准详解和实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>SWAP 常见问题分析和性能调优配置实践小结</title>
    <link href="https://wsgzao.github.io/post/swap/"/>
    <id>https://wsgzao.github.io/post/swap/</id>
    <published>2020-04-27T06:59:49.000Z</published>
    <updated>2020-04-26T09:44:47.052Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>SWAP 内存交换分区对大家来说是一个经常被忽视的细节，如果大家对 SWAP 配置不是很熟悉可以参考文章内提到的 Red Hat SWAP SPACE 最佳实践配置链接。本文主要分享 SWAP 的基础知识和优化建议，以及如何使用 ansible 优雅的关闭和增加 SWAP 交换分区等实践心得。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 04 月 27 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/swap/">https://wsgzao.github.io/post/swap/</a></p><hr><h2 id="Red-Hat-SWAP-SPACE"><a href="#Red-Hat-SWAP-SPACE" class="headerlink" title="Red Hat SWAP SPACE"></a>Red Hat SWAP SPACE</h2><blockquote><p>Red Hat 官方给出的配置建议已经很详细了，我不再做多余介绍</p></blockquote><p>Swap space in Linux is used when the amount of physical memory (RAM) is full. If the system needs more memory resources and the RAM is full, inactive pages in memory are moved to the swap space. While swap space can help machines with a small amount of RAM, it should not be considered a replacement for more RAM. Swap space is located on hard drives, which have a slower access time than physical memory. Swap space can be a dedicated swap partition (recommended), a swap file, or a combination of swap partitions and swap files. Note that Btrfs does not support swap space.</p><p>In years past, the recommended amount of swap space increased linearly with the amount of RAM in the system. However, modern systems often include hundreds of gigabytes of RAM. As a consequence, recommended swap space is considered a function of system memory workload, not system memory.</p><p>m Swap Space” illustrates the recommended size of a swap partition depending on the amount of RAM in your system and whether you want sufficient memory for your system to hibernate. The recommended swap partition size is established automatically during installation. To allow for hibernation, however, you need to edit the swap space in the custom partitioning stage.</p><p>Recommendations in Table 15.1, “Recommended System Swap Space” are especially important on systems with low memory (1 GB and less). Failure to allocate sufficient swap space on these systems can cause issues such as instability or even render the installed system unbootable.</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200426173540.png" alt=""></p><p>At the border between each range listed in Table 15.1, “Recommended System Swap Space”, for example a system with 2 GB, 8 GB, or 64 GB of system RAM, discretion can be exercised with regard to chosen swap space and hibernation support. If your system resources allow for it, increasing the swap space may lead to better performance. A swap space of at least 100 GB is recommended for systems with over 140 logical processors or over 3 TB of RAM.</p><p>Note that distributing swap space over multiple storage devices also improves swap space performance, particularly on systems with fast drives, controllers, and interfaces.</p><p><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/storage_administration_guide/ch-swapspace" target="_blank" rel="noopener">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/storage_administration_guide/ch-swapspace</a></p><h2 id="SWAP-预备知识"><a href="#SWAP-预备知识" class="headerlink" title="SWAP 预备知识"></a>SWAP 预备知识</h2><h3 id="什么是-swap"><a href="#什么是-swap" class="headerlink" title="什么是 swap"></a>什么是 swap</h3><p>swap 当我们指的名词的时候，它可以是一个分区，也可以是一个文件，是操作系统中一个存放从内存中置换出的数据的地方。<br>当我们指的是一个动词时候，代表的是从物理内存交换数据到 swap 分区这个动作。</p><h3 id="为什么会-swap"><a href="#为什么会-swap" class="headerlink" title="为什么会 swap"></a>为什么会 swap</h3><ol><li>当物理内存不够用时候，会根据特定的算法，把一部分内存交换到 swap 分区(此时还会伴随着高 IO)。但是并不是所有的内存都可以被交换到 swap 分区。</li><li>kswapd 进程周期性对内存进行检查，如果发现高于水位线，则触发 swap，此举是为了不让系统剩余内存很少，防止出现突然的大内存申请。这块暂不深入讲解，后续再补充。</li></ol><h3 id="swap-的到底是什么"><a href="#swap-的到底是什么" class="headerlink" title="swap 的到底是什么"></a>swap 的到底是什么</h3><p>首先我们要知道，内存管理将内存分为 active 和 inactive，进程用户空间使用的映射包括了匿名映射 (anon) 和文件映射(file)。所有一共有 active anon,inactive anon,active file,inactive file。对于文件映射，由于本身是磁盘空间中的文件，所有它不会被 swap，当需要释放时候，脏数据直接写回磁盘，其他数据直接释放即可。内存交换到 swap，肯定是交换不活跃的数据，所有，inactive anon 是最主要的被交换的内存。那么对于操作系统来说，当我需要回收内存时候，你说它是针对文件映射好，还是针对匿名映射好，这就涉及到了一个参数：swapiness</p><h3 id="swapiness"><a href="#swapiness" class="headerlink" title="swapiness"></a>swapiness</h3><p>swapiness 是设置内存回收时候，更倾向于回收文件映射还是匿名映射，在 / proc/sys/vm/swappiness 设置值。对于 swapiness=100，那么两者之间的权重是一致的，值越小，越倾向于回收文件映射，不过如果达到系统高水位线，还是会 swap，除非直接使用 swapoff -a 等手段关闭系统 swap。</p><h3 id="swap-的好坏"><a href="#swap-的好坏" class="headerlink" title="swap 的好坏"></a>swap 的好坏</h3><p>swap 的好处是当内存不足时候，可以将一部分交换出去，不会触发 oom-killer。跑得慢总比不能跑好。<br>swap 的坏处是交换时候，会触发高 IO，同时会降低系统的性能。对于我们隔离做的不好的时候，会影响到其他应用的性能。</p><h2 id="swap-查看方法"><a href="#swap-查看方法" class="headerlink" title="swap 查看方法"></a>swap 查看方法</h2><p>一个工具往往具有多种用途，但是本文只说明针对 swap 问题</p><table><thead><tr><th>工具名称</th><th>使用姿势</th><th>采集指标来源</th></tr></thead><tbody><tr><td>free</td><td>free -h</td><td>/proc/meminfo</td></tr><tr><td>top</td><td>按 f，选择 swap</td><td>/proc/$pid/smaps</td></tr><tr><td>vmstat</td><td>vmstat</td><td>/proc/meminfo</td></tr><tr><td>iotop</td><td>iotop</td><td></td></tr><tr><td>iostat</td><td>iostat -xdm</td><td></td></tr><tr><td>pidstat</td><td>pidstat -d 1</td><td>/proc/$pid/io</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过此命令查看内存被哪些进程占用（单位是 MByte）</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">cd</span> /proc;ls | grep <span class="string">"^[0-9]"</span> | awk <span class="string">'$0 &gt;100'</span>` ;<span class="keyword">do</span> awk <span class="string">'/Swap:/&#123;a=a+$2&#125;END&#123;print'</span><span class="string">"<span class="variable">$i</span>"</span><span class="string">',a/1024"M"&#125;'</span> /proc/<span class="variable">$i</span>/smaps ;<span class="keyword">done</span> 2&gt;&amp;1 | sort -k2nr | head</span><br><span class="line"></span><br><span class="line">3131 102.676M</span><br><span class="line">3127 94.4414M</span><br><span class="line">3136 69.9648M</span><br><span class="line">3129 61.1445M</span><br><span class="line">3097 50.7695M</span><br><span class="line">3086 47.0078M</span><br><span class="line">3119 46.4102M</span><br><span class="line">3106 42.4648M</span><br><span class="line">3094 37.5547M</span><br><span class="line">3092 36.8398M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注：以上结果输出 PID 与内存占用大小，通过 PID 可以找到对应进程</span></span><br></pre></td></tr></table></figure><h2 id="常见的-swap-优化思路"><a href="#常见的-swap-优化思路" class="headerlink" title="常见的 swap 优化思路"></a>常见的 swap 优化思路</h2><blockquote><p>以 K8s 为代表的容器编排已经给出了比较简单粗暴的分类</p></blockquote><ol><li>有状态(Stateful)</li><li>无状态(Stateless)</li></ol><p>针对有状态的服务比如 Database 数据库，Cache 缓存等，为了减少核心服务出现 Out of Memory（OOM）的情况，合理的使用 swap 并做好监控是非常有必要的。</p><p>针对无状态的服务比如 K8s，ElasticSearch 等，禁用 swap 的核心原因都是出于性能的考虑，但也需要注意配置内存的限制以及告警策略</p><p><a href="https://discuss.kubernetes.io/t/swap-off-why-is-it-necessary/6879" target="_blank" rel="noopener">Swap Off - why is it necessary?</a></p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration-memory.html" target="_blank" rel="noopener">Set up Elasticsearch » Important System Configuration » Disable swapping</a></p><h3 id="swap-对性能的影响"><a href="#swap-对性能的影响" class="headerlink" title="swap 对性能的影响"></a>swap 对性能的影响</h3><p>这是显而易见的，但是还是有必要说的更清楚一点：内存交换 到磁盘对服务器性能来说是 <em> 致命 </em> 的。想想看：一个内存操作必须能够被快速执行。</p><p>如果内存交换到磁盘上，一个 100 微秒的操作可能变成 10 毫秒。再想想那么多 10 微秒的操作时延累加起来。不难看出 swap 对于性能是多么可怕。</p><p>最好的办法就是在你的操作系统中完全禁用 swap。这样可以暂时禁用：</p><pre><code>sudo swapoff -a</code></pre><p>如果需要永久禁用，你可能需要修改 <code>/etc/fstab</code> 文件，这要参考你的操作系统相关文档。</p><p>如果你并不打算完全禁用 swap，也可以选择降低 <code>swappiness</code> 的值。 这个值决定操作系统交换内存的频率。 这可以预防正常情况下发生交换，但仍允许操作系统在紧急情况下发生交换。</p><p>对于大部分 Linux 操作系统，可以在 <code>sysctl</code> 中这样配置：</p><pre><code>vm.swappiness = 1</code></pre><p><code>swappiness</code> 设置为 <code>1</code> 比设置为 <code>0</code> 要好，因为在一些内核版本 <code>swappiness</code> 设置为 <code>0</code> 会触发系统 OOM-killer（注：Linux 内核的 Out of Memory（OOM）killer 机制）。</p><h3 id="vm-swappiness-优化"><a href="#vm-swappiness-优化" class="headerlink" title="vm.swappiness 优化"></a>vm.swappiness 优化</h3><p>swappiness 的值的大小对如何使用 swap 分区是有着很大的联系的。swappiness=0 的时候表示最大限度使用物理内存，然后才是 swap 空间，swappiness＝100 的时候表示积极的使用 swap 分区，并且把内存上的数据及时的搬运到 swap 空间里面。linux 的基本默认设置为 60，具体如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/sys/vm/swappiness</span><br><span class="line">60</span><br></pre></td></tr></table></figure><p>也就是说，你的内存在使用到 100-60=40% 的时候，就开始出现有交换分区的使用。大家知道，内存的速度会比磁盘快很多，这样子会加大系统 io，同时造的成大量页的换进换出，严重影响系统的性能，所以我们在操作系统层面，要尽可能使用内存，对该参数进行调整。</p><blockquote><p>临时调整 swap，这只是临时调整的方法，重启后会回到默认设置的</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置</span></span><br><span class="line">sysctl vm.swappiness=1</span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">cat /proc/sys/vm/swappiness</span><br><span class="line">1</span><br></pre></td></tr></table></figure><blockquote><p>永久生效 swap 配置</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 要想永久调整的话，需要将在 / etc/sysctl.conf 修改，加上：</span></span><br><span class="line">vim /etc/sysctl.conf</span><br><span class="line">vm.swappiness=1</span><br><span class="line"><span class="comment"># 刷新生效</span></span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h2 id="关闭和开启-swap"><a href="#关闭和开启-swap" class="headerlink" title="关闭和开启 swap"></a>关闭和开启 swap</h2><blockquote><p>使用 ansible 实现关闭 swap，config_swap_off.yml</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">- hosts:</span> <span class="string">all</span></span><br><span class="line"><span class="attr">  become:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">no</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Disable</span> <span class="string">SWAP</span> <span class="string">in</span> <span class="string">fstab</span></span><br><span class="line"><span class="attr">      replace:</span></span><br><span class="line"><span class="attr">        path:</span> <span class="string">/etc/fstab</span></span><br><span class="line"><span class="attr">        regexp:</span> <span class="string">'^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'</span></span><br><span class="line"><span class="attr">        replace:</span> <span class="string">'#\1\2\3swap\4'</span></span><br><span class="line"><span class="attr">        backup:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Disable</span> <span class="string">SWAP</span></span><br><span class="line"><span class="attr">      shell:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        swapoff -a</span></span><br></pre></td></tr></table></figure><blockquote><p>使用 ansible 实现开启 swap，config_swap_on.yml</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">- hosts:</span> <span class="string">all</span></span><br><span class="line"><span class="attr">  become:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">no</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Reenable</span> <span class="string">SWAP</span> <span class="string">in</span> <span class="string">fstab</span></span><br><span class="line"><span class="attr">      replace:</span></span><br><span class="line"><span class="attr">        path:</span> <span class="string">/etc/fstab</span></span><br><span class="line"><span class="attr">        regexp:</span> <span class="string">'^#(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'</span></span><br><span class="line"><span class="attr">        replace:</span> <span class="string">'\1\2\3swap\4'</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Enable</span> <span class="string">SWAP</span></span><br><span class="line"><span class="attr">      shell:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        swapon -a</span></span><br></pre></td></tr></table></figure><h2 id="增加-swap"><a href="#增加-swap" class="headerlink" title="增加 swap"></a>增加 swap</h2><blockquote><p>制作 swap 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个 1G 的文件作为交换分区使用</span></span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/opt/swapfile bs=1M count=1000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化成 swap 分区</span></span><br><span class="line">mkswap /opt/swapfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开 swap 分区</span></span><br><span class="line">swapon /opt/swapfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 / etc/fstab 中增加一条记录如下</span></span><br><span class="line">/opt/swapfile    swap   swap defaults 0 0</span><br></pre></td></tr></table></figure><blockquote><p>制作 swap 分区</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个 swap 分区</span></span><br><span class="line">fdisk /dev/sdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分区</span></span><br><span class="line">n</span><br><span class="line">p</span><br><span class="line">default</span><br><span class="line">default</span><br><span class="line">...</span><br><span class="line"><span class="comment"># 修改分区 id 为 swap</span></span><br><span class="line">t</span><br><span class="line">82</span><br><span class="line"><span class="comment"># 写入分区表</span></span><br><span class="line">w</span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步内存和分区表信息</span></span><br><span class="line">partprobe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式化成 swap 分区</span></span><br><span class="line">mkswap /dev/sdb1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开 swap 分区</span></span><br><span class="line">swapon /dev/sdb1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 / etc/fstab 中增加一条记录如下</span></span><br><span class="line">/opt/swapfile    swap   swap defaults 0 0</span><br></pre></td></tr></table></figure><p>Tips: 如果本机已有 2G swap 交换分区, 又制作了一个 8G 的 swap 分区文件, 那么在执行 <code>swapon</code> 命令之后, swap 空间将为 10G(swap 空间会累加)</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/storage_administration_guide/ch-swapspace" target="_blank" rel="noopener">Red Hat SWAP SPACE</a></p>]]></content>
    
    <summary type="html">
    
      SWAP常见问题分析和性能调优配置实践小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Bash 命令语法和 Bash Cheat Sheet 中文速查表</title>
    <link href="https://wsgzao.github.io/post/bash/"/>
    <id>https://wsgzao.github.io/post/bash/</id>
    <published>2020-04-23T06:59:49.000Z</published>
    <updated>2020-04-24T06:50:20.036Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200424113948.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Bash Shell 作为 Linux 的指定合作伙伴我们已经再熟悉不过了，使用 Bash 可以快速编写简单的脚本方便我们的日常比如善用 <code>vim</code>，<code>awk</code> 和 <code>sed</code> 三剑客，也可以创建十分复杂的逻辑，当然我更愿意推荐你使用 Python 代替，之前一直没有刻意去整理因为平时常用的就这么几个，有些经验和技巧都是在实战中形成和记录，需要使用的时候知道大概用什么，查下相关语法和案例即可。</p><blockquote><p>Bash 命令语法和 Bash Cheat Sheet 中文速查表</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 04 月 23 日 - 增加阮一峰编写的《Bash 教程》<br>2019 年 10 月 29 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/bash/">https://wsgzao.github.io/post/bash/</a></p><hr><h2 id="Bash-脚本教程"><a href="#Bash-脚本教程" class="headerlink" title="Bash 脚本教程"></a>Bash 脚本教程</h2><blockquote><p>如果觉得阮一峰的 Bash 教程还意犹未尽，可以浏览参考文章中的 Bash 相关链接</p></blockquote><p>Bash 是 Linux 和 Mac 的默认 Shell（命令行环境），系统管理和服务器开发都需要它。虽然不难，但是语法很怪异，根本记不住，需要查手册。网上找不到简明扼要的中文教程，我很早就想整理一个，方便自己日后使用。</p><p>我一共写了 20 节，Bash 脚本编程的主要语法，都包括在内了，日常使用应该足够。点击 <a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">这个链接</a>，现在就可以自由阅读和访问。也欢迎初学者使用这个教程，学习 Bash。</p><p><a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">https://wangdoc.com/bash/</a></p><p><a href="http://www.ruanyifeng.com/blog/2020/04/bash-tutorial.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2020/04/bash-tutorial.html</a></p><h2 id="LearnBash-cn-sh"><a href="#LearnBash-cn-sh" class="headerlink" title="LearnBash-cn.sh"></a>LearnBash-cn.sh</h2><p><a href="https://learnxinyminutes.com/docs/zh-cn/bash-cn/" target="_blank" rel="noopener">https://learnxinyminutes.com/docs/zh-cn/bash-cn/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 脚本的第一行叫 shebang，用来告知系统如何执行该脚本:</span></span><br><span class="line"><span class="comment"># 参见： http://en.wikipedia.org/wiki/Shebang_(Unix)</span></span><br><span class="line"><span class="comment"># 如你所见，注释以 # 开头，shebang 也是注释。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示 “Hello world!”</span></span><br><span class="line"><span class="built_in">echo</span> Hello world!</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每一句指令以换行或分号隔开：</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'This is the first line'</span>; <span class="built_in">echo</span> <span class="string">'This is the second line'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 声明一个变量：</span></span><br><span class="line">Variable=<span class="string">"Some string"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面是错误的做法：</span></span><br><span class="line">Variable = <span class="string">"Some string"</span></span><br><span class="line"><span class="comment"># Bash 会把 Variable 当做一个指令，由于找不到该指令，因此这里会报错。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 也不可以这样：</span></span><br><span class="line">Variable= <span class="string">'Some string'</span></span><br><span class="line"><span class="comment"># Bash 会认为'Some string' 是一条指令，由于找不到该指令，这里再次报错。</span></span><br><span class="line"><span class="comment"># （这个例子中'Variable=' 这部分会被当作仅对'Some string' 起作用的赋值。）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用变量：</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$Variable</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$Variable</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'$Variable'</span></span><br><span class="line"><span class="comment"># 当你赋值 (assign) 、导出 (export)，或者以其他方式使用变量时，变量名前不加 $。</span></span><br><span class="line"><span class="comment"># 如果要使用变量的值， 则要加 $。</span></span><br><span class="line"><span class="comment"># 注意： '(单引号) 不会展开变量（即会屏蔽掉变量）。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在变量内部进行字符串代换 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;Variable/Some/A&#125;</span></span><br><span class="line"><span class="comment"># 会把 Variable 中首次出现的"some"替换成 “A”。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 变量的截取 </span></span><br><span class="line">Length=7</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;Variable:0:Length&#125;</span></span><br><span class="line"><span class="comment"># 这样会仅返回变量值的前 7 个字符 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 变量的默认值 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;Foo:-"DefaultValueIfFooIsMissingOrEmpty"&#125;</span></span><br><span class="line"><span class="comment"># 对 null (Foo=) 和空串 (Foo="") 起作用； 零（Foo=0）时返回 0</span></span><br><span class="line"><span class="comment"># 注意这仅返回默认值而不是改变变量的值 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内置变量：</span></span><br><span class="line"><span class="comment"># 下面的内置变量很有用 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Last program return value: $?"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Script's PID: $$"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Number of arguments: <span class="variable">$#</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Scripts arguments: <span class="variable">$@</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Scripts arguments separated in different variables: <span class="variable">$1</span> <span class="variable">$2</span>..."</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取输入：</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"What's your name?"</span></span><br><span class="line"><span class="built_in">read</span> Name <span class="comment"># 这里不需要声明新变量 </span></span><br><span class="line"><span class="built_in">echo</span> Hello, <span class="variable">$Name</span>!</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通常的 if 结构看起来像这样：</span></span><br><span class="line"><span class="comment"># 'man test' 可查看更多的信息 </span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$Name</span> -ne <span class="variable">$USER</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Your name isn't your username"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Your name is your username"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据上一个指令执行结果决定是否执行下一个指令 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Always executed"</span> || <span class="built_in">echo</span> <span class="string">"Only executed if first command fails"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Always executed"</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">"Only executed if first command does NOT fail"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 if 语句中使用 &amp;&amp; 和 || 需要多对方括号 </span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$Name</span> == <span class="string">"Steve"</span> ] &amp;&amp; [ <span class="variable">$Age</span> -eq 15 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"This will run if <span class="variable">$Name</span> is Steve AND <span class="variable">$Age</span> is 15."</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$Name</span> == <span class="string">"Daniya"</span> ] || [ <span class="variable">$Name</span> == <span class="string">"Zach"</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"This will run if <span class="variable">$Name</span> is Daniya OR Zach."</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 表达式的格式如下:</span></span><br><span class="line"><span class="built_in">echo</span> $(( 10 + 5 ))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 与其他编程语言不同的是，bash 运行时依赖上下文。比如，使用 ls 时，列出当前目录。</span></span><br><span class="line">ls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指令可以带有选项：</span></span><br><span class="line">ls -l <span class="comment"># 列出文件和目录的详细信息 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 前一个指令的输出可以当作后一个指令的输入。grep 用来匹配字符串。</span></span><br><span class="line"><span class="comment"># 用下面的指令列出当前目录下所有的 txt 文件：</span></span><br><span class="line">ls -l | grep <span class="string">"\.txt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重定向输入和输出（标准输入，标准输出，标准错误）。</span></span><br><span class="line"><span class="comment"># 以 ^EOF$ 作为结束标记从标准输入读取数据并覆盖 hello.py :</span></span><br><span class="line">cat &gt; hello.py &lt;&lt; EOF</span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line">from __future__ import print_function</span><br><span class="line">import sys</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"#stdout"</span>, file=sys.stdout)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"#stderr"</span>, file=sys.stderr)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> sys.stdin:</span><br><span class="line">    <span class="built_in">print</span>(line, file=sys.stdout)</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重定向可以到输出，输入和错误输出。</span></span><br><span class="line">python hello.py &lt; <span class="string">"input.in"</span></span><br><span class="line">python hello.py &gt; <span class="string">"output.out"</span></span><br><span class="line">python hello.py 2&gt; <span class="string">"error.err"</span></span><br><span class="line">python hello.py &gt; <span class="string">"output-and-error.log"</span> 2&gt;&amp;1</span><br><span class="line">python hello.py &gt; /dev/null 2&gt;&amp;1</span><br><span class="line"><span class="comment"># &gt; 会覆盖已存在的文件， &gt;&gt; 会以累加的方式输出文件中。</span></span><br><span class="line">python hello.py &gt;&gt; <span class="string">"output.out"</span> 2&gt;&gt; <span class="string">"error.err"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 覆盖 output.out , 追加 error.err 并统计行数 </span></span><br><span class="line">info bash <span class="string">'Basic Shell Features'</span> <span class="string">'Redirections'</span> &gt; output.out 2&gt;&gt; error.err</span><br><span class="line">wc -l output.out error.err</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行指令并打印文件描述符 （比如 /dev/fd/123）</span></span><br><span class="line"><span class="comment"># 具体可查看： man fd</span></span><br><span class="line"><span class="built_in">echo</span> &lt;(<span class="built_in">echo</span> <span class="string">"#helloworld"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以"#helloworld"覆盖 output.out:</span></span><br><span class="line">cat &gt; output.out &lt;(<span class="built_in">echo</span> <span class="string">"#helloworld"</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"#helloworld"</span> &gt; output.out</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"#helloworld"</span> | cat &gt; output.out</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"#helloworld"</span> | tee output.out &gt;/dev/null</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理临时文件并显示详情（增加'-i'选项启用交互模式）</span></span><br><span class="line">rm -v output.out error.err output-and-error.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个指令可用 $( ) 嵌套在另一个指令内部：</span></span><br><span class="line"><span class="comment"># 以下的指令会打印当前目录下的目录和文件总数 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"There are <span class="variable">$(ls | wc -l)</span> items here."</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 反引号 `` 起相同作用，但不允许嵌套 </span></span><br><span class="line"><span class="comment"># 优先使用 $(  ).</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"There are `ls | wc -l` items here."</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bash 的 case 语句与 Java 和 C++ 中的 switch 语句类似:</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$Variable</span>"</span> <span class="keyword">in</span></span><br><span class="line">    <span class="comment"># 列出需要匹配的字符串 </span></span><br><span class="line">    0) <span class="built_in">echo</span> <span class="string">"There is a zero."</span>;;</span><br><span class="line">    1) <span class="built_in">echo</span> <span class="string">"There is a one."</span>;;</span><br><span class="line">    *) <span class="built_in">echo</span> <span class="string">"It is not null."</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环遍历给定的参数序列:</span></span><br><span class="line"><span class="comment"># 变量 $Variable 的值会被打印 3 次。</span></span><br><span class="line"><span class="keyword">for</span> Variable <span class="keyword">in</span> &#123;1..3&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$Variable</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或传统的 “for 循环” ：</span></span><br><span class="line"><span class="keyword">for</span> ((a=1; a &lt;= 3; a++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以用于文件 </span></span><br><span class="line"><span class="comment"># 用 cat 输出 file1 和 file2 内容 </span></span><br><span class="line"><span class="keyword">for</span> Variable <span class="keyword">in</span> file1 file2</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    cat <span class="string">"<span class="variable">$Variable</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或作用于其他命令的输出 </span></span><br><span class="line"><span class="comment"># 对 ls 输出的文件执行 cat 指令。</span></span><br><span class="line"><span class="keyword">for</span> Output <span class="keyword">in</span> $(ls)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    cat <span class="string">"<span class="variable">$Output</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># while 循环：</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="literal">true</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"loop body here..."</span></span><br><span class="line">    <span class="built_in">break</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 你也可以使用函数 </span></span><br><span class="line"><span class="comment"># 定义函数：</span></span><br><span class="line"><span class="keyword">function</span> foo ()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Arguments work just like script arguments: <span class="variable">$@</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"And: <span class="variable">$1</span> <span class="variable">$2</span>..."</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"This is a function"</span></span><br><span class="line">    <span class="built_in">return</span> 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更简单的方法 </span></span><br><span class="line">bar ()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Another way to declare functions!"</span></span><br><span class="line">    <span class="built_in">return</span> 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数 </span></span><br><span class="line">foo <span class="string">"My name is"</span> <span class="variable">$Name</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 有很多有用的指令需要学习:</span></span><br><span class="line"><span class="comment"># 打印 file.txt 的最后 10 行 </span></span><br><span class="line">tail -n 10 file.txt</span><br><span class="line"><span class="comment"># 打印 file.txt 的前 10 行 </span></span><br><span class="line">head -n 10 file.txt</span><br><span class="line"><span class="comment"># 将 file.txt 按行排序 </span></span><br><span class="line">sort file.txt</span><br><span class="line"><span class="comment"># 报告或忽略重复的行，用选项 -d 打印重复的行 </span></span><br><span class="line">uniq -d file.txt</span><br><span class="line"><span class="comment"># 打印每行中','之前内容 </span></span><br><span class="line">cut -d <span class="string">','</span> -f 1 file.txt</span><br><span class="line"><span class="comment"># 将 file.txt 文件所有'okay'替换为'great', （兼容正则表达式）</span></span><br><span class="line">sed -i <span class="string">'s/okay/great/g'</span> file.txt</span><br><span class="line"><span class="comment"># 将 file.txt 中匹配正则的行打印到标准输出 </span></span><br><span class="line"><span class="comment"># 这里打印以"foo"开头,"bar"结尾的行 </span></span><br><span class="line">grep <span class="string">"^foo.*bar$"</span> file.txt</span><br><span class="line"><span class="comment"># 使用选项"-c"统计行数 </span></span><br><span class="line">grep -c <span class="string">"^foo.*bar$"</span> file.txt</span><br><span class="line"><span class="comment"># 如果只是要按字面形式搜索字符串而不是按正则表达式，使用 fgrep (或 grep -F)</span></span><br><span class="line">fgrep <span class="string">"^foo.*bar$"</span> file.txt </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以 bash 内建的'help'指令阅读 Bash 自带文档：</span></span><br><span class="line"><span class="built_in">help</span></span><br><span class="line"><span class="built_in">help</span> <span class="built_in">help</span></span><br><span class="line"><span class="built_in">help</span> <span class="keyword">for</span></span><br><span class="line"><span class="built_in">help</span> <span class="built_in">return</span></span><br><span class="line"><span class="built_in">help</span> <span class="built_in">source</span></span><br><span class="line"><span class="built_in">help</span> .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用 man 指令阅读相关的 Bash 手册 </span></span><br><span class="line">apropos bash</span><br><span class="line">man 1 bash</span><br><span class="line">man bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用 info 指令查阅命令的 info 文档 （info 中按 ? 显示帮助信息）</span></span><br><span class="line">apropos info | grep <span class="string">'^info.*('</span></span><br><span class="line">man info</span><br><span class="line">info info</span><br><span class="line">info 5 info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 阅读 Bash 的 info 文档：</span></span><br><span class="line">info bash</span><br><span class="line">info bash <span class="string">'Bash Features'</span></span><br><span class="line">info bash 6</span><br><span class="line">info --apropos bash</span><br></pre></td></tr></table></figure><h2 id="bash-sh"><a href="#bash-sh" class="headerlink" title="bash.sh"></a>bash.sh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># BASH CHEATSHEET (中文速查表)  -  by skywind (created on 2018/02/14)</span></span><br><span class="line"><span class="comment"># Version: 47, Last Modified: 2019/09/24 17:58</span></span><br><span class="line"><span class="comment"># https://github.com/skywind3000/awesome-cheatsheets</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 常用快捷键（默认使用 Emacs 键位）</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">CTRL+A              <span class="comment"># 移动到行首，同 &lt;Home&gt;</span></span><br><span class="line">CTRL+B              <span class="comment"># 向后移动，同 &lt;Left&gt;</span></span><br><span class="line">CTRL+C              <span class="comment"># 结束当前命令 </span></span><br><span class="line">CTRL+D              <span class="comment"># 删除光标前的字符，同 &lt;Delete&gt; ，或者没有内容时，退出会话 </span></span><br><span class="line">CTRL+E              <span class="comment"># 移动到行末，同 &lt;End&gt;</span></span><br><span class="line">CTRL+F              <span class="comment"># 向前移动，同 &lt;Right&gt;</span></span><br><span class="line">CTRL+G              <span class="comment"># 退出当前编辑（比如正在 CTRL+R 搜索历史时）</span></span><br><span class="line">CTRL+H              <span class="comment"># 删除光标左边的字符，同 &lt;Backspace&gt;</span></span><br><span class="line">CTRL+K              <span class="comment"># 删除光标位置到行末的内容 </span></span><br><span class="line">CTRL+L              <span class="comment"># 清屏并重新显示 </span></span><br><span class="line">CTRL+N              <span class="comment"># 移动到命令历史的下一行，同 &lt;Down&gt;</span></span><br><span class="line">CTRL+O              <span class="comment"># 类似回车，但是会显示下一行历史 </span></span><br><span class="line">CTRL+P              <span class="comment"># 移动到命令历史的上一行，同 &lt;Up&gt;</span></span><br><span class="line">CTRL+R              <span class="comment"># 历史命令反向搜索，使用 CTRL+G 退出搜索 </span></span><br><span class="line">CTRL+S              <span class="comment"># 历史命令正向搜索，使用 CTRL+G 退出搜索 </span></span><br><span class="line">CTRL+T              <span class="comment"># 交换前后两个字符 </span></span><br><span class="line">CTRL+U              <span class="comment"># 删除字符到行首 </span></span><br><span class="line">CTRL+V              <span class="comment"># 输入字符字面量，先按 CTRL+V 再按任意键 </span></span><br><span class="line">CTRL+W              <span class="comment"># 删除光标左边的一个单词 </span></span><br><span class="line">CTRL+X              <span class="comment"># 列出可能的补全 </span></span><br><span class="line">CTRL+Y              <span class="comment"># 粘贴前面 CTRL+u/k/w 删除过的内容 </span></span><br><span class="line">CTRL+Z              <span class="comment"># 暂停前台进程返回 bash，需要时可用 fg 将其切换回前台 </span></span><br><span class="line">CTRL+_              <span class="comment"># 撤销（undo），有的终端将 CTRL+_ 映射为 CTRL+/ 或 CTRL+7</span></span><br><span class="line"></span><br><span class="line">ALT+b               <span class="comment"># 向后（左边）移动一个单词 </span></span><br><span class="line">ALT+d               <span class="comment"># 删除光标后（右边）一个单词 </span></span><br><span class="line">ALT+f               <span class="comment"># 向前（右边）移动一个单词 </span></span><br><span class="line">ALT+t               <span class="comment"># 交换字符 </span></span><br><span class="line">ALT+BACKSPACE       <span class="comment"># 删除光标前面一个单词，类似 CTRL+W，但不影响剪贴板 </span></span><br><span class="line"></span><br><span class="line">CTRL+X CTRL+X       <span class="comment"># 连续按两次 CTRL+X，光标在当前位置和行首来回跳转 </span></span><br><span class="line">CTRL+X CTRL+E       <span class="comment"># 用你指定的编辑器，编辑当前命令 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># BASH 基本操作 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span>                <span class="comment"># 退出当前登陆 </span></span><br><span class="line">env                 <span class="comment"># 显示环境变量 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$SHELL</span>         <span class="comment"># 显示你在使用什么 SHELL</span></span><br><span class="line"></span><br><span class="line">bash                <span class="comment"># 使用 bash，用 exit 返回 </span></span><br><span class="line"><span class="built_in">which</span> bash          <span class="comment"># 搜索 $PATH，查找哪个程序对应命令 bash</span></span><br><span class="line">whereis bash        <span class="comment"># 搜索可执行，头文件和帮助信息的位置，使用系统内建数据库 </span></span><br><span class="line">whatis bash         <span class="comment"># 查看某个命令的解释，一句话告诉你这是干什么的 </span></span><br><span class="line"></span><br><span class="line">clear               <span class="comment"># 清初屏幕内容 </span></span><br><span class="line">reset               <span class="comment"># 重置终端（当你不小心 cat 了一个二进制，终端状态乱掉时使用）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 目录操作 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span>                  <span class="comment"># 返回自己 $HOME 目录 </span></span><br><span class="line"><span class="built_in">cd</span> &#123;dirname&#125;        <span class="comment"># 进入目录 </span></span><br><span class="line"><span class="built_in">pwd</span>                 <span class="comment"># 显示当前所在目录 </span></span><br><span class="line">mkdir &#123;dirname&#125;     <span class="comment"># 创建目录 </span></span><br><span class="line">mkdir -p &#123;dirname&#125;  <span class="comment"># 递归创建目录 </span></span><br><span class="line"><span class="built_in">pushd</span> &#123;dirname&#125;     <span class="comment"># 目录压栈并进入新目录 </span></span><br><span class="line"><span class="built_in">popd</span>                <span class="comment"># 弹出并进入栈顶的目录 </span></span><br><span class="line"><span class="built_in">dirs</span> -v             <span class="comment"># 列出当前目录栈 </span></span><br><span class="line"><span class="built_in">cd</span> -                <span class="comment"># 回到之前的目录 </span></span><br><span class="line"><span class="built_in">cd</span> -&#123;N&#125;             <span class="comment"># 切换到目录栈中的第 N 个目录，比如 cd -2 将切换到第二个 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 文件操作 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">ls                  <span class="comment"># 显示当前目录内容，后面可接目录名：ls &#123;dir&#125; 显示指定目录 </span></span><br><span class="line">ls -l               <span class="comment"># 列表方式显示目录内容，包括文件日期，大小，权限等信息 </span></span><br><span class="line">ls -1               <span class="comment"># 列表方式显示目录内容，只显示文件名称，减号后面是数字 1</span></span><br><span class="line">ls -a               <span class="comment"># 显示所有文件和目录，包括隐藏文件（. 开头的文件 / 目录名）</span></span><br><span class="line">ln -s &#123;fn&#125; &#123;link&#125;   <span class="comment"># 给指定文件创建一个软链接 </span></span><br><span class="line">cp &#123;src&#125; &#123;dest&#125;     <span class="comment"># 拷贝文件，cp -r dir1 dir2 可以递归拷贝（目录）</span></span><br><span class="line">rm &#123;fn&#125;             <span class="comment"># 删除文件，rm -r 递归删除目录，rm -f 强制删除 </span></span><br><span class="line">mv &#123;src&#125; &#123;dest&#125;     <span class="comment"># 移动文件，如果 dest 是目录，则移动，是文件名则覆盖 </span></span><br><span class="line">touch &#123;fn&#125;          <span class="comment"># 创建或者更新一下制定文件 </span></span><br><span class="line">cat &#123;fn&#125;            <span class="comment"># 输出文件原始内容 </span></span><br><span class="line">any_cmd &gt; &#123;fn&#125;      <span class="comment"># 执行任意命令并将标准输出重定向到指定文件 </span></span><br><span class="line">more &#123;fn&#125;           <span class="comment"># 逐屏显示某文件内容，空格翻页，q 退出 </span></span><br><span class="line">less &#123;fn&#125;           <span class="comment"># 更高级点的 more，更多操作，q 退出 </span></span><br><span class="line">head &#123;fn&#125;           <span class="comment"># 显示文件头部数行，可用 head -3 abc.txt 显示头三行 </span></span><br><span class="line">tail &#123;fn&#125;           <span class="comment"># 显示文件尾部数行，可用 tail -3 abc.txt 显示尾部三行 </span></span><br><span class="line">tail -f &#123;fn&#125;        <span class="comment"># 持续显示文件尾部数据，可用于监控日志 </span></span><br><span class="line">nano &#123;fn&#125;           <span class="comment"># 使用 nano 编辑器编辑文件 </span></span><br><span class="line">vim &#123;fn&#125;            <span class="comment"># 使用 vim 编辑文件 </span></span><br><span class="line">diff &#123;f1&#125; &#123;f2&#125;      <span class="comment"># 比较两个文件的内容 </span></span><br><span class="line">wc &#123;fn&#125;             <span class="comment"># 统计文件有多少行，多少个单词 </span></span><br><span class="line">chmod 644 &#123;fn&#125;      <span class="comment"># 修改文件权限为 644，可以接 -R 对目录循环改权限 </span></span><br><span class="line">chgrp group &#123;fn&#125;    <span class="comment"># 修改文件所属的用户组 </span></span><br><span class="line">chown user1 &#123;fn&#125;    <span class="comment"># 修改文件所有人为 user1, chown user1:group1 fn 可以修改组 </span></span><br><span class="line">file &#123;fn&#125;           <span class="comment"># 检测文件的类型和编码 </span></span><br><span class="line">basename &#123;fn&#125;       <span class="comment"># 查看文件的名字（不包括路径）</span></span><br><span class="line">dirname &#123;fn&#125;        <span class="comment"># 查看文件的路径（不包括名字）</span></span><br><span class="line">grep &#123;pat&#125; &#123;fn&#125;     <span class="comment"># 在文件中查找出现过 pat 的内容 </span></span><br><span class="line">grep -r &#123;pat&#125; .     <span class="comment"># 在当前目录下递归查找所有出现过 pat 的文件内容 </span></span><br><span class="line"><span class="built_in">stat</span> &#123;fn&#125;           <span class="comment"># 显示文件的详细信息 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 用户管理 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">whoami              <span class="comment"># 显示我的用户名 </span></span><br><span class="line">who                 <span class="comment"># 显示已登陆用户信息，w / who / users 内容略有不同 </span></span><br><span class="line">w                   <span class="comment"># 显示已登陆用户信息，w / who / users 内容略有不同 </span></span><br><span class="line">users               <span class="comment"># 显示已登陆用户信息，w / who / users 内容略有不同 </span></span><br><span class="line">passwd              <span class="comment"># 修改密码，passwd &#123;user&#125; 可以用于 root 修改别人密码 </span></span><br><span class="line">finger &#123;user&#125;       <span class="comment"># 显示某用户信息，包括 id, 名字, 登陆状态等 </span></span><br><span class="line">adduser &#123;user&#125;      <span class="comment"># 添加用户 </span></span><br><span class="line">deluser &#123;user&#125;      <span class="comment"># 删除用户 </span></span><br><span class="line">w                   <span class="comment"># 查看谁在线 </span></span><br><span class="line">su                  <span class="comment"># 切换到 root 用户 </span></span><br><span class="line">su -                <span class="comment"># 切换到 root 用户并登陆（执行登陆脚本）</span></span><br><span class="line">su &#123;user&#125;           <span class="comment"># 切换到某用户 </span></span><br><span class="line">su -&#123;user&#125;          <span class="comment"># 切换到某用户并登陆（执行登陆脚本）</span></span><br><span class="line">id &#123;user&#125;           <span class="comment"># 查看用户的 uid，gid 以及所属其他用户组 </span></span><br><span class="line">id -u &#123;user&#125;        <span class="comment"># 打印用户 uid</span></span><br><span class="line">id -g &#123;user&#125;        <span class="comment"># 打印用户 gid</span></span><br><span class="line">write &#123;user&#125;        <span class="comment"># 向某用户发送一句消息 </span></span><br><span class="line">last                <span class="comment"># 显示最近用户登陆列表 </span></span><br><span class="line">last &#123;user&#125;         <span class="comment"># 显示登陆记录 </span></span><br><span class="line">lastb               <span class="comment"># 显示失败登陆记录 </span></span><br><span class="line">lastlog             <span class="comment"># 显示所有用户的最近登陆记录 </span></span><br><span class="line">sudo &#123;<span class="built_in">command</span>&#125;      <span class="comment"># 以 root 权限执行某命令 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 进程管理 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">ps                        <span class="comment"># 查看当前会话进程 </span></span><br><span class="line">ps ax                     <span class="comment"># 查看所有进程，类似 ps -e</span></span><br><span class="line">ps aux                    <span class="comment"># 查看所有进程详细信息，类似 ps -ef</span></span><br><span class="line">ps auxww                  <span class="comment"># 查看所有进程，并且显示进程的完整启动命令 </span></span><br><span class="line">ps -u &#123;user&#125;              <span class="comment"># 查看某用户进程 </span></span><br><span class="line">ps axjf                   <span class="comment"># 列出进程树 </span></span><br><span class="line">ps xjf -u &#123;user&#125;          <span class="comment"># 列出某用户的进程树 </span></span><br><span class="line">ps -eo pid,user,<span class="built_in">command</span>   <span class="comment"># 按用户指定的格式查看进程 </span></span><br><span class="line">ps aux | grep httpd       <span class="comment"># 查看名为 httpd 的所有进程 </span></span><br><span class="line">ps --ppid &#123;pid&#125;           <span class="comment"># 查看父进程为 pid 的所有进程 </span></span><br><span class="line">pstree                    <span class="comment"># 树形列出所有进程，pstree 默认一般不带，需安装 </span></span><br><span class="line">pstree &#123;user&#125;             <span class="comment"># 进程树列出某用户的进程 </span></span><br><span class="line">pstree -u                 <span class="comment"># 树形列出所有进程以及所属用户 </span></span><br><span class="line">pgrep &#123;procname&#125;          <span class="comment"># 搜索名字匹配的进程的 pid，比如 pgrep apache2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> &#123;pid&#125;                <span class="comment"># 结束进程 </span></span><br><span class="line"><span class="built_in">kill</span> -9 &#123;pid&#125;             <span class="comment"># 强制结束进程，9/SIGKILL 是强制不可捕获结束信号 </span></span><br><span class="line"><span class="built_in">kill</span> -KILL &#123;pid&#125;          <span class="comment"># 强制执行进程，kill -9 的另外一种写法 </span></span><br><span class="line"><span class="built_in">kill</span> -l                   <span class="comment"># 查看所有信号 </span></span><br><span class="line"><span class="built_in">kill</span> -l TERM              <span class="comment"># 查看 TERM 信号的编号 </span></span><br><span class="line">killall &#123;procname&#125;        <span class="comment"># 按名称结束所有进程 </span></span><br><span class="line">pkill &#123;procname&#125;          <span class="comment"># 按名称结束进程，除名称外还可以有其他参数 </span></span><br><span class="line"></span><br><span class="line">top                       <span class="comment"># 查看最活跃的进程 </span></span><br><span class="line">top -u &#123;user&#125;             <span class="comment"># 查看某用户最活跃的进程 </span></span><br><span class="line"></span><br><span class="line">any_command &amp;             <span class="comment"># 在后台运行某命令，也可用 CTRL+Z 将当前进程挂到后台 </span></span><br><span class="line"><span class="built_in">jobs</span>                      <span class="comment"># 查看所有后台进程（jobs）</span></span><br><span class="line"><span class="built_in">bg</span>                        <span class="comment"># 查看后台进程，并切换过去 </span></span><br><span class="line"><span class="built_in">fg</span>                        <span class="comment"># 切换后台进程到前台 </span></span><br><span class="line"><span class="built_in">fg</span> &#123;job&#125;                  <span class="comment"># 切换特定后台进程到前台 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">trap</span> cmd sig1 sig2        <span class="comment"># 在脚本中设置信号处理命令 </span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">""</span> sig1 sig2         <span class="comment"># 在脚本中屏蔽某信号 </span></span><br><span class="line"><span class="built_in">trap</span> - sig1 sig2          <span class="comment"># 恢复默认信号处理行为 </span></span><br><span class="line"></span><br><span class="line">nohup &#123;<span class="built_in">command</span>&#125;           <span class="comment"># 长期运行某程序，在你退出登陆都保持它运行 </span></span><br><span class="line">nohup &#123;<span class="built_in">command</span>&#125; &amp;         <span class="comment"># 在后台长期运行某程序 </span></span><br><span class="line"><span class="built_in">disown</span> &#123;PID|JID&#125;          <span class="comment"># 将进程从后台任务列表（jobs）移除 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">wait</span>                      <span class="comment"># 等待所有后台进程任务结束 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 常用命令：SSH / 系统信息 / 网络 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">ssh user@host             <span class="comment"># 以用户 user 登陆到远程主机 host</span></span><br><span class="line">ssh -p &#123;port&#125; user@host   <span class="comment"># 指定端口登陆主机 </span></span><br><span class="line">ssh-copy-id user@host     <span class="comment"># 拷贝你的 ssh key 到远程主机，避免重复输入密码 </span></span><br><span class="line">scp &#123;fn&#125; user@host:path   <span class="comment"># 拷贝文件到远程主机 </span></span><br><span class="line">scp user@host:path dest   <span class="comment"># 从远程主机拷贝文件回来 </span></span><br><span class="line">scp -P &#123;port&#125; ...         <span class="comment"># 指定端口远程拷贝文件 </span></span><br><span class="line"></span><br><span class="line">uname -a                  <span class="comment"># 查看内核版本等信息 </span></span><br><span class="line">man &#123;<span class="built_in">help</span>&#125;                <span class="comment"># 查看帮助 </span></span><br><span class="line">man -k &#123;keyword&#125;          <span class="comment"># 查看哪些帮助文档里包含了该关键字 </span></span><br><span class="line">info &#123;<span class="built_in">help</span>&#125;               <span class="comment"># 查看 info pages，比 man 更强的帮助系统 </span></span><br><span class="line">uptime                    <span class="comment"># 查看系统启动时间 </span></span><br><span class="line">date                      <span class="comment"># 显示日期 </span></span><br><span class="line">cal                       <span class="comment"># 显示日历 </span></span><br><span class="line">vmstat                    <span class="comment"># 显示内存和 CPU 使用情况 </span></span><br><span class="line">vmstat 10                 <span class="comment"># 每 10 秒打印一行内存和 CPU 情况，CTRL+C 退出 </span></span><br><span class="line">free                      <span class="comment"># 显示内存和交换区使用情况 </span></span><br><span class="line">df                        <span class="comment"># 显示磁盘使用情况 </span></span><br><span class="line">du                        <span class="comment"># 显示当前目录占用，du . --max-depth=2 可以指定深度 </span></span><br><span class="line">uname                     <span class="comment"># 显示系统版本号 </span></span><br><span class="line">hostname                  <span class="comment"># 显示主机名称 </span></span><br><span class="line">showkey -a                <span class="comment"># 查看终端发送的按键编码 </span></span><br><span class="line"></span><br><span class="line">ping &#123;host&#125;               <span class="comment"># ping 远程主机并显示结果，CTRL+C 退出 </span></span><br><span class="line">ping -c N &#123;host&#125;          <span class="comment"># ping 远程主机 N 次 </span></span><br><span class="line">traceroute &#123;host&#125;         <span class="comment"># 侦测路由连通情况 </span></span><br><span class="line">mtr &#123;host&#125;                <span class="comment"># 高级版本 traceroute</span></span><br><span class="line">host &#123;domain&#125;             <span class="comment"># DNS 查询，&#123;domain&#125; 前面可加 -a 查看详细信息 </span></span><br><span class="line">whois &#123;domain&#125;            <span class="comment"># 取得域名 whois 信息 </span></span><br><span class="line">dig &#123;domain&#125;              <span class="comment"># 取得域名 dns 信息 </span></span><br><span class="line">route -n                  <span class="comment"># 查看路由表 </span></span><br><span class="line">netstat -a                <span class="comment"># 列出所有端口 </span></span><br><span class="line">netstat -an               <span class="comment"># 查看所有连接信息，不解析域名 </span></span><br><span class="line">netstat -anp              <span class="comment"># 查看所有连接信息，包含进程信息（需要 sudo）</span></span><br><span class="line">netstat -l                <span class="comment"># 查看所有监听的端口 </span></span><br><span class="line">netstat -t                <span class="comment"># 查看所有 TCP 链接 </span></span><br><span class="line">netstat -lntu             <span class="comment"># 显示所有正在监听的 TCP 和 UDP 信息 </span></span><br><span class="line">netstat -lntup            <span class="comment"># 显示所有正在监听的 socket 及进程信息 </span></span><br><span class="line">netstat -i                <span class="comment"># 显示网卡信息 </span></span><br><span class="line">netstat -rn               <span class="comment"># 显示当前系统路由表，同 route -n</span></span><br><span class="line">ss -an                    <span class="comment"># 比 netstat -an 更快速更详细 </span></span><br><span class="line">ss -s                     <span class="comment"># 统计 TCP 的 established, wait 等 </span></span><br><span class="line"></span><br><span class="line">wget &#123;url&#125;                <span class="comment"># 下载文件，可加 --no-check-certificate 忽略 ssl 验证 </span></span><br><span class="line">wget -qO- &#123;url&#125;           <span class="comment"># 下载文件并输出到标准输出（不保存）</span></span><br><span class="line">curl -sL &#123;url&#125;            <span class="comment"># 同 wget -qO- &#123;url&#125; 没有 wget 的时候使用 </span></span><br><span class="line"></span><br><span class="line">sz &#123;file&#125;                 <span class="comment"># 发送文件到终端，zmodem 协议 </span></span><br><span class="line">rz                        <span class="comment"># 接收终端发送过来的文件 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 变量操作 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">varname=value             <span class="comment"># 定义变量 </span></span><br><span class="line">varname=value <span class="built_in">command</span>     <span class="comment"># 定义子进程变量并执行子进程 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$varname</span>             <span class="comment"># 查看变量内容 </span></span><br><span class="line"><span class="built_in">echo</span> $$                   <span class="comment"># 查看当前 shell 的进程号 </span></span><br><span class="line"><span class="built_in">echo</span> $!                   <span class="comment"># 查看最近调用的后台任务进程号 </span></span><br><span class="line"><span class="built_in">echo</span> $?                   <span class="comment"># 查看最近一条命令的返回码 </span></span><br><span class="line"><span class="built_in">export</span> VARNAME=value      <span class="comment"># 设置环境变量（将会影响到子进程）</span></span><br><span class="line"></span><br><span class="line">array[0]=valA             <span class="comment"># 定义数组 </span></span><br><span class="line">array[1]=valB</span><br><span class="line">array[2]=valC</span><br><span class="line">array=([0]=valA [1]=valB [2]=valC)   <span class="comment"># 另一种方式 </span></span><br><span class="line">array=(valA valB valC)               <span class="comment"># 另一种方式 </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;array[i]&#125;</span>               <span class="comment"># 取得数组中的元素 </span></span><br><span class="line"><span class="variable">$&#123;#array[@]&#125;</span>              <span class="comment"># 取得数组的长度 </span></span><br><span class="line"><span class="variable">$&#123;#array[i]&#125;</span>              <span class="comment"># 取得数组中某个变量的长度 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">declare</span> -a                <span class="comment"># 查看所有数组 </span></span><br><span class="line"><span class="built_in">declare</span> -f                <span class="comment"># 查看所有函数 </span></span><br><span class="line"><span class="built_in">declare</span> -F                <span class="comment"># 查看所有函数，仅显示函数名 </span></span><br><span class="line"><span class="built_in">declare</span> -i                <span class="comment"># 查看所有整数 </span></span><br><span class="line"><span class="built_in">declare</span> -r                <span class="comment"># 查看所有只读变量 </span></span><br><span class="line"><span class="built_in">declare</span> -x                <span class="comment"># 查看所有被导出成环境变量的东西 </span></span><br><span class="line"><span class="built_in">declare</span> -p varname        <span class="comment"># 输出变量是怎么定义的（类型 + 值）</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;varname:-word&#125;</span>          <span class="comment"># 如果变量不为空则返回变量，否则返回 word</span></span><br><span class="line"><span class="variable">$&#123;varname:=word&#125;</span>          <span class="comment"># 如果变量不为空则返回变量，否则赋值成 word 并返回 </span></span><br><span class="line"><span class="variable">$&#123;varname:?message&#125;</span>       <span class="comment"># 如果变量不为空则返回变量，否则打印错误信息并退出 </span></span><br><span class="line"><span class="variable">$&#123;varname:+word&#125;</span>          <span class="comment"># 如果变量不为空则返回 word，否则返回 null</span></span><br><span class="line"><span class="variable">$&#123;varname:offset:len&#125;</span>     <span class="comment"># 取得字符串的子字符串 </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;variable#pattern&#125;</span>       <span class="comment"># 如果变量头部匹配 pattern，则删除最小匹配部分返回剩下的 </span></span><br><span class="line"><span class="variable">$&#123;variable##pattern&#125;</span>      <span class="comment"># 如果变量头部匹配 pattern，则删除最大匹配部分返回剩下的 </span></span><br><span class="line"><span class="variable">$&#123;variable%pattern&#125;</span>       <span class="comment"># 如果变量尾部匹配 pattern，则删除最小匹配部分返回剩下的 </span></span><br><span class="line"><span class="variable">$&#123;variable%%pattern&#125;</span>      <span class="comment"># 如果变量尾部匹配 pattern，则删除最大匹配部分返回剩下的 </span></span><br><span class="line"><span class="variable">$&#123;variable/pattern/str&#125;</span>   <span class="comment"># 将变量中第一个匹配 pattern 的替换成 str，并返回 </span></span><br><span class="line"><span class="variable">$&#123;variable//pattern/str&#125;</span>  <span class="comment"># 将变量中所有匹配 pattern 的地方替换成 str 并返回 </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;#varname&#125;</span>               <span class="comment"># 返回字符串长度 </span></span><br><span class="line"></span><br><span class="line">*(patternlist)            <span class="comment"># 零次或者多次匹配 </span></span><br><span class="line">+(patternlist)            <span class="comment"># 一次或者多次匹配 </span></span><br><span class="line">?(patternlist)            <span class="comment"># 零次或者一次匹配 </span></span><br><span class="line">@(patternlist)            <span class="comment"># 单词匹配 </span></span><br><span class="line">!(patternlist)            <span class="comment"># 不匹配 </span></span><br><span class="line"></span><br><span class="line">array=(<span class="variable">$text</span>)             <span class="comment"># 按空格分隔 text 成数组，并赋值给变量 </span></span><br><span class="line">IFS=<span class="string">"/"</span> array=(<span class="variable">$text</span>)     <span class="comment"># 按斜杆分隔字符串 text 成数组，并赋值给变量 </span></span><br><span class="line">text=<span class="string">"<span class="variable">$&#123;array[*]&#125;</span>"</span>        <span class="comment"># 用空格链接数组并赋值给变量 </span></span><br><span class="line">text=$(IFS=/; <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;array[*]&#125;</span>"</span>)  <span class="comment"># 用斜杠链接数组并赋值给变量 </span></span><br><span class="line"></span><br><span class="line">A=( foo bar <span class="string">"a  b c"</span> 42 ) <span class="comment"># 数组定义 </span></span><br><span class="line">B=(<span class="string">"<span class="variable">$&#123;A[@]:1:2&#125;</span>"</span>)         <span class="comment"># 数组切片：B=( bar"a  b c")</span></span><br><span class="line">C=(<span class="string">"<span class="variable">$&#123;A[@]:1&#125;</span>"</span>)           <span class="comment"># 数组切片：C=( bar"a  b c"42 )</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;B[@]&#125;</span>"</span>            <span class="comment"># bar a  b c</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;B[1]&#125;</span>"</span>            <span class="comment"># a  b c</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;C[@]&#125;</span>"</span>            <span class="comment"># bar a  b c 42</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;C[@]: -2:2&#125;</span>"</span>      <span class="comment"># a  b c 42  减号前的空格是必须的 </span></span><br><span class="line"></span><br><span class="line">$(UNIX <span class="built_in">command</span>)           <span class="comment"># 运行命令，并将标准输出内容捕获并返回 </span></span><br><span class="line">varname=$(id -u user)     <span class="comment"># 将用户名为 user 的 uid 赋值给 varname 变量 </span></span><br><span class="line"></span><br><span class="line">num=$(expr 1 + 2)         <span class="comment"># 兼容 posix sh 的计算，使用 expr 命令计算结果 </span></span><br><span class="line">num=$(expr <span class="variable">$num</span> + 1)      <span class="comment"># 数字自增 </span></span><br><span class="line">expr 2 \* \( 2 + 3 \)     <span class="comment"># 兼容 posix sh 的复杂计算，输出 10</span></span><br><span class="line"></span><br><span class="line">num=$((1 + 2))            <span class="comment"># 计算 1+2 赋值给 num，使用 bash 独有的 $((..)) 计算 </span></span><br><span class="line">num=$((<span class="variable">$num</span> + 1))         <span class="comment"># 变量递增 </span></span><br><span class="line">num=$((num + 1))          <span class="comment"># 变量递增，双括号内的 $ 可以省略 </span></span><br><span class="line">num=$((1 + (2 + 3) * 2))  <span class="comment"># 复杂计算 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 事件指示符 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">!!                  <span class="comment"># 上一条命令 </span></span><br><span class="line">!^                  <span class="comment"># 上一条命令的第一个单词 </span></span><br><span class="line">!$                  <span class="comment"># 上一条命令的最后一个单词 </span></span><br><span class="line">!string             <span class="comment"># 最近一条包含 string 的命令 </span></span><br><span class="line">!^string1^string2   <span class="comment"># 最近一条包含 string1 的命令, 快速替换 string1 为 string2</span></span><br><span class="line">!<span class="comment">#                  # 本条命令之前所有的输入内容 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 函数 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个新函数 </span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">myfunc</span></span>() &#123;</span><br><span class="line">    <span class="comment"># $1 代表第一个参数，$N 代表第 N 个参数 </span></span><br><span class="line">    <span class="comment"># $# 代表参数个数 </span></span><br><span class="line">    <span class="comment"># $0 代表被调用者自身的名字 </span></span><br><span class="line">    <span class="comment"># $@ 代表所有参数，类型是个数组，想传递所有参数给其他命令用 cmd"$@"</span></span><br><span class="line">    <span class="comment"># $* 空格链接起来的所有参数，类型是字符串 </span></span><br><span class="line">    &#123;shell commands ...&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">myfunc                    <span class="comment"># 调用函数 myfunc </span></span><br><span class="line">myfunc arg1 arg2 arg3     <span class="comment"># 带参数的函数调用 </span></span><br><span class="line">myfunc <span class="string">"<span class="variable">$@</span>"</span>               <span class="comment"># 将所有参数传递给函数 </span></span><br><span class="line">myfunc <span class="string">"<span class="variable">$&#123;array[@]&#125;</span>"</span>      <span class="comment"># 将一个数组当作多个参数传递给函数 </span></span><br><span class="line"><span class="built_in">shift</span>                     <span class="comment"># 参数左移 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> -f myfunc           <span class="comment"># 删除函数 </span></span><br><span class="line"><span class="built_in">declare</span> -f                <span class="comment"># 列出函数定义 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 条件判断（兼容 posix sh 的条件判断）：man test</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">statement1 &amp;&amp; statement2  <span class="comment"># and 操作符 </span></span><br><span class="line">statement1 || statement2  <span class="comment"># or 操作符 </span></span><br><span class="line"></span><br><span class="line">exp1 -a exp2              <span class="comment"># exp1 和 exp2 同时为真时返回真（POSIX XSI 扩展）</span></span><br><span class="line">exp1 -o exp2              <span class="comment"># exp1 和 exp2 有一个为真就返回真（POSIX XSI 扩展）</span></span><br><span class="line">( expression )            <span class="comment"># 如果 expression 为真时返回真，输入注意括号前反斜杆 </span></span><br><span class="line">! expression              <span class="comment"># 如果 expression 为假那返回真 </span></span><br><span class="line"></span><br><span class="line">str1 = str2               <span class="comment"># 判断字符串相等，如 ["$x"="$y"] &amp;&amp; echo yes</span></span><br><span class="line">str1 != str2              <span class="comment"># 判断字符串不等，如 ["$x"!="$y"] &amp;&amp; echo yes</span></span><br><span class="line">str1 &lt; str2               <span class="comment"># 字符串小于，如 ["$x"\&lt;"$y"] &amp;&amp; echo yes</span></span><br><span class="line">str2 &gt; str2               <span class="comment"># 字符串大于，注意 &lt; 或 &gt; 是字面量，输入时要加反斜杆 </span></span><br><span class="line">-n str1                   <span class="comment"># 判断字符串不为空（长度大于零）</span></span><br><span class="line">-z str1                   <span class="comment"># 判断字符串为空（长度等于零）</span></span><br><span class="line"></span><br><span class="line">-a file                   <span class="comment"># 判断文件存在，如 [ -a /tmp/abc ] &amp;&amp; echo"exists"</span></span><br><span class="line">-d file                   <span class="comment"># 判断文件存在，且该文件是一个目录 </span></span><br><span class="line">-e file                   <span class="comment"># 判断文件存在，和 -a 等价 </span></span><br><span class="line">-f file                   <span class="comment"># 判断文件存在，且该文件是一个普通文件（非目录等）</span></span><br><span class="line">-r file                   <span class="comment"># 判断文件存在，且可读 </span></span><br><span class="line">-s file                   <span class="comment"># 判断文件存在，且尺寸大于 0</span></span><br><span class="line">-w file                   <span class="comment"># 判断文件存在，且可写 </span></span><br><span class="line">-x file                   <span class="comment"># 判断文件存在，且执行 </span></span><br><span class="line">-N file                   <span class="comment"># 文件上次修改过后还没有读取过 </span></span><br><span class="line">-O file                   <span class="comment"># 文件存在且属于当前用户 </span></span><br><span class="line">-G file                   <span class="comment"># 文件存在且匹配你的用户组 </span></span><br><span class="line">file1 -nt file2           <span class="comment"># 文件 1 比 文件 2 新 </span></span><br><span class="line">file1 -ot file2           <span class="comment"># 文件 1 比 文件 2 旧 </span></span><br><span class="line"></span><br><span class="line">num1 -eq num2             <span class="comment"># 数字判断：num1 == num2</span></span><br><span class="line">num1 -ne num2             <span class="comment"># 数字判断：num1 != num2</span></span><br><span class="line">num1 -lt num2             <span class="comment"># 数字判断：num1 &lt; num2</span></span><br><span class="line">num1 -le num2             <span class="comment"># 数字判断：num1 &lt;= num2</span></span><br><span class="line">num1 -gt num2             <span class="comment"># 数字判断：num1 &gt; num2</span></span><br><span class="line">num1 -ge num2             <span class="comment"># 数字判断：num1 &gt;= num2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 分支控制：if 和经典 test，兼容 posix sh 的条件判断语句 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> &#123;expression&#125;         <span class="comment"># 判断条件为真的话 test 程序返回 0 否则非零 </span></span><br><span class="line">[ expression ]            <span class="comment"># 判断条件为真的话返回 0 否则非零 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> <span class="string">"abc"</span> = <span class="string">"def"</span>        <span class="comment"># 查看返回值 echo $? 显示 1，因为条件为假 </span></span><br><span class="line"><span class="built_in">test</span> <span class="string">"abc"</span> != <span class="string">"def"</span>       <span class="comment"># 查看返回值 echo $? 显示 0，因为条件为真 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> -a /tmp; <span class="built_in">echo</span> $?     <span class="comment"># 调用 test 判断 /tmp 是否存在，并打印 test 的返回值 </span></span><br><span class="line">[ -a /tmp ]; <span class="built_in">echo</span> $?      <span class="comment"># 和上面完全等价，/tmp 肯定是存在的，所以输出是 0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> cond &amp;&amp; cmd1         <span class="comment"># 判断条件为真时执行 cmd1</span></span><br><span class="line">[ cond ] &amp;&amp; cmd1          <span class="comment"># 和上面完全等价 </span></span><br><span class="line">[ cond ] &amp;&amp; cmd1 || cmd2  <span class="comment"># 条件为真执行 cmd1 否则执行 cmd2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断 /etc/passwd 文件是否存在 </span></span><br><span class="line"><span class="comment"># 经典的 if 语句就是判断后面的命令返回值为 0 的话，认为条件为真，否则为假 </span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -e /etc/passwd; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"alright it exists ... "</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"it doesn't exist ..."</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 和上面完全等价，[ 是个和 test 一样的可执行程序，但最后一个参数必须为 ]</span></span><br><span class="line"><span class="comment"># 这个名字为 "[" 的可执行程序一般就在 /bin 或 /usr/bin 下面，比 test 优雅些 </span></span><br><span class="line"><span class="keyword">if</span> [ -e /etc/passwd ]; <span class="keyword">then</span>   </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"alright it exists ..."</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"it doesn't exist ... "</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 和上面两个完全等价，其实到 bash 时代 [ 已经是内部命令了，用 enable 可以看到 </span></span><br><span class="line">[ -e /etc/passwd ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"alright it exists"</span> || <span class="built_in">echo</span> <span class="string">"it doesn't exist"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断变量的值 </span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$varname</span>"</span> = <span class="string">"foo"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"this is foo"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$varname</span>"</span> = <span class="string">"bar"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"this is bar"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"neither"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复杂条件判断，注意 || 和 &amp;&amp; 是完全兼容 POSIX 的推荐写法 </span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$x</span> -gt 10 ] &amp;&amp; [ <span class="variable">$x</span> -lt 20 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"yes, between 10 and 20"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以用 &amp;&amp; 命令连接符来做和上面完全等价的事情 </span></span><br><span class="line">[ <span class="variable">$x</span> -gt 10 ] &amp;&amp; [ <span class="variable">$x</span> -lt 20 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"yes, between 10 and 20"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 小括号和 -a -o 是 POSIX XSI 扩展写法，小括号是字面量，输入时前面要加反斜杆 </span></span><br><span class="line"><span class="keyword">if</span> [ \( <span class="variable">$x</span> -gt 10 \) -a \( <span class="variable">$x</span> -lt 20 \) ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"yes, between 10 and 20"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同样可以用 &amp;&amp; 命令连接符来做和上面完全等价的事情 </span></span><br><span class="line">[ \( <span class="variable">$x</span> -gt 10 \) -a \( <span class="variable">$x</span> -lt 20 \) ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"yes, between 10 and 20"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断程序存在的话就执行 </span></span><br><span class="line">[ -x /bin/ls ] &amp;&amp; /bin/ls -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果不考虑兼容 posix sh 和 dash 这些的话，可用 bash 独有的 ((..)) 和 [[..]]:</span></span><br><span class="line">https://www.ibm.com/developerworks/library/l-bash-test/index.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 流程控制：while / for / case / until </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># while 循环 </span></span><br><span class="line"><span class="keyword">while</span> condition; <span class="keyword">do</span></span><br><span class="line">    statements</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -le 10 ]; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span>; </span><br><span class="line">    i=$(expr <span class="variable">$i</span> + 1)</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for 循环：上面的 while 语句等价 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..10&#125;; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name [<span class="keyword">in</span> list]; <span class="keyword">do</span></span><br><span class="line">    statements</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for 列举某目录下面的所有文件 </span></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> /home/*; <span class="keyword">do</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$f</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># bash 独有的 (( .. )) 语句，更接近 C 语言，但是不兼容 posix sh</span></span><br><span class="line"><span class="keyword">for</span> (( initialisation ; ending condition ; update )); <span class="keyword">do</span></span><br><span class="line">    statements</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 和上面的写法等价 </span></span><br><span class="line"><span class="keyword">for</span> ((i = 0; i &lt; 10; i++)); <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span>; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># case 判断 </span></span><br><span class="line"><span class="keyword">case</span> expression <span class="keyword">in</span> </span><br><span class="line">    pattern1 )</span><br><span class="line">        statements ;;</span><br><span class="line">    pattern2 )</span><br><span class="line">        statements ;;</span><br><span class="line">    * )</span><br><span class="line">        otherwise ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># until 语句 </span></span><br><span class="line">until condition; <span class="keyword">do</span></span><br><span class="line">    statements</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># select 语句 </span></span><br><span class="line">select name [<span class="keyword">in</span> list]; <span class="keyword">do</span></span><br><span class="line">  statements that can use <span class="variable">$name</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 命令处理 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">command</span> ls                         <span class="comment"># 忽略 alias 直接执行程序或者内建命令 ls</span></span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">cd</span>                         <span class="comment"># 忽略 alias 直接运行内建的 cd 命令 </span></span><br><span class="line"><span class="built_in">enable</span>                             <span class="comment"># 列出所有 bash 内置命令，或禁止某命令 </span></span><br><span class="line"><span class="built_in">help</span> &#123;builtin_command&#125;             <span class="comment"># 查看内置命令的帮助（仅限 bash 内置命令）</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">eval</span> <span class="variable">$script</span>                       <span class="comment"># 对 script 变量中的字符串求值（执行）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 输出 / 输入 重定向 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">cmd1 | cmd2                        <span class="comment"># 管道，cmd1 的标准输出接到 cmd2 的标准输入 </span></span><br><span class="line">&lt; file                             <span class="comment"># 将文件内容重定向为命令的标准输入 </span></span><br><span class="line">&gt; file                             <span class="comment"># 将命令的标准输出重定向到文件，会覆盖文件 </span></span><br><span class="line">&gt;&gt; file                            <span class="comment"># 将命令的标准输出重定向到文件，追加不覆盖 </span></span><br><span class="line">&gt;| file                            <span class="comment"># 强制输出到文件，即便设置过：set -o noclobber</span></span><br><span class="line">n&gt;| file                           <span class="comment"># 强制将文件描述符 n 的输出重定向到文件 </span></span><br><span class="line">&lt;&gt; file                            <span class="comment"># 同时使用该文件作为标准输入和标准输出 </span></span><br><span class="line">n&lt;&gt; file                           <span class="comment"># 同时使用文件作为文件描述符 n 的输出和输入 </span></span><br><span class="line">n&gt; file                            <span class="comment"># 重定向文件描述符 n 的输出到文件 </span></span><br><span class="line">n&lt; file                            <span class="comment"># 重定向文件描述符 n 的输入为文件内容 </span></span><br><span class="line">n&gt;&amp;                                <span class="comment"># 将标准输出 dup / 合并 到文件描述符 n</span></span><br><span class="line">n&lt;&amp;                                <span class="comment"># 将标准输入 dump / 合并 定向为描述符 n</span></span><br><span class="line">n&gt;&amp;m                               <span class="comment"># 文件描述符 n 被作为描述符 m 的副本，输出用 </span></span><br><span class="line">n&lt;&amp;m                               <span class="comment"># 文件描述符 n 被作为描述符 m 的副本，输入用 </span></span><br><span class="line">&amp;&gt;file                             <span class="comment"># 将标准输出和标准错误重定向到文件 </span></span><br><span class="line">&lt;&amp;-                                <span class="comment"># 关闭标准输入 </span></span><br><span class="line">&gt;&amp;-                                <span class="comment"># 关闭标准输出 </span></span><br><span class="line">n&gt;&amp;-                               <span class="comment"># 关闭作为输出的文件描述符 n</span></span><br><span class="line">n&lt;&amp;-                               <span class="comment"># 关闭作为输入的文件描述符 n</span></span><br><span class="line">diff &lt;(cmd1) &lt;(cmd2)               <span class="comment"># 比较两个命令的输出 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 文本处理 - cut</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">cut -c 1-16                        <span class="comment"># 截取每行头 16 个字符 </span></span><br><span class="line">cut -c 1-16 file                   <span class="comment"># 截取指定文件中每行头 16 个字符 </span></span><br><span class="line">cut -c3-                           <span class="comment"># 截取每行从第三个字符开始到行末的内容 </span></span><br><span class="line">cut -d<span class="string">':'</span> -f5                      <span class="comment"># 截取用冒号分隔的第五列内容 </span></span><br><span class="line">cut -d<span class="string">';'</span> -f2,10                   <span class="comment"># 截取用分号分隔的第二和第十列内容 </span></span><br><span class="line">cut -d<span class="string">''</span> -f3-7                    <span class="comment"># 截取空格分隔的三到七列 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"hello"</span> | cut -c1-3           <span class="comment"># 显示 hel</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"hello sir"</span> | cut -d<span class="string">' '</span> -f2   <span class="comment"># 显示 sir</span></span><br><span class="line">ps | tr -s <span class="string">" "</span> | cut -d <span class="string">" "</span> -f 2,3,4  <span class="comment"># cut 搭配 tr 压缩字符 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 文本处理 - awk / sed </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">awk <span class="string">'&#123;print $5&#125;'</span> file              <span class="comment"># 打印文件中以空格分隔的第五列 </span></span><br><span class="line">awk -F <span class="string">','</span> <span class="string">'&#123;print $5&#125;'</span> file       <span class="comment"># 打印文件中以逗号分隔的第五列 </span></span><br><span class="line">awk <span class="string">'/str/ &#123;print $2&#125;'</span> file        <span class="comment"># 打印文件中包含 str 的所有行的第二列 </span></span><br><span class="line">awk -F <span class="string">','</span> <span class="string">'&#123;print $NF&#125;'</span> file      <span class="comment"># 打印逗号分隔的文件中的每行最后一列 </span></span><br><span class="line">awk <span class="string">'&#123;s+=$1&#125; END &#123;print s&#125;'</span> file   <span class="comment"># 计算所有第一列的合 </span></span><br><span class="line">awk <span class="string">'NR%3==1'</span> file                 <span class="comment"># 从第一行开始，每隔三行打印一行 </span></span><br><span class="line"></span><br><span class="line">sed <span class="string">'s/find/replace/'</span> file         <span class="comment"># 替换文件中首次出现的字符串并输出结果 </span></span><br><span class="line">sed <span class="string">'10s/find/replace/'</span> file       <span class="comment"># 替换文件第 10 行内容 </span></span><br><span class="line">sed <span class="string">'10,20s/find/replace/'</span> file    <span class="comment"># 替换文件中 10-20 行内容 </span></span><br><span class="line">sed -r <span class="string">'s/regex/replace/g'</span> file    <span class="comment"># 替换文件中所有出现的字符串 </span></span><br><span class="line">sed -i <span class="string">'s/find/replace/g'</span> file     <span class="comment"># 替换文件中所有出现的字符并且覆盖文件 </span></span><br><span class="line">sed -i <span class="string">'/find/i\newline'</span> file      <span class="comment"># 在文件的匹配文本前插入行 </span></span><br><span class="line">sed -i <span class="string">'/find/a\newline'</span> file      <span class="comment"># 在文件的匹配文本后插入行 </span></span><br><span class="line">sed <span class="string">'/line/s/find/replace/'</span> file   <span class="comment"># 先搜索行特征再执行替换 </span></span><br><span class="line">sed -e <span class="string">'s/f/r/'</span> -e <span class="string">'s/f/r'</span> file    <span class="comment"># 执行多次替换 </span></span><br><span class="line">sed <span class="string">'s#find#replace#'</span> file         <span class="comment"># 使用 # 替换 / 来避免 pattern 中有斜杆 </span></span><br><span class="line">sed -i -r <span class="string">'s/^\s+//g'</span> file         <span class="comment"># 删除文件每行头部空格 </span></span><br><span class="line">sed <span class="string">'/^$/d'</span> file                   <span class="comment"># 删除文件空行并打印 </span></span><br><span class="line">sed -i <span class="string">'s/\s\+$//'</span> file            <span class="comment"># 删除文件每行末尾多余空格 </span></span><br><span class="line">sed -n <span class="string">'2p'</span> file                   <span class="comment"># 打印文件第二行 </span></span><br><span class="line">sed -n <span class="string">'2,5p'</span> file                 <span class="comment"># 打印文件第二到第五行 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 排序 - sort</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">sort file                          <span class="comment"># 排序文件 </span></span><br><span class="line">sort -r file                       <span class="comment"># 反向排序（降序）</span></span><br><span class="line">sort -n file                       <span class="comment"># 使用数字而不是字符串进行比较 </span></span><br><span class="line">sort -t: -k 3n /etc/passwd         <span class="comment"># 按 passwd 文件的第三列进行排序 </span></span><br><span class="line">sort -u file                       <span class="comment"># 去重排序 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 快速跳转 - https://github.com/rupa/z</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /path/to/z.sh               <span class="comment"># .bashrc 中初始化 z.sh</span></span><br><span class="line">z                                  <span class="comment"># 列出所有历史路径以及他们的权重 </span></span><br><span class="line">z foo                              <span class="comment"># 跳到历史路径中匹配 foo 的权重最大的目录 </span></span><br><span class="line">z foo bar                          <span class="comment"># 跳到历史路径中匹配 foo 和 bar 权重最大的目录 </span></span><br><span class="line">z -l foo                           <span class="comment"># 列出所有历史路径中匹配 foo 的目录及权重 </span></span><br><span class="line">z -r foo                           <span class="comment"># 按照最高访问次数优先进行匹配跳转 </span></span><br><span class="line">z -t foo                           <span class="comment"># 按照最近访问优先进行匹配跳转 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 键盘绑定 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\eh":"\C-b"'</span>                <span class="comment"># 绑定 ALT+h 为光标左移，同 CTRL+b / &lt;Left&gt;</span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\el":"\C-f"'</span>                <span class="comment"># 绑定 ALT+l 为光标右移，同 CTRL+f / &lt;Right&gt;</span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\ej":"\C-n"'</span>                <span class="comment"># 绑定 ALT+j 为下条历史，同 CTRL+n / &lt;Down&gt;</span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\ek":"\C-p"'</span>                <span class="comment"># 绑定 ALT+k 为上条历史，同 CTRL+p / &lt;Up&gt;</span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\eH":"\eb"'</span>                 <span class="comment"># 绑定 ALT+H 为光标左移一个单词，同 ALT-b </span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\eL":"\ef"'</span>                 <span class="comment"># 绑定 ALT+L 为光标右移一个单词，同 ALT-f </span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\eJ":"\C-a"'</span>                <span class="comment"># 绑定 ALT+J 为移动到行首，同 CTRL+a / &lt;Home&gt;</span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\eK":"\C-e"'</span>                <span class="comment"># 绑定 ALT+K 为移动到行末，同 CTRL+e / &lt;End&gt;</span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\e;":"ls -l\n"'</span>             <span class="comment"># 绑定 ALT+; 为执行 ls -l 命令 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 网络管理：ip / ifconfig / nmap ...</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">ip a                               <span class="comment"># 显示所有网络地址，同 ip address</span></span><br><span class="line">ip a show eth1                     <span class="comment"># 显示网卡 IP 地址 </span></span><br><span class="line">ip a add 172.16.1.23/24 dev eth1   <span class="comment"># 添加网卡 IP 地址 </span></span><br><span class="line">ip a del 172.16.1.23/24 dev eth1   <span class="comment"># 删除网卡 IP 地址 </span></span><br><span class="line">ip link show dev eth0              <span class="comment"># 显示网卡设备属性 </span></span><br><span class="line">ip link <span class="built_in">set</span> eth1 up                <span class="comment"># 激活网卡 </span></span><br><span class="line">ip link <span class="built_in">set</span> eth1 down              <span class="comment"># 关闭网卡 </span></span><br><span class="line">ip link <span class="built_in">set</span> eth1 address &#123;mac&#125;     <span class="comment"># 修改 MAC 地址 </span></span><br><span class="line">ip neighbour                       <span class="comment"># 查看 ARP 缓存 </span></span><br><span class="line">ip route                           <span class="comment"># 查看路由表 </span></span><br><span class="line">ip route add 10.1.0.0/24 via 10.0.0.253 dev eth0    <span class="comment"># 添加静态路由 </span></span><br><span class="line">ip route del 10.1.0.0/24           <span class="comment"># 删除静态路由 </span></span><br><span class="line"></span><br><span class="line">ifconfig                           <span class="comment"># 显示所有网卡和接口信息 </span></span><br><span class="line">ifconfig -a                        <span class="comment"># 显示所有网卡（包括开机没启动的）信息 </span></span><br><span class="line">ifconfig eth0                      <span class="comment"># 指定设备显示信息 </span></span><br><span class="line">ifconfig eth0 up                   <span class="comment"># 激活网卡 </span></span><br><span class="line">ifconfig eth0 down                 <span class="comment"># 关闭网卡 </span></span><br><span class="line">ifconfig eth0 192.168.120.56       <span class="comment"># 给网卡配置 IP 地址 </span></span><br><span class="line">ifconfig eth0 10.0.0.8 netmask 255.255.255.0 up     <span class="comment"># 配置 IP 并启动 </span></span><br><span class="line">ifconfig eth0 hw ether 00:aa:bb:cc:dd:ee            <span class="comment"># 修改 MAC 地址 </span></span><br><span class="line"></span><br><span class="line">nmap 10.0.0.12                     <span class="comment"># 扫描主机 1-1000 端口 </span></span><br><span class="line">nmap -p 1024-65535 10.0.0.12       <span class="comment"># 扫描给定端口 </span></span><br><span class="line">nmap 10.0.0.0/24                   <span class="comment"># 给定网段扫描局域网内所有主机 </span></span><br><span class="line">nmap -O -sV 10.0.0.12              <span class="comment"># 探测主机服务和操作系统版本 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 有趣的命令 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">man hier                           <span class="comment"># 查看文件系统的结构和含义 </span></span><br><span class="line">man <span class="built_in">test</span>                           <span class="comment"># 查看 posix sh 的条件判断帮助 </span></span><br><span class="line">man ascii                          <span class="comment"># 显示 ascii 表 </span></span><br><span class="line">getconf LONG_BIT                   <span class="comment"># 查看系统是 32 位还是 64 位 </span></span><br><span class="line"><span class="built_in">bind</span> -P                            <span class="comment"># 列出所有 bash 的快捷键 </span></span><br><span class="line">mount | column -t                  <span class="comment"># 漂亮的列出当前加载的文件系统 </span></span><br><span class="line">curl ip.cn                         <span class="comment"># 取得外网 ip 地址和服务商信息 </span></span><br><span class="line"><span class="built_in">disown</span> -a &amp;&amp; <span class="built_in">exit</span>                  <span class="comment"># 关闭所有后台任务并退出 </span></span><br><span class="line">cat /etc/issue                     <span class="comment"># 查看 Linux 发行版信息 </span></span><br><span class="line">lsof -i port:80                    <span class="comment"># 哪个程序在使用 80 端口？</span></span><br><span class="line">showkey -a                         <span class="comment"># 取得按键的 ASCII 码 </span></span><br><span class="line">svn diff | view -                  <span class="comment"># 使用 Vim 来显示带色彩的 diff 输出 </span></span><br><span class="line">mv filename.&#123;old,new&#125;              <span class="comment"># 快速文件改名 </span></span><br><span class="line">time <span class="built_in">read</span>                          <span class="comment"># 使用 CTRL-D 停止，最简单的计时功能 </span></span><br><span class="line">cp file.txt&#123;,.bak&#125;                 <span class="comment"># 快速备份文件 </span></span><br><span class="line">sudo touch /forcefsck              <span class="comment"># 强制在下次重启时扫描磁盘 </span></span><br><span class="line">find ~ -mmin 60 -<span class="built_in">type</span> f            <span class="comment"># 查找 $HOME 目录中，60 分钟内修改过的文件 </span></span><br><span class="line">curl wttr.in/~beijing              <span class="comment"># 查看北京的天气预报 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;SSH_CLIENT%% *&#125;</span>             <span class="comment"># 取得你是从什么 IP 链接到当前主机上的 </span></span><br><span class="line"><span class="built_in">echo</span> $[RANDOM%X+1]                 <span class="comment"># 取得 1 到 X 之间的随机数 </span></span><br><span class="line"><span class="built_in">bind</span> -x <span class="string">'"\C-l":ls -l'</span>             <span class="comment"># 设置 CTRL+l 为执行 ls -l 命令 </span></span><br><span class="line">find / -<span class="built_in">type</span> f -size +5M           <span class="comment"># 查找大于 5M 的文件 </span></span><br><span class="line">chmod --reference f1 f2            <span class="comment"># 将 f2 的权限设置成 f1 一模一样的 </span></span><br><span class="line">curl -L cheat.sh                   <span class="comment"># 速查表大全 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 常用技巧 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出最常使用的命令 </span></span><br><span class="line"><span class="built_in">history</span> | awk <span class="string">'&#123;a[$2]++&#125;END&#123;for(i in a)&#123;print a[i]" "i&#125;&#125;'</span> | sort -rn | head</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有网络状态：ESTABLISHED / TIME_WAIT / FIN_WAIT1 / FIN_WAIT2 </span></span><br><span class="line">netstat -n | awk <span class="string">'/^tcp/ &#123;++tt[$NF]&#125; END &#123;for (a in tt) print a, tt[a]&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过 SSH 来 mount 文件系统 </span></span><br><span class="line">sshfs name@server:/path/to/folder /path/to/mount/point</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示前十个运行的进程并按内存使用量排序 </span></span><br><span class="line">ps aux | sort -nk +4 | tail</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在右上角显示时钟 </span></span><br><span class="line"><span class="keyword">while</span> sleep 1;<span class="keyword">do</span> tput sc;tput cup 0 $(($(tput cols)-29));date;tput rc;<span class="keyword">done</span>&amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从网络上的压缩文件中解出一个文件来，并避免保存中间文件 </span></span><br><span class="line">wget -qO - <span class="string">"http://www.tarball.com/tarball.gz"</span> | tar zxvf -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 性能测试：测试处理器性能 </span></span><br><span class="line">python -c <span class="string">"import test.pystone;print(test.pystone.pystones())"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 性能测试：测试内存带宽 </span></span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/dev/null bs=1M count=32768</span><br><span class="line"></span><br><span class="line"><span class="comment"># Linux 下挂载一个 iso 文件 </span></span><br><span class="line">mount /path/to/file.iso /mnt/cdrom -oloop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过主机 A 直接 ssh 到主机 B</span></span><br><span class="line">ssh -t hostA ssh hostB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载一个网站的所有图片 </span></span><br><span class="line">wget -r -l1 --no-parent -nH -nd -P/tmp -A<span class="string">".gif,.jpg"</span> http://example.com/images</span><br><span class="line"></span><br><span class="line"><span class="comment"># 快速创建项目目录 </span></span><br><span class="line">mkdir -p work/&#123;project1,project2&#125;/&#123;src,bin,bak&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按日期范围查找文件 </span></span><br><span class="line">find . -<span class="built_in">type</span> f -newermt <span class="string">"2010-01-01"</span> ! -newermt <span class="string">"2010-06-01"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前正在使用网络的进程 </span></span><br><span class="line">lsof -P -i -n | cut -f 1 -d <span class="string">""</span>| uniq | tail -n +2</span><br><span class="line"></span><br><span class="line"><span class="comment"># Vim 中保存一个没有权限的文件 </span></span><br><span class="line">:w !sudo tee &gt; /dev/null %</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 .bashrc / .bash_profile 中加载另外一个文件（比如你保存在 github 上的配置）</span></span><br><span class="line"><span class="built_in">source</span> ~/github/profiles/my_bash_init.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 反向代理：将外网主机（202.115.8.1）端口（8443）转发到内网主机 192.168.1.2:443</span></span><br><span class="line">ssh -CqTnN -R 0.0.0.0:8443:192.168.1.2:443  user@202.115.8.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正向代理：将本地主机的 8443 端口，通过 192.168.1.3 转发到 192.168.1.2:443 </span></span><br><span class="line">ssh -CqTnN -L 0.0.0.0:8443:192.168.1.2:443  user@192.168.1.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># socks5 代理：把本地 1080 端口的 socks5 的代理请求通过远程主机转发出去 </span></span><br><span class="line">ssh -CqTnN -D localhost:1080  user@202.115.8.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 终端下正确设置 ALT 键和 BackSpace 键 </span></span><br><span class="line">http://www.skywind.me/blog/archives/2021</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 有用的函数 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动解压：判断文件后缀名并调用相应解压命令 </span></span><br><span class="line"><span class="keyword">function</span> q-<span class="function"><span class="title">extract</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [ -f <span class="variable">$1</span> ] ; <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">        *.tar.bz2)   tar -xvjf <span class="variable">$1</span>    ;;</span><br><span class="line">        *.tar.gz)    tar -xvzf <span class="variable">$1</span>    ;;</span><br><span class="line">        *.tar.xz)    tar -xvJf <span class="variable">$1</span>    ;;</span><br><span class="line">        *.bz2)       bunzip2 <span class="variable">$1</span>     ;;</span><br><span class="line">        *.rar)       rar x <span class="variable">$1</span>       ;;</span><br><span class="line">        *.gz)        gunzip <span class="variable">$1</span>      ;;</span><br><span class="line">        *.tar)       tar -xvf <span class="variable">$1</span>     ;;</span><br><span class="line">        *.tbz2)      tar -xvjf <span class="variable">$1</span>    ;;</span><br><span class="line">        *.tgz)       tar -xvzf <span class="variable">$1</span>    ;;</span><br><span class="line">        *.zip)       unzip <span class="variable">$1</span>       ;;</span><br><span class="line">        *.Z)         uncompress <span class="variable">$1</span>  ;;</span><br><span class="line">        *.7z)        7z x <span class="variable">$1</span>        ;;</span><br><span class="line">        *)           <span class="built_in">echo</span> <span class="string">"don't know how to extract'<span class="variable">$1</span>'..."</span> ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"'<span class="variable">$1</span>' is not a valid file!"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动压缩：判断后缀名并调用相应压缩程序 </span></span><br><span class="line"><span class="keyword">function</span> q-<span class="function"><span class="title">compress</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$1</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">        FILE=<span class="variable">$1</span></span><br><span class="line">        <span class="keyword">case</span> <span class="variable">$FILE</span> <span class="keyword">in</span></span><br><span class="line">        *.tar) <span class="built_in">shift</span> &amp;&amp; tar -cf <span class="variable">$FILE</span> $* ;;</span><br><span class="line">        *.tar.bz2) <span class="built_in">shift</span> &amp;&amp; tar -cjf <span class="variable">$FILE</span> $* ;;</span><br><span class="line">        *.tar.xz) <span class="built_in">shift</span> &amp;&amp; tar -cJf <span class="variable">$FILE</span> $* ;;</span><br><span class="line">        *.tar.gz) <span class="built_in">shift</span> &amp;&amp; tar -czf <span class="variable">$FILE</span> $* ;;</span><br><span class="line">        *.tgz) <span class="built_in">shift</span> &amp;&amp; tar -czf <span class="variable">$FILE</span> $* ;;</span><br><span class="line">        *.zip) <span class="built_in">shift</span> &amp;&amp; zip <span class="variable">$FILE</span> $* ;;</span><br><span class="line">        *.rar) <span class="built_in">shift</span> &amp;&amp; rar <span class="variable">$FILE</span> $* ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"usage: q-compress &lt;foo.tar.gz&gt; ./foo ./bar"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 漂亮的带语法高亮的 color cat ，需要先 pip install pygments</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">ccat</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> style=<span class="string">"monokai"</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$#</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">        pygmentize -P style=<span class="variable">$style</span> -P tabsize=4 -f terminal256 -g</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span> NAME <span class="keyword">in</span> <span class="variable">$@</span>; <span class="keyword">do</span></span><br><span class="line">            pygmentize -P style=<span class="variable">$style</span> -P tabsize=4 -f terminal256 -g <span class="string">"<span class="variable">$NAME</span>"</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 好玩的配置 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 放到你的 ~/.bashrc 配置文件中，给 man 增加漂亮的色彩高亮 </span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_mb=$<span class="string">'\E[1m\E[32m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_mh=$<span class="string">'\E[2m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_mr=$<span class="string">'\E[7m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_md=$<span class="string">'\E[1m\E[36m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_ZW=<span class="string">""</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_us=$<span class="string">'\E[4m\E[1m\E[37m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_me=$<span class="string">'\E(B\E[m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_ue=$<span class="string">'\E[24m\E(B\E[m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_ZO=<span class="string">""</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_ZN=<span class="string">""</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_se=$<span class="string">'\E[27m\E(B\E[m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_ZV=<span class="string">""</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_so=$<span class="string">'\E[1m\E[33m\E[44m'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ALT+hjkl/HJKL 快速移动光标，将下面内容添加到 ~/.inputrc 中可作用所有工具，</span></span><br><span class="line"><span class="comment"># 包括 bash/zsh/python/lua 等使用 readline 的工具，帮助见：info rluserman</span></span><br><span class="line"><span class="string">"\eh"</span>: backward-char</span><br><span class="line"><span class="string">"\el"</span>: forward-char</span><br><span class="line"><span class="string">"\ej"</span>: next-history</span><br><span class="line"><span class="string">"\ek"</span>: previous-history</span><br><span class="line"><span class="string">"\eH"</span>: backward-word</span><br><span class="line"><span class="string">"\eL"</span>: forward-word</span><br><span class="line"><span class="string">"\eJ"</span>: beginning-of-line</span><br><span class="line"><span class="string">"\eK"</span>: end-of-line</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># References</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">https://github.com/Idnan/bash-guide</span><br><span class="line">http://www.linuxstall.com/linux-command-line-tips-that-every-linux-user-should-know/</span><br><span class="line">https://ss64.com/bash/syntax-keyboard.html</span><br><span class="line">http://wiki.bash-hackers.org/commands/classictest</span><br><span class="line">https://www.ibm.com/developerworks/library/l-bash-test/index.html</span><br><span class="line">https://www.cyberciti.biz/faq/bash-loop-over-file/</span><br><span class="line">https://linuxconfig.org/bash-scripting-tutorial</span><br><span class="line">https://github.com/LeCoupa/awesome-cheatsheets/blob/master/languages/bash.sh</span><br><span class="line">https://devhints.io/bash</span><br><span class="line">https://github.com/jlevy/the-art-of-command-line</span><br><span class="line">https://yq.aliyun.com/articles/68541</span><br><span class="line"></span><br><span class="line"><span class="comment"># vim: set ts=4 sw=4 tw=0 et :</span></span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://github.com/wangdoc/bash-tutorial" target="_blank" rel="noopener">Bash 教程 </a></p><p><a href="https://learnxinyminutes.com/docs/zh-cn/bash-cn/" target="_blank" rel="noopener">LearnBash-cn.sh</a></p><p><a href="https://github.com/skywind3000/awesome-cheatsheets/blob/master/languages/bash.sh" target="_blank" rel="noopener">Bash awesome-cheatsheets</a></p><p><a href="https://github.com/OMGZui/bash-step-to-step" target="_blank" rel="noopener">bash-step-to-step</a></p><p><a href="https://mp.weixin.qq.com/s/9RbTGQ4k4s92mrSf2xJ5TQ" target="_blank" rel="noopener">Linux 上，最常用的一批命令解析（10 年精选）</a></p>]]></content>
    
    <summary type="html">
    
      Bash命令语法和Bash Cheat Sheet中文速查表
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>IP2Location Nginx Module 配置使用小结</title>
    <link href="https://wsgzao.github.io/post/ip2location/"/>
    <id>https://wsgzao.github.io/post/ip2location/</id>
    <published>2020-04-21T06:59:49.000Z</published>
    <updated>2020-04-22T09:59:25.989Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>IP2Location 主要是用于代替 MaxMind GeoIP，原因是 GeoIP 数据库针对中国的 Blacklist 黑名单有非常高的误伤率，选择 IP2Location 可以有效降低误伤，为了业务需求得及时做出改变。在使用 IP2Location 的过程中发现官网的步骤还是存在一些问题，这里记录和分享下自己逐步解决问题的过程。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 04 月 21 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/ip2location/">https://wsgzao.github.io/post/ip2location/</a></p><hr><h2 id="GeoIP-和-IP2Location-简介"><a href="#GeoIP-和-IP2Location-简介" class="headerlink" title="GeoIP 和 IP2Location 简介"></a>GeoIP 和 IP2Location 简介</h2><p><a href="https://dev.maxmind.com/geoip/" target="_blank" rel="noopener">GeoIP</a>是一套含 IP 数据库的软件工具。除此之外还有 <a href="https://www.ip2location.com/" target="_blank" rel="noopener">IP2Location</a> 等，国内做得比较深入的是高春辉创建的<a href="https://www.ipip.net/" target="_blank" rel="noopener">IPIP.NET</a></p><p>Geo 根据来访者的 IP， 定位该 IP 所在经纬度、国家 / 地区、省市、和街道等位置信息。</p><p>GeoIP/IP2Location 等通常有两个版本，一个免费版，一个收费版本。</p><p>收费版本的准确率高一些，更新频率也更频繁。</p><p>Geo IP solution to identify country, region, city, latitude &amp; longitude, ZIP code, time zone, connection speed, ISP, domain name, IDD country code, area code, weather station data, mobile network codes (MNC), mobile country codes (MCC), mobile carrier, elevation and usage type.</p><p>GeoIP 是大家都非常熟悉的老字号，而这次的主角是 IP2Location</p><h2 id="IP2Location-Nginx-Module"><a href="#IP2Location-Nginx-Module" class="headerlink" title="IP2Location Nginx Module"></a>IP2Location Nginx Module</h2><p>This is an IP2Location Nginx Module that enables the user to identify the country code and country name by IP address. In general, it is faster, easier and more accurate than reverse DNS lookups.</p><p><a href="https://www.ip2location.com/development-libraries/ip2location/nginx" target="_blank" rel="noopener">https://www.ip2location.com/development-libraries/ip2location/nginx</a></p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><p>IP2Location C library enables the user to find the country, region, city, coordinates, ZIP code, time zone, ISP, domain name, connection type, area code, weather, MCC, MNC, mobile brand name, elevation and usage type that any IP address or hostname originates from. It has been optimized for speed and memory utilization. Developers can use the API to query all IP2Location™ binary databases for IPv4 and IPv6 address.</p><ul><li>Download IP2location C library from <a href="https://www.ip2location.com/development-libraries/ip2location/c" target="_blank" rel="noopener">here</a>.</li><li>Download and decompress this Nginx module package.</li><li>Change the path to IP2Location library in “ngx_http_ip2location_module.c”.</li><li><p>Re-compile Nginx from source to include this module. Add the below directive into the compile of Nginx:</p><p>./configure --add-module=/absolute/path/to/nginx-ip2location-8.0.0<br>make<br>make install</p></li><li><p>Edit your Nginx config file to point the correct path of IP2Location database file:</p><p>ip2location_database /absolute/path/to/IP2LOCATION-DB1.BIN;</p></li></ul><h3 id="安装备注"><a href="#安装备注" class="headerlink" title="安装备注"></a>安装备注</h3><p>IP2Location 官方的执行步骤存在一些问题没有说清楚，这里分享自己实践后的步骤和结论</p><blockquote><p>安装依赖包</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># These are for RedHat, CentOS, and Fedora.</span></span><br><span class="line">sudo yum install wget git gcc-c++ pcre-devel zlib-devel make libtool autoconf automake</span><br><span class="line"></span><br><span class="line"><span class="comment"># These are for Debian. Ubuntu will be similar.</span></span><br><span class="line">sudo apt-get install wget git build-essential zlib1g-dev libpcre3 libpcre3-dev libtool autoconf automake</span><br></pre></td></tr></table></figure><blockquote><p>编译 IP2Location C library</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/chrislim2888/IP2Location-C-Library</span><br><span class="line"><span class="built_in">cd</span> IP2Location-C-Library</span><br><span class="line">autoreconf -i -v --force</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="comment"># 以下步骤可选</span></span><br><span class="line"><span class="built_in">cd</span> data</span><br><span class="line">perl ip-country.pl</span><br><span class="line"><span class="built_in">cd</span> ../<span class="built_in">test</span></span><br><span class="line">./<span class="built_in">test</span>-IP2Location</span><br></pre></td></tr></table></figure><blockquote><p>编译 Nginx</p></blockquote><p><a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">nginx: download</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Download ip2location-nginx</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/ip2location/ip2location-nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># IP2Location library in "ngx_http_ip2location_module.c"</span></span><br><span class="line"><span class="built_in">cd</span> ip2location-nginx</span><br><span class="line">vim ngx_http_ip2location_module.c</span><br><span class="line"><span class="comment">#include "IP2Location.h"</span></span><br><span class="line"><span class="comment">#include "/root/ip2location/IP2Location-C-Library-master/libIP2Location/IP2Location.h"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Download Nginx Stable version</span></span><br><span class="line">VERSION=<span class="string">"1.16.1"</span></span><br><span class="line">wget http://nginx.org/download/nginx-<span class="variable">$&#123;VERSION&#125;</span>.tar.gz </span><br><span class="line">tar -xvzf nginx-<span class="variable">$&#123;VERSION&#125;</span>.tar.gz </span><br><span class="line"><span class="built_in">cd</span> nginx-<span class="variable">$&#123;VERSION&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Compile Nginx</span></span><br><span class="line">./configure --add-module=../ip2location-nginx</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># error: Failed dependencies:</span></span><br><span class="line"><span class="comment"># libIP2Location.so.1()(64bit) is needed by nginx-garena-1.16.1-0.noarch</span></span><br><span class="line"><span class="comment"># 一般编译 nginx 二进制文件不会出现该问题，如果你使用 rpmbuild 打包就要注意了</span></span><br><span class="line">rpm -Uvh https://rpms.remirepo.net/enterprise/7/remi/x86_64/libip2location-8.0.7-1.el7.remi.x86_64.rpm</span><br></pre></td></tr></table></figure><h2 id="IP2Location-Database-Download"><a href="#IP2Location-Database-Download" class="headerlink" title="IP2Location Database Download"></a>IP2Location Database Download</h2><p>IP2Location offers 5 free LITE databases and 24 commercial IP geolocation databases. Free database is less accurate comparing to commercial database.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create new directory for IP2Location database.</span></span><br><span class="line">mkdir -p /usr/share/ip2location</span><br><span class="line"><span class="built_in">cd</span> /usr/share/ip2location</span><br><span class="line"></span><br><span class="line"><span class="comment"># Go to https://lite.ip2location.com. Sign up an account for login and password.</span></span><br><span class="line"><span class="comment"># Download and decompress the latest IP2Location LITE database.</span></span><br><span class="line">wget http://download.ip2location.com/lite/IP2LOCATION-LITE-DB1.BIN.ZIP</span><br><span class="line">unzip IP2LOCATION-LITE-DB1.BIN.ZIP</span><br></pre></td></tr></table></figure><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>You need to configure Nginx to use IP2LOCATION module.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Edit</span></span><br><span class="line">vi /etc/nginx/nginx.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add following lines under `http` context:</span></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">ip2location on;</span><br><span class="line">ip2location_database /usr/share/ip2location/IP2LOCATION-LITE-DB1.BIN;</span><br><span class="line"><span class="comment">#ip2location_database /usr/share/ip2location/IP-COUNTRY-REGION-CITY-LATITUDE-LONGITUDE-ZIPCODE-ISP-DOMAIN.BIN</span></span><br><span class="line">ip2location_access_type shared_memory;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可选参数 ip2location_access_type file_io|shared_memory|cache_memory<br>默认为 shared_memory<br>建议不要选择 file_io， 否则可能会严重拖慢响应速度</p><h2 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax"></a>Syntax</h2><p>Syntax: <code>ip2location on|off</code><br>Default: off<br>Context: http, server, location<br>Description: Enable or disable IP2LOCATION Nginx module.</p><p>Syntax: <code>ip2location_database path</code><br>Default: none<br>Context: http<br>Description: The absolute path to IP2LOCATION BIN database.</p><p>Syntax: <code>ip2location_access_type file_io|shared_memory|cache_memory</code><br>Default: shared_memory<br>Context: http<br>Description: Set the method used for lookup.</p><p>Syntax: <code>ip2location_proxy cidr|address</code><br>Default: none<br>Context: http<br>Description: Set a list of proxies to translate x-forwarded-for headers for.</p><p>Syntax: <code>ip2location_proxy_recursive on|off</code><br>Default: off<br>Context: http<br>Description: Enable recursive search in the x-forwarded-for headers.</p><h2 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h2><p>The following variables will be made available in Nginx: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ip2location_country_short</span><br><span class="line">ip2location_country_long</span><br><span class="line">ip2location_region</span><br><span class="line">ip2location_city</span><br><span class="line">ip2location_isp</span><br><span class="line">ip2location_latitude</span><br><span class="line">ip2location_longitude</span><br><span class="line">ip2location_domain</span><br><span class="line">ip2location_zipcode</span><br><span class="line">ip2location_timezone</span><br><span class="line">ip2location_netspeed</span><br><span class="line">ip2location_iddcode</span><br><span class="line">ip2location_areacode</span><br><span class="line">ip2location_weatherstationcode</span><br><span class="line">ip2location_weatherstationname</span><br><span class="line">ip2location_mcc</span><br><span class="line">ip2location_mnc</span><br><span class="line">ip2location_elevation</span><br><span class="line">ip2location_usagetype</span><br></pre></td></tr></table></figure><p>You may block the traffic from United States in Nginx as below:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( <span class="variable">$ip2location_country_short</span> = <span class="string">'US'</span> ) &#123;</span><br><span class="line">    <span class="built_in">return</span> 444;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="variable">$ip2location_country_short</span> = <span class="string">'SG'</span> ) &#123;</span><br><span class="line">    <span class="built_in">return</span> 444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>还可以参照 GeoIP 的配置方法</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">map $ip2location_country_short $blacklist_country &#123;</span><br><span class="line">    default no;</span><br><span class="line">    CN yes;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name wangao.com;</span><br><span class="line">        if ($blacklist_country = yes) &#123;</span><br><span class="line">            return 444;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>浏览器访问检查 nginx log 结果</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tailf /var/log/nginx/access.log</span><br><span class="line"></span><br><span class="line">xxx - - [21/Apr/2020:17:18:11 +0800] &quot;GET / HTTP/1.1&quot; 200 396 &quot;-&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36&quot;</span><br><span class="line"></span><br><span class="line">xxx - - [21/Apr/2020:17:18:42 +0800] &quot;GET / HTTP/1.1&quot; 444 0 &quot;-&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36&quot;</span><br></pre></td></tr></table></figure><h2 id="IP2Location-Python-Library"><a href="#IP2Location-Python-Library" class="headerlink" title="IP2Location Python Library"></a>IP2Location Python Library</h2><p>This module is a Python Library to support all IP2Location™ database products. It has been optimized for speed and memory utilization. Developers can use this API to query all IP2Location™ binary databases for IPv4 and IPv6 address.</p><p><a href="https://www.ip2location.com/development-libraries/ip2location/python" target="_blank" rel="noopener">https://www.ip2location.com/development-libraries/ip2location/python</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> IP2Location</span><br><span class="line"> </span><br><span class="line">IP2LocObj = IP2Location.IP2Location()</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    Cache the database into memory to accelerate lookup speed.</span></span><br><span class="line"><span class="string">    WARNING: Please make sure your system have sufficient RAM to use this feature.</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment"># database = IP2Location.IP2Location(os.path.join("data", "IPV6-COUNTRY.BIN"), "SHARED_MEMORY")</span></span><br><span class="line">IP2LocObj.open(<span class="string">"data/IP-COUNTRY-REGION-CITY-LATITUDE-LONGITUDE-ZIPCODE-TIMEZONE-ISP-DOMAIN-NETSPEED-AREACODE-WEATHER-MOBILE-ELEVATION-USAGETYPE-SAMPLE.BIN"</span>)</span><br><span class="line">rec = IP2LocObj.get_all(<span class="string">"19.5.10.1"</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">print</span> rec.country_short</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> IP2Location</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ip2location_search</span><span class="params">(ip, db)</span>:</span></span><br><span class="line">    IP2LocObj = IP2Location.IP2Location()</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">        Cache the database into memory to accelerate lookup speed.</span></span><br><span class="line"><span class="string">        WARNING: Please make sure your system have sufficient RAM to use this feature.</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">    <span class="comment"># database = IP2Location.IP2Location(os.path.join("data", "IPV6-COUNTRY.BIN"), "SHARED_MEMORY")</span></span><br><span class="line">    IP2LocObj.open(db)</span><br><span class="line">    rec = IP2LocObj.get_all(ip)</span><br><span class="line">    <span class="keyword">print</span> rec.country_short</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_parse_args</span><span class="params">()</span>:</span></span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">"Search IP in IP2Location Database"</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"-i"</span>, <span class="string">"--ip"</span>, help=<span class="string">"Input ip"</span>, required=<span class="keyword">True</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"-d"</span>, <span class="string">"--db"</span>, help=<span class="string">"Path to ip2location db"</span>, required=<span class="keyword">True</span>)</span><br><span class="line">    <span class="keyword">return</span> parser.parse_args()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    args = _parse_args()</span><br><span class="line">    ip = args.ip</span><br><span class="line">    db = args.db</span><br><span class="line">    ip2location_search(ip, db)</span><br></pre></td></tr></table></figure><h2 id="Country-blocking-using-Nginx-with-IP2Location-Module"><a href="#Country-blocking-using-Nginx-with-IP2Location-Module" class="headerlink" title="Country blocking using Nginx with IP2Location Module"></a>Country blocking using Nginx with IP2Location Module</h2><p>After few days of trying, trying and trying, finally find out the way to compile the IP2Location module into the Nginx in Ubuntu server. I try to compare multiple way of doing the country block with Nginx, where in my previous post, the country blocking is done with GeoIP module (which I found out more easy compare to the IP2Location module), and also the country block without any 3rd party plugin for Nginx, with this method, that’s no any compilation of Nginx needed in order to make it, it’s most suitable for the current running Nginx which install directly from the APT repo.</p><p>IP2Location is one of the most famous IP location provider in the market and they are from Penang. I being use their service since many years ago and that’s the reason why I wanna try out to doing the Nginx country block with IP2Location module.</p><p>I can’t really find a full and complete step on the installing and compiling of the module, that’s why it take me many days to figure out how to make the whole thing work nicely.</p><p>The following script basically just download all necessary module source code (OpenSSL, PCRE, IP2Location C module, IP2Lacation Nginx module, Nginx 1.15 .0 source code) and compile all. After that, create the system service and put the Nginx into auto start mode and include the IP2Location database into Nginx.conf. Beside that, I also include the script to auto download the database directly from IP2Location server.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade -y &amp;&amp; \</span><br><span class="line">sudo apt install build-essential dh-autoreconf unzip -y &amp;&amp; \</span><br><span class="line">sudo mkdir nginx-dev &amp;&amp; <span class="built_in">cd</span> nginx-dev &amp;&amp; \</span><br><span class="line"></span><br><span class="line">sudo wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.42.tar.gz &amp;&amp; \</span><br><span class="line">sudo tar -zxf pcre-8.42.tar.gz &amp;&amp; \</span><br><span class="line"><span class="built_in">cd</span> pcre-8.42 &amp;&amp; \</span><br><span class="line">sudo ./configure &amp;&amp; \</span><br><span class="line">sudo make &amp;&amp; \</span><br><span class="line">sudo make install &amp;&amp; \</span><br><span class="line"><span class="built_in">cd</span> .. &amp;&amp; \</span><br><span class="line"></span><br><span class="line">sudo wget http://zlib.net/zlib-1.2.11.tar.gz &amp;&amp; \</span><br><span class="line">sudo tar -zxf zlib-1.2.11.tar.gz &amp;&amp; \</span><br><span class="line"><span class="built_in">cd</span> zlib-1.2.11 &amp;&amp; \</span><br><span class="line">sudo ./configure &amp;&amp; \</span><br><span class="line">sudo make &amp;&amp; \</span><br><span class="line">sudo make install &amp;&amp; \</span><br><span class="line"><span class="built_in">cd</span> .. &amp;&amp; \</span><br><span class="line"></span><br><span class="line">sudo wget https://www.openssl.org/<span class="built_in">source</span>/openssl-1.0.2o.tar.gz &amp;&amp; sudo tar xzvf openssl-1.0.2o.tar.gz &amp;&amp; \</span><br><span class="line"><span class="built_in">cd</span> openssl-1.0.2o &amp;&amp; \</span><br><span class="line">sudo ./config --prefix=/usr &amp;&amp; \</span><br><span class="line">sudo make &amp;&amp; \</span><br><span class="line">sudo make install &amp;&amp; \</span><br><span class="line"><span class="built_in">cd</span> .. &amp;&amp; \</span><br><span class="line"></span><br><span class="line">sudo rm *.gz &amp;&amp; \</span><br><span class="line"></span><br><span class="line">sudo wget https://github.com/chrislim2888/IP2Location-C-Library/archive/master.zip &amp;&amp; \</span><br><span class="line">sudo unzip master.zip &amp;&amp; \</span><br><span class="line"><span class="built_in">cd</span> IP2Location-C-Library-master &amp;&amp; \</span><br><span class="line">sudo autoreconf -i -v --force &amp;&amp; \</span><br><span class="line">sudo ./configure &amp;&amp; \</span><br><span class="line">sudo make &amp;&amp; \</span><br><span class="line">sudo make install &amp;&amp; \</span><br><span class="line"><span class="built_in">cd</span> ~/nginx-dev &amp;&amp; \</span><br><span class="line">sudo rm master.zip &amp;&amp; \</span><br><span class="line"></span><br><span class="line">sudo wget https://github.com/ip2location/ip2location-nginx/archive/master.zip &amp;&amp; \</span><br><span class="line">sudo unzip master.zip &amp;&amp; \</span><br><span class="line">sudo rm master.zip &amp;&amp; \</span><br><span class="line">sudo sed -i <span class="string">'s/#include"IP2Location.h"/#include"\/home\/ubuntu\/nginx-dev\/IP2Location-C-Library-master\/libIP2Location\/IP2Location.h"/g'</span> ~/nginx-dev/ip2location-nginx-master/ngx_http_ip2location_module.c &amp;&amp; \</span><br><span class="line">sudo mkdir /etc/ip2location &amp;&amp; <span class="built_in">cd</span> /etc/ip2location &amp;&amp; \</span><br><span class="line"></span><br><span class="line">sudo curl -o DB1-IP-COUNTRY.BIN.ZIP <span class="string">"https://www.ip2location.com/download?token=B7DAFhxJcAyim6NQsXWV1pGzy3deiiGUqjv5B2OOCn6YuUPWSLRTbytJCGXVZEPp&amp;file=DB1BIN"</span> &amp;&amp; \</span><br><span class="line">sudo unzip -o DB1-IP-COUNTRY.BIN.ZIP &amp;&amp; \</span><br><span class="line">sudo rm !(*.BIN) &amp;&amp; \</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/nginx-dev &amp;&amp; \</span><br><span class="line">sudo wget https://nginx.org/download/nginx-1.15.0.tar.gz &amp;&amp; \</span><br><span class="line">sudo tar zxf nginx-1.15.0.tar.gz &amp;&amp; \</span><br><span class="line"><span class="built_in">cd</span> nginx-1.15.0 &amp;&amp; \</span><br><span class="line"></span><br><span class="line">sudo ./configure --prefix=/usr/share/nginx \</span><br><span class="line">--sbin-path=/usr/sbin/nginx \</span><br><span class="line">--modules-path=/usr/lib/nginx/modules \</span><br><span class="line">--add-module=../ip2location-nginx-master \</span><br><span class="line">--conf-path=/etc/nginx/nginx.conf \</span><br><span class="line">--error-log-path=/var/<span class="built_in">log</span>/nginx/error.log \</span><br><span class="line">--http-log-path=/var/<span class="built_in">log</span>/nginx/access.log \</span><br><span class="line">--pid-path=/run/nginx.pid \</span><br><span class="line">--lock-path=/var/lock/nginx.lock \</span><br><span class="line">--user=www-data \</span><br><span class="line">--group=www-data \</span><br><span class="line">--build=Ubuntu \</span><br><span class="line">--http-client-body-temp-path=/var/lib/nginx/body \</span><br><span class="line">--http-fastcgi-temp-path=/var/lib/nginx/fastcgi \</span><br><span class="line">--http-proxy-temp-path=/var/lib/nginx/proxy \</span><br><span class="line">--http-scgi-temp-path=/var/lib/nginx/scgi \</span><br><span class="line">--http-uwsgi-temp-path=/var/lib/nginx/uwsgi \</span><br><span class="line">--with-openssl=../openssl-1.0.2o \</span><br><span class="line">--with-openssl-opt=<span class="built_in">enable</span>-ec_nistp_64_gcc_128 \</span><br><span class="line">--with-openssl-opt=no-nextprotoneg \</span><br><span class="line">--with-openssl-opt=no-weak-ssl-ciphers \</span><br><span class="line">--with-openssl-opt=no-ssl3 \</span><br><span class="line">--with-pcre=../pcre-8.42 \</span><br><span class="line">--with-pcre-jit \</span><br><span class="line">--with-zlib=../zlib-1.2.11 \</span><br><span class="line">--with-compat \</span><br><span class="line">--with-file-aio \</span><br><span class="line">--with-threads \</span><br><span class="line">--with-http_addition_module \</span><br><span class="line">--with-http_auth_request_module \</span><br><span class="line">--with-http_dav_module \</span><br><span class="line">--with-http_flv_module \</span><br><span class="line">--with-http_gunzip_module \</span><br><span class="line">--with-http_gzip_static_module \</span><br><span class="line">--with-http_mp4_module \</span><br><span class="line">--with-http_random_index_module \</span><br><span class="line">--with-http_realip_module \</span><br><span class="line">--with-http_slice_module \</span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-http_sub_module \</span><br><span class="line">--with-http_stub_status_module \</span><br><span class="line">--with-http_v2_module \</span><br><span class="line">--with-http_secure_link_module \</span><br><span class="line">--with-mail \</span><br><span class="line">--with-mail_ssl_module \</span><br><span class="line">--with-stream \</span><br><span class="line">--with-stream_realip_module \</span><br><span class="line">--with-stream_ssl_module \</span><br><span class="line">--with-stream_ssl_preread_module \</span><br><span class="line">--with-debug &amp;&amp; \</span><br><span class="line"></span><br><span class="line">sudo make &amp;&amp; \</span><br><span class="line">sudo make install &amp;&amp; \</span><br><span class="line">sudo ldconfig &amp;&amp; \</span><br><span class="line">sudo nginx -v &amp;&amp; sudo nginx -V &amp;&amp; \</span><br><span class="line">sudo mkdir -p /var/lib/nginx &amp;&amp; sudo nginx -t &amp;&amp; \</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">echo</span> <span class="string">"</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=A high performance web server and a reverse proxy server</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=forking</span></span><br><span class="line"><span class="string">PIDFile=/run/nginx.pid</span></span><br><span class="line"><span class="string">ExecStartPre=/usr/sbin/nginx -t -q -g'daemon on; master_process on;'</span></span><br><span class="line"><span class="string">ExecStart=/usr/sbin/nginx -g'daemon on; master_process on;'</span></span><br><span class="line"><span class="string">ExecReload=/usr/sbin/nginx -g'daemon on; master_process on;'-s reload</span></span><br><span class="line"><span class="string">ExecStop=-/sbin/start-stop-daemon --quiet --stop --retry QUIT/5 --pidfile /run/nginx.pid</span></span><br><span class="line"><span class="string">TimeoutStopSec=5</span></span><br><span class="line"><span class="string">KillMode=mixed</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target"</span> &gt; ~/nginx.service &amp;&amp; \</span><br><span class="line"></span><br><span class="line">sudo mv ~/nginx.service /etc/systemd/system/nginx.service &amp;&amp; \</span><br><span class="line"></span><br><span class="line">sudo systemctl start nginx.service &amp;&amp; sudo systemctl <span class="built_in">enable</span> nginx.service &amp;&amp; \</span><br><span class="line"></span><br><span class="line">sudo sed -i <span class="string">'s/default_type application\/octet-stream;/default_type application\/octet-stream;\nip2location on;\nip2location_database \/etc\/ip2location\/IP-COUNTRY.BIN;\nip2location_access_type shared_memory;/g'</span> /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>After finish run above command, just add the following script into your Nginx.conf or your website virtual host directive in or to make rewrite all incoming traffic to your desire destination</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name _;</span><br><span class="line"></span><br><span class="line">if ($ip2location_country_short ~ ^MY$) &#123;</span><br><span class="line">rewrite ^(.*)$ http://www.google.com last;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Finally you may testing your configure by browsing the server IP using any of your browse, if you are from Malaysia, than you should be redirected to Google home page</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://blog.ip2location.com/knowledge-base/how-to-use-ip2location-geolocation-with-nginx/" target="_blank" rel="noopener">How to use IP2Location GeoLocation with Nginx</a></p><p><a href="https://youtu.be/zgVqU-sL238" target="_blank" rel="noopener">How to Install IP2Location Nginx Module on Debian</a></p><p><a href="https://www.getpagespeed.com/server-setup/nginx/upgrade-to-geoip2-with-nginx-on-centos-rhel" target="_blank" rel="noopener">Upgrade to GeoIP2 with NGINX on CentOS/RHEL</a></p>]]></content>
    
    <summary type="html">
    
      IP2Location Nginx Module配置使用小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>LVS-DR 原理介绍和配置实践</title>
    <link href="https://wsgzao.github.io/post/lvs-dr/"/>
    <id>https://wsgzao.github.io/post/lvs-dr/</id>
    <published>2020-04-20T09:59:49.000Z</published>
    <updated>2020-04-21T03:45:56.563Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要讲述 LVS-DR 原理介绍和配置实践，HA 高可用方案基于 Keepalived。</p><blockquote><p>LVS-DR 原理介绍和配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 04 月 20 日 - 增加 Keepalived 双活实践<br>2019 年 09 月 03 日 - 拆分 LVS-Keepalived 中 LVS-DR<br>2019 年 08 月 23 日 - 更新 LVS/NAT、LVS/DR、LVS/TUN 三种模式的原理和配置实践<br>2018 年 12 月 03 日 - 精简和更新配置步骤<br>2018 年 07 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/lvs-nat/">https://wsgzao.github.io/post/lvs-nat/</a></p><p><strong> 扩展阅读 </strong></p><p>LVS - <a href="http://www.linuxvirtualserver.org/zh/index.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/zh/index.html</a><br>Keepalived - <a href="http://www.keepalived.org/" target="_blank" rel="noopener">http://www.keepalived.org/</a></p><hr><h2 id="ReadMe"><a href="#ReadMe" class="headerlink" title="ReadMe"></a>ReadMe</h2><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>Virtual Server via Direct Routing - <a href="http://www.linuxvirtualserver.org/VS-DRouting.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/VS-DRouting.html</a><br>LVS 和 Keepalived 官方中文手册 PDF - <a href="https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg</a></p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><blockquote><p>以下术语涉及 LVS 三种工作模式的原理</p></blockquote><ul><li>LB (Load Balancer 负载均衡) </li><li>HA (High Available 高可用) </li><li>Failover (失败切换) </li><li>Cluster (集群) </li><li>LVS (Linux Virtual Server Linux 虚拟服务器) </li><li>DS (Director Server)，指的是前端负载均衡器节点</li><li>RS (Real Server)，后端真实的工作服务器</li><li>VIP (Virtual IP)，虚拟的 IP 地址，向外部直接面向用户请求，作为用户请求的目标的 IP 地址</li><li>DIP (Director IP)，主要用于和内部主机通讯的 IP 地址</li><li>RIP (Real Server IP)，后端服务器的 IP 地址</li><li>CIP (Client IP)，访问客户端的 IP 地址</li></ul><h2 id="LVS-三种模式的主要区别"><a href="#LVS-三种模式的主要区别" class="headerlink" title="LVS 三种模式的主要区别"></a>LVS 三种模式的主要区别</h2><table><thead><tr><th></th><th></th><th>VS/NAT</th><th>VS/TUN</th><th>VS/DR</th></tr></thead><tbody><tr><td></td><td>server</td><td>any</td><td>tunneling</td><td>non-arp device</td><td></td></tr><tr><td></td><td>server network</td><td>private</td><td>LAN/WAN</td><td>LAN</td><td></td></tr><tr><td></td><td>server number</td><td>low (10~20)</td><td>high</td><td>high</td><td></td></tr><tr><td></td><td>server gateway</td><td>load balancer</td><td>own router</td><td>own router</td><td></td></tr></tbody></table><table><thead><tr><th></th><th>模式与特点</th><th>NAT 模式</th><th>IPIP 模式</th><th>DR 模式</th></tr></thead><tbody><tr><td></td><td>对服务器的要求</td><td>服务节点可以使任何操作系统</td><td>必须支持 IP 隧道，目前只有 Linux 系统支持</td><td>服务器节点支持虚拟网卡设备，能够禁用设备的 ARP 响应</td><td></td></tr><tr><td></td><td>网络要求</td><td>拥有私有 IP 地址的局域网络</td><td>拥有合法 IP 地址的局域，网或广域网</td><td>拥有合法 IP 地址的局域，服务器节点与负载均衡器必须在同一个网段</td><td></td></tr><tr><td></td><td>通常支持节点数量</td><td>10 到 20 个，根据负载均衡器的处理能力而定</td><td>较高，可以支持 100 个服务节点</td><td>较高，可以支持 100 个服务节点</td><td></td></tr><tr><td></td><td>网关</td><td>负载均衡器为服务器节点网关</td><td>服务器的节点同自己的网关或者路由器连接，不经过负载均衡器</td><td>服务节点同自己的网关或者路由器连接，不经过负载均衡器</td><td></td></tr><tr><td></td><td>服务节点安全性</td><td>较好，采用内部 IP，服务节点隐蔽</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td></td></tr><tr><td></td><td>IP 要求</td><td>仅需要一个合法的 IP 地址作为 VIP 地址</td><td>除了 VIPO 地址外，每个服务器界定啊需要拥有合法的 IP 地址，可以直接从路由到客户端</td><td>除了 VIP 外，每个服务节点需拥有合法的 IP 地址，可以直接从路由到客户端</td><td></td></tr><tr><td></td><td>特点</td><td>地址转换</td><td>封装 IP</td><td>修改 MAC 地址</td><td></td></tr><tr><td></td><td>配置复杂度</td><td>简单</td><td>复杂</td><td>复杂</td><td></td></tr></tbody></table><h2 id="LVS-基本工作原理"><a href="#LVS-基本工作原理" class="headerlink" title="LVS 基本工作原理"></a>LVS 基本工作原理</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823142206.png" alt=""></p><ol><li>当用户向负载均衡调度器（Director Server）发起请求，调度器将请求发往至内核空间</li><li>PREROUTING 链首先会接收到用户请求，判断目标 IP 确定是本机 IP，将数据包发往 INPUT 链</li><li>IPVS 是工作在 INPUT 链上的，当用户请求到达 INPUT 时，IPVS 会将用户请求和自己已定义好的集群服务进行比对，如果用户请求的就是定义的集群服务，那么此时 IPVS 会强行修改数据包里的目标 IP 地址及端口，并将新的数据包发往 POSTROUTING 链</li><li>POSTROUTING 链接收数据包后发现目标 IP 地址刚好是自己的后端服务器，那么此时通过选路，将数据包最终发送给后端的服务器</li></ol><h3 id="LVS-的组成"><a href="#LVS-的组成" class="headerlink" title="LVS 的组成"></a>LVS 的组成</h3><blockquote><p>LVS 由 2 部分程序组成，包括 ipvs 和 ipvsadm。</p></blockquote><ol><li>ipvs(ip virtual server)：一段代码工作在内核空间，叫 ipvs，是真正生效实现调度的代码。</li><li>ipvsadm：另外一段是工作在用户空间，叫 ipvsadm，负责为 ipvs 内核框架编写规则，定义谁是集群服务，而谁是后端真实的服务器 (Real Server)</li></ol><h3 id="LVS-和-Keepalived"><a href="#LVS-和-Keepalived" class="headerlink" title="LVS 和 Keepalived"></a>LVS 和 Keepalived</h3><p>在 lvs+keepalived 环境里面，lvs 主要的工作是提供调度算法，把客户端请求按照需求调度在 real 服务器，keepalived 主要的工作是提供 lvs 控制器的一个冗余，并且对 real 服务器做健康检查，发现不健康的 real 服务器，就把它从 lvs 集群中剔除，real 服务器只负责提供服务。</p><h3 id="LVS-DR"><a href="#LVS-DR" class="headerlink" title="LVS/DR"></a>LVS/DR</h3><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823150520.png" alt=""></p><blockquote><p>重点将请求报文的目标 MAC 地址设定为挑选出的 RS 的 MAC 地址</p></blockquote><p>(1) 当用户请求到达 Director Server，此时请求的数据报文会先到内核空间的 PREROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 VIP<br>(2) PREROUTING 检查发现数据包的目标 IP 是本机，将数据包送至 INPUT 链<br>(3) IPVS 比对数据包请求的服务是否为集群服务，若是，将请求报文中的源 MAC 地址修改为 DIP 的 MAC 地址，将目标 MAC 地址修改 RIP 的 MAC 地址，然后将数据包发至 POSTROUTING 链。 此时的源 IP 和目的 IP 均未修改，仅修改了源 MAC 地址为 DIP 的 MAC 地址，目标 MAC 地址为 RIP 的 MAC 地址<br>(4) 由于 DS 和 RS 在同一个网络中，所以是通过二层来传输。POSTROUTING 链检查目标 MAC 地址为 RIP 的 MAC 地址，那么此时数据包将会发至 Real Server。<br>(5) RS 发现请求报文的 MAC 地址是自己的 MAC 地址，就接收此报文。处理完成之后，将响应报文通过 lo 接口传送给 eth0 网卡然后向外发出。 此时的源 IP 地址为 VIP，目标 IP 为 CIP<br>(6) 响应报文最终送达至客户端</p><blockquote><p>LVS/DR 模型的特性</p></blockquote><ul><li><strong> 特点 1</strong>：保证前端路由将目标地址为 VIP 报文统统发给 Director Server，而不是 RS</li><li>RS 可以使用私有地址；也可以是公网地址，如果使用公网地址，此时可以通过互联网对 RIP 进行直接访问</li><li>RS 跟 Director Server 必须在同一个物理网络中</li><li>所有的请求报文经由 Director Server，但响应报文必须不能进过 Director Server</li><li>不支持地址转换，也不支持端口映射</li><li>RS 可以是大多数常见的操作系统</li><li>RS 的网关绝不允许指向 DIP(因为我们不允许他经过 director)</li><li>RS 上的 lo 接口配置 VIP 的 IP 地址</li><li>缺陷：RS 和 DS 必须在同一机房中</li></ul><blockquote><p>特点 1 的解决方案：</p></blockquote><ul><li>在前端路由器做静态地址路由绑定，将对于 VIP 的地址仅路由到 Director Server</li><li>存在问题：用户未必有路由操作权限，因为有可能是运营商提供的，所以这个方法未必实用</li><li>arptables：在 arp 的层次上实现在 ARP 解析时做防火墙规则，过滤 RS 响应 ARP 请求。这是由 iptables 提供的</li><li>修改 RS 上内核参数（arp_ignore 和 arp_announce）将 RS 上的 VIP 配置在 lo 接口的别名上，并限制其不能响应对 VIP 地址解析请求。</li></ul><p>DR（Direct Routing 直接路由模式）此模式时 LVS 调度器只接收客户发来的请求并将请求转发给后端服务器，后端服务器处理请求后直接把内容直接响应给客户，而不用再次经过 LVS 调度器。LVS 只需要将网络帧的 MAC 地址修改为某一台后端服务器 RS 的 MAC，该包就会被转发到相应的 RS 处理，注意此时的源 IP 和目标 IP 都没变。RS 收到 LVS 转发来的包时，链路层发现 MAC 是自己的，到上面的网络层，发现 IP 也是自己的，于是这个包被合法地接受，RS 感知不到前面有 LVS 的存在。而当 RS 返回响应时，只要直接向源 IP（即用户的 IP）返回即可，不再经过 LVS。</p><p>注意：<br>(1) 确保前端路由器将目标 IP 为 VIP 的请求报文发往 Director：<br>    (a) 在前端网关做静态绑定；<br>    (b) 在 RS 上使用 arptables；<br>    (c) 在 RS 上修改内核参数以限制 arp 通告及应答级别；<br>            arp_announce<br>            arp_ignore<br>(2) RS 的 RIP 可以使用私网地址，也可以是公网地址；RIP 与 DIP 在同一 IP 网络；RIP 的网关不能指向 DIP，以确保响应报文不会经由 Director；<br>(3) RS 跟 Director 要在同一个物理网络；<br>(4) 请求报文要经由 Director，但响应不能经由 Director，而是由 RS 直接发往 Client；<br>(5) 此模式不支持端口映射；</p><p>缺点：唯一的缺陷在于它要求 LVS 调度器及所有应用服务器在同一个网段中，因此不能实现集群的跨网段应用。</p><p>优点：可见在处理过程中 LVS Route 只处理请求的直接路由转发，所有响应结果由各个应用服务器自行处理，并对用户进行回复，网络流量将集中在 LVS 调度器之上。</p><h2 id="配置-LVS-DR"><a href="#配置-LVS-DR" class="headerlink" title="配置 LVS-DR"></a>配置 LVS-DR</h2><h3 id="DS"><a href="#DS" class="headerlink" title="DS"></a>DS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install keepalived</span></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install keepalived ipvsadm</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install keepalived ipvsadm</span><br><span class="line"></span><br><span class="line"><span class="comment"># update iptables</span></span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># For keepalived:</span></span><br><span class="line"><span class="comment"># allow vrrp </span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line"><span class="comment"># allow multicast</span></span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># reload iptables</span></span><br><span class="line">service iptables reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># open ip_forward</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="comment"># edit sysctl.conf</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived for lvs-dr</span></span><br><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_CONNECT</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_CONNECT &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 128</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.65.32.28/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.28 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.13 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.65.32.14 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.28 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.13 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.65.32.14 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_AUTH &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 129</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.65.32.29/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.29 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.22 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 110.65.32.23 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.29 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.22 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 110.65.32.23 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable and start keepalived</span></span><br><span class="line">systemctl start keepalived</span><br><span class="line">systemctl <span class="built_in">enable</span> keepalived</span><br><span class="line">watch ipvsadm -L -n --stats</span><br></pre></td></tr></table></figure><h3 id="RS"><a href="#RS" class="headerlink" title="RS"></a>RS</h3><ol><li>Edit “/etc/sysconfig/network-scripts/ifcfg-lo” to patch bug in Centos 7 (if using Centos 7). Add TYPE=Loopback to the file.</li><li>Add loopback for each Virtual IP on each worker. E.g. first virtual IP create file “/etc/sysconfig/network-scripts/ifcfg-lo:0”.</li><li>Start adapters if not yet started</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># add TYPE=Loopback</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"TYPE=Loopback"</span> &gt;&gt; /etc/sysconfig/network-scripts/ifcfg-lo</span><br><span class="line"><span class="comment"># add ifcfg-lo:0</span></span><br><span class="line">cat &gt; /etc/sysconfig/network-scripts/ifcfg-lo:0 &lt;&lt; EOF</span><br><span class="line">DEVICE=lo:0</span><br><span class="line">IPADDR=10.65.32.28</span><br><span class="line">NETMASK=255.255.255.255</span><br><span class="line">ONBOOT=yes</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># ifup lo:0</span></span><br><span class="line">ifup lo:0</span><br><span class="line"></span><br><span class="line"><span class="comment"># add real_start</span></span><br><span class="line">cat &gt; /root/real_start.sh &lt;&lt; EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># chmod 755</span></span><br><span class="line">chmod 755 /root/real_start.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># add real.service</span></span><br><span class="line">cat &gt; /usr/lib/systemd/system/real.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=autostart lvs real</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/root/real_start.sh</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable service</span></span><br><span class="line">systemctl <span class="built_in">enable</span> real.service</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># lvs real server example</span></span><br><span class="line">vim /root/lvs_real.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: Start realserver</span></span><br><span class="line"><span class="comment"># Description:       Start realserver</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># change the VIP to proper value</span></span><br><span class="line">VIP=10.65.32.28</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Start REAL Server"</span></span><br><span class="line">    /sbin/ifconfig lo:0 <span class="variable">$VIP</span> broadcast <span class="variable">$VIP</span> netmask 255.255.255.255 up</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    stop)</span><br><span class="line"></span><br><span class="line">    /sbin/ifconfig lo:0 down</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Stop REAL Server"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    restart)</span><br><span class="line"></span><br><span class="line">    <span class="variable">$0</span> stop</span><br><span class="line">    <span class="variable">$0</span> start</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    *)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop&#125;"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><h2 id="配置-LVS-DR-和-LVS-TUN-混合模式"><a href="#配置-LVS-DR-和-LVS-TUN-混合模式" class="headerlink" title="配置 LVS/DR 和 LVS/TUN 混合模式"></a>配置 LVS/DR 和 LVS/TUN 混合模式</h2><h3 id="DS-1"><a href="#DS-1" class="headerlink" title="DS"></a>DS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关于 3 中模式的参数 </span></span><br><span class="line">[packet-forwarding-method]</span><br><span class="line">       -g, --gatewaying  Use gatewaying (direct routing). This is the default.</span><br><span class="line">       -i, --ipip  Use ipip encapsulation (tunneling).</span><br><span class="line">       -m, --masquerading  Use masquerading (network access translation, or NAT).</span><br><span class="line">       Note:  Regardless of the packet-forwarding mechanism specified, real servers <span class="keyword">for</span> addresses <span class="keyword">for</span> <span class="built_in">which</span> there are interfaces on the <span class="built_in">local</span> node will  be  use  the</span><br><span class="line">       <span class="built_in">local</span>  forwarding  method, <span class="keyword">then</span> packets <span class="keyword">for</span> the servers will be passed to upper layer on the <span class="built_in">local</span> node. This cannot be specified by ipvsadm, rather it <span class="built_in">set</span> by</span><br><span class="line">       the kernel as real servers are added or modified.</span><br><span class="line"></span><br><span class="line"><span class="comment"># ipvsadm 命令行混配 </span></span><br><span class="line">/sbin/ifconfig tunl0 10.10.36.11 broadcast 10.10.36.11 netmask 255.255.255.255 up</span><br><span class="line">/sbin/route add -host 10.10.36.11 dev tunl0</span><br><span class="line">/sbin/ipvsadm -At 10.10.36.11:80 -s rr</span><br><span class="line">/sbin/ipvsadm -at 10.10.36.11:80 -r 10.10.36.4:80 -g -w 1</span><br><span class="line">/sbin/ipvsadm -at 10.10.36.11:80 -r 10.10.36.7:80 -i -w 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived 混配 </span></span><br><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_AUTH &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface em1</span><br><span class="line">    virtual_router_id 11</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.10.36.11/23 dev em1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.4 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind TUN</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.7 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查结果可用 </span></span><br><span class="line">[root@d126027 wangao]<span class="comment"># for i in &#123;1..100&#125;; do curl 10.10.36.11; sleep 0.5; done</span></span><br><span class="line">rs2</span><br><span class="line">rs1</span><br><span class="line">rs2</span><br><span class="line">rs1</span><br><span class="line">rs2</span><br><span class="line"></span><br><span class="line">[root@d126009 keepalived]<span class="comment"># ipvsadm -Ln --stats</span></span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port               Conns   InPkts  OutPkts  InBytes OutBytes</span><br><span class="line">  -&gt; RemoteAddress:Port</span><br><span class="line">TCP  10.10.36.11:80                    100      700        0    36700        0</span><br><span class="line">  -&gt; 10.10.36.4:80                      50      350        0    18350        0</span><br><span class="line">  -&gt; 10.10.36.7:80                      50      350        0    18350        0</span><br><span class="line"></span><br><span class="line">[root@d126009 wangao]<span class="comment"># ipvsadm -Ln</span></span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</span><br><span class="line">TCP  10.10.36.11:80 rr</span><br><span class="line">  -&gt; 10.10.36.4:80                Route   100    0          0</span><br><span class="line">  -&gt; 10.10.36.7:80                Tunnel  100    0          0</span><br></pre></td></tr></table></figure><h3 id="RS-1"><a href="#RS-1" class="headerlink" title="RS"></a>RS</h3><blockquote><p>DR 和 TUN 的模式基本不用做改动</p></blockquote><h2 id="基于-Keepalived-的双活实践"><a href="#基于-Keepalived-的双活实践" class="headerlink" title="基于 Keepalived 的双活实践"></a>基于 Keepalived 的双活实践</h2><p>Keepalived 官方的文档并没有给出实践案例，我对上面的代码改进之后的效果如下</p><ol><li>实现双活，支持不中断 LVS 人工干预任意节点运行位置</li><li>实现 status 状态无变化时无告警邮件</li></ol><p>主要差异体现在 keepalived.conf 和相关的脚本，所有节点均为 Backup，配置是一模一样的，不再解释细节了，如果不明白可以参考之前的 Keepalived 专题或者官方文档</p><blockquote><p>keepalived.conf</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line">vrrp_sync_group VI_GROUP_xxx &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_xxx</span><br><span class="line">        VI_PUB_xxx</span><br><span class="line">    &#125;</span><br><span class="line">    notify /etc/keepalived/notify.sh</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_sync_group VI_GROUP_xxx &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_xxx</span><br><span class="line">        VI_PUB_xxx</span><br><span class="line">    &#125;</span><br><span class="line">    notify /etc/keepalived/notify.sh</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-xxx &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/xxx ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-xxx &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/xxx ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-xxx &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/xxx ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-xxx &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/xxx ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_xxx &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 138</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xxx/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-xxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server xxx 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server xxx 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server xxx 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_xxx &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 139</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xxx/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-xxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server xxx 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server xxx 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server xxx 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PUB_xxx &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond1</span><br><span class="line">    virtual_router_id 101</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xxx/26 dev bond1</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-xxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server xxx 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server xxx 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server xxx 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PUB_xxx &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond1</span><br><span class="line">    virtual_router_id 102</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xxx/26 dev bond1</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-xxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server xxx 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server xxx 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server xxx 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>notify.sh</p></blockquote><p>Keepalived tasks some action depending on the VRRP state.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vrrp_sync_group VI_GROUP_xxx &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_xxx</span><br><span class="line">        VI_PUB_xxx</span><br><span class="line">    &#125;</span><br><span class="line">    notify /etc/keepalived/notify.sh</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The script is called after any state change with the following parameters:</p><p>$1 = “GROUP” or “INSTANCE”<br>$2 = name of group or instance<br>$3 = target state of transition (“MASTER”, “BACKUP”, “FAULT”)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">TYPE=<span class="variable">$1</span></span><br><span class="line">NAME=<span class="variable">$2</span></span><br><span class="line">STATE=<span class="variable">$3</span></span><br><span class="line">FILE=<span class="string">"/etc/keepalived/<span class="variable">$&#123;NAME&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  touch <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">ORI_STATE=`cat <span class="variable">$&#123;FILE&#125;</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;STATE&#125;</span> == <span class="variable">$&#123;ORI_STATE&#125;</span> ];<span class="keyword">then</span></span><br><span class="line">   <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$STATE</span> <span class="keyword">in</span></span><br><span class="line">            <span class="string">"MASTER"</span>) /bin/python /etc/keepalived/sendmail.py <span class="variable">$&#123;STATE&#125;</span> <span class="variable">$&#123;TYPE&#125;</span> <span class="variable">$&#123;NAME&#125;</span></span><br><span class="line">                      <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;STATE&#125;</span>"</span> &gt; <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span></span><br><span class="line">                      <span class="built_in">exit</span> 0</span><br><span class="line">                      ;;</span><br><span class="line">            <span class="string">"BACKUP"</span>) /bin/python /etc/keepalived/sendmail.py <span class="variable">$&#123;STATE&#125;</span> <span class="variable">$&#123;TYPE&#125;</span> <span class="variable">$&#123;NAME&#125;</span></span><br><span class="line">                      <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;STATE&#125;</span>"</span> &gt; <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span></span><br><span class="line">                      <span class="built_in">exit</span> 0</span><br><span class="line">                      ;;</span><br><span class="line">            <span class="string">"FAULT"</span>)  /bin/python /etc/keepalived/sendmail.py <span class="variable">$&#123;STATE&#125;</span> <span class="variable">$&#123;TYPE&#125;</span> <span class="variable">$&#123;NAME&#125;</span></span><br><span class="line">                      <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;STATE&#125;</span>"</span> &gt; <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span></span><br><span class="line">                      <span class="built_in">exit</span> 0</span><br><span class="line">                      ;;</span><br><span class="line">            *)        <span class="built_in">echo</span> <span class="string">"unknown state"</span></span><br><span class="line">                      <span class="built_in">exit</span> 1</span><br><span class="line">                      ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><blockquote><p>sendmail.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EMAIL_CONFIG = &#123;</span><br><span class="line">    <span class="string">'EMAIL_HOST'</span>: <span class="string">'xxx'</span>,</span><br><span class="line">    <span class="string">'EMAIL_HOST_USER'</span>: <span class="string">'xxx'</span>,</span><br><span class="line">    <span class="string">'EMAIL_RECEIVER'</span>: <span class="string">'xxx'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_get_private_ip</span><span class="params">()</span>:</span></span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        sock.connect((<span class="string">'10.255.255.255'</span>, <span class="number">1</span>))</span><br><span class="line">        <span class="keyword">return</span> sock.getsockname()[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'127.0.0.1'</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        sock.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_email</span><span class="params">()</span>:</span></span><br><span class="line">    ip = _get_private_ip()</span><br><span class="line">    hostname = socket.gethostname()</span><br><span class="line">    message = <span class="string">'Subject: Keepalived Failover Alert %s \n\nHOSTNAME %s on LANIP %s %s %s status has changed to %s'</span> % (</span><br><span class="line">        sys.argv[<span class="number">1</span>], hostname, ip, sys.argv[<span class="number">2</span>], sys.argv[<span class="number">3</span>], sys.argv[<span class="number">1</span>])</span><br><span class="line">    server = smtplib.SMTP(EMAIL_CONFIG[<span class="string">"EMAIL_HOST"</span>])</span><br><span class="line">    server.sendmail(EMAIL_CONFIG[<span class="string">'EMAIL_HOST_USER'</span>],</span><br><span class="line">                    EMAIL_CONFIG[<span class="string">'EMAIL_RECEIVER'</span>], message)</span><br><span class="line">    server.quit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">send_email()</span><br></pre></td></tr></table></figure><h2 id="LVS-和-Keepalived-系列"><a href="#LVS-和-Keepalived-系列" class="headerlink" title="LVS 和 Keepalived 系列"></a>LVS 和 Keepalived 系列</h2><p><a href="https://wsgzao.github.io/post/lvs-keepalived/">LVS 和 Keepalived 的原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs/">LVS 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/keepalived/">Keepalived 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-nat/">LVS-NAT 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-dr/">LVS-DR 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-tun/">LVS-TUN 原理介绍和配置实践</a></p>]]></content>
    
    <summary type="html">
    
      LVS-DR原理介绍和配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 certbot 代替 acme.sh 免费申请 wildcard 通配符证书和自动更新实践小结</title>
    <link href="https://wsgzao.github.io/post/certbot/"/>
    <id>https://wsgzao.github.io/post/certbot/</id>
    <published>2020-04-13T06:59:49.000Z</published>
    <updated>2020-04-29T07:07:27.674Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200219171300.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为 Google Chrome 和运营商劫持干扰访问者体验的努力推动了大型网站加速应用全站 HTTPS，而 <a href="https://letsencrypt.org/" target="_blank" rel="noopener">Let’s Encrypt</a> 这个项目通过自动化把配置和维护 HTTPS 变得更加简单，Let’s Encrypt 设计了一个 ACME 协议目前版本是 v2，并在 2018 年支持通配符证书 <a href="https://community.letsencrypt.org/t/acme-v2-and-wildcard-certificate-support-is-live/55579" target="_blank" rel="noopener">Wildcard Certificate Support is Live</a>。官网主推的客户端是<a href="https://certbot.eff.org/" target="_blank" rel="noopener">Certbot</a>，任何人都可以基于 ACME 协议实现一个客户端，比如大名鼎鼎的<a href="https://github.com/Neilpang/acme.sh" target="_blank" rel="noopener">acme.sh</a>。本文主要使用<a href="https://github.com/certbot/certbot/tree/master/certbot-dns-route53" target="_blank" rel="noopener">certbot-dns-route53</a> 插件为例，由于 certbot 官方 DNS Plugins 插件支持有限，如果你需要支持 aliyun/tencentyun/godaddy dns 可以参考 <a href="https://github.com/ywdblog/certbot-letencrypt-wildcardcertificates-alydns-au" target="_blank" rel="noopener">certbot-letencrypt-wildcardcertificates-alydns-au</a>，随着 Docker 容器化和 K8S(Kubernetes) 的进击，相信会促进 certbot 多样化玩法。</p><blockquote><p>使用 certbot 代替 acme.sh 免费申请 wildcard 通配符证书和自动更新实践小结</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 04 月 13 日 - 增加 checkssl<br>2020 年 02 月 19 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/certbot/">https://wsgzao.github.io/post/certbot/</a></p><hr><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="关于-HTTPS"><a href="#关于-HTTPS" class="headerlink" title="关于 HTTPS"></a>关于 HTTPS</h3><blockquote><p>引维基百科的说法</p></blockquote><p>超文本传输安全协议（英语：Hypertext Transfer Protocol Secure，缩写：HTTPS）是一种网络安全传输协议。在计算机网络上，HTTPS 经由超文本传输协议进行通信，但利用 SSL/TLS 来对数据包进行加密。HTTPS 开发的主要目的，是提供对网络服务器的身份认证，保护交换数据的隐私与完整性</p><p>HTTPS 的主要思想是在不安全的网络上创建一安全信道，并可在使用适当的加密包和服务器证书可被验证且可被信任时，对窃听和中间人攻击提供合理防护。</p><p>HTTPS 的信任继承基于预先安装在浏览器中的证书颁发机构（如 Symantec、Comodo、GoDaddy 和 GlobalSign 等）（意即“我信任证书颁发机构告诉我应该信任的”）。因此，一个到某网站的 HTTPS 连接可被信任，当且且当：</p><ul><li>用户相信他们的浏览器正确实现了 HTTPS 且安装了正确的证书颁发机构；</li><li>用户相信证书颁发机构仅信任合法的网站；</li><li>被访问的网站提供了一个有效的证书，意即，它是由一个被信任的证书颁发机构签发的（大部分浏览器会对无效的证书发出警告）；</li><li>该证书正确地验证了被访问的网站（如，访问 <a href="https://example.com" target="_blank" rel="noopener">https://example.com</a> 时收到了给 example.com 而不是其他组织的证书）；</li><li>或者互联网上相关节点是值得信任的，或者用户相信本协议的加密层（TLS 或 SSL）不能被窃听者破坏。</li></ul><h3 id="HTTP-和-HTTPS-区别"><a href="#HTTP-和-HTTPS-区别" class="headerlink" title="HTTP 和 HTTPS 区别"></a>HTTP 和 HTTPS 区别</h3><p>HTTP 协议传输的数据都是未加密的，也就是明文的，因此使用 HTTP 协议传输隐私信息非常不安全，为了保证这些隐私数据能加密传输，于是网景公司设计了 SSL（Secure Sockets Layer）协议用于对 HTTP 协议传输的数据进行加密，从而就诞生了 HTTPS。简单来说，HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，要比 HTTP 协议安全。</p><p>HTTPS 和 HTTP 的区别主要如下：</p><ul><li>HTTPS 协议需要到 CA 申请证书，一般免费证书较少，因而需要一定费用。</li><li>HTTP 是超文本传输协议，信息是明文传输，HTTPS 则是具有安全性的 SSL 加密传输协议。</li><li>HTTP 和 HTTPS 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。</li><li>HTTP 的连接很简单，是无状态的；HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，比 HTTP 协议安全。</li></ul><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200220153747.png" alt=""></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200220153532.png" alt=""></p><p><a href="https://serverguy.com/ssl/types-of-ssl-certificates/" target="_blank" rel="noopener">Types of SSL Certificates for a Secure Business Website</a></p><h3 id="关于-TLS-SSL"><a href="#关于-TLS-SSL" class="headerlink" title="关于 TLS/SSL"></a>关于 TLS/SSL</h3><p>传输层安全协议（英语：Transport Layer Security，缩写：TLS），及其前身安全套接层（Secure Sockets Layer，缩写：SSL）是一种安全协议，目的是为互联网通信，提供安全及数据完整性保障</p><h3 id="为什么要部署-HTTPS"><a href="#为什么要部署-HTTPS" class="headerlink" title="为什么要部署 HTTPS"></a>为什么要部署 HTTPS</h3><p>说到底，就是 HTTPS 更安全。甚至为了安全，一个专业可靠的网站， HTTPS 是必须的。 Firefox 和 Chrome 都计划将没有配置 SSL 加密的 HTTP 网站标记为不安全（貌似 Firefox 50 已经这么干了），目前它们也正在联合其他相关的基金会与公司推动整个互联网 HTTPS 化，现在大家访问的一些主要的网站。如 Google 多年前就已经全部启用 HTTPS ，国内的淘宝、搜狗、知乎、百度等等也全面 HTTPS 了。甚至 Google 的搜索结果也正在给予 HTTPS 的网站更高的排名和优先收录权。</p><h3 id="怎么部署-HTTPS"><a href="#怎么部署-HTTPS" class="headerlink" title="怎么部署 HTTPS"></a>怎么部署 HTTPS</h3><p>你只需要有一张被信任的 CA （ Certificate Authority ）也就是证书授权中心颁发的 SSL 安全证书，并且将它部署到你的网站服务器上。一旦部署成功后，当用户访问你的网站时，浏览器会在显示的网址前加一把小绿锁，表明这个网站是安全的，当然同时你也会看到网址前的前缀变成了 HTTPS ，不再是 HTTP 了。</p><h3 id="怎么获得-SSL-安全证书"><a href="#怎么获得-SSL-安全证书" class="headerlink" title="怎么获得 SSL 安全证书"></a>怎么获得 SSL 安全证书</h3><p>理论上，我们自己也可以签发 SSL 安全证书，但是我们自己签发的安全证书不会被主流的浏览器信任，所以我们需要被信任的证书授权中心（ CA ）签发的安全证书。而一般的 SSL 安全证书签发服务都比较贵，比如 Godaddy 、 GlobalSign 等机构签发的证书一般都需要 20 美金一年甚至更贵，不过为了加快推广 HTTPS 的普及， EEF 电子前哨基金会、 Mozilla 基金会和美国密歇根大学成立了一个公益组织叫 ISRG （ Internet Security Research Group ），这个组织从 2015 年开始推出了 Let’s Encrypt 免费证书。这个免费证书不仅免费，而且还相当好用，所以我们就可以利用 Let’s Encrypt 提供的免费证书部署 HTTPS 了</p><h2 id="Let’s-Encrypt-简介"><a href="#Let’s-Encrypt-简介" class="headerlink" title="Let’s Encrypt 简介"></a>Let’s Encrypt 简介</h2><p>Let’s Encrypt 是 一个叫 ISRG （ Internet Security Research Group ，互联网安全研究小组）的组织推出的免费安全证书计划。参与这个计划的组织和公司可以说是互联网顶顶重要的先驱，除了前文提到的三个牛气哄哄的发起单位外，后来又有思科（全球网络设备制造商执牛耳者）、 Akamai 加入，甚至连 Linux 基金会也加入了合作，这些大牌组织的加入保证了这个项目的可信度和可持续性。</p><p>部署 HTTPS 网站的时候需要证书，证书由 CA 机构签发，大部分传统 CA 机构签发证书是需要收费的，这不利于推动 HTTPS 协议的使用。</p><p>Let’s Encrypt 也是一个 CA 机构，但这个 CA 机构是免费的！！！也就是说签发证书不需要任何费用。</p><p>Let’s Encrypt 由于是非盈利性的组织，需要控制开支，他们搞了一个非常有创意的事情，设计了一个 ACME 协议，目前该协议的版本是 v1。</p><p>那为什么要创建 ACME 协议呢，传统的 CA 机构是人工受理证书申请、证书更新、证书撤销，完全是手动处理的。而 ACME 协议规范化了证书申请、更新、撤销等流程，只要一个客户端实现了该协议的功能，通过客户端就可以向 Let’s Encrypt 申请证书，也就是说 Let’s Encrypt CA 完全是自动化操作的。</p><p>任何人都可以基于 ACME 协议实现一个客户端，官方推荐的客户端是 Certbot 。</p><h3 id="Let’s-Encrypt-通配符证书"><a href="#Let’s-Encrypt-通配符证书" class="headerlink" title="Let’s Encrypt 通配符证书"></a>Let’s Encrypt 通配符证书</h3><p>在没有出现通配符证书之前，Let’s Encrypt 支持两种证书。</p><p>1）单域名证书：证书仅仅包含一个主机。</p><p>2）SAN 证书：一张证书可以包括多个主机（Let’s Encrypt 限制是 20），也就是证书可以包含下列的主机：<a href="http://www.example.com、www.example.cn、blog.example.com" target="_blank" rel="noopener">www.example.com、www.example.cn、blog.example.com</a> 等等。</p><p>证书包含的主机可以不是同一个注册域，不要问我注册域是什么？注册域就是向域名注册商购买的域名。</p><p>对于个人用户来说，由于主机并不是太多，所以使用 SAN 证书完全没有问题，但是对于大公司来说有一些问题：</p><ul><li>子域名非常多，而且过一段时间可能就要使用一个新的主机。</li><li>注册域也非常多。</li></ul><p>读者可以思考下，对于大企业来说，SAN 证书可能并不能满足需求，类似于 sina 这样的网站，所有的主机全部包含在一张证书中，而使用 Let’s Encrypt 证书是无法满足的。</p><p>通配符证书就是证书中可以包含一个通配符，比如 .example.com、.example.cn，读者很快明白，大型企业也可以使用通配符证书了，一张证书可以防止更多的主机了。</p><p>这个功能可以说非常重要，从功能上看 Let’s Encrypt 和传统 CA 机构没有什么区别了，会不会触动传统 CA 机构的利益呢？</p><h3 id="如何申请-Let’s-Encrypt-通配符证书"><a href="#如何申请-Let’s-Encrypt-通配符证书" class="headerlink" title="如何申请 Let’s Encrypt 通配符证书"></a>如何申请 Let’s Encrypt 通配符证书</h3><p>为了实现通配符证书，Let’s Encrypt 对 ACME 协议的实现进行了升级，只有 v2 协议才能支持通配符证书。</p><p>也就是说任何客户端只要支持 ACME v2 版本，就可以申请通配符证书了，是不是很激动。</p><p>在了解该协议之前有几个注意点：</p><p>客户在申请 Let’s Encrypt 证书的时候，需要校验域名的所有权，证明操作者有权利为该域名申请证书，目前支持三种验证方式：</p><ul><li>dns-01：给域名添加一个 DNS TXT 记录。</li><li>http-01：在域名对应的 Web 服务器下放置一个 HTTP well-known URL 资源文件。</li><li>tls-sni-01：在域名对应的 Web 服务器下放置一个 HTTPS well-known URL 资源文件。</li></ul><p>而申请通配符证书，只能使用 dns-01 的方式</p><h2 id="Certbot-简介"><a href="#Certbot-简介" class="headerlink" title="Certbot 简介"></a>Certbot 简介</h2><blockquote><p>What’s Certbot?</p></blockquote><p>Certbot is a free, open source software tool for automatically using <a href="https://letsencrypt.org/" target="_blank" rel="noopener">Let’s Encrypt</a> certificates on manually-administrated websites to enable HTTPS.</p><p>Certbot is made by the <a href="https://www.eff.org/" target="_blank" rel="noopener">Electronic Frontier Foundation (EFF)</a>, a 501(c)3 nonprofit based in San Francisco, CA, that defends digital privacy, free speech, and innovation.</p><p>Certbot 的官方网站是 <a href="https://certbot.eff.org/" target="_blank" rel="noopener">https://certbot.eff.org/</a> ，打开这个链接选择自己使用的 web server 和操作系统，EFF 官方会给出详细的使用方法，如果 DNS 在官方的支持插件列表中可以按官方文档操作，但如果是国内的 DNS 可以参考<a href="https://github.com/ywdblog/certbot-letencrypt-wildcardcertificates-alydns-au" target="_blank" rel="noopener">certbot-letencrypt-wildcardcertificates-alydns-au</a></p><p><a href="https://certbot.eff.org/docs/using.html#dns-plugins" target="_blank" rel="noopener">DNS plugin’s name on the Documentation list</a></p><p><a href="https://certbot.eff.org/docs/" target="_blank" rel="noopener">certbot docs</a></p><h3 id="certbot-插件介绍"><a href="#certbot-插件介绍" class="headerlink" title="certbot 插件介绍"></a>certbot 插件介绍</h3><p>Certbot 现在需要运行在安装了 Python （2.7 or 3.4）的类 unix 系统上，内存大于 512MB（如果小于的话，<a href="https://certbot.eff.org/docs/install.html#problems-with-python-virtual-environment" target="_blank" rel="noopener">官方解决方案</a>），默认是需要 root 权限的，比如写证书操作需要 root 权限。</p><p>Certbot 客户机支持获取和安装证书的两种插件:<code>auth</code> 和 <code>install</code>，当使用 certonly 参数的时候，只会获取证书，并不会安装证，获取的证书位于 / etc/letsencrypt 目录下</p><p>主要插件的介绍：</p><p><a href="https://certbot.eff.org/docs/using.html#getting-certificates-and-choosing-plugins" target="_blank" rel="noopener">Getting certificates (and choosing plugins)</a></p><table><thead><tr><th>Plugin</th><th>Auth</th><th>Install</th><th>Notes</th><th>Challenge types (and port)</th></tr></thead><tbody><tr><td>apache</td><td>Y</td><td>Y</td><td>自动化获取并安装证书</td><td>tls-sni-01 (443)</td></tr><tr><td>webroot</td><td>Y</td><td>N</td><td>已经有运行的服务，通过验证 webroot 目录来获取证书</td><td>http-01 (80)</td></tr><tr><td>nginx</td><td>Y</td><td>Y</td><td>使用 nginx 自动获取和安装证书</td><td>tls-sni-01 (443)</td></tr><tr><td>standalone</td><td>Y</td><td>N</td><td>建立一个 standalone WEB 服务，需要 80 或者 443 端口可用，如果你没有类似 nginx 和 apache 等服务，这很有用</td><td>http-01 (80) or tls-sni-01 (443)</td></tr><tr><td>DNS plugins</td><td>Y</td><td>N</td><td>通过修改 dns 服务器的 text 记录，来获取证书，野卡证书只能通过此方式获取</td><td>dns-01 (53)</td></tr><tr><td>manual</td><td>Y</td><td>N</td><td>通过自己给指令获取证书，支持添加定制脚本来完成任务</td><td>http-01 (80), dns-01 (53) or tls-sni-01 (443)</td></tr></tbody></table><p>解析：</p><ul><li>如果你使用 standalone 插件，那么需要使用 80 和 443 端口，因为要建一个监听这些端口的服务，如果你有别的服务使用了该端口，那么就会出问题了。</li><li>webroot 方式，如果你使用了 nginx，那么你需要更改一些 nginx 配置，确保能验证你对该域名的所有权限</li></ul><p>插件的具体使用可以参考<a href="https://www.cnblogs.com/redirect/p/10140248.html" target="_blank" rel="noopener">letsencrypt 证书 - 管理工具 certbot</a></p><p>我个人推荐选择 <code>DNS plugins</code> 或者 <code>manual</code> 方式来管理</p><h3 id="certbot-dns-route53-实践"><a href="#certbot-dns-route53-实践" class="headerlink" title="certbot-dns-route53 实践"></a>certbot-dns-route53 实践</h3><p>因为域名在 Amazon Route 53，所以选择使用 certbot-dns-route53 插件会比较方便，敏感信息都用 xxx 打码了但不影响阅读理解</p><p><a href="https://github.com/certbot/certbot/tree/master/certbot-dns-route53" target="_blank" rel="noopener">https://github.com/certbot/certbot/tree/master/certbot-dns-route53</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create a virtual environment</span></span><br><span class="line">pip install virtualenv</span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">virtualenv certbot</span><br><span class="line"><span class="built_in">source</span> certbot/bin/activate</span><br><span class="line"></span><br><span class="line"><span class="comment"># Update its pip and setuptools (VENV/bin/pip install -U setuptools pip) to avoid problems with cryptography's dependency on setuptools&gt;=11.3.</span></span><br><span class="line"></span><br><span class="line">certbot/bin/pip install -U setuptools pip</span><br><span class="line"></span><br><span class="line">pip list</span><br><span class="line"></span><br><span class="line">Package    Version</span><br><span class="line">---------- -------</span><br><span class="line">pip        20.0.2</span><br><span class="line">setuptools 44.0.0</span><br><span class="line">wheel      0.34.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make sure you have libssl-dev and libffi (or your regional equivalents) installed. You might have to set compiler flags to pick things up (I have to use CPPFLAGS=-I/usr/local/opt/openssl/include LDFLAGS=-L/usr/local/opt/openssl/lib on my macOS to pick up brew's openssl, for example).</span></span><br><span class="line"></span><br><span class="line">pip install certbot-dns-route53</span><br><span class="line"></span><br><span class="line"><span class="comment"># create aws credentials</span></span><br><span class="line">mkdir ~/.aws/</span><br><span class="line">vim ~/.aws/credentials</span><br><span class="line">[default]</span><br><span class="line">aws_access_key_id=xxx</span><br><span class="line">aws_secret_access_key=xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate certificate</span></span><br><span class="line">certbot certonly \</span><br><span class="line">  -n --agree-tos --email xxx \</span><br><span class="line">  --dns-route53 \</span><br><span class="line">  -d <span class="string">"*.xxx"</span> </span><br><span class="line"></span><br><span class="line">(certbot) [root@xxx ~]<span class="comment"># certbot certonly \</span></span><br><span class="line">&gt;   -n --agree-tos --email xxx  \</span><br><span class="line">&gt;   --dns-route53 \</span><br><span class="line">&gt;   -d <span class="string">"*.xxx"</span></span><br><span class="line">Saving debug <span class="built_in">log</span> to /var/<span class="built_in">log</span>/letsencrypt/letsencrypt.log</span><br><span class="line">Found credentials <span class="keyword">in</span> shared credentials file: ~/.aws/credentials</span><br><span class="line">Plugins selected: Authenticator dns-route53, Installer None</span><br><span class="line">Obtaining a new certificate</span><br><span class="line">Performing the following challenges:</span><br><span class="line">dns-01 challenge <span class="keyword">for</span> xxx</span><br><span class="line">Waiting <span class="keyword">for</span> verification...</span><br><span class="line">Cleaning up challenges</span><br><span class="line"></span><br><span class="line">IMPORTANT NOTES:</span><br><span class="line"> - Congratulations! Your certificate and chain have been saved at:</span><br><span class="line">   /etc/letsencrypt/live/xxx/fullchain.pem</span><br><span class="line">   Your key file has been saved at:</span><br><span class="line">   /etc/letsencrypt/live/xxx/privkey.pem</span><br><span class="line">   Your cert will expire on 2020-05-19. To obtain a new or tweaked</span><br><span class="line">   version of this certificate <span class="keyword">in</span> the future, simply run certbot</span><br><span class="line">   again. To non-interactively renew *all* of your certificates, run</span><br><span class="line">   <span class="string">"certbot renew"</span></span><br><span class="line"> - Your account credentials have been saved <span class="keyword">in</span> your Certbot</span><br><span class="line">   configuration directory at /etc/letsencrypt. You should make a</span><br><span class="line">   secure backup of this folder now. This configuration directory will</span><br><span class="line">   also contain certificates and private keys obtained by Certbot so</span><br><span class="line">   making regular backups of this folder is ideal.</span><br><span class="line"> - If you like Certbot, please consider supporting our work by:</span><br><span class="line"></span><br><span class="line">   Donating to ISRG / Let<span class="string">'s Encrypt:   https://letsencrypt.org/donate</span></span><br><span class="line"><span class="string">   Donating to EFF:                    https://eff.org/donate-le</span></span><br></pre></td></tr></table></figure><h3 id="certbot-证书默认存放路径结构"><a href="#certbot-证书默认存放路径结构" class="headerlink" title="certbot 证书默认存放路径结构"></a>certbot 证书默认存放路径结构</h3><p><a href="https://certbot.eff.org/docs/using.html#where-are-my-certificates" target="_blank" rel="noopener">Where are my certificates</a></p><p>All generated keys and issued certificates can be found in <code>/etc/letsencrypt/live/$domain</code>. In the case of creating a SAN certificate with multiple alternative names, <code>$domain</code>is the first domain passed in via -d parameter. Rather than copying, please point your (web) server configuration directly to those files (or create symlinks). During the <a href="#renewal">renewal</a>, <code>/etc/letsencrypt/live</code>is updated with the latest necessary files.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check letsencrypt directory</span></span><br><span class="line">[root@xxx ~]<span class="comment"># tree /etc/letsencrypt/</span></span><br><span class="line">/etc/letsencrypt/</span><br><span class="line">├── accounts</span><br><span class="line">│   └── acme-v02.api.letsencrypt.org</span><br><span class="line">│       └── directory</span><br><span class="line">│           └── xxx</span><br><span class="line">│               ├── meta.json</span><br><span class="line">│               ├── private_key.json</span><br><span class="line">│               └── regr.json</span><br><span class="line">├── archive</span><br><span class="line">│   └── xxx</span><br><span class="line">│       ├── cert1.pem</span><br><span class="line">│       ├── chain1.pem</span><br><span class="line">│       ├── fullchain1.pem</span><br><span class="line">│       └── privkey1.pem</span><br><span class="line">├── csr</span><br><span class="line">│   ├── 0000_csr-certbot.pem</span><br><span class="line">│   └── 0001_csr-certbot.pem</span><br><span class="line">├── keys</span><br><span class="line">│   ├── 0000_key-certbot.pem</span><br><span class="line">│   └── 0001_key-certbot.pem</span><br><span class="line">├── live</span><br><span class="line">│   ├── xxx</span><br><span class="line">│   │   ├── cert.pem -&gt; ../../archive/xxx/cert1.pem</span><br><span class="line">│   │   ├── chain.pem -&gt; ../../archive/xxx/chain1.pem</span><br><span class="line">│   │   ├── fullchain.pem -&gt; ../../archive/xxx/fullchain1.pem</span><br><span class="line">│   │   ├── privkey.pem -&gt; ../../archive/xxx/privkey1.pem</span><br><span class="line">│   │   └── README</span><br><span class="line">│   └── README</span><br><span class="line">├── renewal</span><br><span class="line">│   └── xxx.conf</span><br><span class="line">└── renewal-hooks</span><br><span class="line">    ├── deploy</span><br><span class="line">    ├── post</span><br><span class="line">    └── pre</span><br><span class="line"></span><br><span class="line">15 directories, 18 files</span><br></pre></td></tr></table></figure><ul><li>live 目录下存放的将会链接到最新的证书和私钥</li><li>csr keys 用来存放当前代理的授权密钥对</li><li>account 用来存放证书的管理信息, 这里涉及 ACME</li><li>renewal 存放当前代理所管理的域的信息</li></ul><p>如果是配置 Nginx SSL 证书，通常只需要按照下面这样修改即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssl_certificate /etc/letsencrypt/live/xxx/fullchain.pem;</span><br><span class="line">ssl_certificate_key /etc/letsencrypt/live/xxx/privkey.pem;</span><br></pre></td></tr></table></figure><p><a href="https://certbot.eff.org/docs/using.html#certbot-command-line-options" target="_blank" rel="noopener">Certbot command-line options</a></p><p>Certbot supports a lot of command line options. Here’s the full list, from <code>certbot --help all</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">(certbot) [root@xxx ~]<span class="comment"># certbot -h</span></span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line"></span><br><span class="line">  certbot [SUBCOMMAND] [options] [-d DOMAIN] [-d DOMAIN] ...</span><br><span class="line"></span><br><span class="line">Certbot can obtain and install HTTPS/TLS/SSL certificates.  By default,</span><br><span class="line">it will attempt to use a webserver both <span class="keyword">for</span> obtaining and installing the</span><br><span class="line">certificate. The most common SUBCOMMANDS and flags are:</span><br><span class="line"></span><br><span class="line">obtain, install, and renew certificates:</span><br><span class="line">    (default) run   Obtain &amp; install a certificate <span class="keyword">in</span> your current webserver</span><br><span class="line">    certonly        Obtain or renew a certificate, but <span class="keyword">do</span> not install it</span><br><span class="line">    renew           Renew all previously obtained certificates that are near</span><br><span class="line">expiry</span><br><span class="line">    enhance         Add security enhancements to your existing configuration</span><br><span class="line">   -d DOMAINS       Comma-separated list of domains to obtain a certificate <span class="keyword">for</span></span><br><span class="line"></span><br><span class="line">  (the certbot apache plugin is not installed)</span><br><span class="line">  --standalone      Run a standalone webserver <span class="keyword">for</span> authentication</span><br><span class="line">  (the certbot nginx plugin is not installed)</span><br><span class="line">  --webroot         Place files <span class="keyword">in</span> a server<span class="string">'s webroot folder for authentication</span></span><br><span class="line"><span class="string">  --manual          Obtain certificates interactively, or using shell script</span></span><br><span class="line"><span class="string">hooks</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   -n               Run non-interactively</span></span><br><span class="line"><span class="string">  --test-cert       Obtain a test certificate from a staging server</span></span><br><span class="line"><span class="string">  --dry-run         Test"renew"or"certonly"without saving any certificates</span></span><br><span class="line"><span class="string">to disk</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">manage certificates:</span></span><br><span class="line"><span class="string">    certificates    Display information about certificates you have from Certbot</span></span><br><span class="line"><span class="string">    revoke          Revoke a certificate (supply --cert-name or --cert-path)</span></span><br><span class="line"><span class="string">    delete          Delete a certificate (supply --cert-name)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">manage your account:</span></span><br><span class="line"><span class="string">    register        Create an ACME account</span></span><br><span class="line"><span class="string">    unregister      Deactivate an ACME account</span></span><br><span class="line"><span class="string">    update_account  Update an ACME account</span></span><br><span class="line"><span class="string">  --agree-tos       Agree to the ACME server'</span>s Subscriber Agreement</span><br><span class="line">   -m EMAIL         Email address <span class="keyword">for</span> important account notifications</span><br><span class="line"></span><br><span class="line">More detailed <span class="built_in">help</span>:</span><br><span class="line"></span><br><span class="line">  -h, --<span class="built_in">help</span> [TOPIC]    <span class="built_in">print</span> this message, or detailed <span class="built_in">help</span> on a topic;</span><br><span class="line">                        the available TOPICS are:</span><br><span class="line"></span><br><span class="line">   all, automation, commands, paths, security, testing, or any of the</span><br><span class="line">   subcommands or plugins (certonly, renew, install, register, nginx,</span><br><span class="line">   apache, standalone, webroot, etc.)</span><br><span class="line">  -h all                <span class="built_in">print</span> a detailed <span class="built_in">help</span> page including all topics</span><br><span class="line">  --version             <span class="built_in">print</span> the version number</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br></pre></td></tr></table></figure><h2 id="certbot-自动更新证书"><a href="#certbot-自动更新证书" class="headerlink" title="certbot 自动更新证书"></a>certbot 自动更新证书</h2><blockquote><p>简单介绍 2 种常见的需求，其他情况如使用容器 renew 的朋友相信应该都不用参考本文了</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最简单的手动 renew 命令，看到 success 表示成功</span></span><br><span class="line">certbot renew --force-renewal</span><br><span class="line"></span><br><span class="line">(certbot) [root@xxx ~]<span class="comment"># certbot renew --force-renewal</span></span><br><span class="line">Saving debug <span class="built_in">log</span> to /var/<span class="built_in">log</span>/letsencrypt/letsencrypt.log</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Processing /etc/letsencrypt/renewal/xxx.conf</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Found credentials <span class="keyword">in</span> shared credentials file: ~/.aws/credentials</span><br><span class="line">Plugins selected: Authenticator dns-route53, Installer None</span><br><span class="line">Renewing an existing certificate</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">new certificate deployed without reload, fullchain is</span><br><span class="line">/etc/letsencrypt/live/xxx/fullchain.pem</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line"></span><br><span class="line">Congratulations, all renewals succeeded. The following certs have been renewed:</span><br><span class="line">  /etc/letsencrypt/live/xxx/fullchain.pem (success)</span><br></pre></td></tr></table></figure><blockquote><p>使用 crontab 定期执行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑 certbot_renew.sh，强制更新并重新 reload nginx 加载新证书</span></span><br><span class="line">vim /root/certbot_renew.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">certbot renew --force-renew</span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果是 virtualenv 虚拟环境可以这样写</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/bin</span><br><span class="line"><span class="built_in">source</span> certbot/bin/activate</span><br><span class="line">certbot renew --force-renew</span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加执行权限</span></span><br><span class="line">chmod a+x /root/certbot_renew.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置定时任务自动更新证书，“At 01:01 on day-of-month 1.”</span></span><br><span class="line">vim /etc/crontab</span><br><span class="line">1 1 1 * * /root/certbot_renew.sh &gt;/root/crontab.log 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要记录日志可以这样写</span></span><br><span class="line">1 1 1 * * <span class="built_in">echo</span> `date -R` &gt;&gt; /var/<span class="built_in">log</span>/certbot.crontab.log; certbot renew --force-renewal &gt;&gt; /var/<span class="built_in">log</span>/certbot.crontab.log 2&gt;&amp;1; nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># certbot 官方使用 python 产生了一个分钟的随机数，让更新时间随机一些</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"0 0,12 * * * root python -c'import random; import time; time.sleep(random.random() * 3600)'&amp;&amp; certbot renew"</span> | sudo tee -a /etc/crontab &gt; /dev/null</span><br></pre></td></tr></table></figure><h2 id="checkssl"><a href="#checkssl" class="headerlink" title="checkssl"></a>checkssl</h2><p>checks ssl certs for a set of domains</p><p><a href="https://github.com/srvrco/checkssl" target="_blank" rel="noopener">https://github.com/srvrco/checkssl</a></p><p>With the good work by “Let’s Encrypt” in providing free SSL certs for users, I wanted a quick way to check all the domains I look after to determine which ones have correct SSL certs, and which ones are in need of updating etc. </p><p>This bash file is the first draft of a program to do that.  It can either be run against a list of file names, from the directories in your Lets Encrypt live directory or on a single server with  the aim of getting all the domain names from the server.   </p><p>The output looks like:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Domain       cert for     valid until            cert issued by    possible issues?</span><br><span class="line">domain1.com  domain1.com  Dec 22 09:19:00 2016   Let&apos;s Encrypt   - certificate near renewal date</span><br><span class="line">domain2.com  domain2.com  Dec 22 11:42:00 2016   Let&apos;s Encrypt   - certificate near renewal date</span><br><span class="line">domain3.net  domain3.net  Mar  4 10:10:00 2016   Let&apos;s Encrypt </span><br><span class="line">domain4.net  domain1.net  Mar  2 12:23:00 2016   Let&apos;s Encrypt   - possible name mismatch</span><br></pre></td></tr></table></figure></p><p>You can also get a list of domains that need to be renewed, to list the domains requiring renewal in the nest 20 days;</p><p>checkssl -l /etc/letsencrypt/live/ -e 20 -r<br>domain7.com<br>domain12.com</p><p>You can also get it to run a specific command if domains need renewal, for example </p><p>check -i ISPconfig -e 20 -c ~/scripts/renewssl</p><p>will run the renewssl command with the domain name passed as an argument.   If there are more than one domain that needs renewal it will call the command multiple times.   This can then easily be run as a cron to regularly check and update SSL certs.</p><p>running checkssl with no arguments gives help;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">checkssl ver. 1.15</span><br><span class="line">Checks ssl certs for a set of domains</span><br><span class="line"></span><br><span class="line">Usage: checkssl [-h|--help] [-d|--debug] [-f|--file filename] [-s|--server stype] [-l|--location directory] </span><br><span class="line">                [-e|--expires days] [-r|--renew] [-u|--update] [-U|--nocheck] [-c|--command command] [domain]</span><br><span class="line">``</span><br><span class="line">Options:</span><br><span class="line">  -h, --help      Display this help message and exit.</span><br><span class="line">  -d, --debug     Outputs debug information</span><br><span class="line">  -f, --file  filename</span><br><span class="line">                  Where &apos;filename&apos; is a file containing a list of domain names</span><br><span class="line">  -s, --server server_type</span><br><span class="line">                  Where &apos;server_type&apos; is the server type (cpanel, ISPconfig, apache2 ...)</span><br><span class="line">  -l, --location directory</span><br><span class="line">                  Where &apos;directory&apos; is where your lets encrypt live directory is</span><br><span class="line">                  (typically /etc/letsencrypt/live/)</span><br><span class="line">  -e, --expires days</span><br><span class="line">                  Where &apos;days&apos; is the number of days to alert if cert expires in that time period</span><br><span class="line">  -r, --renew     This just lists domain names that need to be renewed.</span><br><span class="line">                  This list could be used by an auto renew script, or to email you.</span><br><span class="line">  -p, --problems  This just lists the domains that have possible issues.</span><br><span class="line">                  This list could be used to email you only if there is something to take care of.</span><br><span class="line">  -u, --upgrade   Upgrade checkssl if a more recent version is available</span><br><span class="line">  -U, --nocheck   Do not check if a more recent version is available</span><br><span class="line">  -c, --command run_command</span><br><span class="line">                  Where &apos;run_command&apos; is a command which will be run (with domain name passed)</span><br><span class="line">                  for any certs due for renewal</span><br><span class="line"></span><br><span class="line">                  A domain name can also be specified on the command line</span><br></pre></td></tr></table></figure></p><p>If a file is provided, with a list of domains then each domain can include a port / service for testing i.e.</p><p>example.com<br>example.com:pop3s<br>example.com:587</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://letsencrypt.org/docs/" target="_blank" rel="noopener">Let’s Encrypt Documentation</a></p><p><a href="https://github.com/Neilpang/acme.sh" target="_blank" rel="noopener">acme.sh</a></p><p><a href="https://dallaslu.com/use-acme-sh-lets-encrypt-wildcard-ssl-certs/" target="_blank" rel="noopener">使用 acme.sh 管理 Let’s Encrypt Wildcard SSL 证书</a></p><p><a href="https://certbot.eff.org/" target="_blank" rel="noopener">Certbot</a></p><p><a href="https://certbot.eff.org/docs/" target="_blank" rel="noopener">certbot docs</a></p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-centos-7" target="_blank" rel="noopener">How To Secure Apache with Let’s Encrypt on CentOS 7</a></p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04" target="_blank" rel="noopener">How To Secure Nginx with Let’s Encrypt on Ubuntu 18.04</a></p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-18-04" target="_blank" rel="noopener">How To Secure Apache with Let’s Encrypt on Ubuntu 18.04</a></p><p><a href="https://ksmx.me/letsencrypt-ssl-https/" target="_blank" rel="noopener">LET’S ENCRYPT 给网站加 HTTPS 完全指南</a></p><p><a href="https://my.oschina.net/kimver/blog/1634575" target="_blank" rel="noopener">申请 Let’s Encrypt 通配符 HTTPS 证书</a></p><p><a href="https://www.jianshu.com/p/c5c9d071e395" target="_blank" rel="noopener">Let’s Encrypt 终于支持通配符证书了</a></p><p><a href="https://mp.weixin.qq.com/s/hKvtDDQw7EHSGFRGT4QVbw" target="_blank" rel="noopener">Certobot 管理 Let’s Encrypt 证书的几个经验</a></p><p><a href="https://www.cnblogs.com/redirect/p/10140248.html" target="_blank" rel="noopener">letsencrypt 证书 - 管理工具 certbot</a></p>]]></content>
    
    <summary type="html">
    
      使用certbot代替acme.sh免费申请wildcard通配符证书和自动更新实践小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 rpmbuild 制作 Nginx 的 RPM 包</title>
    <link href="https://wsgzao.github.io/post/rpmbuild/"/>
    <id>https://wsgzao.github.io/post/rpmbuild/</id>
    <published>2020-04-06T06:59:49.000Z</published>
    <updated>2020-04-21T10:24:59.277Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191104154723.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>题图为 RPM 包制作原理图，有时候为了方便源码包的安装，和我们自己订制软件包的需求，我们会把一些源码包按照我们的需求来做成 rpm 包，当有了源码包就可以直接编译得到二进制安装包和其他任意包。spec file 是制作 rpm 包最核心的部分，rpm 包的制作就是根据 spec file 来实现的。在制作自定义 rpm 包的时候最好不要使用管理员进行, 因为管理员权限过大，如果一个命令写错了，结果可能是灾难性的，而制件一个 rpm 包普通用户完全可以实现。本文主要介绍使用 rpmbuild 制作 Nginx 的 RPM 包，大部分步骤已经使用 Bash Shell 自动化完成了，大家可以基于此重新定义。</p><blockquote><p>使用 rpmbuild 制作 Nginx 的 RPM 包</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 04 月 06 日 - 增加修改、重新生成和安装 src.rpm 源码包<br>2019 年 11 月 04 日 - 更新 openresty/lua-nginx-module<br>2019 年 01 月 16 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/rpmbuild/">https://wsgzao.github.io/post/rpmbuild/</a></p><hr><h2 id="什么是-RPM"><a href="#什么是-RPM" class="headerlink" title="什么是 RPM"></a>什么是 RPM</h2><p>An RPM package is simply a file containing other files and information about them needed by the system. Specifically, an RPM package consists of the cpio archive, which contains the files, and the RPM header, which contains metadata about the package. The rpm package manager uses this metadata to determine dependencies, where to install files, and other information.</p><p>There are two types of RPM packages:</p><ul><li>source RPM (SRPM)</li><li>binary RPM</li></ul><p>SRPMs and binary RPMs share the file format and tooling, but have different contents and serve different purposes. An SRPM contains source code, optionally patches to it, and a SPEC file, which describes how to build the source code into a binary RPM. A binary RPM contains the binaries built from the sources and patches.</p><p>RPM 有五种基本的操作功能：安装、卸载、升级、查询和验证。</p><p>Linux 软件包分为两大类：</p><ol><li>二进制类包，包括 rpm 安装包（一般分为 i386 和 x86 等几种）</li><li>源码类包，源码包和开发包应该归位此类（.src.rpm）</li></ol><p>在 Redhat 下，rpm 包的默认制作路径在 /usr/src/redhat 下，这其中包含了 6 个目录（要求全部大写）。但 Centos 并没有该目录，因此我们不得不自定义工作车间，即使在 Redhat 下有该目录，一般也是自定义到普通用户的家目录下的</p><table><thead><tr><th>Directory</th><th>Usage</th></tr></thead><tbody><tr><td>BUILD</td><td>源代码解压以后放的位置，只需提供 BUILD 目录，具体里面放什么，不用我们管，所以真正的制作车间是 BUILD 目录</td></tr><tr><td>RPMS</td><td>制作完成后的 rpm 包存放目录，为特定平台指定子目录（i386,i686,ppc）</td></tr><tr><td>SOURCES</td><td>收集的源文件，源材料，补丁文件等存放位置    </td></tr><tr><td>SPECS</td><td>存放 spec 文件，作为制作 rpm 包的领岗文件，以 rpm 名. spec</td></tr><tr><td>SRPMS</td><td>src 格式的 rpm 包位置 ，既然是 src 格式的包，就没有平台的概念了           </td></tr><tr><td>BuiltRoot</td><td>假根，使用 install 临时安装到这个目录，把这个目录当作根来用的，所以在这个目录下的目录文件，才是真正的目录文件。当打包完成后，在清理阶段，这个目录将被删除</td></tr></tbody></table><p>更详细的介绍可以参考 <code>RPM Packaging Guide</code></p><p><a href="https://rpm-packaging-guide.github.io/" target="_blank" rel="noopener">https://rpm-packaging-guide.github.io/</a></p><h2 id="修改、重新生成和安装-src-rpm-源码包"><a href="#修改、重新生成和安装-src-rpm-源码包" class="headerlink" title="修改、重新生成和安装 src.rpm 源码包"></a>修改、重新生成和安装 src.rpm 源码包</h2><p>RHEL/CentOS/Fedora/Suse 等 Linux 发行版都使用 rpm 包作为软件包格式。另外还有一个相关的格式 srpm 包（后缀是. src.rpm），它包含了源代码，可以用它重新生成 rpm 包。</p><p>以 libip2location 为真实案例做下回顾<br><a href="https://centos.pkgs.org/7/remi-x86_64/libip2location-8.0.7-1.el7.remi.x86_64.rpm.html" target="_blank" rel="noopener">https://centos.pkgs.org/7/remi-x86_64/libip2location-8.0.7-1.el7.remi.x86_64.rpm.html</a></p><p>我们找到 libip2location 源码包<br><a href="https://rpms.remirepo.net/SRPMS/libip2location-8.0.7-1.remi.src.rpm" target="_blank" rel="noopener">https://rpms.remirepo.net/SRPMS/libip2location-8.0.7-1.remi.src.rpm</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接安装 * src.rpm 源码包, 有时，我们没有找到可用的 rpm 包，但找到了其对应的 src.rpm 源码包，此时我们可以安装这个 src.rpm 源码包。步骤与直接安装 rpm 包很不相同。</span></span><br><span class="line">wget https://rpms.remirepo.net/SRPMS/libip2location-8.0.7-1.remi.src.rpm</span><br><span class="line">rpm -i libip2location-8.0.7-1.remi.src.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时还没有安装完成。只是在~/rpmbuild/ 目录下准备了该 src.rpm 源码包的资源，可用于进一步生成 rpm 包。</span></span><br><span class="line"><span class="built_in">cd</span> ~/rpmbuild/SPECS</span><br><span class="line">rpmbuild -ba libip2location.spec</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以直接使用如下命令，这个命令一步即可在～/rpmbuild/RPMS / 目录下重新生成 rpm 包。</span></span><br><span class="line">rpmbuild --rebuild libip2location-8.0.7-1.remi.src.rpm</span><br></pre></td></tr></table></figure><p>基于 * src.rpm 源码包修改代码后生成 rpm 包并安装, rpmbuild 命令基于. spec 文件和源码 tar.gz 及 patch 文件生成 src.rpm 和 rpm 包。</p><p>因此，我们只需要修改. spec 文件，或者对应的源码和 patch 文件，然后再执行命令，就可以生成更新后的 src.rpm 包和 rpm 包。</p><p>rpm 包在~/rpmbuild/RPMS 目录下，src.rpm 包在~/rpmbuild/SRPMS 目录下。</p><p>注意要修改~/rpmbuild/SOURCES / 目录下的文件:</p><ol><li>你可以重新打包~/rpmbuild/SOURCES / 目录下的 tar.gz 源文件。</li><li>你可以修改. spec 文件，增加或者减少对 patch 的应用。</li></ol><h2 id="制作-rpm-包"><a href="#制作-rpm-包" class="headerlink" title="制作 rpm 包"></a>制作 rpm 包</h2><blockquote><p>如果你只关心如何使用可以直接跳过看下文，这里主要展示代码和配置文件</p></blockquote><h3 id="build-shell"><a href="#build-shell" class="headerlink" title="build shell"></a>build shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># luajit.sh</span></span><br><span class="line">LUAVER=2.0.5</span><br><span class="line">WKDIR=<span class="string">"/root/rpmbuild/SOURCES"</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">wget http://luajit.org/download/LuaJIT-<span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line">tar zxf LuaJIT-<span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line">rm LuaJIT-<span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line"><span class="built_in">cd</span> LuaJIT-<span class="variable">$LUAVER</span></span><br><span class="line">make BUILDMODE=static</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">export</span> LUAJIT_LIB=/usr/<span class="built_in">local</span>/lib</span><br><span class="line"><span class="built_in">export</span> LUAJIT_INC=/usr/<span class="built_in">local</span>/include/luajit-2.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># build.sh</span></span><br><span class="line">NGX_VER=1.14.2</span><br><span class="line">WKDIR=<span class="string">"/root/rpmbuild/SOURCES"</span></span><br><span class="line">CURRENTDIR=`dirname $(readlink -f <span class="string">"<span class="variable">$0</span>"</span>)`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$CURRENTDIR</span></span><br><span class="line"><span class="built_in">export</span> LUAJIT_LIB=/usr/<span class="built_in">local</span>/lib</span><br><span class="line"><span class="built_in">export</span> LUAJIT_INC=/usr/<span class="built_in">local</span>/include/luajit-2.0</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">wget http://nginx.org/download/nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">tar xzf nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">rm nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">mv nginx-<span class="variable">$NGX_VER</span> nginx-garena-<span class="variable">$NGX_VER</span></span><br><span class="line"><span class="built_in">cd</span> nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line"></span><br><span class="line">mkdir -p contrib</span><br><span class="line"><span class="built_in">cd</span> contrib/</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/bigplum/Nginx-limit-traffic-rate-module.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/agentzh/headers-more-nginx-module.git</span><br><span class="line"><span class="comment">#git clone git://github.com/gnosek/nginx-upstream-fair.git</span></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/agentzh/<span class="built_in">echo</span>-nginx-module.git</span><br><span class="line"><span class="comment">#git clone git://github.com/arut/nginx-dav-ext-module.git</span></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/r10r/ngx_http_auth_pam_module.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/FRiCKLE/ngx_cache_purge.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/simpl/ngx_devel_kit.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/openresty/lua-nginx-module.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/nbs-system/naxsi.git</span><br><span class="line">rm -rf */.git</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line">cp -r <span class="variable">$CURRENTDIR</span>/nginx-template/* <span class="variable">$WKDIR</span>/nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line">cp <span class="variable">$CURRENTDIR</span>/nginx-spec /root/rpmbuild/SPECS/</span><br><span class="line"><span class="comment">#cp /root/rules $WKDIR/nginx-garena-$NGX_VER/debian/</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">tar zcf nginx-garena-<span class="variable">$NGX_VER</span>.tar.gz nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line"><span class="built_in">cd</span> /root/rpmbuild/SPECS/</span><br><span class="line">rpmbuild -ba nginx-spec</span><br><span class="line"><span class="built_in">cd</span> /root/rpmbuild/RPMS/noarch</span><br></pre></td></tr></table></figure><h3 id="nginx-spec"><a href="#nginx-spec" class="headerlink" title="nginx-spec"></a>nginx-spec</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.The introduction section </span></span><br><span class="line">Name: nginx-garena                                      <span class="comment"># 软件包名称 </span></span><br><span class="line">Version: 1.14.2                                         <span class="comment"># 版本号 </span></span><br><span class="line">Release: 0                                              <span class="comment"># release 号 </span></span><br><span class="line">Summary: nginx garena rpm                               <span class="comment"># 简要描述信息 </span></span><br><span class="line">Source0: nginx-garena-1.14.1.tar.gz                     <span class="comment"># source 主要是引用一下自己定义好的脚本，配置文件之类的内容 </span></span><br><span class="line">License: GPL                                            <span class="comment"># 一定带上（最好是对方源码包的 License）BSD，GPL，GPLv2</span></span><br><span class="line">Group: Rahul                                            <span class="comment"># 要全用这里面的一个组：less /usr/share/doc/rpm-version/GROUPS</span></span><br><span class="line">BuildArch: noarch               </span><br><span class="line">BuildRoot: %&#123;_tmppath&#125;/%&#123;name&#125;-buildroot                </span><br><span class="line">%description                                            <span class="comment"># 软件包详述 </span></span><br><span class="line">Garena self-build Nginx.</span><br><span class="line">%define _binaries_in_noarch_packages_terminate_build   0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.The Prep section 准备阶段, 主要就是把源码包解压到 build 目录下，设置一下环境变量，并 cd 进去 </span></span><br><span class="line">%prep</span><br><span class="line">%setup -q %&#123;name&#125;-%&#123;version&#125;                            <span class="comment"># 这个宏的作用静默模式解压并 cd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.The Build Section 编译制作阶段，这一节主要用于编译源码 </span></span><br><span class="line">%build</span><br><span class="line">CFLAGS=<span class="string">"<span class="variable">$RPM_OPT_FLAGS</span>"</span> ./configure --prefix=/usr/share/nginx/ \</span><br><span class="line">                    --sbin-path=/usr/sbin/nginx \</span><br><span class="line">                    --conf-path=/etc/nginx/nginx.conf \</span><br><span class="line">                    --error-log-path=/var/<span class="built_in">log</span>/nginx/error.log \</span><br><span class="line">                    --http-log-path=/var/<span class="built_in">log</span>/nginx/access.log \</span><br><span class="line">                    --pid-path=/var/run/nginx.pid \</span><br><span class="line">                    --lock-path=/var/lock/nginx.lock \</span><br><span class="line">                    --http-client-body-temp-path=/var/lib/nginx/body \</span><br><span class="line">                    --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \</span><br><span class="line">                    --http-proxy-temp-path=/var/lib/nginx/proxy \</span><br><span class="line">                    --http-scgi-temp-path=/var/lib/nginx/scgi \</span><br><span class="line">                    --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \</span><br><span class="line">                    --with-pcre-jit \</span><br><span class="line">                    --with-http_flv_module \</span><br><span class="line">                    --with-http_mp4_module \</span><br><span class="line">                    --with-file-aio \</span><br><span class="line">                    --with-http_v2_module \</span><br><span class="line">                    --with-stream \</span><br><span class="line">                    --with-stream_ssl_module \</span><br><span class="line">                    --with-http_auth_request_module \</span><br><span class="line">                    --with-http_slice_module \</span><br><span class="line">                    --with-threads \</span><br><span class="line">                    --with-http_gunzip_module \</span><br><span class="line">                    --with-http_random_index_module \</span><br><span class="line">                    --with-http_secure_link_module \</span><br><span class="line">                    --with-http_geoip_module \</span><br><span class="line">                    --with-http_ssl_module \</span><br><span class="line">                    --with-openssl=/usr/<span class="built_in">local</span>/src/openssl-1.0.2p \</span><br><span class="line">                    --with-http_addition_module \</span><br><span class="line">                    --with-http_geoip_module \</span><br><span class="line">                    --with-http_gzip_static_module \</span><br><span class="line">                    --with-http_realip_module \</span><br><span class="line">                    --with-ipv6 \</span><br><span class="line">                    --without-mail_pop3_module \</span><br><span class="line">                    --without-mail_imap_module \</span><br><span class="line">                    --without-mail_smtp_module \</span><br><span class="line">                    --add-module=contrib/Nginx-limit-traffic-rate-module \</span><br><span class="line">                    --add-module=contrib/headers-more-nginx-module \</span><br><span class="line">                    --add-module=contrib/<span class="built_in">echo</span>-nginx-module \</span><br><span class="line">                    --add-module=contrib/ngx_http_auth_pam_module \</span><br><span class="line">                    --add-module=contrib/ngx_cache_purge \</span><br><span class="line">                    --add-module=contrib/ngx_devel_kit \</span><br><span class="line">                    --add-module=contrib/lua-nginx-module \</span><br><span class="line">                    --add-module=contrib/naxsi/naxsi_src</span><br><span class="line">make -j8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.Install section  这一节主要用于完成实际安装软件必须执行的命令，可包含 4 种类型脚本 </span></span><br><span class="line">%install</span><br><span class="line">[ <span class="string">"<span class="variable">$RPM_BUILD_ROOT</span>"</span> != <span class="string">"/"</span> ] &amp;&amp; rm -rf <span class="variable">$RPM_BUILD_ROOT</span></span><br><span class="line">make DESTDIR=<span class="variable">$RPM_BUILD_ROOT</span> install</span><br><span class="line">install -m 0755 -d <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/sites-enabled</span><br><span class="line">install -m 0755 -d <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/sites-available</span><br><span class="line">install -m 0755 -d <span class="variable">$RPM_BUILD_ROOT</span>/var/<span class="built_in">log</span>/nginx</span><br><span class="line">install -m 0755 -d <span class="variable">$RPM_BUILD_ROOT</span>/var/lib/nginx</span><br><span class="line">install -D -m 644 conf/sites-available/000_stub_status <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/sites-available/000_stub_status</span><br><span class="line">install -D -m 644 conf/django_fastcgi_params <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/django_fastcgi_params</span><br><span class="line">install -D -m 644 conf/naxsi_core.rules <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/naxsi_core.rules</span><br><span class="line">install -D -m 644 conf/sites-available/000_stub_status <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/sites-enabled/000_stub_status</span><br><span class="line">install -D -m 644 logrotate.d/nginx <span class="variable">$RPM_BUILD_ROOT</span>/etc/logrotate.d/nginx</span><br><span class="line">install -D -m 644 nginx.service <span class="variable">$RPM_BUILD_ROOT</span>/usr/lib/systemd/system/nginx.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.clean section 清理段，clean 的主要作用就是删除 BUILD</span></span><br><span class="line">%clean</span><br><span class="line">[ <span class="string">"<span class="variable">$RPM_BUILD_ROOT</span>"</span> != <span class="string">"/"</span> ] &amp;&amp; rm -rf <span class="variable">$RPM_BUILD_ROOT</span></span><br><span class="line">%post</span><br><span class="line">useradd -s /sbin/nologin -d /var/www www-data</span><br><span class="line">chown -R www-data.www-data /var/<span class="built_in">log</span>/nginx /var/lib/nginx</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br><span class="line"><span class="built_in">echo</span> %&#123;name&#125;-%&#123;version&#125; is successfully installed.</span><br><span class="line">systemctl start nginx</span><br><span class="line"><span class="comment"># 6.file section 文件列表段，这个阶段是把前面已经编译好的内容要打包了 </span></span><br><span class="line">%files</span><br><span class="line">%defattr(-,root,root)</span><br><span class="line">%dir /etc/nginx</span><br><span class="line">/etc/nginx/*</span><br><span class="line">%dir /usr/src/debug/nginx-garena-1.14.1</span><br><span class="line">/usr/src/debug/nginx-garena-1.14.1/*</span><br><span class="line">/usr/sbin/nginx</span><br><span class="line">%dir /usr/share/nginx</span><br><span class="line">/usr/share/nginx/*</span><br><span class="line">/etc/logrotate.d/nginx</span><br><span class="line">/usr/lib/systemd/system/nginx.service</span><br><span class="line">/usr/lib/debug/*</span><br><span class="line">/usr/lib/debug/.build-id/*</span><br><span class="line">%dir /var/<span class="built_in">log</span>/nginx</span><br><span class="line">%dir /var/lib/nginx</span><br><span class="line">%config(noreplace) /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><h3 id="nginx-template"><a href="#nginx-template" class="headerlink" title="nginx-template"></a>nginx-template</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line">nginx-template</span><br><span class="line">    ├── conf</span><br><span class="line">    │   ├── django_fastcgi_params</span><br><span class="line">    │   ├── naxsi_core.rules</span><br><span class="line">    │   └── sites-available</span><br><span class="line">    │       └── 000_stub_status</span><br><span class="line">    ├── logrotate.d</span><br><span class="line">    │   └── nginx</span><br><span class="line">    ├── nginx.conf</span><br><span class="line">    └── nginx.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/conf/django_fastcgi_params</span></span><br><span class="line">fastcgi_param  QUERY_STRING       <span class="variable">$query_string</span>;</span><br><span class="line">fastcgi_param  REQUEST_METHOD     <span class="variable">$request_method</span>;</span><br><span class="line">fastcgi_param  CONTENT_TYPE       <span class="variable">$content_type</span>;</span><br><span class="line">fastcgi_param  CONTENT_LENGTH     <span class="variable">$content_length</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_param  PATH_INFO          <span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">fastcgi_param  REQUEST_URI        <span class="variable">$request_uri</span>;</span><br><span class="line">fastcgi_param  DOCUMENT_URI       <span class="variable">$document_uri</span>;</span><br><span class="line">fastcgi_param  DOCUMENT_ROOT      <span class="variable">$document_root</span>;</span><br><span class="line">fastcgi_param  SERVER_PROTOCOL    <span class="variable">$server_protocol</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;</span><br><span class="line">fastcgi_param  SERVER_SOFTWARE    nginx/<span class="variable">$nginx_version</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_param  REMOTE_ADDR        <span class="variable">$remote_addr</span>;</span><br><span class="line">fastcgi_param  REMOTE_PORT        <span class="variable">$remote_port</span>;</span><br><span class="line">fastcgi_param  SERVER_ADDR        <span class="variable">$server_addr</span>;</span><br><span class="line">fastcgi_param  SERVER_PORT        <span class="variable">$server_port</span>;</span><br><span class="line">fastcgi_param  SERVER_NAME        <span class="variable">$server_name</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_param  HTTP_X_FORWARDED_PROTOCOL        <span class="variable">$scheme</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_pass_header Authorization;</span><br><span class="line">fastcgi_intercept_errors off;</span><br><span class="line">fastcgi_keep_conn on;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/conf/naxsi_core.rules</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment">## INTERNAL RULES IDS:1-999     ##</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment">#@MainRule "msg:weird request, unable to parse" id:1;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:request too big, stored on disk and not parsed" id:2;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid hex encoding, null bytes" id:10;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:unknown content-type" id:11;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid formatted url" id:12;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid POST format" id:13;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid POST boundary" id:14;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid JSON" id:15;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:empty POST" id:16;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:libinjection_sql" id:17;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:libinjection_xss" id:18;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment">## SQL Injections IDs:1000-1099 ##</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line">MainRule <span class="string">"rx:select|union|update|delete|insert|table|from|ascii|hex|unhex|drop"</span> <span class="string">"msg:sql keywords"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1000;</span><br><span class="line">MainRule <span class="string">"str:\""</span> <span class="string">"msg:double quote"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8,<span class="variable">$XSS</span>:8"</span> id:1001;</span><br><span class="line">MainRule <span class="string">"str:0x"</span> <span class="string">"msg:0x, possible hex encoding"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:2"</span> id:1002;</span><br><span class="line"><span class="comment">## Hardcore rules</span></span><br><span class="line">MainRule <span class="string">"str:/*"</span> <span class="string">"msg:mysql comment (/*)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8"</span> id:1003;</span><br><span class="line">MainRule <span class="string">"str:*/"</span> <span class="string">"msg:mysql comment (*/)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8"</span> id:1004;</span><br><span class="line">MainRule <span class="string">"str:|"</span> <span class="string">"msg:mysql keyword (|)"</span>  <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8"</span> id:1005;</span><br><span class="line">MainRule <span class="string">"str:&amp;&amp;"</span> <span class="string">"msg:mysql keyword (&amp;&amp;)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8"</span> id:1006;</span><br><span class="line"><span class="comment">## end of hardcore rules</span></span><br><span class="line">MainRule <span class="string">"str:--"</span> <span class="string">"msg:mysql comment (--)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1007;</span><br><span class="line">MainRule <span class="string">"str:;"</span> <span class="string">"msg:semicolon"</span> <span class="string">"mz:BODY|URL|ARGS"</span> <span class="string">"s:<span class="variable">$SQL</span>:4,<span class="variable">$XSS</span>:8"</span> id:1008;</span><br><span class="line">MainRule <span class="string">"str:="</span> <span class="string">"msg:equal sign in var, probable sql/xss"</span> <span class="string">"mz:ARGS|BODY"</span> <span class="string">"s:<span class="variable">$SQL</span>:2"</span> id:1009;</span><br><span class="line">MainRule <span class="string">"str:("</span> <span class="string">"msg:open parenthesis, probable sql/xss"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4,<span class="variable">$XSS</span>:8"</span> id:1010;</span><br><span class="line">MainRule <span class="string">"str:)"</span> <span class="string">"msg:close parenthesis, probable sql/xss"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4,<span class="variable">$XSS</span>:8"</span> id:1011;</span><br><span class="line">MainRule <span class="string">"str:'"</span> <span class="string">"msg:simple quote"</span> <span class="string">"mz:ARGS|BODY|URL|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4,<span class="variable">$XSS</span>:8"</span> id:1013;</span><br><span class="line">MainRule <span class="string">"str:,"</span> <span class="string">"msg:comma"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1015;</span><br><span class="line">MainRule <span class="string">"str:#"</span> <span class="string">"msg:mysql comment (#)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1016;</span><br><span class="line">MainRule <span class="string">"str:@@"</span> <span class="string">"msg:double arobase (@@)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1017;</span><br><span class="line"></span><br><span class="line"><span class="comment">###############################</span></span><br><span class="line"><span class="comment">## OBVIOUS RFI IDs:1100-1199 ##</span></span><br><span class="line"><span class="comment">###############################</span></span><br><span class="line">MainRule <span class="string">"str:http://"</span> <span class="string">"msg:http:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1100;</span><br><span class="line">MainRule <span class="string">"str:https://"</span> <span class="string">"msg:https:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1101;</span><br><span class="line">MainRule <span class="string">"str:ftp://"</span> <span class="string">"msg:ftp:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1102;</span><br><span class="line">MainRule <span class="string">"str:php://"</span> <span class="string">"msg:php:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1103;</span><br><span class="line">MainRule <span class="string">"str:sftp://"</span> <span class="string">"msg:sftp:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1104;</span><br><span class="line">MainRule <span class="string">"str:zlib://"</span> <span class="string">"msg:zlib:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1105;</span><br><span class="line">MainRule <span class="string">"str:data://"</span> <span class="string">"msg:data:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1106;</span><br><span class="line">MainRule <span class="string">"str:glob://"</span> <span class="string">"msg:glob:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1107;</span><br><span class="line">MainRule <span class="string">"str:phar://"</span> <span class="string">"msg:phar:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1108;</span><br><span class="line">MainRule <span class="string">"str:file://"</span> <span class="string">"msg:file:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1109;</span><br><span class="line">MainRule <span class="string">"str:gopher://"</span> <span class="string">"msg:gopher:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1110;</span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment">## Directory traversal IDs:1200-1299 ##</span></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line">MainRule <span class="string">"str:.."</span> <span class="string">"msg:double dot"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1200;</span><br><span class="line">MainRule <span class="string">"str:/etc/passwd"</span> <span class="string">"msg:obvious probe"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1202;</span><br><span class="line">MainRule <span class="string">"str:c:\\"</span> <span class="string">"msg:obvious windows path"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1203;</span><br><span class="line">MainRule <span class="string">"str:cmd.exe"</span> <span class="string">"msg:obvious probe"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1204;</span><br><span class="line">MainRule <span class="string">"str:\\"</span> <span class="string">"msg:backslash"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1205;</span><br><span class="line"><span class="comment">#MainRule "str:/" "msg:slash in args" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:2" id:1206;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########################################</span></span><br><span class="line"><span class="comment">## Cross Site Scripting IDs:1300-1399 ##</span></span><br><span class="line"><span class="comment">########################################</span></span><br><span class="line">MainRule <span class="string">"str:&lt;"</span> <span class="string">"msg:html open tag"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:8"</span> id:1302;</span><br><span class="line">MainRule <span class="string">"str:&gt;"</span> <span class="string">"msg:html close tag"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:8"</span> id:1303;</span><br><span class="line">MainRule <span class="string">"str:["</span> <span class="string">"msg:open square backet ([), possible js"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:4"</span> id:1310;</span><br><span class="line">MainRule <span class="string">"str:]"</span> <span class="string">"msg:close square bracket (]), possible js"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:4"</span> id:1311;</span><br><span class="line">MainRule <span class="string">"str:~"</span> <span class="string">"msg:tilde (~) character"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:4"</span> id:1312;</span><br><span class="line">MainRule <span class="string">"str:`"</span>  <span class="string">"msg:grave accent (`)"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:8"</span> id:1314;</span><br><span class="line">MainRule <span class="string">"rx:%[2|3]."</span>  <span class="string">"msg:double encoding"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:8"</span> id:1315;</span><br><span class="line"></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line"><span class="comment">## Evading tricks IDs: 1400-1500 ##</span></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line">MainRule <span class="string">"str:&amp;#"</span> <span class="string">"msg:utf7/8 encoding"</span> <span class="string">"mz:ARGS|BODY|URL|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$EVADE</span>:4"</span> id:1400;</span><br><span class="line">MainRule <span class="string">"str:%U"</span> <span class="string">"msg:M$ encoding"</span> <span class="string">"mz:ARGS|BODY|URL|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$EVADE</span>:4"</span> id:1401;</span><br><span class="line"></span><br><span class="line"><span class="comment">#############################</span></span><br><span class="line"><span class="comment">## File uploads: 1500-1600 ##</span></span><br><span class="line"><span class="comment">#############################</span></span><br><span class="line">MainRule <span class="string">"rx:\.ph|\.asp|\.ht"</span> <span class="string">"msg:asp/php file upload"</span> <span class="string">"mz:FILE_EXT"</span> <span class="string">"s:<span class="variable">$UPLOAD</span>:8"</span> id:1500;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/logrotate.d/nginx</span></span><br><span class="line">/var/<span class="built_in">log</span>/nginx/*.<span class="built_in">log</span> /var/<span class="built_in">log</span>/nginx/*/*.<span class="built_in">log</span>&#123;</span><br><span class="line">daily</span><br><span class="line">missingok</span><br><span class="line">rotate 14</span><br><span class="line">compress</span><br><span class="line">delaycompress</span><br><span class="line">notifempty</span><br><span class="line">create 640 root adm</span><br><span class="line">sharedscripts</span><br><span class="line">postrotate</span><br><span class="line">[ ! -f /var/run/nginx.pid ] || <span class="built_in">kill</span> -USR1 `cat /var/run/nginx.pid`</span><br><span class="line">endscript</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/nginx.conf</span></span><br><span class="line">user www-data;</span><br><span class="line">worker_processes auto;</span><br><span class="line"></span><br><span class="line"><span class="comment">#worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;</span></span><br><span class="line">worker_rlimit_nofile 655650;</span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">        worker_connections  10240;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line"><span class="comment">#       include       /etc/nginx/naxsi_core.rules;</span></span><br><span class="line">        include       mime.types;</span><br><span class="line">        default_type  application/octet-stream;</span><br><span class="line">log_format garena <span class="string">'$remote_addr - $remote_user [$time_iso8601]"$request"$status $body_bytes_sent'</span></span><br><span class="line">                <span class="string">'"$http_referer" "$http_user_agent" $request_time $upstream_response_time "$http_x_forwarded_for" "$geoip_country_code" "$host"'</span>;</span><br><span class="line">        log_format garena_post <span class="string">'$remote_addr - $remote_user [$time_iso8601]"$request"$status $body_bytes_sent'</span></span><br><span class="line">                <span class="string">'"$http_referer" "$http_user_agent" $request_time $upstream_response_time "$http_x_forwarded_for" "$geoip_country_code" "$host" "$request_body"'</span>;</span><br><span class="line">log_format compact <span class="string">'$time_iso8601|$remote_addr|$geoip_country_code|$http_x_forwarded_for|$status|$request_time|$upstream_response_time|$request_length|$body_bytes_sent|$host|$request|$http_referer|$http_user_agent'</span>;</span><br><span class="line">log_format compact_post <span class="string">'$time_iso8601|$remote_addr|$geoip_country_code|$http_x_forwarded_for|$status|$request_time|$upstream_response_time|$request_length|$body_bytes_sent|$host|$request|$http_referer|$http_user_agent|$request_body'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#       access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">        sendfile        on;</span><br><span class="line"><span class="comment">#       tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">        keepalive_timeout  30;</span><br><span class="line">        fastcgi_keep_conn on;</span><br><span class="line">        tcp_nodelay        on;</span><br><span class="line"></span><br><span class="line">        gzip  on;</span><br><span class="line">        gzip_disable <span class="string">"MSIE [1-6]\.(?!.*SV1)"</span>;</span><br><span class="line">        gzip_proxied any;</span><br><span class="line">        gzip_buffers 16 8k;</span><br><span class="line">        gzip_types    text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json;</span><br><span class="line">        gzip_vary on;</span><br><span class="line">        include /etc/nginx/sites-enabled/*;</span><br><span class="line"></span><br><span class="line">set_real_ip_from 10.0.0.0/8;</span><br><span class="line">real_ip_header    X-Forwarded-For;</span><br><span class="line"><span class="comment">#real_ip_recursive on;</span></span><br><span class="line"><span class="comment">#geoip_country /usr/share/GeoIP/GeoIP.dat;</span></span><br><span class="line"></span><br><span class="line">        server_tokens off;         <span class="comment"># returns "Server: nginx"</span></span><br><span class="line">more_clear_headers Server; <span class="comment"># doesn't return"Server: "header at all</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/nginx.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=The nginx HTTP and reverse proxy server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/run/nginx.pid</span><br><span class="line">ExecStartPre=/usr/sbin/nginx -t</span><br><span class="line">ExecStart=/usr/sbin/nginx</span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -s HUP <span class="variable">$MAINPID</span></span><br><span class="line">KillMode=process</span><br><span class="line">KillSignal=SIGQUIT</span><br><span class="line">TimeoutStopSec=5</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="Initialize-rpmbuild-env"><a href="#Initialize-rpmbuild-env" class="headerlink" title="Initialize rpmbuild env"></a>Initialize rpmbuild env</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check current os version and kernel</span></span><br><span class="line">cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.5.1804 (Core)</span><br><span class="line">uname -r</span><br><span class="line">3.10.0-862.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># install lua</span></span><br><span class="line">sh luajit.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum install dependencies</span></span><br><span class="line">yum install -y gcc pam-devel git rpm-build pcre-devel openssl openssl-devel geoip-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir</span></span><br><span class="line">mkdir -p /root/rpmbuild/SOURCES/</span><br><span class="line">mkdir -p /root/rpmbuild/SPECS/</span><br><span class="line">mkdir -p /root/rpmbuild/RPMS/noarch</span><br><span class="line"></span><br><span class="line"><span class="comment"># download openssl</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">wget https://github.com/openssl/openssl/archive/OpenSSL_1_0_2p.tar.gz</span><br><span class="line">tar xf OpenSSL_1_0_2p.tar.gz</span><br><span class="line">mv openssl-OpenSSL_1_0_2p/ openssl-1.0.2p</span><br><span class="line"></span><br><span class="line"><span class="comment"># confirm these files are correct</span></span><br><span class="line">[root@localhost ~]<span class="comment"># tree nginx-rpmbuild-centos7/</span></span><br><span class="line">nginx-rpmbuild-centos7/</span><br><span class="line">├── build.sh</span><br><span class="line">├── conf_buid</span><br><span class="line">│   ├── conf</span><br><span class="line">│   │   ├── django_fastcgi_params</span><br><span class="line">│   │   ├── fastcgi.conf</span><br><span class="line">│   │   ├── fastcgi_params</span><br><span class="line">│   │   ├── koi-utf</span><br><span class="line">│   │   ├── koi-win</span><br><span class="line">│   │   ├── mime.types</span><br><span class="line">│   │   ├── naxsi_core.rules</span><br><span class="line">│   │   ├── nginx.conf</span><br><span class="line">│   │   ├── scgi_params</span><br><span class="line">│   │   ├── sites-available</span><br><span class="line">│   │   │   └── 000_stub_status</span><br><span class="line">│   │   ├── uwsgi_params</span><br><span class="line">│   │   └── win-utf</span><br><span class="line">│   ├── logrotate.d</span><br><span class="line">│   │   └── nginx</span><br><span class="line">│   ├── nginx.conf</span><br><span class="line">│   └── nginx.service</span><br><span class="line">├── luajit.sh</span><br><span class="line">├── nginx-spec</span><br><span class="line">└── nginx-template</span><br><span class="line">    ├── conf</span><br><span class="line">    │   ├── django_fastcgi_params</span><br><span class="line">    │   ├── naxsi_core.rules</span><br><span class="line">    │   └── sites-available</span><br><span class="line">    │       └── 000_stub_status</span><br><span class="line">    ├── logrotate.d</span><br><span class="line">    │   └── nginx</span><br><span class="line">    ├── nginx.conf</span><br><span class="line">    └── nginx.service</span><br><span class="line"></span><br><span class="line">8 directories, 24 files</span><br></pre></td></tr></table></figure><h2 id="How-to-build-Nginx-RPM"><a href="#How-to-build-Nginx-RPM" class="headerlink" title="How to build Nginx RPM"></a>How to build Nginx RPM</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check nginx stable version from official website</span></span><br><span class="line">http://nginx.org/en/download.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># check configuration</span></span><br><span class="line">vim build.sh</span><br><span class="line"></span><br><span class="line">NGX_VER=1.14.2</span><br><span class="line">WKDIR=<span class="string">"/root/rpmbuild/SOURCES"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check nginx version</span></span><br><span class="line">vim nginx-spec</span><br><span class="line"></span><br><span class="line"><span class="comment"># run build.sh</span></span><br><span class="line">./build.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># RPM package</span></span><br><span class="line">Processing files: nginx-garena-1.14.2-0.noarch</span><br><span class="line">warning: File listed twice: /etc/nginx/nginx.conf</span><br><span class="line">Provides: config(nginx-garena) = 1.14.2-0 nginx-garena = 1.14.2-0</span><br><span class="line">Requires(interp): /bin/sh</span><br><span class="line">Requires(rpmlib): rpmlib(CompressedFileNames) &lt;= 3.0.4-1 rpmlib(FileDigests) &lt;= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) &lt;= 4.0-1</span><br><span class="line">Requires(post): /bin/sh</span><br><span class="line">Requires: libGeoIP.so.1()(64bit) libc.so.6()(64bit) libc.so.6(GLIBC_2.10)(64bit) libc.so.6(GLIBC_2.11)(64bit) libc.so.6(GLIBC_2.14)(64bit) libc.so.6(GLIBC_2.17)(64bit) libc.so.6(GLIBC_2.2.5)(64bit) libc.so.6(GLIBC_2.3)(64bit) libc.so.6(GLIBC_2.3.2)(64bit) libc.so.6(GLIBC_2.3.4)(64bit) libc.so.6(GLIBC_2.4)(64bit) libc.so.6(GLIBC_2.7)(64bit) libcrypt.so.1()(64bit) libcrypt.so.1(GLIBC_2.2.5)(64bit) libdl.so.2()(64bit) libdl.so.2(GLIBC_2.2.5)(64bit) libgcc_s.so.1()(64bit) libgcc_s.so.1(GCC_3.0)(64bit) libgcc_s.so.1(GCC_3.3)(64bit) libm.so.6()(64bit) libm.so.6(GLIBC_2.2.5)(64bit) libpam.so.0()(64bit) libpam.so.0(LIBPAM_1.0)(64bit) libpcre.so.1()(64bit) libpthread.so.0()(64bit) libpthread.so.0(GLIBC_2.2.5)(64bit) libpthread.so.0(GLIBC_2.3.2)(64bit) libz.so.1()(64bit) rtld(GNU_HASH)</span><br><span class="line">warning: Arch dependent binaries <span class="keyword">in</span> noarch package</span><br><span class="line">Checking <span class="keyword">for</span> unpackaged file(s): /usr/lib/rpm/check-files /root/rpmbuild/BUILDROOT/nginx-garena-1.14.2-0.x86_64</span><br><span class="line">Wrote: /root/rpmbuild/SRPMS/nginx-garena-1.14.2-0.src.rpm</span><br><span class="line">Wrote: /root/rpmbuild/RPMS/noarch/nginx-garena-1.14.2-0.noarch.rpm</span><br><span class="line">Executing(%clean): /bin/sh -e /var/tmp/rpm-tmp.iR5dLd</span><br><span class="line">+ <span class="built_in">umask</span> 022</span><br><span class="line">+ <span class="built_in">cd</span> /root/rpmbuild/BUILD</span><br><span class="line">+ <span class="built_in">cd</span> nginx-garena-1.14.2</span><br><span class="line">+ <span class="string">'['</span> /root/rpmbuild/BUILDROOT/nginx-garena-1.14.2-0.x86_64 <span class="string">'!='</span> / <span class="string">']'</span></span><br><span class="line">+ rm -rf /root/rpmbuild/BUILDROOT/nginx-garena-1.14.2-0.x86_64</span><br><span class="line">+ <span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><h2 id="基于-openresty-制作-nginx-rpm-安装包"><a href="#基于-openresty-制作-nginx-rpm-安装包" class="headerlink" title="基于 openresty 制作 nginx rpm 安装包"></a>基于 openresty 制作 nginx rpm 安装包</h2><blockquote><p>推荐大家向 openresty 转型，我在编译过程中主要遇到以下 4 个小问题</p></blockquote><ol><li>问题 1 沿用官方的 luajit v2.0.5 编译新版本 lua-nginx-module 应该会提示建议切换至 openresty 的 luajit v2.1 分支</li><li>问题 2 的解决方案是使用低版本 lua-nginx-module v0.10.14，使用最新版发现会触发该问题，等待官方修复</li><li>问题 3 的原因是因为 nginx 启动需要一点点时间，而 systemd 在 nginx 完成启动前就去读取 pid file 造成读取 pid 失败</li><li>问题 4 的 libluajit-5.1.so.2 问题跟着我的步骤执行应该不会出现，不需要执行 ln 软链接等操作</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@gop-sg-192-168-56-103 wangao]<span class="comment"># tailf /var/log/nginx/error.log</span></span><br><span class="line"><span class="comment"># 问题 1</span></span><br><span class="line">2019/11/04 11:59:56 [alert] 2749<span class="comment">#2749: detected a LuaJIT version which is not OpenResty's; many optimizations will be disabled and performance will be compromised (see https://github.com/openresty/luajit2 for OpenResty's LuaJIT or, even better, consider using the OpenResty releases from https://openresty.org/en/download.html)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题 2</span></span><br><span class="line">2019/11/04 11:59:56 [alert] 2749<span class="comment">#2749: failed to load the 'resty.core' module (https://github.com/openresty/lua-resty-core); ensure you are using an OpenResty release from https://openresty.org/en/download.html (reason: module 'resty.core' not found:</span></span><br><span class="line">no field package.preload[<span class="string">'resty.core'</span>]</span><br><span class="line">no file <span class="string">'./resty/core.lua'</span></span><br><span class="line">no file <span class="string">'/usr/local/share/luajit-2.0.5/resty/core.lua'</span></span><br><span class="line">no file <span class="string">'/usr/local/share/lua/5.1/resty/core.lua'</span></span><br><span class="line">no file <span class="string">'/usr/local/share/lua/5.1/resty/core/init.lua'</span></span><br><span class="line">no file <span class="string">'./resty/core.so'</span></span><br><span class="line">no file <span class="string">'/usr/local/lib/lua/5.1/resty/core.so'</span></span><br><span class="line">no file <span class="string">'/usr/local/lib/lua/5.1/loadall.so'</span></span><br><span class="line">no file <span class="string">'./resty.so'</span></span><br><span class="line">no file <span class="string">'/usr/local/lib/lua/5.1/resty.so'</span></span><br><span class="line">no file <span class="string">'/usr/local/lib/lua/5.1/loadall.so'</span>) <span class="keyword">in</span> /etc/nginx/nginx.conf:117</span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题 3</span></span><br><span class="line">[root@gop-sg-192-168-56-103 wangao]<span class="comment"># systemctl status nginx</span></span><br><span class="line">● nginx.service - The NGINX HTTP and reverse proxy server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Mon 2019-08-19 01:36:46 +08; 2 months 17 days ago</span><br><span class="line">  Process: 1105 ExecStart=/usr/sbin/nginx (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 1071 ExecStartPre=/usr/sbin/nginx -t (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 1111 (nginx)</span><br><span class="line">    Tasks: 2</span><br><span class="line">   CGroup: /system.slice/nginx.service</span><br><span class="line">           ├─1111 nginx: master process /usr/sbin/nginx</span><br><span class="line">           └─1112 nginx: worker process</span><br><span class="line"></span><br><span class="line">Aug 19 01:36:46 gop-sg-192-168-56-103 systemd[1]: Starting The NGINX HTTP and reverse proxy server...</span><br><span class="line">Aug 19 01:36:46 gop-sg-192-168-56-103 nginx[1071]: nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">Aug 19 01:36:46 gop-sg-192-168-56-103 nginx[1071]: nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">Aug 19 01:36:46 gop-sg-192-168-56-103 systemd[1]: Failed to <span class="built_in">read</span> PID from file /run/nginx.pid: Invalid argument</span><br><span class="line">Aug 19 01:36:46 gop-sg-192-168-56-103 systemd[1]: Started The NGINX HTTP and reverse proxy server.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题 4</span></span><br><span class="line">nginx: error <span class="keyword">while</span> loading shared libraries: libluajit-5.1.so.2: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><h3 id="环境初始化"><a href="#环境初始化" class="headerlink" title="环境初始化"></a>环境初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check current os version and kernel</span></span><br><span class="line">cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.5.1804 (Core)</span><br><span class="line">uname -r</span><br><span class="line">3.10.0-862.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum</span></span><br><span class="line">yum install -y gcc pam-devel git rpm-build pcre-devel openssl openssl-devel geoip-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir</span></span><br><span class="line">mkdir -p /root/rpmbuild/SOURCES/</span><br><span class="line">mkdir -p /root/rpmbuild/SPECS/</span><br><span class="line">mkdir -p /root/rpmbuild/RPMS/noarch</span><br><span class="line"></span><br><span class="line"><span class="comment"># download openssl</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">wget https://github.com/openssl/openssl/archive/OpenSSL_1_0_2t.tar.gz</span><br><span class="line">tar xf OpenSSL_1_0_2t.tar.gz</span><br><span class="line">mv openssl-OpenSSL_1_0_2t/ openssl-1_0_2t</span><br><span class="line"></span><br><span class="line"><span class="comment"># install lua</span></span><br><span class="line">sh luajit2.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># confirm these files are correct</span></span><br><span class="line">[root@gop-sg-192-168-56-103 ~]<span class="comment"># tree nginx-rpmbuild-centos7/</span></span><br><span class="line">nginx-rpmbuild-centos7/</span><br><span class="line">├── build.sh</span><br><span class="line">├── conf_build</span><br><span class="line">│   ├── conf</span><br><span class="line">│   │   ├── django_fastcgi_params</span><br><span class="line">│   │   ├── fastcgi.conf</span><br><span class="line">│   │   ├── fastcgi_params</span><br><span class="line">│   │   ├── koi-utf</span><br><span class="line">│   │   ├── koi-win</span><br><span class="line">│   │   ├── mime.types</span><br><span class="line">│   │   ├── naxsi_core.rules</span><br><span class="line">│   │   ├── nginx.conf</span><br><span class="line">│   │   ├── scgi_params</span><br><span class="line">│   │   ├── sites-available</span><br><span class="line">│   │   │   └── 000_stub_status</span><br><span class="line">│   │   ├── uwsgi_params</span><br><span class="line">│   │   └── win-utf</span><br><span class="line">│   ├── logrotate.d</span><br><span class="line">│   │   └── nginx</span><br><span class="line">│   ├── nginx.conf</span><br><span class="line">│   └── nginx.service</span><br><span class="line">├── luajit2.sh</span><br><span class="line">├── luajit.sh</span><br><span class="line">├── nginx-spec</span><br><span class="line">└── nginx-template</span><br><span class="line">    ├── conf</span><br><span class="line">    │   ├── django_fastcgi_params</span><br><span class="line">    │   ├── naxsi_core.rules</span><br><span class="line">    │   ├── nginx.conf</span><br><span class="line">    │   └── sites-available</span><br><span class="line">    │       └── 000_stub_status</span><br><span class="line">    ├── logrotate.d</span><br><span class="line">    │   └── nginx</span><br><span class="line">    ├── nginx.conf</span><br><span class="line">    └── nginx.service</span><br><span class="line"></span><br><span class="line">8 directories, 26 files</span><br></pre></td></tr></table></figure><blockquote><p>luajit2.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/openresty/luajit2/releases</span></span><br><span class="line">LUAVER=<span class="string">"v2.1-20190912"</span></span><br><span class="line">WKDIR=<span class="string">"/root/rpmbuild/SOURCES"</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">wget https://github.com/openresty/luajit2/archive/<span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line">tar zxf <span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line">rm -f <span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line"><span class="built_in">cd</span> luajit2*</span><br><span class="line">make BUILDMODE=static</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">export</span> LUAJIT_LIB=/usr/<span class="built_in">local</span>/lib</span><br><span class="line"><span class="built_in">export</span> LUAJIT_INC=/usr/<span class="built_in">local</span>/include/luajit-2.1</span><br><span class="line"><span class="comment"># ln -s /usr/local/lib/libluajit-5.1.so.2 /lib64/libluajit-5.1.so.2</span></span><br><span class="line"><span class="comment"># https://github.com/openresty/lua-nginx-module/issues/8</span></span><br></pre></td></tr></table></figure><blockquote><p>build.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">NGX_VER=1.16.1</span><br><span class="line">BDDIR=<span class="string">"/root/rpmbuild/BUILD"</span></span><br><span class="line">WKDIR=<span class="string">"/root/rpmbuild/SOURCES"</span></span><br><span class="line">CURRENTDIR=`dirname $(readlink -f <span class="string">"<span class="variable">$0</span>"</span>)`</span><br><span class="line">libIP2Location=<span class="string">"<span class="variable">$CURRENTDIR</span>/IP2Location-C-Library-master/libIP2Location/IP2Location.h"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$CURRENTDIR</span></span><br><span class="line"><span class="built_in">export</span> LUAJIT_LIB=/usr/<span class="built_in">local</span>/lib</span><br><span class="line"><span class="comment"># export LUAJIT_INC=/usr/local/include/luajit-2.0</span></span><br><span class="line"><span class="built_in">export</span> LUAJIT_INC=/usr/<span class="built_in">local</span>/include/luajit-2.1</span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/usr/<span class="built_in">local</span>/lib</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$BDDIR</span></span><br><span class="line">rm -rf *</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">rm -rf *</span><br><span class="line">wget http://nginx.org/download/nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">tar xzf nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">rm -f nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">mv nginx-<span class="variable">$NGX_VER</span> nginx-garena-<span class="variable">$NGX_VER</span></span><br><span class="line"><span class="built_in">cd</span> nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line"></span><br><span class="line">mkdir -p contrib</span><br><span class="line"><span class="built_in">cd</span> contrib/</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/openresty/headers-more-nginx-module.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/openresty/<span class="built_in">echo</span>-nginx-module.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/simplresty/ngx_devel_kit.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/ip2location/ip2location-nginx.git</span><br><span class="line"><span class="comment"># git clone git://github.com/openresty/lua-nginx-module</span></span><br><span class="line">wget https://github.com/openresty/lua-nginx-module/archive/v0.10.14.tar.gz</span><br><span class="line">tar xf v0.10.14.tar.gz</span><br><span class="line">mv lua-nginx-module-0.10.14 lua-nginx-module</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/nbs-system/naxsi.git</span><br><span class="line">rm -rf */.git</span><br><span class="line">rm -rf *.tar*</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line">cp -r <span class="variable">$CURRENTDIR</span>/nginx-template/* <span class="variable">$WKDIR</span>/nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line">cp -r <span class="variable">$CURRENTDIR</span>/conf_buid/conf/* <span class="variable">$WKDIR</span>/nginx-garena-<span class="variable">$NGX_VER</span>/conf/</span><br><span class="line">cp <span class="variable">$CURRENTDIR</span>/nginx-spec /root/rpmbuild/SPECS/</span><br><span class="line"><span class="comment"># cp /root/rules $WKDIR/nginx-garena-$NGX_VER/debian/</span></span><br><span class="line"><span class="comment"># sed -Ei 's|#include"IP2Location.h"|#include"/root/nginx-rpmbuild-centos7/IP2Location-C-Library-master/libIP2Location/IP2Location.h"|' $WKDIR/nginx-garena-$NGX_VER/contrib/ip2location-nginx/ngx_http_ip2location_module.c</span></span><br><span class="line">sed -Ei <span class="string">'s|#include"IP2Location.h"|#include"'</span><span class="variable">$&#123;libIP2Location&#125;</span><span class="string">'"|'</span> <span class="variable">$WKDIR</span>/nginx-garena-<span class="variable">$NGX_VER</span>/contrib/ip2location-nginx/ngx_http_ip2location_module.c</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">tar zcf nginx-garena-<span class="variable">$NGX_VER</span>.tar.gz nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line"><span class="built_in">cd</span> /root/rpmbuild/SPECS/</span><br><span class="line">rpmbuild -ba nginx-spec</span><br><span class="line"><span class="built_in">cd</span> /root/rpmbuild/RPMS/noarch</span><br></pre></td></tr></table></figure><blockquote><p>nginx-spec</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">Name: nginx-garena</span><br><span class="line">Version: 1.16.1</span><br><span class="line">Release: 0</span><br><span class="line">Summary: nginx garena rpm</span><br><span class="line">Source0: nginx-garena-%&#123;version&#125;.tar.gz</span><br><span class="line">License: GPL</span><br><span class="line">Group: Rahul</span><br><span class="line">BuildArch: noarch</span><br><span class="line">BuildRoot: %&#123;_tmppath&#125;/%&#123;name&#125;-buildroot</span><br><span class="line">%description</span><br><span class="line">Garena self-build Nginx.</span><br><span class="line">%define _binaries_in_noarch_packages_terminate_build   0</span><br><span class="line">%prep</span><br><span class="line">%setup -q %&#123;name&#125;-%&#123;version&#125;</span><br><span class="line">%build</span><br><span class="line">CFLAGS=&quot;$RPM_OPT_FLAGS&quot; ./configure --prefix=/usr/share/nginx/ \</span><br><span class="line">                    --with-ld-opt=&quot;-Wl,-rpath,/usr/local/lib&quot; \</span><br><span class="line">                    --sbin-path=/usr/sbin/nginx \</span><br><span class="line">                    --conf-path=/etc/nginx/nginx.conf \</span><br><span class="line">                    --error-log-path=/var/log/nginx/error.log \</span><br><span class="line">                    --http-log-path=/var/log/nginx/access.log \</span><br><span class="line">                    --pid-path=/var/run/nginx.pid \</span><br><span class="line">                    --lock-path=/var/lock/nginx.lock \</span><br><span class="line">                    --http-client-body-temp-path=/var/lib/nginx/body \</span><br><span class="line">                    --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \</span><br><span class="line">                    --http-proxy-temp-path=/var/lib/nginx/proxy \</span><br><span class="line">                    --http-scgi-temp-path=/var/lib/nginx/scgi \</span><br><span class="line">                    --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \</span><br><span class="line">                    --with-pcre-jit \</span><br><span class="line">                    --with-http_flv_module \</span><br><span class="line">                    --with-http_mp4_module \</span><br><span class="line">                    --with-file-aio \</span><br><span class="line">                    --with-http_v2_module \</span><br><span class="line">                    --with-stream \</span><br><span class="line">                    --with-stream_ssl_module \</span><br><span class="line">                    --with-stream_realip_module \</span><br><span class="line">                    --with-http_auth_request_module \</span><br><span class="line">                    --with-http_slice_module \</span><br><span class="line">                    --with-threads \</span><br><span class="line">                    --with-http_gunzip_module \</span><br><span class="line">                    --with-http_random_index_module \</span><br><span class="line">                    --with-http_secure_link_module \</span><br><span class="line">                    --with-http_geoip_module \</span><br><span class="line">                    --with-http_ssl_module \</span><br><span class="line">                    --with-openssl=/usr/local/src/openssl-1_0_2t \</span><br><span class="line">                    --with-http_addition_module \</span><br><span class="line">                    --with-http_geoip_module \</span><br><span class="line">                    --with-http_gzip_static_module \</span><br><span class="line">                    --with-http_realip_module \</span><br><span class="line">                    --with-ipv6 \</span><br><span class="line">                    --without-mail_pop3_module \</span><br><span class="line">                    --without-mail_imap_module \</span><br><span class="line">                    --without-mail_smtp_module \</span><br><span class="line">                    --add-module=contrib/headers-more-nginx-module \</span><br><span class="line">                    --add-module=contrib/echo-nginx-module \</span><br><span class="line">                    --add-module=contrib/ngx_devel_kit \</span><br><span class="line">                    --add-module=contrib/ip2location-nginx \</span><br><span class="line">                    --add-module=contrib/lua-nginx-module \</span><br><span class="line">                    --add-module=contrib/naxsi/naxsi_src</span><br><span class="line"></span><br><span class="line">make -j8</span><br><span class="line"></span><br><span class="line">%install</span><br><span class="line">[ &quot;$RPM_BUILD_ROOT&quot; != &quot;/&quot; ] &amp;&amp; rm -rf $RPM_BUILD_ROOT</span><br><span class="line">make DESTDIR=$RPM_BUILD_ROOT install</span><br><span class="line">install -m 0755 -d $RPM_BUILD_ROOT/etc/nginx/sites-enabled</span><br><span class="line">install -m 0755 -d $RPM_BUILD_ROOT/etc/nginx/sites-available</span><br><span class="line">install -m 0755 -d $RPM_BUILD_ROOT/etc/nginx/ssl</span><br><span class="line">install -m 0755 -d $RPM_BUILD_ROOT/var/log/nginx</span><br><span class="line">install -m 0755 -d $RPM_BUILD_ROOT/var/lib/nginx</span><br><span class="line">install -D -m 644 conf/sites-available/000_stub_status $RPM_BUILD_ROOT/etc/nginx/sites-available/000_stub_status</span><br><span class="line">install -D -m 644 conf/sites-available/000_stub_status $RPM_BUILD_ROOT/etc/nginx/sites-enabled/000_stub_status</span><br><span class="line">install -D -m 644 conf/sites-available/000_default $RPM_BUILD_ROOT/etc/nginx/sites-available/000_default</span><br><span class="line">install -D -m 644 conf/sites-available/000_default $RPM_BUILD_ROOT/etc/nginx/sites-enabled/000_default</span><br><span class="line">install -D -m 644 conf/ssl/nginx.key $RPM_BUILD_ROOT/etc/nginx/ssl/nginx.key</span><br><span class="line">install -D -m 644 conf/ssl/nginx.crt $RPM_BUILD_ROOT/etc/nginx/ssl/nginx.crt</span><br><span class="line">install -D -m 644 conf/django_fastcgi_params $RPM_BUILD_ROOT/etc/nginx/django_fastcgi_params</span><br><span class="line">install -D -m 644 conf/naxsi_core.rules $RPM_BUILD_ROOT/etc/nginx/naxsi_core.rules</span><br><span class="line">install -D -m 644 logrotate.d/nginx $RPM_BUILD_ROOT/etc/logrotate.d/nginx</span><br><span class="line">install -D -m 644 nginx.service $RPM_BUILD_ROOT/usr/lib/systemd/system/nginx.service</span><br><span class="line">%clean</span><br><span class="line">[ &quot;$RPM_BUILD_ROOT&quot; != &quot;/&quot; ] &amp;&amp; rm -rf $RPM_BUILD_ROOT</span><br><span class="line">%post</span><br><span class="line">useradd -s /sbin/nologin -d /var/www www-data</span><br><span class="line">chown -R www-data.www-data /var/log/nginx /var/lib/nginx</span><br><span class="line">systemctl enable nginx</span><br><span class="line">echo %&#123;name&#125;-%&#123;version&#125; is successfully installed.</span><br><span class="line">systemctl start nginx</span><br><span class="line">%files</span><br><span class="line">%defattr(-,root,root)</span><br><span class="line">%dir /etc/nginx</span><br><span class="line">/etc/nginx/*</span><br><span class="line">%dir /usr/src/debug/nginx-garena-%&#123;version&#125;</span><br><span class="line">/usr/src/debug/nginx-garena-%&#123;version&#125;/*</span><br><span class="line">/usr/sbin/nginx</span><br><span class="line">%dir /usr/share/nginx</span><br><span class="line">/usr/share/nginx/*</span><br><span class="line">/etc/logrotate.d/nginx</span><br><span class="line">/usr/lib/systemd/system/nginx.service</span><br><span class="line">/usr/lib/debug/*</span><br><span class="line">/usr/lib/debug/.build-id/*</span><br><span class="line">%dir /var/log/nginx</span><br><span class="line">%dir /var/lib/nginx</span><br><span class="line">%config(noreplace) /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><blockquote><p>logrotate.d/nginx</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/var/log/nginx/*.log /var/log/nginx/*/*.log&#123;</span><br><span class="line">daily</span><br><span class="line">missingok</span><br><span class="line">rotate 14</span><br><span class="line">compress</span><br><span class="line">delaycompress</span><br><span class="line">notifempty</span><br><span class="line">create 640 root adm</span><br><span class="line">sharedscripts</span><br><span class="line">postrotate</span><br><span class="line">[ ! -f /var/run/nginx.pid ] || kill -USR1 `cat /var/run/nginx.pid`</span><br><span class="line">endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>nginx.conf</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">user www-data;</span><br><span class="line">worker_processes auto;</span><br><span class="line"></span><br><span class="line">#worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;</span><br><span class="line">worker_rlimit_nofile 655650;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">        worker_connections  10240;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">#       include       /etc/nginx/naxsi_core.rules;</span><br><span class="line">        include       mime.types;</span><br><span class="line">        default_type  application/octet-stream;</span><br><span class="line">log_format garena &apos;$remote_addr - $remote_user [$time_iso8601] &quot;$request&quot; $status $body_bytes_sent &apos;</span><br><span class="line">                &apos;&quot;$http_referer&quot; &quot;$http_user_agent&quot; $request_time $upstream_response_time &quot;$http_x_forwarded_for&quot; &quot;$geoip_country_code&quot; &quot;$host&quot;&apos;;</span><br><span class="line">        log_format garena_post &apos;$remote_addr - $remote_user [$time_iso8601] &quot;$request&quot; $status $body_bytes_sent &apos;</span><br><span class="line">                &apos;&quot;$http_referer&quot; &quot;$http_user_agent&quot; $request_time $upstream_response_time &quot;$http_x_forwarded_for&quot; &quot;$geoip_country_code&quot; &quot;$host&quot; &quot;$request_body&quot;&apos;;</span><br><span class="line">log_format compact &apos;$time_iso8601|$remote_addr|$geoip_country_code|$http_x_forwarded_for|$status|$request_time|$upstream_response_time|$request_length|$body_bytes_sent|$host|$request|$http_referer|$http_user_agent&apos;;</span><br><span class="line">log_format compact_post &apos;$time_iso8601|$remote_addr|$geoip_country_code|$http_x_forwarded_for|$status|$request_time|$upstream_response_time|$request_length|$body_bytes_sent|$host|$request|$http_referer|$http_user_agent|$request_body&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#       access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">        sendfile        on;</span><br><span class="line">#       tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">        keepalive_timeout  30;</span><br><span class="line">        fastcgi_keep_conn on;</span><br><span class="line">        tcp_nodelay        on;</span><br><span class="line"></span><br><span class="line">        gzip  on;</span><br><span class="line">        gzip_disable &quot;MSIE [1-6]\.(?!.*SV1)&quot;;</span><br><span class="line">        gzip_proxied any;</span><br><span class="line">        gzip_buffers 16 8k;</span><br><span class="line">        gzip_types    text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json;</span><br><span class="line">        gzip_vary on;</span><br><span class="line">        include /etc/nginx/sites-enabled/*;</span><br><span class="line"></span><br><span class="line">set_real_ip_from 10.0.0.0/8;</span><br><span class="line">real_ip_header    X-Forwarded-For;</span><br><span class="line">#real_ip_recursive on;</span><br><span class="line">#geoip_country /usr/share/GeoIP/GeoIP.dat;</span><br><span class="line"></span><br><span class="line">        server_tokens off;         # returns &quot;Server: nginx&quot;</span><br><span class="line">more_clear_headers Server; # doesn&apos;t return &quot;Server: &quot; header at all</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>nginx.service</p></blockquote><p><a href="https://www.nginx.com/resources/wiki/start/topics/examples/initscripts/" target="_blank" rel="noopener">https://www.nginx.com/resources/wiki/start/topics/examples/initscripts/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=The nginx HTTP and reverse proxy server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/run/nginx.pid</span><br><span class="line">ExecStartPre=/usr/sbin/nginx -t</span><br><span class="line">ExecStart=/usr/sbin/nginx</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">KillMode=process</span><br><span class="line">KillSignal=SIGQUIT</span><br><span class="line">TimeoutStopSec=5</span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h3 id="编译生成-nginx-rpm"><a href="#编译生成-nginx-rpm" class="headerlink" title="编译生成 nginx rpm"></a>编译生成 nginx rpm</h3><ol><li>编辑 build.sh 和 nginx-spec 定义 NGX_VER=1.16.1</li><li>如果需要改变 contrib 的 module 也是修改上述两处位置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">sh build.sh</span><br><span class="line"></span><br><span class="line">extracting debug info from /root/rpmbuild/BUILDROOT/nginx-garena-1.16.1-0.x86_64/usr/sbin/nginx</span><br><span class="line">dwz: Too few files <span class="keyword">for</span> multifile optimization</span><br><span class="line">/usr/lib/rpm/sepdebugcrcfix: Updated 1 CRC32s, 0 CRC32s did match.</span><br><span class="line">12776 blocks</span><br><span class="line">+ /usr/lib/rpm/check-buildroot</span><br><span class="line">+ /usr/lib/rpm/redhat/brp-compress</span><br><span class="line">+ /usr/lib/rpm/redhat/brp-strip-static-archive /usr/bin/strip</span><br><span class="line">+ /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1</span><br><span class="line">+ /usr/lib/rpm/redhat/brp-python-hardlink</span><br><span class="line">+ /usr/lib/rpm/redhat/brp-java-repack-jars</span><br><span class="line">Processing files: nginx-garena-1.16.1-0.noarch</span><br><span class="line">warning: File listed twice: /etc/nginx/nginx.conf</span><br><span class="line">Provides: config(nginx-garena) = 1.16.1-0 nginx-garena = 1.16.1-0</span><br><span class="line">Requires(interp): /bin/sh</span><br><span class="line">Requires(rpmlib): rpmlib(CompressedFileNames) &lt;= 3.0.4-1 rpmlib(FileDigests) &lt;= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) &lt;= 4.0-1</span><br><span class="line">Requires(post): /bin/sh</span><br><span class="line">Requires: libGeoIP.so.1()(64bit) libc.so.6()(64bit) libc.so.6(GLIBC_2.10)(64bit) libc.so.6(GLIBC_2.11)(64bit) libc.so.6(GLIBC_2.14)(64bit) libc.so.6(GLIBC_2.17)(64bit) libc.so.6(GLIBC_2.2.5)(64bit) libc.so.6(GLIBC_2.3)(64bit) libc.so.6(GLIBC_2.3.2)(64bit) libc.so.6(GLIBC_2.3.4)(64bit) libc.so.6(GLIBC_2.4)(64bit) libc.so.6(GLIBC_2.7)(64bit) libcrypt.so.1()(64bit) libcrypt.so.1(GLIBC_2.2.5)(64bit) libdl.so.2()(64bit) libdl.so.2(GLIBC_2.2.5)(64bit) libgcc_s.so.1()(64bit) libgcc_s.so.1(GCC_3.0)(64bit) libgcc_s.so.1(GCC_3.3)(64bit) libm.so.6()(64bit) libm.so.6(GLIBC_2.2.5)(64bit) libpcre.so.1()(64bit) libpthread.so.0()(64bit) libpthread.so.0(GLIBC_2.2.5)(64bit) libpthread.so.0(GLIBC_2.3.2)(64bit) libz.so.1()(64bit) rtld(GNU_HASH)</span><br><span class="line">warning: Arch dependent binaries <span class="keyword">in</span> noarch package</span><br><span class="line">Checking <span class="keyword">for</span> unpackaged file(s): /usr/lib/rpm/check-files /root/rpmbuild/BUILDROOT/nginx-garena-1.16.1-0.x86_64</span><br><span class="line">Wrote: /root/rpmbuild/SRPMS/nginx-garena-1.16.1-0.src.rpm</span><br><span class="line">Wrote: /root/rpmbuild/RPMS/noarch/nginx-garena-1.16.1-0.noarch.rpm</span><br><span class="line">Executing(%clean): /bin/sh -e /var/tmp/rpm-tmp.Qc7JbE</span><br><span class="line">+ <span class="built_in">umask</span> 022</span><br><span class="line">+ <span class="built_in">cd</span> /root/rpmbuild/BUILD</span><br><span class="line">+ <span class="built_in">cd</span> nginx-garena-1.16.1</span><br><span class="line">+ <span class="string">'['</span> /root/rpmbuild/BUILDROOT/nginx-garena-1.16.1-0.x86_64 <span class="string">'!='</span> / <span class="string">']'</span></span><br><span class="line">+ rm -rf /root/rpmbuild/BUILDROOT/nginx-garena-1.16.1-0.x86_64</span><br><span class="line">+ <span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-71-49-5 wangao]<span class="comment"># nginx -V</span></span><br><span class="line">nginx version: nginx/1.16.1</span><br><span class="line">built with OpenSSL 1.0.2t  10 Sep 2019</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/usr/share/nginx/ --with-ld-opt=-Wl,-rpath,/usr/<span class="built_in">local</span>/lib --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/<span class="built_in">log</span>/nginx/error.log --http-log-path=/var/<span class="built_in">log</span>/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/lock/nginx.lock --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --with-pcre-jit --with-http_flv_module --with-http_mp4_module --with-file-aio --with-http_v2_module --with-stream --with-stream_ssl_module --with-http_auth_request_module --with-http_slice_module --with-threads --with-http_gunzip_module --with-http_random_index_module --with-http_secure_link_module --with-http_geoip_module --with-http_ssl_module --with-openssl=/usr/<span class="built_in">local</span>/src/openssl-1_0_2t --with-http_addition_module --with-http_geoip_module --with-http_gzip_static_module --with-http_realip_module --with-ipv6 --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module --add-module=contrib/headers-more-nginx-module --add-module=contrib/<span class="built_in">echo</span>-nginx-module --add-module=contrib/ngx_devel_kit --add-module=contrib/lua-nginx-module --add-module=contrib/naxsi/naxsi_src</span><br><span class="line"></span><br><span class="line"><span class="comment"># Prettier</span></span><br><span class="line">https://serverfault.com/questions/223509/how-can-i-see-which-flags-nginx-was-compiled-with</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-49-5 wangao]<span class="comment"># 2&gt;&amp;1 nginx -V | xargs -n1</span></span><br><span class="line">nginx</span><br><span class="line">version:</span><br><span class="line">nginx/1.16.1</span><br><span class="line">built</span><br><span class="line">with</span><br><span class="line">OpenSSL</span><br><span class="line">1.0.2t</span><br><span class="line">10</span><br><span class="line">Sep</span><br><span class="line">2019</span><br><span class="line">TLS</span><br><span class="line">SNI</span><br><span class="line">support</span><br><span class="line">enabled</span><br><span class="line">configure</span><br><span class="line">arguments:</span><br><span class="line">--prefix=/usr/share/nginx/</span><br><span class="line">--with-ld-opt=-Wl,-rpath,/usr/<span class="built_in">local</span>/lib</span><br><span class="line">--sbin-path=/usr/sbin/nginx</span><br><span class="line">--conf-path=/etc/nginx/nginx.conf</span><br><span class="line">--error-log-path=/var/<span class="built_in">log</span>/nginx/error.log</span><br><span class="line">--http-log-path=/var/<span class="built_in">log</span>/nginx/access.log</span><br><span class="line">--pid-path=/var/run/nginx.pid</span><br><span class="line">--lock-path=/var/lock/nginx.lock</span><br><span class="line">--http-client-body-temp-path=/var/lib/nginx/body</span><br><span class="line">--http-fastcgi-temp-path=/var/lib/nginx/fastcgi</span><br><span class="line">--http-proxy-temp-path=/var/lib/nginx/proxy</span><br><span class="line">--http-scgi-temp-path=/var/lib/nginx/scgi</span><br><span class="line">--http-uwsgi-temp-path=/var/lib/nginx/uwsgi</span><br><span class="line">--with-pcre-jit</span><br><span class="line">--with-http_flv_module</span><br><span class="line">--with-http_mp4_module</span><br><span class="line">--with-file-aio</span><br><span class="line">--with-http_v2_module</span><br><span class="line">--with-stream</span><br><span class="line">--with-stream_ssl_module</span><br><span class="line">--with-http_auth_request_module</span><br><span class="line">--with-http_slice_module</span><br><span class="line">--with-threads</span><br><span class="line">--with-http_gunzip_module</span><br><span class="line">--with-http_random_index_module</span><br><span class="line">--with-http_secure_link_module</span><br><span class="line">--with-http_geoip_module</span><br><span class="line">--with-http_ssl_module</span><br><span class="line">--with-openssl=/usr/<span class="built_in">local</span>/src/openssl-1_0_2t</span><br><span class="line">--with-http_addition_module</span><br><span class="line">--with-http_geoip_module</span><br><span class="line">--with-http_gzip_static_module</span><br><span class="line">--with-http_realip_module</span><br><span class="line">--with-ipv6</span><br><span class="line">--without-mail_pop3_module</span><br><span class="line">--without-mail_imap_module</span><br><span class="line">--without-mail_smtp_module</span><br><span class="line">--add-module=contrib/headers-more-nginx-module</span><br><span class="line">--add-module=contrib/<span class="built_in">echo</span>-nginx-module</span><br><span class="line">--add-module=contrib/ngx_devel_kit</span><br><span class="line">--add-module=contrib/lua-nginx-module</span><br><span class="line">--add-module=contrib/naxsi/naxsi_src</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-49-5 wangao]<span class="comment"># 2&gt;&amp;1 nginx -V | xargs -n1 | grep ssl</span></span><br><span class="line">--with-stream_ssl_module</span><br><span class="line">--with-http_ssl_module</span><br><span class="line">--with-openssl=/usr/<span class="built_in">local</span>/src/openssl-1_0_2t</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-49-5 wangao]<span class="comment"># 2&gt;&amp;1 nginx -V | xargs -n1 | grep lua</span></span><br><span class="line">--add-module=contrib/lua-nginx-module</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://openresty.org/" target="_blank" rel="noopener">OpenResty</a></p><p><a href="https://docs.fedoraproject.org/en-US/quick-docs/creating-rpm-packages/index.html" target="_blank" rel="noopener">Creating RPM packages</a></p><p><a href="https://fedoraproject.org/wiki/How_to_create_a_GNU_Hello_RPM_package/zh-cn" target="_blank" rel="noopener">How to create a GNU Hello RPM</a></p><p><a href="http://blog.51cto.com/nmshuishui/1583117" target="_blank" rel="noopener">使用 rpm-build 制作 nginx 的 rpm 包</a></p><p><a href="http://abcdxyzk.github.io/blog/2014/10/30/tools-src-rpm/" target="_blank" rel="noopener">修改、重新生成和安装 src.rpm 源码包</a></p>]]></content>
    
    <summary type="html">
    
      使用rpmbuild制作Nginx的RPM包
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>RHEL/CentOS 安装 EPEL/Remi 扩展仓库配置小结</title>
    <link href="https://wsgzao.github.io/post/epel/"/>
    <id>https://wsgzao.github.io/post/epel/</id>
    <published>2020-04-06T03:59:49.000Z</published>
    <updated>2020-04-06T08:04:03.113Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近因为需要编译 <code>libip2location</code>，原本计划像之前一样 <a href="https://wsgzao.github.io/post/rpmbuild/">使用 rpmbuild 制作 Nginx 的 RPM 包</a> 整合为一个 rpm 包，结果按照 IP2Location 官方的步骤愣是没有搞定，只能退而求其次选择了 <code>libip2location-8.0.7-1.el7.remi.src.rpm</code>，简单总结下大部分人经常用到的 EPEL 和这次新出现的 Remi。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 04 月 06 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/epel/">https://wsgzao.github.io/post/epel/</a></p><hr><h2 id="Repo-仓库介绍"><a href="#Repo-仓库介绍" class="headerlink" title="Repo 仓库介绍"></a>Repo 仓库介绍</h2><p><code>CentOS</code> 默认自带 <code>CentOS-Base.repo</code> 源, 但官方源中去除了很多有版权争议的软件, 而且安装的软件也不是最新的稳定版</p><p><code>Fedora</code> 自带的源中也找不到很多多媒体软件, 如果需要安装, 必需先添加其他源, 如 <code>RPMFusion</code> 和 <code>RPMForge</code> 等第三方软件库</p><p>但是除了 <code>EPEL</code> 之外还有很多其他三方软件包, 下面我们介绍各种第三方软件库, 以下软件库适用于与 <code>RHEL</code> 完全兼容的 <code>linux</code> 发行版, 如 <code>CentOS</code>, <code>Fedora</code>, <code>Scientific Linux</code>. <code>Scientific Linux</code> 大家可能有点陌生, 它与 <code>CentOS</code> 类似, 是 <code>RedHat Linux</code> 的克隆版</p><h2 id="EPEL-仓库介绍"><a href="#EPEL-仓库介绍" class="headerlink" title="EPEL 仓库介绍"></a>EPEL 仓库介绍</h2><p><code>EPEL</code> 是 <code>yum</code> 的一个软件源, 里面包含了许多基本源里没有的软件了, 但在我们在使用 <code>epel</code> 时是需要安装它才可以了, 下文来介绍 <code>CentOS7/RHEL7</code> 安装 <code>EPEL</code> 步骤</p><p><code>EPEL</code>, 即 <code>Extra Packages for Enterprise Linux</code> 的简称, 是为企业级 <code>Linux</code> 提供的一组高质量的额外软件包, 包括但不限于 <code>Red Hat Enterprise Linux (RHEL), CentOS and Scientific Linux (SL), Oracle Enterprise Linux (OEL)</code>.</p><h3 id="安装-EPEL"><a href="#安装-EPEL" class="headerlink" title="安装 EPEL"></a>安装 EPEL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一般用户直接可以在线 yum 安装</span></span><br><span class="line">yum -y install epel-release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动安装</span></span><br><span class="line">rpm -ivh https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-12.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新元数据缓存(非必须)</span></span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证 EPEL，w3m 是基础包中没有的, 而 epel 包中才有的软件包</span></span><br><span class="line">yum search w3m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 /etc/yum.repos.d/ 下多了两个 epel 的 repo 文件</span></span><br><span class="line">ll /etc/yum.repos.d/</span><br><span class="line">epel.repo</span><br><span class="line">epel-testing.repo</span><br></pre></td></tr></table></figure><p>针对系统架构选择相应的类型 : <a href="http://dl.fedoraproject.org/pub/epel/7/" target="_blank" rel="noopener">http://dl.fedoraproject.org/pub/epel/7/</a></p><p>国内用户可以使用 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/epel/" target="_blank" rel="noopener">清华源–EPEL 镜像使用帮助</a> 加速</p><h2 id="Remi-源"><a href="#Remi-源" class="headerlink" title="Remi 源"></a>Remi 源</h2><p><code>Remi</code> 源大家或许很少听说， 但是我们强烈推荐, 尤其对于不想编译最新版的 <code>Linux</code> 使用者, 因为 <code>Remi</code> 源中的软件几乎都是最新稳定版.</p><p>或许您会怀疑稳定不?</p><p>放心吧, 这些都是 <code>Linux</code> 骨灰级的玩家编译好放进源里的, 他们对于系统环境和软件编译参数的熟悉程度毋庸置疑.</p><p>Remi 下载地址 : <a href="https://rpms.remirepo.net/" target="_blank" rel="noopener">https://rpms.remirepo.net/</a></p><p>Remi SRPMS 下载地址: <a href="https://rpms.remirepo.net/SRPMS/" target="_blank" rel="noopener">https://rpms.remirepo.net/SRPMS/</a></p><p>您也需要针对不同的版本号下载.</p><p>例如 <code>CentOS 7</code> 添加官方的 <code>Remi</code> 源<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 remi</span></span><br><span class="line">rpm -ivh https://rpms.remirepo.net/enterprise/remi-release-7.rpm</span><br><span class="line"><span class="comment"># 单独安装某个 rpm</span></span><br><span class="line">rpm -Uvh https://rpms.remirepo.net/enterprise/7/remi/x86_64/libip2location-8.0.7-1.el7.remi.x86_64.rpm</span><br></pre></td></tr></table></figure></p><h2 id="其它源"><a href="#其它源" class="headerlink" title="其它源"></a>其它源</h2><p>我在实际解决问题的过程中是通过包搜索引擎逐步找到解决方案的，我做下分享</p><p>pkgs.org - Packages Search for Linux and Unix operating systems.</p><p><a href="https://pkgs.org/" target="_blank" rel="noopener">https://pkgs.org/</a></p><p><a href="https://centos.pkgs.org/7/remi-x86_64/libip2location-8.0.7-1.el7.remi.x86_64.rpm.html" target="_blank" rel="noopener">https://centos.pkgs.org/7/remi-x86_64/libip2location-8.0.7-1.el7.remi.x86_64.rpm.html</a></p><p><a href="https://blog.csdn.net/gatieme/article/details/71056309" target="_blank" rel="noopener">RHEL/CentOS/Fedora 各种源 (EPEL、Remi、RPMForge、RPMFusion) 配置</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://fedoraproject.org/wiki/EPEL" target="_blank" rel="noopener">Extra Packages for Enterprise Linux (EPEL)</a></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/epel/" target="_blank" rel="noopener">清华大学–EPEL 镜像使用帮助</a></p>]]></content>
    
    <summary type="html">
    
      RHEL/CentOS安装EPEL/Remi扩展仓库配置小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
</feed>
