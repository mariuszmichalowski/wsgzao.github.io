<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HelloDog</title>
  
  <subtitle>Keep Calm and Carry On</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wsgzao.github.io/"/>
  <updated>2019-09-12T11:26:28.060Z</updated>
  <id>https://wsgzao.github.io/</id>
  
  <author>
    <name>wsgzao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>正则表达式从小白到入门</title>
    <link href="https://wsgzao.github.io/post/regex/"/>
    <id>https://wsgzao.github.io/post/regex/</id>
    <published>2019-09-12T06:59:49.000Z</published>
    <updated>2019-09-12T11:26:28.060Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>正则表达式（Regular Expression，RegExp，regex）使用单个字符串来描述和匹配一系列符合某种句法规则的字符串。此概念来自形式化语言理论，最初由贝尔实验室实现。正则表达式最初在 Perl 中实现，它的推广得益于 UNIX 软件的流行，尤其是 SED，GREP 等。 现在许多编程语言都内置了正则表达式引擎，如 PERL、Python、JavaScript、Java、C++ 等。很多文本编辑器也支持正则表达式来进行检索和替换，如 Vim、Sublime Text、Visual Studio Code 等。正则表达式相关的学习文章网上也是一大推，本文主要记录正则表达式的入门教程和常用公式工具，方便大家活学活用。</p><blockquote><p>正则表达式从小白到入门</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 12 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/regex/">https://wsgzao.github.io/post/regex/</a></p><p><strong> 扩展阅读 </strong></p><p>正则表达式 30 分钟入门教程 - <a href="https://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">https://deerchao.net/tutorials/regex/regex.htm</a></p><hr><h2 id="为什么要正则表达式？"><a href="#为什么要正则表达式？" class="headerlink" title="为什么要正则表达式？"></a>为什么要正则表达式？</h2><p><a href="http://yinwang0.lofter.com/post/183ec2_47bddf" target="_blank" rel="noopener">为什么需要正则表达式 - 王垠</a></p><p>学习 Unix 最开头，大家都学过正则表达式 (regexp)。可是有没有人考虑过我们为什么需要正则表达式？</p><p>正则表达式本来的初衷是用来从无结构的字符串中提取信息，殊不知这正好是 Unix 的缺陷所在。Unix 用无结构的字符串来表示数据，导致了诸多复杂的基于 regexp 的软件的诞生。sed, AWK, Perl, … 都是为了同样的目的来到这个世界上的。如果不是因为 Unix 用字符串来表示数据，我们就会拥有按数据结构类型的直接存储，而不需要折腾 regexp。正则表达式有它自己的价值（针对自然语言），但是我们其实不需要把它应用到程序语言和操作系统里面。</p><p>正则表达式本身用一个字符串来表示，这带来另外一些问题。因为正则表达式的本质不是字符串，而是一个数据结构。学过计算理论的人可能知道这个数据结构叫做 NFA（nondeterministic finite automaton，非确定性有限自动机）。所有的数据结构应该由程序语言本身来表示，就像用 Java 构造一个对象用 <code>new ClassA(&quot;a&quot;)</code> 一样。但是正则表达式强迫你把这个简单的构造函数调用写成一个字符串。所以在这个比方之下，你得写成 <code>new ClassA(\&quot;a\&quot;)</code>。这样当你想要组合这些表达式的时候就发现，正则表达式几乎都是不可组合 (compose) 的。你几乎不可能不能把两个 regexp 的变量 A 和 B 安全拼接成一个，比如用 Java 的字符串拼接 A+B。因为你不知道这两个字符串拼在一起之后，那些稀奇古怪的符号会出现什么交叉反应，使得最后的识别的东西根本不是你想要的。</p><p>在正则表达式中，由于正则表达式本身的构造函数与数据本身合并到一起，我们不得不对某些 “特殊字符” 进行 escape。这些特殊字符，其实是用来描述 NFA 的记号，它们属于更高一层的语言。可是在正则表达式里，它们与 NFA 节点里的字符混为一谈。比如很简单的一个 block comment 的正则表达式，却要写成这个样子：</p><pre><code>/\\\\\*(\[^\\\\\*\]|\[^/\])\*\\\\\*/</code></pre><p>显然这样的表达式很容易出错。 如果我们用程序语言的表达式来构造这个表达式，它应该是这样：</p><pre><code>(@... &quot;/\*&quot; (@\*(@!&quot;\*/&quot;)) &quot;\*/&quot;)</code></pre><p>在这个我自己设计的 Scheme 表达式里，以 <code>@</code> 开头的标识符都是构造函数。其中 <code>@...</code> 是构造 sequence，<code>@*</code> 是构造一个 zero-or-more 的匹配，<code>@!</code> 构造一个否定匹配。这个表达式是说：“以 <code>/ *</code> 开头，接着零个或者多个不是 <code>* /</code> 的字符，最后接着一个 <code>* /</code>。这样一来清晰明了，什么表达式在什么 “层次” 都很清楚，不需要什么反斜杠 escape，而且这样的表达式可以 compose。比如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(define reg1 (@... &quot;/\*&quot; (@\*(@!&quot;\*/&quot;)) &quot;\*/&quot;))</span><br><span class="line">(define reg2 (@+ &quot;foo&quot;))</span><br><span class="line">(define reg3 (@= &quot;b&quot;))</span><br></pre></td></tr></table></figure><p>定义这三个表达式之后，我们之后可以用像 <code>(@... reg1 (@or reg2 reg3))</code> 这样的表达式来连接 3 个不同的表达式，构造出更大的表达式。这样的构造可以无限的扩展。从这里以及以往的经验，我总结出一个普遍适用的程序设计的教训：尽量不要把多个层次的语言 “压缩” 到一层。我们也看到正则表达式与 “Unix 哲学” 有很大关系。我没有考古，所以不知道孰先孰后，但是它们肯定有直接的因果关系。两者都是 Unix 复杂性的来源。</p><blockquote><p>再来看取自 12306 网站的一段代码</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// http://www.12306.cn/mormhweb/js/adKyfw.min.js</span></span><br><span class="line">d = d.replace(<span class="string">"'"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"%"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"#"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"&amp;"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"*"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"("</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">")"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"@"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"`"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"/"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"\\"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">","</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"."</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"="</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"&lt;"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"&gt;"</span>, <span class="string">""</span>);</span><br></pre></td></tr></table></figure><p>上述代码是在过滤掉不合法的搜索字符（姑且不论客户端过滤是否安全）， 我们可以用一行正则替换来实现相同的功能：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d = d.replace(<span class="regexp">/'%#\&amp;\*\(\)@`\/\\,\.=&lt;&gt;/g</span>, <span class="string">''</span>);</span><br></pre></td></tr></table></figure><h2 id="正则表达式入门教程推荐"><a href="#正则表达式入门教程推荐" class="headerlink" title="正则表达式入门教程推荐"></a>正则表达式入门教程推荐</h2><blockquote><p>感谢作者 deerchao 从 2006 年开始更新至今，谢谢</p></blockquote><p><a href="https://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">正则表达式 30 分钟入门教程 - DeerChao</a></p><p><a href="http://www.runoob.com/regexp/regexp-tutorial.html" target="_blank" rel="noopener">正则表达式 - 教程</a></p><p><a href="https://www.w3schools.com/python/python_regex.asp" target="_blank" rel="noopener">Python RegEx</a></p><h2 id="正则表达式在线工具"><a href="#正则表达式在线工具" class="headerlink" title="正则表达式在线工具"></a>正则表达式在线工具</h2><p><a href="https://regexr.com/" target="_blank" rel="noopener">regexr</a></p><p><a href="https://regex101.com/" target="_blank" rel="noopener">regex101</a></p><p><a href="https://deerchao.net/tools/wegester/index.html" target="_blank" rel="noopener">正则表达式测试工具（在线）</a></p><p><a href="https://c.runoob.com/front-end/854" target="_blank" rel="noopener">正则表达式在线测试</a></p><h2 id="正则表达式基本语法"><a href="#正则表达式基本语法" class="headerlink" title="正则表达式基本语法"></a>正则表达式基本语法</h2><p>定义正则表达式的方式在不同的工具中可能有所差别，但正则表达式内容的语法是一致的。 正则表达式有三类语法结构：</p><ol><li>串接（与操作）。相邻的字符默认为串接关系。例如 <code>harttle</code> 只能匹配 <code>harttle</code>， 不可匹配 <code>hart</code>。</li><li>选择（或操作，<code>|</code>）。例如：<code>harttle|serene</code> 可以匹配 <code>harttle</code> 或者 <code>serene</code>。 选择的优先级级低于串接，因此很多情况下都可以省略括号。</li><li>数量（限定符）。最常见的数量限定符包括 <code>+</code>, <code>?</code>, <code>*</code>，分别表示左侧的字符出现一次或更多，不出现或出现一次，不出现或出现任意次。例如 <code>harttle?</code> 可以匹配 <code>harttl</code> 和 <code>harttle</code>。</li><li>组合（括号，<code>()</code>）。组合用来定义操作符的作用范围和优先级。例如 <code>har(ttle)?</code> 可以匹配 <code>harttle</code> 和 <code>har</code>，<code>h(a|u)rttle</code> 可以匹配 <code>harttle</code> 和 <code>hurttle</code>。</li></ol><h2 id="常用正则表达式"><a href="#常用正则表达式" class="headerlink" title="常用正则表达式"></a>常用正则表达式</h2><table><thead><tr><th>字符</th><th>描述</th></tr></thead><tbody><tr><td><code>\\</code></td><td>将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，”<code>n</code>“匹配字符”<code>n</code>“。”<code>\n</code>“匹配一个换行符。序列”<code>\</code>“匹配”<code>\</code>“而” <code>(</code>“则匹配”<code>(</code>“。</td></tr><tr><td><code>^</code></td><td>匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，<code>^</code> 也匹配”<code>\n</code>“或”<code>\r</code>“之后的位置。</td></tr><tr><td><code>$</code></td><td>匹配输入字符串的结束位置。如果设置了 RegExp 对象的 Multiline 属性，<code>$</code> 也匹配”<code>\n</code>“或”<code>\r</code>“之前的位置。</td></tr><tr><td><code>*</code></td><td>匹配前面的子表达式零次或多次。例如，zo 能匹配”<code>z</code>“、”<code>zo</code>“以及”<code>zoo</code>“。等价于 {0,}。</td></tr><tr><td><code>+</code></td><td>匹配前面的子表达式一次或多次。例如，”<code>zo+</code>“能匹配”<code>zo</code>“以及”<code>zoo</code>“，但不能匹配”<code>z</code>“。+ 等价于 {1,}。</td></tr><tr><td><code>?</code></td><td>匹配前面的子表达式零次或一次。例如，”<code>do(es)?</code>“可以匹配”<code>do</code>“或”<code>does</code>“中的”<code>do</code>“。? 等价于 {0,1}。</td></tr><tr><td><code>{n}</code></td><td>n 是一个非负整数。匹配确定的 n 次。例如，”<code>o{2}</code>“不能匹配”<code>Bob</code>“中的”<code>o</code>“，但是能匹配”<code>food</code>“中的两个 o。</td></tr><tr><td><code>{n,}</code></td><td>n 是一个非负整数。至少匹配 n 次。例如，”<code>o{2,}</code>“不能匹配”<code>Bob</code>“中的”<code>o</code>“，但能匹配”<code>foooood</code>“中的所有 o。”<code>o{1,}</code>“等价于” <code>o+</code>“。”<code>o{0,}</code>“则等价于”<code>o</code>“。</td></tr><tr><td><code>{n,m}</code></td><td>m 和 n 均为非负整数，其中 n&lt;=m。最少匹配 n 次且最多匹配 m 次。例如，”<code>o{1,3}</code>“将匹配”<code>fooooood</code>“中的前三个 o。”<code>o{0,1}</code>“等价于”<code>o?</code>“。请注意在逗号和两个数之间不能有空格。</td></tr><tr><td><code>?</code></td><td>当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串”<code>oooo</code>“，”<code>o+?</code>“将匹配单个”<code>o</code>“，而” <code>o+</code>“将匹配所有”<code>o</code>“。</td></tr><tr><td><code>.</code></td><td>匹配除”<code>\n</code>“之外的任何单个字符。要匹配包括”<code>\n</code>“在内的任何字符，请使用像”`(.</td><td>\n)`“的模式。</td></tr><tr><td><code>(pattern)</code></td><td>匹配 pattern 并获取这一匹配的子字符串。该子字符串用于向后引用。所获取的匹配可以从产生的 Matches 集合得到，在 VBScript 中使用 SubMatches 集合，在 JScript 中则使用 <code>$0...$9</code> 属性。要匹配圆括号字符，请使用”<code>(</code>“或”<code>)</code>“。</td></tr><tr><td><code>(?:pattern)</code></td><td>匹配 pattern 但不获取匹配的子字符串，也就是说这是一个非获取匹配，不存储匹配的子字符串用于向后引用。这在使用或字符”`(</td><td>)<code>“来组合一个模式的各个部分是很有用。例如”</code>industr(?:y</td><td>ies)<code>“就是一个比”</code>industry</td><td>industries`“更简略的表达式。</td></tr><tr><td><code>(?=pattern)</code></td><td>正向肯定预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，”`Windows(?=95</td><td>98</td><td>NT</td><td>2000)<code>“能匹配”</code>Windows2000<code>“中的”</code>Windows<code>“，但不能匹配”</code>Windows3.1<code>“中的”</code>Windows`“。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td><code>(?!pattern)</code></td><td>正向否定预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如”`Windows(?!95</td><td>98</td><td>NT</td><td>2000)<code>“能匹配”</code>Windows3.1<code>“中的”</code>Windows<code>“，但不能匹配”</code>Windows2000<code>“中的”</code>Windows`“。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始</td></tr><tr><td><code>(?&lt;=pattern)</code></td><td>反向肯定预查，与正向肯定预查类似，只是方向相反。例如，”`(?&lt;=95</td><td>98</td><td>NT</td><td>2000)Windows<code>“能匹配”</code>2000Windows<code>“中的”</code>Windows<code>“，但不能匹配”</code>3.1Windows<code>“中的”</code>Windows`“。</td></tr><tr><td><code>(?&lt;!pattern)</code></td><td>反向否定预查，与正向否定预查类似，只是方向相反。例如”`(?&lt;!95</td><td>98</td><td>NT</td><td>2000)Windows<code>“能匹配”</code>3.1Windows<code>“中的”</code>Windows<code>“，但不能匹配”</code>2000Windows<code>“中的”</code>Windows`“。</td></tr><tr><td>`x</td><td>y`</td><td>匹配 x 或 y。例如，”`z</td><td>food<code>“能匹配”</code>z<code>“或”</code>food<code>“。”</code>(z</td><td>f)ood<code>“则匹配”</code>zood<code>“或”</code>food`“。</td></tr><tr><td><code>[xyz]</code></td><td>字符集合（character class）。匹配所包含的任意一个字符。例如，”<code>[abc]</code>“可以匹配”<code>plain</code>“中的”<code>a</code>“。特殊字符仅有反斜线 <code>\\</code> 保持特殊含义，用于转义字符。其它特殊字符如星号、加号、各种括号等均作为普通字符。脱字符 ^ 如果出现在首位则表示负值字符集合；如果出现在字符串中间就仅作为普通字符。连字符 - 如果出现在字符串中间表示字符范围描述；如果如果出现在首位则仅作为普通字符。</td></tr><tr><td><code>[^xyz]</code></td><td>排除型（negate）字符集合。匹配未列出的任意字符。例如，”<code>[^abc]</code>“可以匹配”<code>plain</code>“中的”<code>plin</code>“。</td></tr><tr><td><code>[a-z]</code></td><td>字符范围。匹配指定范围内的任意字符。例如，”<code>[a-z]</code>“可以匹配”<code>a</code>“到”<code>z</code>“范围内的任意小写字母字符。</td></tr><tr><td><code>[^a-z]</code></td><td>排除型的字符范围。匹配任何不在指定范围内的任意字符。例如，”<code>[^a-z]</code>“可以匹配任何不在”<code>a</code>“到”<code>z</code>“范围内的任意字符。</td></tr><tr><td><code>\b</code></td><td>匹配一个单词边界，也就是指单词和空格间的位置。例如，”<code>er\b</code>“可以匹配”<code>never</code>“中的”<code>er</code>“，但不能匹配”<code>verb</code>“中的”<code>er</code>“。</td></tr><tr><td><code>\B</code></td><td>匹配非单词边界。”<code>er\B</code>“能匹配”<code>verb</code>“中的”<code>er</code>“，但不能匹配”<code>never</code>“中的”<code>er</code>“。</td></tr><tr><td><code>\cx</code></td><td>匹配由 x 指明的控制字符。例如，<code>\cM</code> 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的”<code>c</code>“字符。</td></tr><tr><td><code>\d</code></td><td>匹配一个数字字符。等价于 <code>[0-9]</code>。</td></tr><tr><td><code>\D</code></td><td>匹配一个非数字字符。等价于 <code>[^0-9]</code>。</td></tr><tr><td><code>\f</code></td><td>匹配一个换页符。等价于 <code>\x0c</code> 和 <code>\cL</code>。</td></tr><tr><td><code>\n</code></td><td>匹配一个换行符。等价于 <code>\x0a</code> 和 <code>\cJ</code>。</td></tr><tr><td><code>\r</code></td><td>匹配一个回车符。等价于 <code>\x0d</code> 和 <code>\cM</code>。</td></tr><tr><td><code>\s</code></td><td>匹配任何空白字符，包括空格、制表符、换页符等等。等价于 <code>[ \f\n\r\t\v]</code>。</td></tr><tr><td><code>\S</code></td><td>匹配任何非空白字符。等价于 <code>[^ \f\n\r\t\v]</code>。</td></tr><tr><td><code>\t</code></td><td>匹配一个制表符。等价于 <code>\x09</code> 和 <code>\cI</code>。</td></tr><tr><td><code>\v</code></td><td>匹配一个垂直制表符。等价于 <code>\x0b</code> 和 <code>\cK</code>。</td></tr><tr><td><code>\w</code></td><td>匹配包括下划线的任何单词字符。等价于”<code>[A-Za-z0-9]</code>“。</td></tr><tr><td><code>\W</code></td><td>匹配任何非单词字符。等价于”<code>[^A-Za-z0-9]</code>“。</td></tr><tr><td><code>\xn</code></td><td>匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，”<code>\x41</code>“匹配”<code>A</code>“。”<code>\x041</code>“则等价于”<code>\x04&amp;1</code>“。正则表达式中可以使用 ASCII 编码。.</td></tr><tr><td><code>\num</code></td><td>向后引用（back-reference）一个子字符串（substring），该子字符串与正则表达式的第 num 个用括号围起来的子表达式（subexpression）匹配。其中 num 是从 1 开始的正整数，其上限可能是 99。例如：”<code>(.)\1</code>“匹配两个连续的相同字符。</td></tr><tr><td><code>\n</code></td><td>标识一个八进制转义值或一个向后引用。如果 <code>\n</code> 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字（0-7），则 n 为一个八进制转义值。</td></tr><tr><td><code>\nm</code></td><td>标识一个八进制转义值或一个向后引用。如果 <code>\nm</code> 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 <code>\nm</code> 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字（0-7），则 <code>\nm</code> 将匹配八进制转义值 nm。</td></tr><tr><td><code>\nml</code></td><td>如果 n 为八进制数字（0-3），且 m 和 l 均为八进制数字（0-7），则匹配八进制转义值 nml。</td></tr><tr><td><code>\un</code></td><td>匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如，<code>\u00A9</code> 匹配版权符号（©）。</td></tr></tbody></table><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F" target="_blank" rel="noopener">Wikipedia 正则表达式</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank" rel="noopener">MDN RegExp</a></p><p><a href="https://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">正则表达式 30 分钟入门教程 - DeerChao</a></p>]]></content>
    
    <summary type="html">
    
      正则表达式从小白到入门
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>macOS 使用 Homebrew 的经验分享</title>
    <link href="https://wsgzao.github.io/post/homebrew/"/>
    <id>https://wsgzao.github.io/post/homebrew/</id>
    <published>2019-09-11T06:59:49.000Z</published>
    <updated>2019-09-13T03:46:18.617Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本来想着 macOS 使用 Homebrew 对大家没啥难度，之前就分享了一篇介绍 homebrew-bundle 备份恢复的文章，不过长期使用后还是觉得有必要做一下总结，道理也很简单，越简单越频繁使用的产品就越值得挖掘一些背自己忽视的小技巧，因为如果可以做到每天节省 5 分钟那么量变可能会成为质变。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 11 日 - 更新转载 <a href="https://crispgm.com/page/dive-in-homebrew.html" target="_blank" rel="noopener">Homebrew 深度应用</a><br>2019 年 09 月 08 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/homebrew/">https://wsgzao.github.io/post/homebrew/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew</a></p><p><a href="https://wsgzao.github.io/post/homebrew-bundle/">macOS 使用 homebrew-bundle 优雅的备份和恢复软件列表</a></p><hr><h2 id="Homebrew-简介"><a href="#Homebrew-简介" class="headerlink" title="Homebrew 简介"></a>Homebrew 简介</h2><p>Homebrew 是一款享有盛名的包管理工具，是 macOS 上包管理的事实 (de facto) 标准 。Homebrew 的意思是家酿啤酒。</p><p>它的官方 slogan 是 The missing package manager for macOS (or Linux)。Linuxbrew 已经在 Homebrew 1.9 正式合入，成为 Homebrew 的 “一等公民”。</p><p>Homebrew 最早的创建者是 Max Howell，目前的主要维护者是 Mike McQuaid。同 Jekyll 等开源项目一样，Homebrew 的核心维护者也是 GitHub 的员工。GitHub 对于员工亲自参加开源项目方面，做得一直不错。</p><p>顺带插播一条奇闻逸事：Homebrew 的创始人 Max Howell 活跃在开源社区，目前主要从事 Swift 相关的库开发。他在 2015 年初曾去 Google 面试，因为 “白板” 写算法题「翻转二叉树」失败，愤而发 tweet 讽刺：</p><blockquote><p>Google: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so fuck off. </p></blockquote><h2 id="为什么需要-Homebrew"><a href="#为什么需要-Homebrew" class="headerlink" title="为什么需要 Homebrew"></a>为什么需要 Homebrew</h2><p>对于使用 Unix/Linux 类系统的用户往往都遇到过这些需求：</p><ul><li>开源程序是源码分发，需要自己编译，但 <code>./configure</code> 参数超多，还要解决各种库的依赖</li><li>想把软件安装到用户目录，而不是系统目录（这样不需要 root 权限）</li><li>自己编译安装了软件，想删除时却不知道在哪里删除和删除哪些文件</li></ul><p>各 Linux 发行版为了提升安装软件的体验，大多都提供了官方的包管理器，如 Ubuntu 的 aptitude (apt-get)。而苹果官方没有为 macOS 提供包管理器，市面上最好的解决方案就是 Homebrew。</p><p>目前 Homebrew 的中文内容大多以简单入门级教程为主，对于它的各类能力提之甚少，我希望在这里更全面的分享 Homebrew。</p><h2 id="Homebrew-快速入门"><a href="#Homebrew-快速入门" class="headerlink" title="Homebrew 快速入门"></a>Homebrew 快速入门</h2><p>网上基础的教程很多，我这里只简略的介绍下。对于基础功能类的深度用法，推荐这篇 <a href="https://swiftcafe.io/post/home-brew" target="_blank" rel="noopener">macOS 包管理工具 Homebrew 不完全指南</a>。</p><h3 id="Homebrew-安装"><a href="#Homebrew-安装" class="headerlink" title="Homebrew 安装"></a>Homebrew 安装</h3><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>开始安装前需要安装 macOS 命令行工具：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select —install</span><br></pre></td></tr></table></figure><p>或者，在 <a href="https://developer.apple.com/download/more/" target="_blank" rel="noopener">https://developer.apple.com/download/more/</a> 下载安装。</p><p>然后执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure><h3 id="基础功能"><a href="#基础功能" class="headerlink" title="基础功能"></a>基础功能</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 安装 </span><br><span class="line">brew install wget</span><br><span class="line"></span><br><span class="line"># 完成安装后可以列出已安装内容 </span><br><span class="line">brew list</span><br><span class="line"></span><br><span class="line"># 显示可以升级的包 </span><br><span class="line">brew outdated</span><br><span class="line"></span><br><span class="line">cmake (3.13.4) &lt; 3.14.0</span><br><span class="line">yarn (1.13.0) &lt; 1.15.2</span><br><span class="line">youtube-dl (2019.03.09) &lt; 2019.03.18</span><br><span class="line"></span><br><span class="line"># 进行升级 </span><br><span class="line">brew upgrade cmake</span><br><span class="line"></span><br><span class="line"># 删除 </span><br><span class="line">brew uninstall wget</span><br><span class="line"></span><br><span class="line"># 安装桌面程序 </span><br><span class="line">brew cask install google-chrome</span><br></pre></td></tr></table></figure><p>对于 Homebrew-cask 管理桌面程序，这里先不细说，后面会专门讲。</p><p>Homebrew 会把软件安装到 <code>/usr/local/Cellar</code>，并且通过软链链接到 <code>/usr/local/bin</code>。我们可以通过 <code>brew unlink</code> 和 <code>brew link</code> 删除或创建链接。</p><h3 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h3><p>Homebrew 把软件安装过程中的各种名词都进行了拟物化命名，这些命名挺有意思，但对于大多数英语水平一般的人来说，有不少词汇有些生僻。</p><table><thead><tr><th>英文</th><th>直译</th><th>实际含义</th></tr></thead><tbody><tr><td>formula(e)</td><td>公式</td><td>安装包的描述文件，formulae 为复数</td></tr><tr><td>cellar</td><td>地窖</td><td>安装好后所在的目录</td></tr><tr><td>keg</td><td>小桶</td><td>具体某个包所在的目录，keg 是 cellar 的子目录</td></tr><tr><td>bottle</td><td>瓶子</td><td>预先编译好的包，不需要现场下载编译源码，速度会快很多；</td></tr></tbody></table><p>官方库中的包大多都是通过 bottle 方式安装 |<br>| tap | (插入) 水龙头 | 下载启用某个源 |<br>| cask | 木桶 | 安装 macOS native 应用的扩展 |<br>| bundle | 捆 | 描述 Homebrew 依赖的扩展 |</p><h2 id="Homebrew-进阶用法"><a href="#Homebrew-进阶用法" class="headerlink" title="Homebrew 进阶用法"></a>Homebrew 进阶用法</h2><p>对于 Homebrew，我们很多时候往往都是上来就 <code>brew search</code> 或是 <code>brew install</code>。缺什么安什么，没有充分的应用它的强大能力。</p><p>首先，Homebrew 虽为解决控制台程序而生，但它完全有能力（Cask）安装任何桌面软件。它还支持丰富的分类目软件库或第三方库。</p><p>除此之外，它还有一个打包安装或备份工具，可以把已安装的软件输出成 Brewfile。迁移到新电脑时，只要根据 Brewfile 运行 Homebrew bundle，就可以一键安装全部控制台、桌面和来自 Mac App Store 的程序（Mac App Store 上的软件通过 <a href="https://github.com/mas-cli/mas" target="_blank" rel="noopener">mas</a> 支持）。</p><h3 id="Tap"><a href="#Tap" class="headerlink" title="Tap"></a>Tap</h3><p>Tap 在 Homebrew 中我理解是个动词，指的是启用某个源。实际看了下发现，homebrew-services 和 homebrew-bundle 也已 tap 形式存在，因此可以认为 tap 实际指的应该是扩展（extension）。</p><p>Homebrew 默认情况下会自带：</p><ul><li>homebrew/core</li><li>homebrew/cask</li><li>homebrew/services</li><li>homebrew/bundle</li></ul><p>后两者并没有任何公式配方，而只是扩展程序。</p><p>除此之外的源，需要通过 <code>brew tap</code> 来启用。如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap heroku/brew</span><br><span class="line">brew install heroku</span><br></pre></td></tr></table></figure><h3 id="Services"><a href="#Services" class="headerlink" title="Services"></a>Services</h3><p><a href="https://github.com/Homebrew/homebrew-services" target="_blank" rel="noopener">Homebrew-services</a> 是 Homebrew 的后台服务程序扩展，它基于 macOS 的 <code>launchctl</code>。后台服务类程序的安装依旧使用 Homebrew，在管理时可以使用 Homebrew-services 进行启动、重启和停止等操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install mysql</span><br><span class="line">brew services start mysql</span><br></pre></td></tr></table></figure><h3 id="Cask"><a href="#Cask" class="headerlink" title="Cask"></a>Cask</h3><p><a href="https://github.com/Homebrew/homebrew-cask" target="_blank" rel="noopener">Homebrew-cask</a> 是 Homebrew 的 macOS Native 应用扩展，通过 cask 可以安装各类应用程序。</p><p>搜索 Cask 的方法和搜索普通包一样，但安装时需要加上 cask 指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew search google-chrome</span><br><span class="line">brew cask install google-chrome</span><br></pre></td></tr></table></figure><blockquote><p>cask-versions</p></blockquote><p>Homebrew Cask 和 Homebrew 一样，默认库只维护最新版本，但有的时候我们还是需要用旧版的（比如：我只有 Dash 3 的 License，所以需要用 Dash 3 而不是最新的 Dash 4），那就可能需要使用 cask-versions。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap homebrew/cask-versions</span><br><span class="line">brew cask install dash3</span><br></pre></td></tr></table></figure><blockquote><p>cask-fonts</p></blockquote><p>Homebrew 官方的字体源，比如 Mozilla 的开源字体 Fira Code：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap homebrew/cask-fonts</span><br><span class="line">brew cask install font-fira-code</span><br></pre></td></tr></table></figure><h3 id="Bundle"><a href="#Bundle" class="headerlink" title="Bundle"></a>Bundle</h3><p>Homebrew 不仅仅是一个包管理器，还具有软件依赖管理能力。通过 <a href="https://github.com/Homebrew/homebrew-bundle" target="_blank" rel="noopener">Homebrew Bundle</a> 可以帮你解决所有软件依赖，包括官方和第三方的 formula 以及 cask，甚至还包括 Mac App Store（简称 mas）中的应用。</p><p>Homebrew 默认就安装了 Homebrew Bundle。</p><p>我们只需要一个 <code>Brewfile</code>，就可以配置好所有需要的应用。熟悉 Ruby 的人应该不太需要解释，毕竟 Ruby 自己就有 Bundler 这套东西，Brewfile 和 Gemfile 属于对应关系。</p><p>如果你的安装列表已经足够 “干净”，那么可以执行 <code>brew bundle dump</code> 来生成现有依赖，输出到 <code>Brewfile</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">brew bundle dump</span><br><span class="line">cat Brewfile</span><br><span class="line"></span><br><span class="line">brew &quot;git&quot;</span><br><span class="line">brew &quot;wget&quot;</span><br><span class="line">brew &quot;mas&quot;</span><br><span class="line">brew &quot;p7zip&quot;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>如果想自己写也比较容易，<code>Brewfile</code> 是一种简单的 Ruby DSL，写起来比大部分配置文件都简单。只需要掌握一些常用到的命令，主要有 <code>brew</code>, <code>tap</code>, <code>cask</code> 和 <code>mas</code>。</p><p>这四条命令分别对应：</p><ul><li>brew install</li><li>brew tap</li><li>brew cask install</li><li>mas install</li></ul><blockquote><p>注：Homebrew 虽然好用，但 Homebrew 并不能管理 MAS「Mac App Store」上的应用软件，<a href="https://www.hi-linux.com/posts/18202.html" target="_blank" rel="noopener">在终端上轻松管理「Mac App Store」中应用的神器 mas-cli</a></p></blockquote><p>命令行类应用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew &quot;git&quot;</span><br><span class="line">brew &quot;wget&quot;</span><br><span class="line">brew &quot;vim&quot;</span><br></pre></td></tr></table></figure><p>非命令行类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cask &quot;google-chrome&quot;</span><br><span class="line">cask &quot;alfred&quot;</span><br><span class="line">cask &quot;visual-studio-code&quot;</span><br></pre></td></tr></table></figure><p>非官方 Formula 应用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tap  &quot;homebrew/cask-versions&quot;</span><br><span class="line">brew &quot;dash3&quot;</span><br><span class="line">tap  &quot;homebrew/cask-fonts&quot;</span><br><span class="line">cask &quot;font-source-code-pro&quot;</span><br></pre></td></tr></table></figure><p>Mac App Store 上的应用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mas &quot;WeChat&quot;, id: 836500024</span><br></pre></td></tr></table></figure><p>因此，维护好 <a href="https://github.com/crispgm/dotfiles/blob/master/Brewfile" target="_blank" rel="noopener">Brewfile</a> 就可以完美解决应用自动化安装，只需要运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew bundle</span><br></pre></td></tr></table></figure><h2 id="Homebrew-扩展用法"><a href="#Homebrew-扩展用法" class="headerlink" title="Homebrew 扩展用法"></a>Homebrew 扩展用法</h2><h3 id="提交-Formula"><a href="#提交-Formula" class="headerlink" title="提交 Formula"></a>提交 Formula</h3><p>创建并提交一个 Formula 比较容易，官方教程非常详细。这里，我就不做单独介绍了。</p><h3 id="自建-Tap"><a href="#自建-Tap" class="headerlink" title="自建 Tap"></a>自建 Tap</h3><p>Homebrew 除了各种官方维护的源外，还支持自建软件库。默认使用 GitHub，需要以 “homebrew-xxx” 格式命名 Repo。Formula 或 Cask 文件需要存放在 Formula 或 Casks 二级目录中。</p><p>比如，Heroku 的自建库在 GitHub 上是 <code>heroku/homebrew-brew</code>。通过 <code>brew tap heroku/brew</code> 就可以获取库里维护的包了。</p><h3 id="私有-Tap"><a href="#私有-Tap" class="headerlink" title="私有 Tap"></a>私有 Tap</h3><p>上面说到，Tap 默认维护在 GitHub，那么当我们想安装一些需要 <strong> 保密 </strong> 的软件时该怎么办呢？</p><p>答案是 Tap 支持指定 Git，因此也可以使用内网域名内的 Git：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap yourcompany/brew git@git.yourcompany.com: yourcompany/homebrew-brew.git</span><br><span class="line">brew install inhouse-app</span><br></pre></td></tr></table></figure><h2 id="Homebrew-Tips"><a href="#Homebrew-Tips" class="headerlink" title="Homebrew Tips"></a>Homebrew Tips</h2><h3 id="禁用自动升级"><a href="#禁用自动升级" class="headerlink" title="禁用自动升级"></a>禁用自动升级</h3><p>Homebrew 自动升级触发概率很高，由于网络等问题，检查更新会很久有时会比较烦。可以通过环境变量禁用自动升级：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HOMEBREW_NO_AUTO_UPDATE=1 brew info mysql</span><br></pre></td></tr></table></figure><h3 id="直接安装-Formula"><a href="#直接安装-Formula" class="headerlink" title="直接安装 Formula"></a>直接安装 Formula</h3><p>Homebrew 的安装指令并非只支持名字，也可以用文件安装包括网络文件和本地文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 本地 </span><br><span class="line">brew install blabla.rb</span><br><span class="line"># 远程 </span><br><span class="line">brew install https://blablablabla.com/blabla.rb</span><br></pre></td></tr></table></figure><h2 id="安装旧版软件"><a href="#安装旧版软件" class="headerlink" title="安装旧版软件"></a>安装旧版软件</h2><p>Homebrew 默认情况下只支持最新版软件安装，有些重要的版本会单独存在。但想安装一些小版本就得自己 DIY 了。</p><p>我所知有两种方法：</p><ol><li>在 GitHub 找到 Formula 所在 Repo 中（默认为 <a href="https://github.com/Homebrew/homebrew-core/blob/master/Formula/" target="_blank" rel="noopener">homebrew-core</a>）的文件，把文件远程地址复制下来，用 <code>brew install</code> 安装。</li><li>进入 homebrew-core 在 macOS 本地的路径，默认为 <code>/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core</code>，<code>git checkout</code> 到所在 commit，再用 <code>brew pin</code> 锁定这个文件的更新，然后进行安装。</li></ol><h2 id="Homebrew-常见问题"><a href="#Homebrew-常见问题" class="headerlink" title="Homebrew 常见问题"></a>Homebrew 常见问题</h2><blockquote><p>我遇到的问题大多数是升级 macOS Mojave 之后产生的，升级前要三思而后行，先备份，先备份，先备份</p></blockquote><p>Homebrew Permissions Denied Issues Solution</p><pre><code>sudo chown -R $(whoami) $(brew --prefix)/*</code></pre><p>Reference - <a href="https://gist.github.com/irazasyed/7732946" target="_blank" rel="noopener">https://gist.github.com/irazasyed/7732946</a></p><p>xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun.</p><p>Reference - <a href="https://apple.stackexchange.com/questions/254380/why-am-i-getting-an-invalid-active-developer-path-when-attempting-to-use-git-a" target="_blank" rel="noopener">https://apple.stackexchange.com/questions/254380/why-am-i-getting-an-invalid-active-developer-path-when-attempting-to-use-git-a</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># The problem is that you are using XCode and you explicit have to agree to the license agreement. So open Terminal, and run the following:</span><br><span class="line"></span><br><span class="line">xcode-select --install</span><br><span class="line"></span><br><span class="line"># This will download and install xcode developer tools and fix the problem. As a follow on step, you may need to reset the path to Xcode if you have several versions or want the command line tools to run without Xcode.</span><br><span class="line"></span><br><span class="line">xcode-select --switch /Applications/Xcode.app</span><br><span class="line">xcode-select --switch /Library/Developer/CommandLineTools</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://twitter.com/mxcl/status/608682016205344768" target="_blank" rel="noopener">Max Howell on Twitter: “Google: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so fuck off.”</a></p><p><a href="https://github.com/Linuxbrew/brew/issues/612" target="_blank" rel="noopener">https://github.com/Linuxbrew/brew/issues/612</a></p><p><a href="https://docs.brew.sh/Formula-Cookbook#homebrew-terminology" target="_blank" rel="noopener">Formula Cookbook — Homebrew Documentation</a></p><p><a href="http://tmr08c.github.io/devops/2016/10/24/homebrew-glossary.html" target="_blank" rel="noopener">Glossary of Homebrew Terms</a></p><p><a href="https://docs.brew.sh/Formula-Cookbook#an-introduction" target="_blank" rel="noopener">Formula Cookbook — Homebrew Documentation</a></p><p><a href="https://www.hi-linux.com/posts/18202.html" target="_blank" rel="noopener">在终端上轻松管理「Mac App Store」中应用的神器 mas-cli</a></p><p><a href="https://crispgm.com/page/dive-in-homebrew.html" target="_blank" rel="noopener">Homebrew 深度应用</a></p>]]></content>
    
    <summary type="html">
    
      macOS使用Homebrew的经验分享
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Vim 从小白到入门</title>
    <link href="https://wsgzao.github.io/post/vim/"/>
    <id>https://wsgzao.github.io/post/vim/</id>
    <published>2019-09-06T06:59:49.000Z</published>
    <updated>2019-09-12T08:06:17.178Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Vim 是从 vi 发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。和 Emacs 并列成为类 Unix 系统用户最喜欢的编辑器。而 <code>Windows ❤️ Linux</code> 的态度转变相信大家会经常使用到 Vim 文本编辑器，关于 Vim 的文章网上已经很多了本文只记录自己常用的作为备忘录，然而熟练掌握的方法始终只有一个字 <code>用</code>。</p><blockquote><p>Vim 从小白到入门</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 06 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/vim/">https://wsgzao.github.io/post/vim/</a></p><p><strong> 扩展阅读 </strong></p><p>Vim 英文文档 - <a href="http://vimdoc.sourceforge.net/htmldoc/" target="_blank" rel="noopener">http://vimdoc.sourceforge.net/htmldoc/</a></p><p>Vim 中文文档 - <a href="http://vimcdoc.sourceforge.net/doc/" target="_blank" rel="noopener">http://vimcdoc.sourceforge.net/doc/</a></p><hr><h2 id="Vim-键盘图"><a href="#Vim-键盘图" class="headerlink" title="Vim 键盘图"></a>Vim 键盘图</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190906144507.png" alt=""><br><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190906144435.png" alt=""><br><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190906151306.jpg" alt=""></p><h2 id="Vim-入门-5-步骤"><a href="#Vim-入门-5-步骤" class="headerlink" title="Vim 入门 5 步骤"></a>Vim 入门 5 步骤</h2><blockquote><p>完成以下练习恭喜你打开 Vim 的大门</p></blockquote><ol><li>vim HelloWorld.txt</li><li>键入 i</li><li>编辑 输入任意信息，如 Hello World</li><li>键入 [ESC]</li><li>键入: wq 保存退出</li></ol><p>你可以访问 <a href="https://www.openvim.com/" target="_blank" rel="noopener">Vim 在线练习模拟器</a>，通过引导熟悉 Vim</p><h2 id="Vim-基础概念"><a href="#Vim-基础概念" class="headerlink" title="Vim 基础概念"></a>Vim 基础概念</h2><h3 id="Vim-常用模式"><a href="#Vim-常用模式" class="headerlink" title="Vim 常用模式"></a>Vim 常用模式</h3><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190906181131.png" alt=""></p><ul><li>正常模式 (Normal Mode)</li><li>插入模式 (Insert Mode)</li><li>可视模式 (Visual Mode)</li><li>命令模式 (Command Mode)</li></ul><p>①. 正常模式 (Normal Mode)<br>正常模式主要用来浏览和修改文本内容的</p><p>一般的，打开 Vim 都是正常模式。在任何模式下，只要按下 Esc 键就可以返回正常模式。</p><p>②. 插入模式 (Insert Mode)<br>插入模式则用来向文本中添加内容的，我自己常用的是 i 和 o</p><p>i 在光标所在字符前开始输入文字并进入插入模式</p><p>o (字母 o) 在光标所在行的下面单独开一新行来输入文字并进入插入模式</p><p>③. 可视模式 (Visual Mode)<br>可视模式相当于高亮选取文本后的普通模式。</p><p>可视模式具有子模式，以行为单位进行选取的可视行模式，使用 “V” 键进入（也就是 Shift+v）；和以块为单位进行选取的可视块模式，使用 “Ctrl+v” 键进入。</p><p>④. 命令模式 (Command Mode)<br>命令模式则多用于操作文本文件（而不是操作文本文件的内容），例如保存文件；或者用来改变编辑器本身的状态，例如设定多栏窗口、标签或者退出编辑器</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>通过运行 <code>vim -V</code> 可查看整个初始化过程</p><p>Vim 的全局配置一般在 <code>/etc/vimrc</code>，对所有用户生效</p><p>用户个人的配置在 <code>~/.vimrc</code>，你可以把自己喜欢的配置比如 <code>:set number</code> 显示行号添加进去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.vimrc</span><br><span class="line"></span><br><span class="line"><span class="string">"Configuration file for vim</span></span><br><span class="line"><span class="string">set modelines=0"</span> CVE-2007-2438</span><br><span class="line"></span><br><span class="line"><span class="string">"Normally we use vim-extensions. If you want true vi-compatibility</span></span><br><span class="line"><span class="string">"</span> remove change the following statements</span><br><span class="line"><span class="built_in">set</span> nocompatible        <span class="string">"Use Vim defaults instead of 100% vi compatibility</span></span><br><span class="line"><span class="string">set backspace=2"</span> more powerful backspacing</span><br><span class="line"></span><br><span class="line"><span class="string">"Don't write backup file if vim is being called by "</span>crontab -e<span class="string">"</span></span><br><span class="line"><span class="string">au BufWrite /private/tmp/crontab.* set nowritebackup nobackup</span></span><br><span class="line"><span class="string">"</span> Don<span class="string">'t write backup file if vim is being called by "chpass"</span></span><br><span class="line"><span class="string">au BufWrite /private/etc/pw.* set nowritebackup nobackup</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let skip_defaults_vim=1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">set ai                  "auto indenting</span></span><br><span class="line"><span class="string">set ruler" show the cursor position</span></span><br><span class="line"><span class="string">set hlsearch            "highlight the last searched term</span></span><br><span class="line"><span class="string">set history=1000" keep 1000 lines of history</span></span><br><span class="line"><span class="string">syntax on               "syntax highlighting</span></span><br><span class="line"><span class="string">filetype plugin on" use the file type plugins</span></span><br></pre></td></tr></table></figure><h2 id="Vim-常用命令"><a href="#Vim-常用命令" class="headerlink" title="Vim 常用命令"></a>Vim 常用命令</h2><blockquote><p>以下为 Vim 相对高频的命令，在日常使用中善用组合方法，记住核心的几种命令即可</p></blockquote><h3 id="正常模式-Normal-Mode"><a href="#正常模式-Normal-Mode" class="headerlink" title="正常模式 (Normal Mode)"></a>正常模式 (Normal Mode)</h3><table><thead><tr><th>命令</th><th>作用（解释）</th></tr></thead><tbody><tr><td><code>h,j,k,l</code></td><td><code>h</code> 表示往左，<code>j</code> 表示往下，<code>k</code> 表示往右，<code>l</code> 表示往上</td></tr><tr><td><code>Ctrl</code>+ <code>f</code></td><td>上一页</td></tr><tr><td><code>Ctrl</code>+ <code>b</code></td><td>下一页</td></tr><tr><td><code>w</code>,  <code>e</code>, <code>W</code>,  <code>E</code></td><td>跳到单词的后面，小写包括标点</td></tr><tr><td><code>b</code>,  <code>B</code></td><td>以单词为单位往前跳动光标，小写包含标点</td></tr><tr><td><code>o</code></td><td>开启新的一行</td></tr><tr><td><code>^</code></td><td>一行的开始</td></tr><tr><td><code>$</code></td><td>一行的结尾</td></tr><tr><td><code>gg</code></td><td>文档的第一行</td></tr><tr><td><code>[N]G</code></td><td>文档的第 N 行或者最后一行</td></tr><tr><td><code>dd</code></td><td>删除一行</td></tr><tr><td><code>dw</code></td><td>删除一个单词</td></tr><tr><td><code>x</code></td><td>删除后一个字符</td></tr><tr><td><code>X</code></td><td>删除前一个字符</td></tr><tr><td><code>D</code></td><td>删除一行最后一个字符</td></tr><tr><td><code>[N]yy</code></td><td>复制一行或者 N 行</td></tr><tr><td><code>yw</code></td><td>复制一个单词</td></tr><tr><td><code>p</code></td><td>粘贴</td></tr><tr><td><code>u</code></td><td>撤销上一步操作</td></tr><tr><td><code>ctrl</code>+ <code>r</code></td><td>恢复上一步操作</td></tr><tr><td><code>.</code></td><td>重复最后一个命令</td></tr><tr><td><code>/pattern</code></td><td>向光标下搜索字符串，可以是正则表达式</td></tr><tr><td><code>?pattern</code></td><td>向光标上搜索字符串</td></tr><tr><td><code>n</code></td><td>向下搜索前一个搜素动作</td></tr><tr><td><code>N</code></td><td>向上搜索前一个搜索动作</td></tr></tbody></table><h3 id="插入模式-Insert-Mode"><a href="#插入模式-Insert-Mode" class="headerlink" title="插入模式 (Insert Mode)"></a>插入模式 (Insert Mode)</h3><table><thead><tr><th>命令</th><th>作用（解释)</th></tr></thead><tbody><tr><td><code>i</code></td><td>插入到光标前面</td></tr><tr><td><code>I</code></td><td>插入到行的开始位置</td></tr><tr><td><code>a</code></td><td>插入到光标的后面</td></tr><tr><td><code>A</code></td><td>插入到行的最后位置</td></tr><tr><td><code>o</code>,  <code>O</code></td><td>新开一行</td></tr><tr><td><code>Esc</code></td><td>关闭插入模式</td></tr></tbody></table><h3 id="视觉模式-Visual-Mode"><a href="#视觉模式-Visual-Mode" class="headerlink" title="视觉模式 (Visual Mode)"></a>视觉模式 (Visual Mode)</h3><table><thead><tr><th>命令</th><th>作用（解释)</th></tr></thead><tbody><tr><td><code>v</code></td><td>选中一个或多个字符</td></tr><tr><td><code>V</code></td><td>选中行</td></tr><tr><td><code>ctrl</code>+ <code>v</code></td><td>选中列</td></tr></tbody></table><h3 id="命令模式-Command-Mode"><a href="#命令模式-Command-Mode" class="headerlink" title="命令模式 (Command Mode)"></a>命令模式 (Command Mode)</h3><table><thead><tr><th>命令</th><th>作用（解释)</th></tr></thead><tbody><tr><td><code>:set nu</code></td><td>显示行号</td></tr><tr><td><code>:set nonu</code></td><td>取消显示行号</td></tr><tr><td><code>:set paste</code></td><td>设置粘贴模式</td></tr><tr><td><code>:%s/old/new/g</code></td><td>全文替换</td></tr><tr><td><code>:w</code></td><td>保存</td></tr><tr><td><code>:wq</code>, <code>:x</code></td><td>保存并关闭</td></tr><tr><td><code>:q</code></td><td>关闭（已保存）</td></tr><tr><td><code>:q!</code></td><td>强制关闭</td></tr><tr><td><code>:split</code></td><td>水平方向分割出一个窗口</td></tr><tr><td><code>:vsplit</code></td><td>垂直方向分割出一个窗口</td></tr><tr><td><code>:close</code></td><td>关闭窗口</td></tr><tr><td><code>Ctrl</code>+ <code>W</code></td><td>切换窗口， <code>h</code> 到左边窗口，<code>j</code> 到下方窗口，<code>k</code> 到上方窗口，<code>l</code> 到右边窗口</td></tr></tbody></table><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://vimcdoc.sourceforge.net/doc/" target="_blank" rel="noopener">Vim 中文文档</a></p><p><a href="https://coolshell.cn/articles/5426.html" target="_blank" rel="noopener">简明 VIM 练级攻略</a></p><p><a href="https://www.linuxprobe.com/chapter-04.html" target="_blank" rel="noopener">第 4 章 Vim 编辑器与 Shell 命令脚本</a></p><p>《Linux 就该这么学》最新版下载地址： <a href="https://www.linuxprobe.com/docs/LinuxProbe.docx" target="_blank" rel="noopener">Word 版本</a> ， <a href="https://www.linuxprobe.com/docs/LinuxProbe.pdf" target="_blank" rel="noopener">PDF 版本</a></p><p><a href="https://github.com/skywind3000/awesome-cheatsheets/blob/master/editors/vim.txt" target="_blank" rel="noopener">VIM CHEATSHEET (中文速查表)</a></p>]]></content>
    
    <summary type="html">
    
      Vim从小白到入门
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Redis 主从同步配置实践</title>
    <link href="https://wsgzao.github.io/post/redis/"/>
    <id>https://wsgzao.github.io/post/redis/</id>
    <published>2019-09-04T06:59:49.000Z</published>
    <updated>2019-09-04T07:36:42.483Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Redis 是一个高性能的 key-value 数据库，作为一个典型的内存数据库，高速读写性能并支持数据持久化是大多数人选择 Redis 的原因，当然 Redis 也有很多局限，即使现在升级至 6.0 在技术圈仍有很多不同的声音。Redis 监控可以通过 Keepalived 结合简单的脚本实现，也可以基于 Redis Sentinel 监控，如果需要横向扩展使用 Codis 或许是更加成熟稳定的方案。</p><blockquote><p>Redis 主备同步配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 04 日 - 补充 redis.conf 主从模式生产环境配置<br>2018 年 11 月 29 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/redis/">https://wsgzao.github.io/post/redis/</a></p><p><strong> 扩展阅读 </strong></p><p>Redis - <a href="https://redis.io/" target="_blank" rel="noopener">https://redis.io/</a></p><hr><h2 id="Redis-简介"><a href="#Redis-简介" class="headerlink" title="Redis 简介"></a>Redis 简介</h2><p>Redis is often referred as a <em>data structures</em> server. What this means is that Redis provides access to mutable data structures via a set of commands, which are sent using a <em>server-client</em> model with TCP sockets and a simple protocol. So different processes can query and modify the same data structures in a shared way.</p><p>Data structures implemented into Redis have a few special properties:</p><ul><li>Redis cares to store them on disk, even if they are always served and modified into the server memory. This means that Redis is fast, but that is also non-volatile.</li><li>Implementation of data structures stress on memory efficiency, so data structures inside Redis will likely use less memory compared to the same data structure modeled using an high level programming language.</li><li>Redis offers a number of features that are natural to find in a database, like replication, tunable levels of durability, cluster, high availability.</li></ul><p>Another good example is to think of Redis as a more complex version of memcached, where the operations are not just SETs and GETs, but operations to work with complex data types like Lists, Sets, ordered data structures, and so forth.</p><p>If you want to know more, this is a list of selected starting points:</p><ul><li>Introduction to Redis data types. <a href="http://redis.io/topics/data-types-intro" target="_blank" rel="noopener">http://redis.io/topics/data-types-intro</a></li><li>Try Redis directly inside your browser. <a href="http://try.redis.io" target="_blank" rel="noopener">http://try.redis.io</a></li><li>The full list of Redis commands. <a href="http://redis.io/commands" target="_blank" rel="noopener">http://redis.io/commands</a></li><li>There is much more inside the Redis official documentation. <a href="http://redis.io/documentation" target="_blank" rel="noopener">http://redis.io/documentation</a></li></ul><h2 id="Documentation"><a href="#Documentation" class="headerlink" title="Documentation"></a>Documentation</h2><blockquote><p>Latest stable version tar ball</p></blockquote><p><a href="http://download.redis.io/redis-stable.tar.gz" target="_blank" rel="noopener">http://download.redis.io/redis-stable.tar.gz</a></p><p><a href="http://download.redis.io/releases/redis-5.0.2.tar.gz" target="_blank" rel="noopener">http://download.redis.io/releases/redis-5.0.2.tar.gz</a></p><p><a href="http://download.redis.io/releases/redis-3.2.10.tar.gz" target="_blank" rel="noopener">http://download.redis.io/releases/redis-3.2.10.tar.gz</a></p><blockquote><p>Browse source code</p></blockquote><p><a href="http://download.redis.io/redis-stable/" target="_blank" rel="noopener">http://download.redis.io/redis-stable/</a></p><p><a href="http://download.redis.io/redis-stable/README.md" target="_blank" rel="noopener">http://download.redis.io/redis-stable/README.md</a></p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># download</span></span><br><span class="line">wget http://download.redis.io/redis-stable.tar.gz</span><br><span class="line">tar xf redis-stable.tar.gz</span><br><span class="line"><span class="built_in">cd</span> redis-stable</span><br><span class="line"><span class="comment"># check packages</span></span><br><span class="line">yum -y install gcc gcc-c++ tcl</span><br><span class="line"><span class="comment"># check version</span></span><br><span class="line">./src/redis-cli -v</span><br><span class="line">redis-cli 5.0.2</span><br><span class="line"><span class="comment"># start redis server</span></span><br><span class="line">./src/redis-server redis.conf</span><br><span class="line"><span class="comment"># test</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ./redis-stable/src/redis-cli</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> foo bar</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get foo</span><br><span class="line"><span class="string">"bar"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><blockquote><p>不理解的配置参数可以参考官方文档或者下面的中文翻译</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># create directory</span></span><br><span class="line">mkdir -p /data/running/redis-6389</span><br><span class="line">mkdir -p /var/<span class="built_in">log</span>/redis/</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy custom scripts</span></span><br><span class="line">-rwxr-xr-x 1 root root    266 Nov 28 19:11 change_redis.py</span><br><span class="line">-rwxr-xr-x 1 root root    323 Nov 28 19:11 check_redis.sh</span><br><span class="line">-rwxr-xr-x 1 root root     20 Nov 28 19:11 connect_redis.sh</span><br><span class="line">-rw-r--r-- 1 root root     74 Nov 28 19:11 keep_alived_state</span><br><span class="line">-rwxr-xr-x 1 root root    829 Nov 28 19:11 keepalived.state.sh</span><br><span class="line">-rwxr-xr-x 1 root root 173376 Nov 28 19:11 redis-cli</span><br><span class="line">-rw-r----- 1 root root  46666 Nov 28 19:11 redis.conf</span><br><span class="line">-rwxr-xr-x 1 root root 979464 Nov 28 19:11 redis-server</span><br><span class="line">-rwxr-xr-x 1 root root     74 Nov 28 19:11 start_redis.sh</span><br><span class="line">-rwxr-xr-x 1 root root     38 Nov 28 19:11 stop_redis.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># set custom values</span></span><br><span class="line">[root@sg-gop-10-71-12-78 redis-6389]<span class="comment"># grep -Ev "^$|#" redis.conf</span></span><br><span class="line">protected-mode no</span><br><span class="line">port 6389</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize yes</span><br><span class="line">supervised no</span><br><span class="line">pidfile /var/run/redis_6389.pid</span><br><span class="line">loglevel notice</span><br><span class="line">logfile /var/<span class="built_in">log</span>/redis/redis-6389.log</span><br><span class="line">databases 16</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">dir /data/running/redis-6389</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line">slave-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">slave-priority 100</span><br><span class="line">maxclients 50000</span><br><span class="line">maxmemory 400gb</span><br><span class="line">maxmemory-policy allkeys-lru</span><br><span class="line">appendonly yes</span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 0 0 0</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># set slave</span></span><br><span class="line">telnet 127.0.0.1 6389</span><br><span class="line">slaveof 10.71.12.70 6389</span><br><span class="line"><span class="comment"># cancel slave</span></span><br><span class="line">slaveof no one</span><br><span class="line">info</span><br><span class="line"><span class="comment"># Replication</span></span><br><span class="line">role:master</span><br><span class="line">connected_slaves:1</span><br><span class="line">slave0:ip=10.71.12.71,port=6389,state=online,offset=2283,lag=1</span><br><span class="line">master_repl_offset:2283</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:2</span><br><span class="line">repl_backlog_histlen:2282</span><br><span class="line"><span class="comment"># Replication</span></span><br><span class="line">role:slave</span><br><span class="line">master_host:10.71.12.70</span><br><span class="line">master_port:6389</span><br><span class="line">master_link_status:up</span><br><span class="line">master_last_io_seconds_ago:5</span><br><span class="line">master_sync_in_progress:0</span><br><span class="line">slave_repl_offset:2059</span><br><span class="line">slave_priority:100</span><br><span class="line">slave_read_only:1</span><br><span class="line">connected_slaves:0</span><br><span class="line">master_repl_offset:0</span><br><span class="line">repl_backlog_active:0</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:0</span><br><span class="line">repl_backlog_histlen:0</span><br></pre></td></tr></table></figure><h2 id="redis-conf-配置英文原版"><a href="#redis-conf-配置英文原版" class="headerlink" title="redis.conf 配置英文原版"></a>redis.conf 配置英文原版</h2><blockquote><p>最简单的模式只需要修改 daemonize yes，然后备机使用 slaveof 命令设置即可</p></blockquote><p><a href="http://download.redis.io/redis-stable/redis.conf" target="_blank" rel="noopener">http://download.redis.io/redis-stable/redis.conf</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Redis 默认配置</span></span><br><span class="line">[root@localhost redis-stable]<span class="comment"># grep -Ev "^$|#" redis.conf</span></span><br><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line">protected-mode yes</span><br><span class="line">port 6379</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize no</span><br><span class="line">supervised no</span><br><span class="line">pidfile /var/run/redis_6379.pid</span><br><span class="line">loglevel notice</span><br><span class="line">logfile <span class="string">""</span></span><br><span class="line">databases 16</span><br><span class="line">always-show-logo yes</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">dir ./</span><br><span class="line">replica-serve-stale-data yes</span><br><span class="line">replica-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">replica-priority 100</span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">replica-lazy-flush no</span><br><span class="line">appendonly no</span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">aof-use-rdb-preamble yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">stream-node-max-bytes 4096</span><br><span class="line">stream-node-max-entries 100</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit replica 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">dynamic-hz yes</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line">rdb-save-incremental-fsync yes</span><br></pre></td></tr></table></figure><h2 id="redis-conf-配置中文翻译"><a href="#redis-conf-配置中文翻译" class="headerlink" title="redis.conf 配置中文翻译"></a>redis.conf 配置中文翻译</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#redis.conf</span></span><br><span class="line"><span class="comment"># Redis configuration file example.</span></span><br><span class="line"><span class="comment"># ./redis-server /path/to/redis.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################## INCLUDES ###################################</span></span><br><span class="line"><span class="comment"># 这在你有标准配置模板但是每个 redis 服务器又需要个性设置的时候很有用。</span></span><br><span class="line">include /path/to/local.conf</span><br><span class="line">include /path/to/other.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ GENERAL #####################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否在后台执行，yes：后台运行；no：不是后台运行（老版本默认）</span></span><br><span class="line">daemonize yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.2 里的参数，是否开启保护模式，默认开启。要是配置里没有指定 bind 和密码。开启该参数后，redis 只会本地进行访问，拒绝外部访问。要是开启了密码   和 bind，可以开启。否   则最好关闭，设置为 no。</span></span><br><span class="line">protected-mode yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#redis 的进程文件 </span></span><br><span class="line">pidfile /var/run/redis/redis-server.pid</span><br><span class="line"></span><br><span class="line"><span class="comment">#redis 监听的端口号。</span></span><br><span class="line">port 6379</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此参数确定了 TCP 连接中已完成队列(完成三次握手之后) 的长度， 当然此值必须不大于 Linux 系统定义的 / proc/sys/net/core/somaxconn 值，默认是 511，而 Linux 的默认参数值是 128。当系统并发量大并且客户端速度缓慢的时候，可以将这二个参数一起参考设定。该内核参数默认值一般是 128，对于负载很大的服务程序来说大大的不够。一般会将它修改为 2048 或者更大。在 / etc/sysctl.conf 中添加: net.core.somaxconn = 2048，然后在终端中执行 sysctl -p。</span></span><br><span class="line">tcp-backlog 511</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定 redis 只接收来自于该 IP 地址的请求，如果不进行设置，那么将处理所有请求 </span></span><br><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 unix socket 来让 redis 支持监听本地连接。</span></span><br><span class="line"><span class="comment"># unixsocket /var/run/redis/redis.sock</span></span><br><span class="line"><span class="comment"># 配置 unix socket 使用文件的权限</span></span><br><span class="line"><span class="comment"># unixsocketperm 700</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 此参数为设置客户端空闲超过 timeout，服务端会断开连接，为 0 则服务端不会主动断开连接，不能小于 0。</span></span><br><span class="line">timeout 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#tcp keepalive 参数。如果设置不为 0，就使用配置 tcp 的 SO_KEEPALIVE 值，使用 keepalive 有两个好处: 检测挂掉的对端。降低中间设备出问题而导致网络看似连接却已经与对端端口的问题。在 Linux 内核中，设置了 keepalive，redis 会定时给对端发送 ack。检测到对端关闭需要两倍的设置值。</span></span><br><span class="line">tcp-keepalive 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定了服务端日志的级别。级别包括：debug（很多信息，方便开发、测试），verbose（许多有用的信息，但是没有 debug 级别信息多），notice（适当的日志级别，适合生产环境），warn（只有非常重要的信息）</span></span><br><span class="line">loglevel notice</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定了记录日志的文件。空字符串的话，日志会打印到标准输出设备。后台运行的 redis 标准输出是 / dev/null。</span></span><br><span class="line">logfile /var/<span class="built_in">log</span>/redis/redis-server.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否打开记录 syslog 功能</span></span><br><span class="line"><span class="comment"># syslog-enabled no</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#syslog 的标识符。</span></span><br><span class="line"><span class="comment"># syslog-ident redis</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志的来源、设备</span></span><br><span class="line"><span class="comment"># syslog-facility local0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库的数量，默认使用的数据库是 DB 0。可以通过”SELECT “命令选择一个 db</span></span><br><span class="line">databases 16</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ SNAPSHOTTING ################################</span></span><br><span class="line"><span class="comment"># 快照配置</span></span><br><span class="line"><span class="comment"># 注释掉“save” 这一行配置项就可以让保存数据库功能失效 </span></span><br><span class="line"><span class="comment"># 设置 sedis 进行数据库镜像的频率。</span></span><br><span class="line"><span class="comment"># 900 秒（15 分钟）内至少 1 个 key 值改变（则进行数据库保存 -- 持久化） </span></span><br><span class="line"><span class="comment"># 300 秒（5 分钟）内至少 10 个 key 值改变（则进行数据库保存 -- 持久化） </span></span><br><span class="line"><span class="comment"># 60 秒（1 分钟）内至少 10000 个 key 值改变（则进行数据库保存 -- 持久化）</span></span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当 RDB 持久化出现错误后，是否依然进行继续进行工作，yes：不能进行工作，no：可以继续进行工作，可以通过 info 中的 rdb_last_bgsave_status 了解 RDB 持久化是否有错误</span></span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用压缩 rdb 文件，rdb 文件压缩使用 LZF 压缩算法，yes：压缩，但是需要一些 cpu 的消耗。no：不压缩，需要更多的磁盘空间</span></span><br><span class="line">rdbcompression yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否校验 rdb 文件。从 rdb 格式的第五个版本开始，在 rdb 文件的末尾会带上 CRC64 的校验和。这跟有利于文件的容错性，但是在保存 rdb 文件的时候，会有大概 10% 的性能损耗，所以如果你追求高性能，可以关闭该配置。</span></span><br><span class="line">rdbchecksum yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#rdb 文件的名称</span></span><br><span class="line">dbfilename dump.rdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据目录，数据库的写入会在这个目录。rdb、aof 文件也会写在这个目录</span></span><br><span class="line">dir /var/lib/redis</span><br><span class="line"></span><br><span class="line"><span class="comment">################################# REPLICATION #################################</span></span><br><span class="line"><span class="comment"># 复制选项，slave 复制对应的 master。</span></span><br><span class="line"><span class="comment"># slaveof &lt;masterip&gt; &lt;masterport&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果 master 设置了 requirepass，那么 slave 要连上 master，需要有 master 的密码才行。masterauth 就是用来配置 master 的密码，这样可以在连上 master 后进行认证。</span></span><br><span class="line"><span class="comment"># masterauth &lt;master-password&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当从库同主机失去连接或者复制正在进行，从机库有两种运行方式：1) 如果 slave-serve-stale-data 设置为 yes(默认设置)，从库会继续响应客户端的请求。2) 如果 slave-serve-stale-data 设置为 no，除去 INFO 和 SLAVOF 命令之外的任何请求都会返回一个错误”SYNC with master in progress”。</span></span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 作为从服务器，默认情况下是只读的（yes），可以修改成 NO，用于写（不建议）。</span></span><br><span class="line">slave-read-only yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否使用 socket 方式复制数据。目前 redis 复制提供两种方式，disk 和 socket。如果新的 slave 连上来或者重连的 slave 无法部分同步，就会执行全量同步，master 会生成 rdb 文件。有 2 种方式：disk 方式是 master 创建一个新的进程把 rdb 文件保存到磁盘，再把磁盘上的 rdb 文件传递给 slave。socket 是 master 创建一个新的进程，直接把 rdb 文件以 socket 的方式发给 slave。disk 方式的时候，当一个 rdb 保存的过程中，多个 slave 都能共享这个 rdb 文件。socket 的方式就的一个个 slave 顺序复制。在磁盘速度缓慢，网速快的情况下推荐用 socket 方式。</span></span><br><span class="line">repl-diskless-sync no</span><br><span class="line"></span><br><span class="line"><span class="comment">#diskless 复制的延迟时间，防止设置为 0。一旦复制开始，节点不会再接收新 slave 的复制请求直到下一个 rdb 传输。所以最好等待一段时间，等更多的 slave 连上来。</span></span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line"></span><br><span class="line"><span class="comment">#slave 根据指定的时间间隔向服务器发送 ping 请求。时间间隔可以通过 repl_ping_slave_period 来设置，默认 10 秒。</span></span><br><span class="line"><span class="comment"># repl-ping-slave-period 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制连接超时时间。master 和 slave 都有超时时间的设置。master 检测到 slave 上次发送的时间超过 repl-timeout，即认为 slave 离线，清除该 slave 信息。slave 检测到上次和 master 交互的时间超过 repl-timeout，则认为 master 离线。需要注意的是 repl-timeout 需要设置一个比 repl-ping-slave-period 更大的值，不然会经常检测到超时。</span></span><br><span class="line"><span class="comment"># repl-timeout 60</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否禁止复制 tcp 链接的 tcp nodelay 参数，可传递 yes 或者 no。默认是 no，即使用 tcp nodelay。如果 master 设置了 yes 来禁止 tcp nodelay 设置，在把数据复制给 slave 的时候，会减少包的数量和更小的网络带宽。但是这也可能带来数据的延迟。默认我们推荐更小的延迟，但是在数据量传输很大的场景下，建议选择 yes。</span></span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制缓冲区大小，这是一个环形复制缓冲区，用来保存最新复制的命令。这样在 slave 离线的时候，不需要完全复制 master 的数据，如果可以执行部分同步，只需要把缓冲区的部分数据复制给 slave，就能恢复正常复制状态。缓冲区的大小越大，slave 离线的时间可以更长，复制缓冲区只有在有 slave 连接的时候才分配内存。没有 slave 的一段时间，内存会被释放出来，默认 1m。</span></span><br><span class="line"><span class="comment"># repl-backlog-size 5mb</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#master 没有 slave 一段时间会释放复制缓冲区的内存，repl-backlog-ttl 用来设置该时间长度。单位为秒。</span></span><br><span class="line"><span class="comment"># repl-backlog-ttl 3600</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当 master 不可用，Sentinel 会根据 slave 的优先级选举一个 master。最低的优先级的 slave，当选 master。而配置成 0，永远不会被选举。</span></span><br><span class="line">slave-priority 100</span><br><span class="line"></span><br><span class="line"><span class="comment">#redis 提供了可以让 master 停止写入的方式，如果配置了 min-slaves-to-write，健康的 slave 的个数小于 N，mater 就禁止写入。master 最少得有多少个健康的 slave 存活才能执行写命令。这个配置虽然不能保证 N 个 slave 都一定能接收到 master 的写操作，但是能避免没有足够健康的 slave 的时候，master 不能写入来避免数据丢失。设置为 0 是关闭该功能。</span></span><br><span class="line"><span class="comment"># min-slaves-to-write 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 延迟小于 min-slaves-max-lag 秒的 slave 才认为是健康的 slave。</span></span><br><span class="line"><span class="comment"># min-slaves-max-lag 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 1 或另一个设置为 0 禁用这个特性。</span></span><br><span class="line"><span class="comment"># Setting one or the other to 0 disables the feature.</span></span><br><span class="line"><span class="comment"># By default min-slaves-to-write is set to 0 (feature disabled) and</span></span><br><span class="line"><span class="comment"># min-slaves-max-lag is set to 10.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################## SECURITY ###################################</span></span><br><span class="line"><span class="comment">#requirepass 配置可以让用户使用 AUTH 命令来认证密码，才能使用其他命令。这让 redis 可以使用在不受信任的网络中。为了保持向后的兼容性，可以注释该命令，因为大部分用户也不需要认证。使用 requirepass 的时候需要注意，因为 redis 太快了，每秒可以认证 15w 次密码，简单的密码很容易被攻破，所以最好使用一个更复杂的密码。</span></span><br><span class="line"><span class="comment"># requirepass foobared</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把危险的命令给修改成其他名称。比如 CONFIG 命令可以重命名为一个很难被猜到的命令，这样用户不能使用，而内部工具还能接着使用。</span></span><br><span class="line"><span class="comment"># rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置成一个空的值，可以禁止一个命令</span></span><br><span class="line"><span class="comment"># rename-command CONFIG ""</span></span><br><span class="line"><span class="comment">################################### LIMITS ####################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置能连上 redis 的最大客户端连接数量。默认是 10000 个客户端连接。由于 redis 不区分连接是客户端连接还是内部打开文件或者和 slave 连接等，所以 maxclients 最小建议设置到 32。如果超过了 maxclients，redis 会给新的连接发送’max number of clients reached’，并关闭连接。</span></span><br><span class="line"><span class="comment"># maxclients 10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#redis 配置的最大内存容量。当内存满了，需要配合 maxmemory-policy 策略进行处理。注意 slave 的输出缓冲区是不计算在 maxmemory 内的。所以为了防止主机内存使用完，建议设置的 maxmemory 需要更小一些。</span></span><br><span class="line"><span class="comment"># maxmemory &lt;bytes&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内存容量超过 maxmemory 后的处理策略。</span></span><br><span class="line"><span class="comment">#volatile-lru：利用 LRU 算法移除设置过过期时间的 key。</span></span><br><span class="line"><span class="comment">#volatile-random：随机移除设置过过期时间的 key。</span></span><br><span class="line"><span class="comment">#volatile-ttl：移除即将过期的 key，根据最近过期时间来删除（辅以 TTL）</span></span><br><span class="line"><span class="comment">#allkeys-lru：利用 LRU 算法移除任何 key。</span></span><br><span class="line"><span class="comment">#allkeys-random：随机移除任何 key。</span></span><br><span class="line"><span class="comment">#noeviction：不移除任何 key，只是返回一个写错误。</span></span><br><span class="line"><span class="comment"># 上面的这些驱逐策略，如果 redis 没有合适的 key 驱逐，对于写命令，还是会返回错误。redis 将不再接收写请求，只接收 get 请求。写命令包括：set setnx setex append incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby getset mset msetnx exec sort。</span></span><br><span class="line"><span class="comment"># maxmemory-policy noeviction</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#lru 检测的样本数。使用 lru 或者 ttl 淘汰算法，从需要淘汰的列表中随机选择 sample 个 key，选出闲置时间最长的 key 移除。</span></span><br><span class="line"><span class="comment"># maxmemory-samples 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################## APPEND ONLY MODE ###############################</span></span><br><span class="line"><span class="comment"># 默认 redis 使用的是 rdb 方式持久化，这种方式在许多应用中已经足够用了。但是 redis 如果中途宕机，会导致可能有几分钟的数据丢失，根据 save 来策略进行持久化，Append Only File 是另一种持久化方式，可以提供更好的持久化特性。Redis 会把每次写入的数据在接收后都写入 appendonly.aof 文件，每次启动时 Redis 都会先把这个文件的数据读入内存里，先忽略 RDB 文件。</span></span><br><span class="line">appendonly no</span><br><span class="line"></span><br><span class="line"><span class="comment">#aof 文件名</span></span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#aof 持久化策略的配置</span></span><br><span class="line"><span class="comment">#no 表示不执行 fsync，由操作系统保证数据同步到磁盘，速度最快。</span></span><br><span class="line"><span class="comment">#always 表示每次写入都执行 fsync，以保证数据同步到磁盘。</span></span><br><span class="line"><span class="comment">#everysec 表示每秒执行一次 fsync，可能会导致丢失这 1s 数据。</span></span><br><span class="line">appendfsync everysec</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 aof 重写或者写入 rdb 文件的时候，会执行大量 IO，此时对于 everysec 和 always 的 aof 模式来说，执行 fsync 会造成阻塞过长时间，no-appendfsync-on-rewrite 字段设置为默认设置为 no。如果对延迟要求很高的应用，这个字段可以设置为 yes，否则还是设置为 no，这样对持久化特性来说这是更安全的选择。设置为 yes 表示 rewrite 期间对新写操作不 fsync, 暂时存在内存中, 等 rewrite 完成后再写入，默认为 no，建议 yes。Linux 的默认 fsync 策略是 30 秒。可能丢失 30 秒数据。</span></span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line"></span><br><span class="line"><span class="comment">#aof 自动重写配置。当目前 aof 文件大小超过上一次重写的 aof 文件大小的百分之多少进行重写，即当 aof 文件增长到一定大小的时候 Redis 能够调用 bgrewriteaof 对日志文件进行重写。当前 AOF 文件大小是上次日志重写得到 AOF 文件大小的二倍（设置为 100）时，自动启动新的日志重写过程。</span></span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line"><span class="comment"># 设置允许重写的最小 aof 文件大小，避免了达到约定百分比但尺寸仍然很小的情况还要重写</span></span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line"></span><br><span class="line"><span class="comment">#aof 文件可能在尾部是不完整的，当 redis 启动的时候，aof 文件的数据被载入内存。重启可能发生在 redis 所在的主机操作系统宕机后，尤其在 ext4 文件系统没有加上 data=ordered 选项（redis 宕机或者异常终止不会造成尾部不完整现象。）出现这种现象，可以选择让 redis 退出，或者导入尽可能多的数据。如果选择的是 yes，当截断的 aof 文件被导入的时候，会自动发布一个 log 给客户端然后 load。如果是 no，用户必须手动 redis-check-aof 修复 AOF 文件才可以。</span></span><br><span class="line">aof-load-truncated yes</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ LUA SCRIPTING ###############################</span></span><br><span class="line"><span class="comment"># 如果达到最大时间限制（毫秒），redis 会记个 log，然后返回 error。当一个脚本超过了最大时限。只有 SCRIPT KILL 和 SHUTDOWN NOSAVE 可以用。第一个可以杀没有调 write 命令的东西。要是已经调用了 write，只能用第二个命令杀。</span></span><br><span class="line">lua-time-limit 5000</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ REDIS CLUSTER ###############################</span></span><br><span class="line"><span class="comment"># 集群开关，默认是不开启集群模式。</span></span><br><span class="line"><span class="comment"># cluster-enabled yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群配置文件的名称，每个节点都有一个集群相关的配置文件，持久化保存集群的信息。这个文件并不需要手动配置，这个配置文件有 Redis 生成并更新，每个 Redis 集群节点需要一个单独的配置文件，请确保与实例运行的系统中配置文件名称不冲突</span></span><br><span class="line"><span class="comment"># cluster-config-file nodes-6379.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点互连超时的阀值。集群节点超时毫秒数</span></span><br><span class="line"><span class="comment"># cluster-node-timeout 15000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在进行故障转移的时候，全部 slave 都会请求申请为 master，但是有些 slave 可能与 master 断开连接一段时间了，导致数据过于陈旧，这样的 slave 不应该被提升为 master。该参数就是用来判断 slave 节点与 master 断线的时间是否过长。判断方法是：</span></span><br><span class="line"><span class="comment"># 比较 slave 断开连接的时间和(node-timeout * slave-validity-factor) + repl-ping-slave-period</span></span><br><span class="line"><span class="comment"># 如果节点超时时间为三十秒, 并且 slave-validity-factor 为 10, 假设默认的 repl-ping-slave-period 是 10 秒，即如果超过 310 秒 slave 将不会尝试进行故障转移 </span></span><br><span class="line"><span class="comment"># cluster-slave-validity-factor 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#master 的 slave 数量大于该值，slave 才能迁移到其他孤立 master 上，如这个参数若被设为 2，那么只有当一个主节点拥有 2 个可工作的从节点时，它的一个从节点会尝试迁移。</span></span><br><span class="line"><span class="comment"># cluster-migration-barrier 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认情况下，集群全部的 slot 有节点负责，集群状态才为 ok，才能提供服务。设置为 no，可以在 slot 没有全部分配的时候提供服务。不建议打开该配置，这样会造成分区的时候，小分区的 master 一直在接受写请求，而造成很长时间数据不一致。</span></span><br><span class="line"><span class="comment"># cluster-require-full-coverage yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################## SLOW LOG ###################################</span></span><br><span class="line"><span class="comment">###slog log 是用来记录 redis 运行中执行比较慢的命令耗时。当命令的执行超过了指定时间，就记录在 slow log 中，slog log 保存在内存中，所以没有 IO 操作。</span></span><br><span class="line"><span class="comment"># 执行时间比 slowlog-log-slower-than 大的请求记录到 slowlog 里面，单位是微秒，所以 1000000 就是 1 秒。注意，负数时间会禁用慢查询日志，而 0 则会强制记录所有命令。</span></span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 慢查询日志长度。当一个新的命令被写进日志的时候，最老的那个记录会被删掉。这个长度没有限制。只要有足够的内存就行。你可以通过 SLOWLOG RESET 来释放内存。</span></span><br><span class="line">slowlog-max-len 128</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ LATENCY MONITOR ##############################</span></span><br><span class="line"><span class="comment"># 延迟监控功能是用来监控 redis 中执行比较缓慢的一些操作，用 LATENCY 打印 redis 实例在跑命令时的耗时图表。只记录大于等于下边设置的值的操作。0 的话，就是关闭监视。默认延迟监控功能是关闭的，如果你需要打开，也可以通过 CONFIG SET 命令动态设置。</span></span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line"></span><br><span class="line"><span class="comment">############################# EVENT NOTIFICATION ##############################</span></span><br><span class="line"><span class="comment"># 键空间通知使得客户端可以通过订阅频道或模式，来接收那些以某种方式改动了 Redis 数据集的事件。因为开启键空间通知功能需要消耗一些 CPU ，所以在默认配置下，该功能处于关闭状态。</span></span><br><span class="line"><span class="comment">#notify-keyspace-events 的参数可以是以下字符的任意组合，它指定了服务器该发送哪些类型的通知：</span></span><br><span class="line"><span class="comment">##K 键空间通知，所有通知以 __keyspace@__ 为前缀</span></span><br><span class="line"><span class="comment">##E 键事件通知，所有通知以 __keyevent@__ 为前缀</span></span><br><span class="line"><span class="comment">##g DEL 、 EXPIRE 、 RENAME 等类型无关的通用命令的通知</span></span><br><span class="line"><span class="comment">##$ 字符串命令的通知</span></span><br><span class="line"><span class="comment">##l 列表命令的通知</span></span><br><span class="line"><span class="comment">##s 集合命令的通知</span></span><br><span class="line"><span class="comment">##h 哈希命令的通知</span></span><br><span class="line"><span class="comment">##z 有序集合命令的通知</span></span><br><span class="line"><span class="comment">##x 过期事件：每当有过期键被删除时发送</span></span><br><span class="line"><span class="comment">##e 驱逐(evict) 事件：每当有键因为 maxmemory 政策而被删除时发送</span></span><br><span class="line"><span class="comment">##A 参数 g$lshzxe 的别名</span></span><br><span class="line"><span class="comment"># 输入的参数中至少要有一个 K 或者 E，否则的话，不管其余的参数是什么，都不会有任何 通知被分发。详细使用可以参考 http://redis.io/topics/notifications</span></span><br><span class="line"></span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################### ADVANCED CONFIG ###############################</span></span><br><span class="line"><span class="comment"># 数据量小于等于 hash-max-ziplist-entries 的用 ziplist，大于 hash-max-ziplist-entries 用 hash</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="comment">#value 大小小于等于 hash-max-ziplist-value 的用 ziplist，大于 hash-max-ziplist-value 用 hash。</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据量小于等于 list-max-ziplist-entries 用 ziplist，大于 list-max-ziplist-entries 用 list。</span></span><br><span class="line">list-max-ziplist-entries 512</span><br><span class="line"><span class="comment">#value 大小小于等于 list-max-ziplist-value 的用 ziplist，大于 list-max-ziplist-value 用 list。</span></span><br><span class="line">list-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据量小于等于 set-max-intset-entries 用 iniset，大于 set-max-intset-entries 用 set。</span></span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据量小于等于 zset-max-ziplist-entries 用 ziplist，大于 zset-max-ziplist-entries 用 zset。</span></span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line"><span class="comment">#value 大小小于等于 zset-max-ziplist-value 用 ziplist，大于 zset-max-ziplist-value 用 zset。</span></span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"><span class="comment">#value 大小小于等于 hll-sparse-max-bytes 使用稀疏数据结构（sparse），大于 hll-sparse-max-bytes 使用稠密的数据结构（dense）。一个比 16000 大的 value 是几乎没用的，建议的 value 大概为 3000。如果对 CPU 要求不高，对空间要求较高的，建议设置到 10000 左右。</span></span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line"></span><br><span class="line"><span class="comment">#Redis 将在每 100 毫秒时使用 1 毫秒的 CPU 时间来对 redis 的 hash 表进行重新 hash，可以降低内存的使用。当你的使用场景中，有非常严格的实时性需要，不能够接受 Redis 时不时的对请求有 2 毫秒的延迟的话，把这项配置为 no。如果没有这么严格的实时性要求，可以设置为 yes，以便能够尽可能快的释放内存。</span></span><br><span class="line">activerehashing yes</span><br><span class="line"></span><br><span class="line"><span class="comment">## 对客户端输出缓冲进行限制可以强迫那些不从服务器读取数据的客户端断开连接，用来强制关闭传输缓慢的客户端。</span></span><br><span class="line"><span class="comment"># 对于 normal client，第一个 0 表示取消 hard limit，第二个 0 和第三个 0 表示取消 soft limit，normal client 默认取消限制，因为如果没有寻问，他们是不会接收数据的。</span></span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line"><span class="comment"># 对于 slave client 和 MONITER client，如果 client-output-buffer 一旦超过 256mb，又或者超过 64mb 持续 60 秒，那么服务器就会立即断开客户端连接。</span></span><br><span class="line">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class="line"><span class="comment"># 对于 pubsub client，如果 client-output-buffer 一旦超过 32mb，又或者超过 8mb 持续 60 秒，那么服务器就会立即断开客户端连接。</span></span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line"></span><br><span class="line"><span class="comment">#redis 执行任务的频率为 1s 除以 hz。</span></span><br><span class="line">hz 10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 aof 重写的时候，如果打开了 aof-rewrite-incremental-fsync 开关，系统会每 32MB 执行一次 fsync。这对于把文件写入磁盘是有帮助的，可以避免过大的延迟峰值。</span></span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br></pre></td></tr></table></figure><h2 id="生产环境配置"><a href="#生产环境配置" class="headerlink" title="生产环境配置"></a>生产环境配置</h2><p>To configure a master-slave redis with optimum performance, here are some suggestions:</p><ul><li>Kernel Configure:<ul><li>Make sure to set the Linux kernel overcommit memory setting to 1. Add <code>vm.overcommit_memory = 1</code> to <code>/etc/sysctl.conf</code> and then reboot or run the command <code>sysctl vm.overcommit_memory=1</code> for this to take effect immediately.This make redis to consider server always have enough memory to fork.</li><li>Make sure to disable Linux kernel feature <em>transparent huge pages</em>, it will affect greatly both memory usage and latency in a negative way. This is accomplished with the following command: <code>echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</code>. It will change memory page size from 4kb to 2M, increase memory usage on copy-on-write. <a href="https://docs.mongodb.com/manual/tutorial/transparent-huge-pages/#red-hat-centos-7" target="_blank" rel="noopener">https://docs.mongodb.com/manual/tutorial/transparent-huge-pages/#red-hat-centos-7</a></li></ul></li><li><p>Common redis:</p><ul><li><strong>maxclients 50000</strong></li><li><strong>tcp-keepalive 300</strong>, enabled to check tcp dead connections</li><li><strong>daemonize yes</strong>, not using systemd to manage</li><li><strong>maxmemory=70%</strong> of physical memory, leave enough safe space for forking to do background save or full replication. Since remain memory can be used for accumulate changes(which cause copy-on-write) during background save or AOF rewrite.</li><li><strong>stop-writes-on-bgsave-error no</strong>, to allow client write even on failure of rdb background save, increase robustness of redis master.</li><li><strong>repl-backlog-size 1gb</strong>. should be determined by the write LOAD of clients, the default is 1mb, we can raise it to 1gb.</li><li><strong>repl-backlog-ttl 0</strong>,never release backlog buffer</li><li><strong>client-output-buffer-limit slave <maxmemory> 0 0</maxmemory></strong>, disable soft limit, set hardlimit same as maxmemory size, if set this to unlimited, and slave is blocking, will used up all memory and force master to evict all keys.</li><li><strong>maxmemory-policy volatile-lru</strong>, only volatile keys will be evicted.</li><li><strong>appendfsync everysec</strong>，if both master and slave crash due to power shortage, we can ensure only lost 1 second data in slave.</li><li><strong>no-appendfsync-on-rewrite yes</strong>, make sure slave would be not blocking by rewrite process if try to write AOF log, so slave can follow master closely, we prefer availability to durability.</li><li><strong>aof-load-truncated yes</strong>, let redis fix truncated error by itself.</li><li>The repl_backlog is only allocated once there is at least a replica connected.</li><li>If slave disconnected from master and write changes exceed repl-backlog-size. The master will do a background save, which will block all clients when forking which utilize copy-on-write to allocated memory if changed during dump, it may not double the memory usage if memory page size is small and load not too high.</li><li>No need to enable repl-diskless-sync , it also requires fork, but only will write to socket instead of disk.</li><li><p>can change python logic code to use hash type for kv type, such as redis tokens, it can reduce memory profoundly</p><ul><li><p>hash-max-ziplist-value 64</p></li><li><p>hash-max-ziplist-entries 512</p></li></ul></li></ul></li><li><p>Redis master</p><ul><li><strong>save “”</strong></li><li><strong>appendonly no</strong></li><li>disable RDB and AOF, since process forking  caused by RDB and AOF will block all commands. INFO command to check fork time for each gigabytes: latest_fork_usec:<strong>2568287us</strong> / used_memory_human: <strong>76.02G</strong> =<strong>33.784ms</strong>, for each gigabyte, it may take 33ms to fork</li></ul></li><li><p>Redis slave:</p><ul><li><p>enable RDB dump.</p><ul><li><strong>save 900 1</strong><br><strong>save 300 10</strong><br><strong>save 60 10000</strong></li></ul></li><li><p>enable AOF：</p><ul><li><strong>appendonly yes</strong></li></ul></li><li>be cautious if master is empty, the slaveof can wipe out all slave keys.</li></ul></li><li>Fail-over<ul><li>config set <strong>save “”</strong> -- disable RDB in master</li><li>config set <strong>appendonly no</strong> -- disable AOF in master</li><li>take note on latest_fork_usec:5934556, this means redis master will be blocked for 5.9 seconds, and if keepalived healthy check mistakenly consider this as downtime, its VIP will failover to slave which cause the current syncing slave become master, in this case, do not empty slave when trying to sync with master which may cause empty ‘<em>master</em>‘ at the moment.</li><li>When slave try to sync with master, remember to set keepalived fail count to be much bigger number, to prevent keepalived falsely to do unwanted failover.</li><li>If AOF enabled, redis will ignore dump.rdb file during initial loading.</li><li>On instance, where only one redis, can use service keepalived restart to failover, but if with two or more instance, it has to stop_redis.sh to let keepalived failover to another instance</li><li><strong>Never stop_redis.sh on master, it may lost all data if appendonly.aof is empty, and cause long init loading time if data set is bigger!</strong></li></ul></li></ul><h3 id="redis-conf-线上配置"><a href="#redis-conf-线上配置" class="headerlink" title="redis.conf 线上配置"></a>redis.conf 线上配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-71-12-77 redis-6389]<span class="comment"># grep -Ev '^$|#' redis.conf</span></span><br><span class="line">protected-mode no</span><br><span class="line">port 6389</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize yes</span><br><span class="line">supervised no</span><br><span class="line">pidfile /var/run/redis_6389.pid</span><br><span class="line">loglevel notice</span><br><span class="line">logfile /var/<span class="built_in">log</span>/redis/redis-6389.log</span><br><span class="line">databases 16</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error no</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">dir /data/running/redis-6389</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line">slave-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">repl-backlog-size 1gb</span><br><span class="line">repl-backlog-ttl 0</span><br><span class="line">slave-priority 100</span><br><span class="line">maxclients 50000</span><br><span class="line">maxmemory 700gb</span><br><span class="line">maxmemory-policy volatile-lru</span><br><span class="line">appendonly no</span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite yes</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 700gb 0 0</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br></pre></td></tr></table></figure><h2 id="自定义脚本"><a href="#自定义脚本" class="headerlink" title="自定义脚本"></a>自定义脚本</h2><blockquote><p>使用 keepalived 做最基本的高可用</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-71-12-78 redis-6389]<span class="comment"># cat start_redis.sh</span></span><br><span class="line">/data/running/redis-6389/redis-server /data/running/redis-6389/redis.conf</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-12-78 redis-6389]<span class="comment"># cat connect_redis.sh</span></span><br><span class="line">./redis-cli -p 6389</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-12-78 redis-6389]<span class="comment"># cat stop_redis.sh</span></span><br><span class="line"><span class="built_in">kill</span> -9 `cat /var/run/redis_6389.pid`</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-12-78 redis-6389]<span class="comment"># cat check_redis.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Check if redis is running, return 1 if not.</span></span><br><span class="line"><span class="comment"># Used by keepalived to initiate a failover in case redis is down</span></span><br><span class="line"></span><br><span class="line">REDIS_STATUS=$(telnet 127.0.0.1 6389 &lt; /dev/null | grep <span class="string">"Connected"</span> )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$REDIS_STATUS</span>"</span> != <span class="string">""</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  logger <span class="string">"REDIS is NOT running. Setting keepalived state to FAULT."</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-12-78 redis-6389]<span class="comment"># cat change_redis.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line">import redis</span><br><span class="line">import re</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"><span class="comment">#main</span></span><br><span class="line">status=sys.argv[1]</span><br><span class="line">r = redis.StrictRedis(host=<span class="string">'localhost'</span>, port=6389, db=0)</span><br><span class="line"><span class="built_in">print</span> r.info().get(<span class="string">"role"</span>)</span><br><span class="line"><span class="keyword">if</span> status == <span class="string">'master'</span>:</span><br><span class="line">        r.slaveof()</span><br><span class="line">        r.config_set(<span class="string">"save"</span>, <span class="string">""</span>)</span><br><span class="line"><span class="built_in">print</span> r.info().get(<span class="string">"role"</span>)</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-12-78 redis-6389]<span class="comment"># cat keepalived.state.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">TYPE=<span class="variable">$1</span> <span class="comment">#GROUP or INSTANCE</span></span><br><span class="line">NAME=<span class="variable">$2</span> <span class="comment">#name of group or instance</span></span><br><span class="line">STATE=<span class="variable">$3</span> <span class="comment">#MASTER, BACKUP FAULT</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$STATE</span> <span class="keyword">in</span></span><br><span class="line">        <span class="string">"MASTER"</span>) <span class="built_in">echo</span> $(date)<span class="string">':'</span><span class="variable">$STATE</span> &gt;&gt; /data/running/redis-6389/keep_alived_state <span class="comment">#Become redis master</span></span><br><span class="line">                  python /data/running/redis-6389/change_redis.py master</span><br><span class="line">                  <span class="built_in">exit</span> 0</span><br><span class="line">                  ;;</span><br><span class="line">        <span class="string">"BACKUP"</span>) <span class="built_in">echo</span> $(date)<span class="string">':'</span><span class="variable">$STATE</span> &gt;&gt; /data/running/redis-6389/keep_alived_state <span class="comment">#Become redis slave</span></span><br><span class="line">                  python /data/running/redis-6389/change_redis.py slave</span><br><span class="line">                  <span class="built_in">exit</span> 0</span><br><span class="line">                  ;;</span><br><span class="line">        <span class="string">"FAULT"</span>)  <span class="built_in">echo</span> $(date)<span class="string">':'</span><span class="variable">$STATE</span> &gt;&gt; /data/running/redis-6389/keep_alived_state <span class="comment">#restart and become redis slave</span></span><br><span class="line">                  <span class="built_in">exit</span> 0</span><br><span class="line">                  ;;</span><br><span class="line">        *)        <span class="built_in">echo</span> <span class="string">"unknown state"</span></span><br><span class="line">                  <span class="built_in">exit</span> 1</span><br><span class="line">                  ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-12-77 wangao]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">vrrp_script check_redis &#123;</span><br><span class="line">    script <span class="string">"/data/running/redis-6389/check_redis.sh"</span></span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_sync_group NC-MAIN-HA &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        NC-MAIN-HA-PRI</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance NC-MAIN-HA-PRI &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 77</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.13.77/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_redis</span><br><span class="line">    &#125;</span><br><span class="line">    notify /data/running/redis-6389/keepalived.state.sh</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Keepalived 切换逻辑代码已经分享至 GitHub</p><p><a href="https://github.com/wsgzao/redis" target="_blank" rel="noopener">https://github.com/wsgzao/redis</a></p>]]></content>
    
    <summary type="html">
    
      Redis主备同步配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>LVS-TUN 原理介绍和配置实践</title>
    <link href="https://wsgzao.github.io/post/lvs-tun/"/>
    <id>https://wsgzao.github.io/post/lvs-tun/</id>
    <published>2019-09-03T10:59:49.000Z</published>
    <updated>2019-09-10T09:04:45.964Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要讲述 LVS-TUN 原理介绍和配置实践，HA 高可用方案基于 Keepalived。</p><blockquote><p>LVS-TUN 原理介绍和配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 03 日 - 拆分 LVS-Keepalived 中 LVS-TUN<br>2019 年 08 月 23 日 - 更新 LVS/NAT、LVS/DR、LVS/TUN 三种模式的原理和配置实践<br>2018 年 12 月 03 日 - 精简和更新配置步骤<br>2018 年 07 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/lvs-tun/">https://wsgzao.github.io/post/lvs-tun/</a></p><p><strong> 扩展阅读 </strong></p><p>LVS - <a href="http://www.linuxvirtualserver.org/zh/index.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/zh/index.html</a><br>Keepalived - <a href="http://www.keepalived.org/" target="_blank" rel="noopener">http://www.keepalived.org/</a></p><hr><h2 id="ReadMe"><a href="#ReadMe" class="headerlink" title="ReadMe"></a>ReadMe</h2><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>Virtual Server via IP Tunneling - <a href="http://www.linuxvirtualserver.org/VS-IPTunneling.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/VS-IPTunneling.html</a><br>LVS 和 Keepalived 官方中文手册 PDF - <a href="https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg</a></p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><blockquote><p>以下术语涉及 LVS 三种工作模式的原理</p></blockquote><ul><li>LB (Load Balancer 负载均衡) </li><li>HA (High Available 高可用) </li><li>Failover (失败切换) </li><li>Cluster (集群) </li><li>LVS (Linux Virtual Server Linux 虚拟服务器) </li><li>DS (Director Server)，指的是前端负载均衡器节点</li><li>RS (Real Server)，后端真实的工作服务器</li><li>VIP (Virtual IP)，虚拟的 IP 地址，向外部直接面向用户请求，作为用户请求的目标的 IP 地址</li><li>DIP (Director IP)，主要用于和内部主机通讯的 IP 地址</li><li>RIP (Real Server IP)，后端服务器的 IP 地址</li><li>CIP (Client IP)，访问客户端的 IP 地址</li></ul><h2 id="LVS-三种模式的主要区别"><a href="#LVS-三种模式的主要区别" class="headerlink" title="LVS 三种模式的主要区别"></a>LVS 三种模式的主要区别</h2><table><thead><tr><th></th><th></th><th>VS/NAT</th><th>VS/TUN</th><th>VS/DR</th></tr></thead><tbody><tr><td></td><td>server</td><td>any</td><td>tunneling</td><td>non-arp device</td><td></td></tr><tr><td></td><td>server network</td><td>private</td><td>LAN/WAN</td><td>LAN</td><td></td></tr><tr><td></td><td>server number</td><td>low (10~20)</td><td>high</td><td>high</td><td></td></tr><tr><td></td><td>server gateway</td><td>load balancer</td><td>own router</td><td>own router</td><td></td></tr></tbody></table><table><thead><tr><th></th><th>模式与特点</th><th>NAT 模式</th><th>IPIP 模式</th><th>DR 模式</th></tr></thead><tbody><tr><td></td><td>对服务器的要求</td><td>服务节点可以使任何操作系统</td><td>必须支持 IP 隧道，目前只有 Linux 系统支持</td><td>服务器节点支持虚拟网卡设备，能够禁用设备的 ARP 响应</td><td></td></tr><tr><td></td><td>网络要求</td><td>拥有私有 IP 地址的局域网络</td><td>拥有合法 IP 地址的局域，网或广域网</td><td>拥有合法 IP 地址的局域，服务器节点与负载均衡器必须在同一个网段</td><td></td></tr><tr><td></td><td>通常支持节点数量</td><td>10 到 20 个，根据负载均衡器的处理能力而定</td><td>较高，可以支持 100 个服务节点</td><td>较高，可以支持 100 个服务节点</td><td></td></tr><tr><td></td><td>网关</td><td>负载均衡器为服务器节点网关</td><td>服务器的节点同自己的网关或者路由器连接，不经过负载均衡器</td><td>服务节点同自己的网关或者路由器连接，不经过负载均衡器</td><td></td></tr><tr><td></td><td>服务节点安全性</td><td>较好，采用内部 IP，服务节点隐蔽</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td></td></tr><tr><td></td><td>IP 要求</td><td>仅需要一个合法的 IP 地址作为 VIP 地址</td><td>除了 VIPO 地址外，每个服务器界定啊需要拥有合法的 IP 地址，可以直接从路由到客户端</td><td>除了 VIP 外，每个服务节点需拥有合法的 IP 地址，可以直接从路由到客户端</td><td></td></tr><tr><td></td><td>特点</td><td>地址转换</td><td>封装 IP</td><td>修改 MAC 地址</td><td></td></tr><tr><td></td><td>配置复杂度</td><td>简单</td><td>复杂</td><td>复杂</td><td></td></tr></tbody></table><h2 id="LVS-基本工作原理"><a href="#LVS-基本工作原理" class="headerlink" title="LVS 基本工作原理"></a>LVS 基本工作原理</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823142206.png" alt=""></p><ol><li>当用户向负载均衡调度器（Director Server）发起请求，调度器将请求发往至内核空间</li><li>PREROUTING 链首先会接收到用户请求，判断目标 IP 确定是本机 IP，将数据包发往 INPUT 链</li><li>IPVS 是工作在 INPUT 链上的，当用户请求到达 INPUT 时，IPVS 会将用户请求和自己已定义好的集群服务进行比对，如果用户请求的就是定义的集群服务，那么此时 IPVS 会强行修改数据包里的目标 IP 地址及端口，并将新的数据包发往 POSTROUTING 链</li><li>POSTROUTING 链接收数据包后发现目标 IP 地址刚好是自己的后端服务器，那么此时通过选路，将数据包最终发送给后端的服务器</li></ol><h3 id="LVS-的组成"><a href="#LVS-的组成" class="headerlink" title="LVS 的组成"></a>LVS 的组成</h3><blockquote><p>LVS 由 2 部分程序组成，包括 ipvs 和 ipvsadm。</p></blockquote><ol><li>ipvs(ip virtual server)：一段代码工作在内核空间，叫 ipvs，是真正生效实现调度的代码。</li><li>ipvsadm：另外一段是工作在用户空间，叫 ipvsadm，负责为 ipvs 内核框架编写规则，定义谁是集群服务，而谁是后端真实的服务器 (Real Server)</li></ol><h3 id="LVS-和-Keepalived"><a href="#LVS-和-Keepalived" class="headerlink" title="LVS 和 Keepalived"></a>LVS 和 Keepalived</h3><p>在 lvs+keepalived 环境里面，lvs 主要的工作是提供调度算法，把客户端请求按照需求调度在 real 服务器，keepalived 主要的工作是提供 lvs 控制器的一个冗余，并且对 real 服务器做健康检查，发现不健康的 real 服务器，就把它从 lvs 集群中剔除，real 服务器只负责提供服务。</p><h3 id="LVS-TUN"><a href="#LVS-TUN" class="headerlink" title="LVS/TUN"></a>LVS/TUN</h3><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823151135.png" alt=""></p><blockquote><p>在原有的 IP 报文外再次封装多一层 IP 首部，内部 IP 首部 (源地址为 CIP，目标 IIP 为 VIP)，外层 IP 首部 (源地址为 DIP，目标 IP 为 RIP)</p></blockquote><p>(1) 当用户请求到达 Director Server，此时请求的数据报文会先到内核空间的 PREROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 VIP 。<br>(2) PREROUTING 检查发现数据包的目标 IP 是本机，将数据包送至 INPUT 链<br>(3) IPVS 比对数据包请求的服务是否为集群服务，若是，在请求报文的首部再次封装一层 IP 报文，封装源 IP 为 DIP，目标 IP 为 RIP。然后发至 POSTROUTING 链。 此时源 IP 为 DIP，目标 IP 为 RIP<br>(4) POSTROUTING 链根据最新封装的 IP 报文，将数据包发至 RS（因为在外层封装多了一层 IP 首部，所以可以理解为此时通过隧道传输）。 此时源 IP 为 DIP，目标 IP 为 RIP<br>(5) RS 接收到报文后发现是自己的 IP 地址，就将报文接收下来，拆除掉最外层的 IP 后，会发现里面还有一层 IP 首部，而且目标是自己的 lo 接口 VIP，那么此时 RS 开始处理此请求，处理完成之后，通过 lo 接口送给 eth0 网卡，然后向外传递。 此时的源 IP 地址为 VIP，目标 IP 为 CIP<br>(6) 响应报文最终送达至客户端</p><blockquote><p>LVS/TUN 模型特性</p></blockquote><ul><li>RIP、VIP、DIP 全是公网地址</li><li>RS 的网关不会也不可能指向 DIP</li><li>所有的请求报文经由 Director Server，但响应报文必须不能进过 Director Server</li><li>不支持端口映射</li><li>RS 的系统必须支持隧道</li></ul><blockquote><p>其实企业中最常用的是 DR 实现方式，而 NAT 配置上比较简单和方便，后边实践中会总结 DR 和 NAT 具体使用配置过程。</p></blockquote><p>TUN（virtual server via ip tunneling　IP 隧道）调度器把请求的报文通过 IP 隧道转发到真实的服务器。真实的服务器将响应处理后的数据直接返回给客户端。这样调度器就只处理请求入站报文。此转发方式不修改请求报文的 IP 首部（源 IP 为 CIP，目标 IP 为 VIP），而在原 IP 报文之外再封装一个 IP 首部（源 IP 是 DIP，目标 IP 是 RIP），将报文发往挑选出的目标 RS；RS 直接响应给客户端（源 IP 是 VIP，目标 IP 是 CIP），由于一般网络服务应答数据比请求报文大很多，采用 lvs-tun 模式后，集群系统的最大吞吐量可以提高 10 倍</p><p>注意：<br>(1) DIP, VIP, RIP 都应该是公网地址；<br>(2) RS 的网关不能，也不可能指向 DIP；<br>(3) 请求报文要经由 Director，但响应不能经由 Director；<br>(4) 此模式不支持端口映射；<br>(5) RS 的操作系统得支持隧道功能</p><p>缺点: 由于后端服务器 RS 处理数据后响应发送给用户，此时需要租借大量 IP（特别是后端服务器使用较多的情况下）。</p><p>优点: 实现 lvs-tun 模式时，LVS 调度器将 TCP/IP 请求进行重新封装并转发给后端服务器，由目标应用服务器直接回复用户。应用服务器之间是通过 IP 隧道来进行转发，故两者可以存在于不同的网段中。</p><h2 id="配置-LVS-TUN"><a href="#配置-LVS-TUN" class="headerlink" title="配置 LVS-TUN"></a>配置 LVS-TUN</h2><h3 id="DS"><a href="#DS" class="headerlink" title="DS"></a>DS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install keepalived</span></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install keepalived ipvsadm</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install keepalived ipvsadm</span><br><span class="line"></span><br><span class="line"><span class="comment"># update iptables</span></span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># For keepalived:</span></span><br><span class="line"><span class="comment"># allow vrrp </span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line"><span class="comment"># allow multicast</span></span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># reload iptables</span></span><br><span class="line">service iptables reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># open ip_forward</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="comment"># edit sysctl.conf</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived for lvs-tun</span></span><br><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_AUTH &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface em1</span><br><span class="line">    virtual_router_id 11</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.10.36.11/23 dev em1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind TUN</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.4 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.10.36.7 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable and start keepalived</span></span><br><span class="line">systemctl start keepalived</span><br><span class="line">systemctl <span class="built_in">enable</span> keepalived</span><br><span class="line">watch ipvsadm -L -n --stats</span><br><span class="line"></span><br><span class="line"><span class="comment"># write script, recommand manage it by keepalived.conf</span></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># Startup script handle the initialisation of LVS</span></span><br><span class="line"><span class="comment"># chkconfig: - 28 72</span></span><br><span class="line"><span class="comment"># description: Initialise the Linux Virtual Server for TUN</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides: ipvsadm</span></span><br><span class="line"><span class="comment"># Required-Start: $local_fs $network $named</span></span><br><span class="line"><span class="comment"># Required-Stop: $local_fs $remote_fs $network</span></span><br><span class="line"><span class="comment"># Short-Description: Initialise the Linux Virtual Server</span></span><br><span class="line"><span class="comment"># Description: The Linux Virtual Server is a highly scalable and highly</span></span><br><span class="line"><span class="comment">#   available server built on a cluster of real servers, with the load</span></span><br><span class="line"><span class="comment">#   balancer running on Linux.</span></span><br><span class="line"><span class="comment"># description: start LVS of TUN</span></span><br><span class="line">LOCK=/var/lock/lvs-tun.lock</span><br><span class="line">VIP=10.10.36.11</span><br><span class="line">RIP1=10.10.36.4</span><br><span class="line">RIP2=10.10.36.7</span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>()    &#123;</span><br><span class="line">     PID=`ipvsadm -Ln | grep <span class="variable">$&#123;VIP&#125;</span> | wc -l`</span><br><span class="line">     <span class="keyword">if</span>    [ <span class="variable">$PID</span> -gt 0 ];</span><br><span class="line"></span><br><span class="line">     <span class="keyword">then</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"The LVS-TUN Server is already running !"</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">           <span class="comment">#Load the tun mod</span></span><br><span class="line">           /sbin/modprobe tun</span><br><span class="line">           /sbin/modprobe ipip</span><br><span class="line">           <span class="comment">#Set the tun Virtual IP Address</span></span><br><span class="line">           /sbin/ifconfig tunl0 <span class="variable">$VIP</span> broadcast <span class="variable">$VIP</span> netmask 255.255.255.255 up</span><br><span class="line">           /sbin/route add -host <span class="variable">$VIP</span> dev tunl0</span><br><span class="line">           <span class="comment">#Clear IPVS Table</span></span><br><span class="line">           /sbin/ipvsadm -C</span><br><span class="line">           <span class="comment">#The icmp recruit setting</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/ip_forward</span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/send_redirects</span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/default/send_redirects</span><br><span class="line">           <span class="comment">#Set Lvs</span></span><br><span class="line">           /sbin/ipvsadm -At <span class="variable">$VIP</span>:80 -s rr</span><br><span class="line">           /sbin/ipvsadm -at <span class="variable">$VIP</span>:80 -r <span class="variable">$RIP1</span>:80 -i  -w 1</span><br><span class="line">           /sbin/ipvsadm -at <span class="variable">$VIP</span>:80 -r <span class="variable">$RIP2</span>:80 -i  -w 1</span><br><span class="line">           /bin/touch <span class="variable">$LOCK</span></span><br><span class="line">           <span class="comment">#Run Lvs</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"starting LVS-TUN-DIR Server is ok !"</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>()    &#123;</span><br><span class="line">           <span class="comment">#stop  Lvs server</span></span><br><span class="line">           /sbin/ipvsadm -C</span><br><span class="line">           /sbin/ifconfig tunl0 down &gt;/dev/null</span><br><span class="line">           <span class="comment">#Remove the tun mod</span></span><br><span class="line">           /sbin/modprobe -r tun</span><br><span class="line">           /sbin/modprobe -r ipip</span><br><span class="line">           rm -rf <span class="variable">$LOCK</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"stopping LVS-TUN-DIR server is ok !"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status</span></span>()  &#123;</span><br><span class="line">     <span class="keyword">if</span> [ -e <span class="variable">$LOCK</span> ];</span><br><span class="line">     <span class="keyword">then</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"The LVS-TUN Server is already running !"</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"The LVS-TUN Server is not running !"</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">  stop)</span><br><span class="line">        stop</span><br><span class="line">        ;;</span><br><span class="line">  restart)</span><br><span class="line">        stop</span><br><span class="line">        sleep 1</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">  status)</span><br><span class="line">        status</span><br><span class="line">        ;;</span><br><span class="line">  *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$1</span> &#123;start|stop|restart|status&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><h3 id="RS"><a href="#RS" class="headerlink" title="RS"></a>RS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在加载好 ipip 模块后就会有默认的 tunl0 隧道 </span></span><br><span class="line">modprobe ipip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 VIP</span></span><br><span class="line"><span class="comment"># ifconfig tunl0 down</span></span><br><span class="line">ifconfig tunl0 10.10.36.11 broadcast 10.10.36.11 netmask 255.255.255.255 up</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加路由 </span></span><br><span class="line">route add -host 10.10.36.11 tunl0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动关闭 ARP 转发 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'1'</span> &gt; /proc/sys/net/ipv4/conf/tunl0/arp_ignore </span><br><span class="line"><span class="built_in">echo</span> <span class="string">'2'</span> &gt; /proc/sys/net/ipv4/conf/tunl0/arp_announce</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'1'</span> &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'2'</span> &gt; /proc/sys/net/ipv4/conf/all/arp_announce </span><br><span class="line"><span class="built_in">echo</span> <span class="string">'0'</span> &gt; /proc/sys/net/ipv4/conf/tunl0/rp_filter</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'0'</span> &gt; /proc/sys/net/ipv4/conf/all/rp_filter </span><br><span class="line"></span><br><span class="line"><span class="comment"># iptables 允许 ipip 协议 </span></span><br><span class="line">iptables -I INPUT 1 -p 4 -j ACCEPT</span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line">-A INPUT -p ipv4 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编写 RS 启停脚本，推荐用脚本管理 RS</span></span><br><span class="line">vim /etc/init.d/lvs-tun</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Startup script handle the initialisation of LVS</span></span><br><span class="line"><span class="comment"># chkconfig: - 28 72</span></span><br><span class="line"><span class="comment"># description: Initialise the Linux Virtual Server for TUN</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides: ipvsadm</span></span><br><span class="line"><span class="comment"># Required-Start: $local_fs $network $named</span></span><br><span class="line"><span class="comment"># Required-Stop: $local_fs $remote_fs $network</span></span><br><span class="line"><span class="comment"># Short-Description: Initialise the Linux Virtual Server</span></span><br><span class="line"><span class="comment"># Description: The Linux Virtual Server is a highly scalable and highly</span></span><br><span class="line"><span class="comment">#   available server built on a cluster of real servers, with the load</span></span><br><span class="line"><span class="comment">#   balancer running on Linux.</span></span><br><span class="line"><span class="comment"># description: start LVS of TUN-RIP</span></span><br><span class="line">LOCK=/var/lock/ipvsadm.lock</span><br><span class="line">VIP=10.10.36.11</span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">     PID=`ifconfig | grep tunl0 | wc -l`</span><br><span class="line">     <span class="keyword">if</span> [ <span class="variable">$PID</span> -ne 0 ];</span><br><span class="line">     <span class="keyword">then</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"The LVS-TUN-RIP Server is already running !"</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">         <span class="comment">#Load the tun mod</span></span><br><span class="line">         /sbin/modprobe tun</span><br><span class="line">         /sbin/modprobe ipip</span><br><span class="line">         <span class="comment">#Set the tun Virtual IP Address</span></span><br><span class="line">         /sbin/ifconfig tunl0 <span class="variable">$VIP</span> netmask 255.255.255.255 broadcast <span class="variable">$VIP</span> up</span><br><span class="line">         /sbin/route add -host <span class="variable">$VIP</span> dev tunl0</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/tunl0/arp_ignore</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/tunl0/arp_announce</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt; /proc/sys/net/ipv4/conf/tunl0/rp_filter</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt; /proc/sys/net/ipv4/conf/all/rp_filter</span><br><span class="line">         /bin/touch <span class="variable">$LOCK</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"starting LVS-TUN-RIP server is ok !"</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">         /sbin/ifconfig tunl0 down</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/tunl0/arp_ignore</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/tunl0/arp_announce</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">         <span class="comment">#Remove the tun mod</span></span><br><span class="line">         /sbin/modprobe -r tun</span><br><span class="line">         /sbin/modprobe -r ipip</span><br><span class="line">         rm -rf <span class="variable">$LOCK</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"stopping LVS-TUN-RIP server is ok !"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status</span></span>() &#123;</span><br><span class="line">     <span class="keyword">if</span> [ -e <span class="variable">$LOCK</span> ];</span><br><span class="line">     <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"The LVS-TUN-RIP Server is already running !"</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"The LVS-TUN-RIP Server is not running !"</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">  stop)</span><br><span class="line">        stop</span><br><span class="line">        ;;</span><br><span class="line">  restart)</span><br><span class="line">        stop</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">  status)</span><br><span class="line">        status</span><br><span class="line">        ;;</span><br><span class="line">  *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$1</span> &#123;start|stop|restart|status&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># start lvs-tun</span></span><br><span class="line">chmod 755 /etc/init.d/lvs-tun</span><br><span class="line">service lvs-tun start</span><br><span class="line">chkconfig lvs-tun on</span><br><span class="line"></span><br><span class="line"><span class="comment"># Nginx test</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rs1"</span> &gt; /usr/share/nginx/html/index.html</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rs2"</span> &gt; /usr/share/nginx/html/index.html</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..100&#125;; <span class="keyword">do</span> curl 10.10.36.11; sleep 0.5; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>这一步的主要目的是让 RS 禁言，在相对较新的版本中新增了两个内核参数 (kernel parameter)</p><ul><li>第一个是 arp_ignore 定义接受到 ARP 请求时的相应级别</li><li>第二个是 arp_announce 定义将自己地址向外通告是的通告级别</li><li>第三个是 rp_filter 定义系统是否开启对数据包源地址的校验</li></ul><p>总结: LVS/TUN 是所有模式中最最适用于跨网络跨地域地理位置的一种模式，需要注意的是:</p><ol><li>若 DIR 和 RIP 在不同 lan 网络中，比如不同的网段，不同的 IDC 机房，就不需要设置 arp 仰制，不同网段中，arp 会被屏蔽掉，所以只需设置 ip tunne 以及报文反向验证即可；</li><li>若 DIR 和 RIP 在同一广播域中，需要和 LVS/DR 模式一样在所有的 RIP 上仰制 arp，防止 arp 响应导致 arp 表混乱，这样 lvs 就不能正常工作！</li></ol><p>配置时除了配置 DIR，还需要需要配置后端 RS server，即在 tunl 上口配置 vip 地址（需要系统支持 tunl 才行），广播为为自己，此模式下无需开启路由转发功能！</p><h2 id="配置-LVS-DR-和-LVS-TUN-混合模式"><a href="#配置-LVS-DR-和-LVS-TUN-混合模式" class="headerlink" title="配置 LVS/DR 和 LVS/TUN 混合模式"></a>配置 LVS/DR 和 LVS/TUN 混合模式</h2><h3 id="DS-1"><a href="#DS-1" class="headerlink" title="DS"></a>DS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关于 3 中模式的参数 </span></span><br><span class="line">[packet-forwarding-method]</span><br><span class="line">       -g, --gatewaying  Use gatewaying (direct routing). This is the default.</span><br><span class="line">       -i, --ipip  Use ipip encapsulation (tunneling).</span><br><span class="line">       -m, --masquerading  Use masquerading (network access translation, or NAT).</span><br><span class="line">       Note:  Regardless of the packet-forwarding mechanism specified, real servers <span class="keyword">for</span> addresses <span class="keyword">for</span> <span class="built_in">which</span> there are interfaces on the <span class="built_in">local</span> node will  be  use  the</span><br><span class="line">       <span class="built_in">local</span>  forwarding  method, <span class="keyword">then</span> packets <span class="keyword">for</span> the servers will be passed to upper layer on the <span class="built_in">local</span> node. This cannot be specified by ipvsadm, rather it <span class="built_in">set</span> by</span><br><span class="line">       the kernel as real servers are added or modified.</span><br><span class="line"></span><br><span class="line"><span class="comment"># ipvsadm 命令行混配 </span></span><br><span class="line">/sbin/ifconfig tunl0 10.10.36.11 broadcast 10.10.36.11 netmask 255.255.255.255 up</span><br><span class="line">/sbin/route add -host 10.10.36.11 dev tunl0</span><br><span class="line">/sbin/ipvsadm -At 10.10.36.11:80 -s rr</span><br><span class="line">/sbin/ipvsadm -at 10.10.36.11:80 -r 10.10.36.4:80 -g -w 1</span><br><span class="line">/sbin/ipvsadm -at 10.10.36.11:80 -r 10.10.36.7:80 -i -w 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived 混配 </span></span><br><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_AUTH &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface em1</span><br><span class="line">    virtual_router_id 11</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.10.36.11/23 dev em1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.4 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind TUN</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.7 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查结果可用 </span></span><br><span class="line">[root@d126027 wangao]<span class="comment"># for i in &#123;1..100&#125;; do curl 10.10.36.11; sleep 0.5; done</span></span><br><span class="line">rs2</span><br><span class="line">rs1</span><br><span class="line">rs2</span><br><span class="line">rs1</span><br><span class="line">rs2</span><br><span class="line"></span><br><span class="line">[root@d126009 keepalived]<span class="comment"># ipvsadm -Ln --stats</span></span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port               Conns   InPkts  OutPkts  InBytes OutBytes</span><br><span class="line">  -&gt; RemoteAddress:Port</span><br><span class="line">TCP  10.10.36.11:80                    100      700        0    36700        0</span><br><span class="line">  -&gt; 10.10.36.4:80                      50      350        0    18350        0</span><br><span class="line">  -&gt; 10.10.36.7:80                      50      350        0    18350        0</span><br><span class="line"></span><br><span class="line">[root@d126009 wangao]<span class="comment"># ipvsadm -Ln</span></span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</span><br><span class="line">TCP  10.10.36.11:80 rr</span><br><span class="line">  -&gt; 10.10.36.4:80                Route   100    0          0</span><br><span class="line">  -&gt; 10.10.36.7:80                Tunnel  100    0          0</span><br></pre></td></tr></table></figure><h3 id="RS-1"><a href="#RS-1" class="headerlink" title="RS"></a>RS</h3><blockquote><p>DR 和 TUN 的模式基本不用做改动</p></blockquote><h2 id="LVS-和-Keepalived-系列"><a href="#LVS-和-Keepalived-系列" class="headerlink" title="LVS 和 Keepalived 系列"></a>LVS 和 Keepalived 系列</h2><p><a href="https://wsgzao.github.io/post/lvs-keepalived/">LVS 和 Keepalived 的原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs/">LVS 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/keepalived/">Keepalived 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-nat/">LVS-NAT 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-dr/">LVS-DR 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-tun/">LVS-TUN 原理介绍和配置实践</a></p>]]></content>
    
    <summary type="html">
    
      LVS-TUN原理介绍和配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>LVS-DR 原理介绍和配置实践</title>
    <link href="https://wsgzao.github.io/post/lvs-dr/"/>
    <id>https://wsgzao.github.io/post/lvs-dr/</id>
    <published>2019-09-03T09:59:49.000Z</published>
    <updated>2019-09-10T09:04:51.779Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要讲述 LVS-DR 原理介绍和配置实践，HA 高可用方案基于 Keepalived。</p><blockquote><p>LVS-DR 原理介绍和配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 03 日 - 拆分 LVS-Keepalived 中 LVS-DR<br>2019 年 08 月 23 日 - 更新 LVS/NAT、LVS/DR、LVS/TUN 三种模式的原理和配置实践<br>2018 年 12 月 03 日 - 精简和更新配置步骤<br>2018 年 07 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/lvs-nat/">https://wsgzao.github.io/post/lvs-nat/</a></p><p><strong> 扩展阅读 </strong></p><p>LVS - <a href="http://www.linuxvirtualserver.org/zh/index.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/zh/index.html</a><br>Keepalived - <a href="http://www.keepalived.org/" target="_blank" rel="noopener">http://www.keepalived.org/</a></p><hr><h2 id="ReadMe"><a href="#ReadMe" class="headerlink" title="ReadMe"></a>ReadMe</h2><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>Virtual Server via Direct Routing - <a href="http://www.linuxvirtualserver.org/VS-DRouting.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/VS-DRouting.html</a><br>LVS 和 Keepalived 官方中文手册 PDF - <a href="https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg</a></p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><blockquote><p>以下术语涉及 LVS 三种工作模式的原理</p></blockquote><ul><li>LB (Load Balancer 负载均衡) </li><li>HA (High Available 高可用) </li><li>Failover (失败切换) </li><li>Cluster (集群) </li><li>LVS (Linux Virtual Server Linux 虚拟服务器) </li><li>DS (Director Server)，指的是前端负载均衡器节点</li><li>RS (Real Server)，后端真实的工作服务器</li><li>VIP (Virtual IP)，虚拟的 IP 地址，向外部直接面向用户请求，作为用户请求的目标的 IP 地址</li><li>DIP (Director IP)，主要用于和内部主机通讯的 IP 地址</li><li>RIP (Real Server IP)，后端服务器的 IP 地址</li><li>CIP (Client IP)，访问客户端的 IP 地址</li></ul><h2 id="LVS-三种模式的主要区别"><a href="#LVS-三种模式的主要区别" class="headerlink" title="LVS 三种模式的主要区别"></a>LVS 三种模式的主要区别</h2><table><thead><tr><th></th><th></th><th>VS/NAT</th><th>VS/TUN</th><th>VS/DR</th></tr></thead><tbody><tr><td></td><td>server</td><td>any</td><td>tunneling</td><td>non-arp device</td><td></td></tr><tr><td></td><td>server network</td><td>private</td><td>LAN/WAN</td><td>LAN</td><td></td></tr><tr><td></td><td>server number</td><td>low (10~20)</td><td>high</td><td>high</td><td></td></tr><tr><td></td><td>server gateway</td><td>load balancer</td><td>own router</td><td>own router</td><td></td></tr></tbody></table><table><thead><tr><th></th><th>模式与特点</th><th>NAT 模式</th><th>IPIP 模式</th><th>DR 模式</th></tr></thead><tbody><tr><td></td><td>对服务器的要求</td><td>服务节点可以使任何操作系统</td><td>必须支持 IP 隧道，目前只有 Linux 系统支持</td><td>服务器节点支持虚拟网卡设备，能够禁用设备的 ARP 响应</td><td></td></tr><tr><td></td><td>网络要求</td><td>拥有私有 IP 地址的局域网络</td><td>拥有合法 IP 地址的局域，网或广域网</td><td>拥有合法 IP 地址的局域，服务器节点与负载均衡器必须在同一个网段</td><td></td></tr><tr><td></td><td>通常支持节点数量</td><td>10 到 20 个，根据负载均衡器的处理能力而定</td><td>较高，可以支持 100 个服务节点</td><td>较高，可以支持 100 个服务节点</td><td></td></tr><tr><td></td><td>网关</td><td>负载均衡器为服务器节点网关</td><td>服务器的节点同自己的网关或者路由器连接，不经过负载均衡器</td><td>服务节点同自己的网关或者路由器连接，不经过负载均衡器</td><td></td></tr><tr><td></td><td>服务节点安全性</td><td>较好，采用内部 IP，服务节点隐蔽</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td></td></tr><tr><td></td><td>IP 要求</td><td>仅需要一个合法的 IP 地址作为 VIP 地址</td><td>除了 VIPO 地址外，每个服务器界定啊需要拥有合法的 IP 地址，可以直接从路由到客户端</td><td>除了 VIP 外，每个服务节点需拥有合法的 IP 地址，可以直接从路由到客户端</td><td></td></tr><tr><td></td><td>特点</td><td>地址转换</td><td>封装 IP</td><td>修改 MAC 地址</td><td></td></tr><tr><td></td><td>配置复杂度</td><td>简单</td><td>复杂</td><td>复杂</td><td></td></tr></tbody></table><h2 id="LVS-基本工作原理"><a href="#LVS-基本工作原理" class="headerlink" title="LVS 基本工作原理"></a>LVS 基本工作原理</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823142206.png" alt=""></p><ol><li>当用户向负载均衡调度器（Director Server）发起请求，调度器将请求发往至内核空间</li><li>PREROUTING 链首先会接收到用户请求，判断目标 IP 确定是本机 IP，将数据包发往 INPUT 链</li><li>IPVS 是工作在 INPUT 链上的，当用户请求到达 INPUT 时，IPVS 会将用户请求和自己已定义好的集群服务进行比对，如果用户请求的就是定义的集群服务，那么此时 IPVS 会强行修改数据包里的目标 IP 地址及端口，并将新的数据包发往 POSTROUTING 链</li><li>POSTROUTING 链接收数据包后发现目标 IP 地址刚好是自己的后端服务器，那么此时通过选路，将数据包最终发送给后端的服务器</li></ol><h3 id="LVS-的组成"><a href="#LVS-的组成" class="headerlink" title="LVS 的组成"></a>LVS 的组成</h3><blockquote><p>LVS 由 2 部分程序组成，包括 ipvs 和 ipvsadm。</p></blockquote><ol><li>ipvs(ip virtual server)：一段代码工作在内核空间，叫 ipvs，是真正生效实现调度的代码。</li><li>ipvsadm：另外一段是工作在用户空间，叫 ipvsadm，负责为 ipvs 内核框架编写规则，定义谁是集群服务，而谁是后端真实的服务器 (Real Server)</li></ol><h3 id="LVS-和-Keepalived"><a href="#LVS-和-Keepalived" class="headerlink" title="LVS 和 Keepalived"></a>LVS 和 Keepalived</h3><p>在 lvs+keepalived 环境里面，lvs 主要的工作是提供调度算法，把客户端请求按照需求调度在 real 服务器，keepalived 主要的工作是提供 lvs 控制器的一个冗余，并且对 real 服务器做健康检查，发现不健康的 real 服务器，就把它从 lvs 集群中剔除，real 服务器只负责提供服务。</p><h3 id="LVS-DR"><a href="#LVS-DR" class="headerlink" title="LVS/DR"></a>LVS/DR</h3><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823150520.png" alt=""></p><blockquote><p>重点将请求报文的目标 MAC 地址设定为挑选出的 RS 的 MAC 地址</p></blockquote><p>(1) 当用户请求到达 Director Server，此时请求的数据报文会先到内核空间的 PREROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 VIP<br>(2) PREROUTING 检查发现数据包的目标 IP 是本机，将数据包送至 INPUT 链<br>(3) IPVS 比对数据包请求的服务是否为集群服务，若是，将请求报文中的源 MAC 地址修改为 DIP 的 MAC 地址，将目标 MAC 地址修改 RIP 的 MAC 地址，然后将数据包发至 POSTROUTING 链。 此时的源 IP 和目的 IP 均未修改，仅修改了源 MAC 地址为 DIP 的 MAC 地址，目标 MAC 地址为 RIP 的 MAC 地址<br>(4) 由于 DS 和 RS 在同一个网络中，所以是通过二层来传输。POSTROUTING 链检查目标 MAC 地址为 RIP 的 MAC 地址，那么此时数据包将会发至 Real Server。<br>(5) RS 发现请求报文的 MAC 地址是自己的 MAC 地址，就接收此报文。处理完成之后，将响应报文通过 lo 接口传送给 eth0 网卡然后向外发出。 此时的源 IP 地址为 VIP，目标 IP 为 CIP<br>(6) 响应报文最终送达至客户端</p><blockquote><p>LVS/DR 模型的特性</p></blockquote><ul><li><strong> 特点 1</strong>：保证前端路由将目标地址为 VIP 报文统统发给 Director Server，而不是 RS</li><li>RS 可以使用私有地址；也可以是公网地址，如果使用公网地址，此时可以通过互联网对 RIP 进行直接访问</li><li>RS 跟 Director Server 必须在同一个物理网络中</li><li>所有的请求报文经由 Director Server，但响应报文必须不能进过 Director Server</li><li>不支持地址转换，也不支持端口映射</li><li>RS 可以是大多数常见的操作系统</li><li>RS 的网关绝不允许指向 DIP(因为我们不允许他经过 director)</li><li>RS 上的 lo 接口配置 VIP 的 IP 地址</li><li>缺陷：RS 和 DS 必须在同一机房中</li></ul><blockquote><p>特点 1 的解决方案：</p></blockquote><ul><li>在前端路由器做静态地址路由绑定，将对于 VIP 的地址仅路由到 Director Server</li><li>存在问题：用户未必有路由操作权限，因为有可能是运营商提供的，所以这个方法未必实用</li><li>arptables：在 arp 的层次上实现在 ARP 解析时做防火墙规则，过滤 RS 响应 ARP 请求。这是由 iptables 提供的</li><li>修改 RS 上内核参数（arp_ignore 和 arp_announce）将 RS 上的 VIP 配置在 lo 接口的别名上，并限制其不能响应对 VIP 地址解析请求。</li></ul><p>DR（Direct Routing 直接路由模式）此模式时 LVS 调度器只接收客户发来的请求并将请求转发给后端服务器，后端服务器处理请求后直接把内容直接响应给客户，而不用再次经过 LVS 调度器。LVS 只需要将网络帧的 MAC 地址修改为某一台后端服务器 RS 的 MAC，该包就会被转发到相应的 RS 处理，注意此时的源 IP 和目标 IP 都没变。RS 收到 LVS 转发来的包时，链路层发现 MAC 是自己的，到上面的网络层，发现 IP 也是自己的，于是这个包被合法地接受，RS 感知不到前面有 LVS 的存在。而当 RS 返回响应时，只要直接向源 IP（即用户的 IP）返回即可，不再经过 LVS。</p><p>注意：<br>(1) 确保前端路由器将目标 IP 为 VIP 的请求报文发往 Director：<br>    (a) 在前端网关做静态绑定；<br>    (b) 在 RS 上使用 arptables；<br>    (c) 在 RS 上修改内核参数以限制 arp 通告及应答级别；<br>            arp_announce<br>            arp_ignore<br>(2) RS 的 RIP 可以使用私网地址，也可以是公网地址；RIP 与 DIP 在同一 IP 网络；RIP 的网关不能指向 DIP，以确保响应报文不会经由 Director；<br>(3) RS 跟 Director 要在同一个物理网络；<br>(4) 请求报文要经由 Director，但响应不能经由 Director，而是由 RS 直接发往 Client；<br>(5) 此模式不支持端口映射；</p><p>缺点：唯一的缺陷在于它要求 LVS 调度器及所有应用服务器在同一个网段中，因此不能实现集群的跨网段应用。</p><p>优点：可见在处理过程中 LVS Route 只处理请求的直接路由转发，所有响应结果由各个应用服务器自行处理，并对用户进行回复，网络流量将集中在 LVS 调度器之上。</p><h2 id="配置-LVS-DR"><a href="#配置-LVS-DR" class="headerlink" title="配置 LVS-DR"></a>配置 LVS-DR</h2><h3 id="DS"><a href="#DS" class="headerlink" title="DS"></a>DS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install keepalived</span></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install keepalived ipvsadm</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install keepalived ipvsadm</span><br><span class="line"></span><br><span class="line"><span class="comment"># update iptables</span></span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># For keepalived:</span></span><br><span class="line"><span class="comment"># allow vrrp </span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line"><span class="comment"># allow multicast</span></span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># reload iptables</span></span><br><span class="line">service iptables reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># open ip_forward</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="comment"># edit sysctl.conf</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived for lvs-dr</span></span><br><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_CONNECT</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_CONNECT &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 128</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.65.32.28/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.28 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.13 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.65.32.14 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.28 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.13 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.65.32.14 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_AUTH &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 129</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.65.32.29/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.29 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.22 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 110.65.32.23 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.29 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.22 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 110.65.32.23 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable and start keepalived</span></span><br><span class="line">systemctl start keepalived</span><br><span class="line">systemctl <span class="built_in">enable</span> keepalived</span><br><span class="line">watch ipvsadm -L -n --stats</span><br></pre></td></tr></table></figure><h3 id="RS"><a href="#RS" class="headerlink" title="RS"></a>RS</h3><ol><li>Edit “/etc/sysconfig/network-scripts/ifcfg-lo” to patch bug in Centos 7 (if using Centos 7). Add TYPE=Loopback to the file.</li><li>Add loopback for each Virtual IP on each worker. E.g. first virtual IP create file “/etc/sysconfig/network-scripts/ifcfg-lo:0”.</li><li>Start adapters if not yet started</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># add TYPE=Loopback</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"TYPE=Loopback"</span> &gt;&gt; /etc/sysconfig/network-scripts/ifcfg-lo</span><br><span class="line"><span class="comment"># add ifcfg-lo:0</span></span><br><span class="line">cat &gt; /etc/sysconfig/network-scripts/ifcfg-lo:0 &lt;&lt; EOF</span><br><span class="line">DEVICE=lo:0</span><br><span class="line">IPADDR=10.65.32.28</span><br><span class="line">NETMASK=255.255.255.255</span><br><span class="line">ONBOOT=yes</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># ifup lo:0</span></span><br><span class="line">ifup lo:0</span><br><span class="line"></span><br><span class="line"><span class="comment"># add real_start</span></span><br><span class="line">cat &gt; /root/real_start.sh &lt;&lt; EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># chmod 755</span></span><br><span class="line">chmod 755 /root/real_start.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># add real.service</span></span><br><span class="line">cat &gt; /usr/lib/systemd/system/real.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=autostart lvs real</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/root/real_start.sh</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable service</span></span><br><span class="line">systemctl <span class="built_in">enable</span> real.service</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># lvs real server example</span></span><br><span class="line">vim /root/lvs_real.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: Start realserver</span></span><br><span class="line"><span class="comment"># Description:       Start realserver</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># change the VIP to proper value</span></span><br><span class="line">VIP=10.65.32.28</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Start REAL Server"</span></span><br><span class="line">    /sbin/ifconfig lo:0 <span class="variable">$VIP</span> broadcast <span class="variable">$VIP</span> netmask 255.255.255.255 up</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    stop)</span><br><span class="line"></span><br><span class="line">    /sbin/ifconfig lo:0 down</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Stop REAL Server"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    restart)</span><br><span class="line"></span><br><span class="line">    <span class="variable">$0</span> stop</span><br><span class="line">    <span class="variable">$0</span> start</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    *)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop&#125;"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><h2 id="配置-LVS-DR-和-LVS-TUN-混合模式"><a href="#配置-LVS-DR-和-LVS-TUN-混合模式" class="headerlink" title="配置 LVS/DR 和 LVS/TUN 混合模式"></a>配置 LVS/DR 和 LVS/TUN 混合模式</h2><h3 id="DS-1"><a href="#DS-1" class="headerlink" title="DS"></a>DS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关于 3 中模式的参数 </span></span><br><span class="line">[packet-forwarding-method]</span><br><span class="line">       -g, --gatewaying  Use gatewaying (direct routing). This is the default.</span><br><span class="line">       -i, --ipip  Use ipip encapsulation (tunneling).</span><br><span class="line">       -m, --masquerading  Use masquerading (network access translation, or NAT).</span><br><span class="line">       Note:  Regardless of the packet-forwarding mechanism specified, real servers <span class="keyword">for</span> addresses <span class="keyword">for</span> <span class="built_in">which</span> there are interfaces on the <span class="built_in">local</span> node will  be  use  the</span><br><span class="line">       <span class="built_in">local</span>  forwarding  method, <span class="keyword">then</span> packets <span class="keyword">for</span> the servers will be passed to upper layer on the <span class="built_in">local</span> node. This cannot be specified by ipvsadm, rather it <span class="built_in">set</span> by</span><br><span class="line">       the kernel as real servers are added or modified.</span><br><span class="line"></span><br><span class="line"><span class="comment"># ipvsadm 命令行混配 </span></span><br><span class="line">/sbin/ifconfig tunl0 10.10.36.11 broadcast 10.10.36.11 netmask 255.255.255.255 up</span><br><span class="line">/sbin/route add -host 10.10.36.11 dev tunl0</span><br><span class="line">/sbin/ipvsadm -At 10.10.36.11:80 -s rr</span><br><span class="line">/sbin/ipvsadm -at 10.10.36.11:80 -r 10.10.36.4:80 -g -w 1</span><br><span class="line">/sbin/ipvsadm -at 10.10.36.11:80 -r 10.10.36.7:80 -i -w 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived 混配 </span></span><br><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_AUTH &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface em1</span><br><span class="line">    virtual_router_id 11</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.10.36.11/23 dev em1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.4 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind TUN</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.7 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查结果可用 </span></span><br><span class="line">[root@d126027 wangao]<span class="comment"># for i in &#123;1..100&#125;; do curl 10.10.36.11; sleep 0.5; done</span></span><br><span class="line">rs2</span><br><span class="line">rs1</span><br><span class="line">rs2</span><br><span class="line">rs1</span><br><span class="line">rs2</span><br><span class="line"></span><br><span class="line">[root@d126009 keepalived]<span class="comment"># ipvsadm -Ln --stats</span></span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port               Conns   InPkts  OutPkts  InBytes OutBytes</span><br><span class="line">  -&gt; RemoteAddress:Port</span><br><span class="line">TCP  10.10.36.11:80                    100      700        0    36700        0</span><br><span class="line">  -&gt; 10.10.36.4:80                      50      350        0    18350        0</span><br><span class="line">  -&gt; 10.10.36.7:80                      50      350        0    18350        0</span><br><span class="line"></span><br><span class="line">[root@d126009 wangao]<span class="comment"># ipvsadm -Ln</span></span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</span><br><span class="line">TCP  10.10.36.11:80 rr</span><br><span class="line">  -&gt; 10.10.36.4:80                Route   100    0          0</span><br><span class="line">  -&gt; 10.10.36.7:80                Tunnel  100    0          0</span><br></pre></td></tr></table></figure><h3 id="RS-1"><a href="#RS-1" class="headerlink" title="RS"></a>RS</h3><blockquote><p>DR 和 TUN 的模式基本不用做改动</p></blockquote><h2 id="LVS-和-Keepalived-系列"><a href="#LVS-和-Keepalived-系列" class="headerlink" title="LVS 和 Keepalived 系列"></a>LVS 和 Keepalived 系列</h2><p><a href="https://wsgzao.github.io/post/lvs-keepalived/">LVS 和 Keepalived 的原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs/">LVS 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/keepalived/">Keepalived 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-nat/">LVS-NAT 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-dr/">LVS-DR 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-tun/">LVS-TUN 原理介绍和配置实践</a></p>]]></content>
    
    <summary type="html">
    
      LVS-DR原理介绍和配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>LVS-NAT 原理介绍和配置实践</title>
    <link href="https://wsgzao.github.io/post/lvs-nat/"/>
    <id>https://wsgzao.github.io/post/lvs-nat/</id>
    <published>2019-09-03T08:59:49.000Z</published>
    <updated>2019-09-10T08:54:10.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要讲述 LVS-NAT 原理介绍和配置实践，HA 高可用方案基于 Keepalived。</p><blockquote><p>LVS-NAT 原理介绍和配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 03 日 - 拆分 LVS-Keepalived 中 LVS-NAT<br>2019 年 08 月 23 日 - 更新 LVS/NAT、LVS/DR、LVS/TUN 三种模式的原理和配置实践<br>2018 年 12 月 03 日 - 精简和更新配置步骤<br>2018 年 07 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/lvs-nat/">https://wsgzao.github.io/post/lvs-nat/</a></p><p><strong> 扩展阅读 </strong></p><p>LVS - <a href="http://www.linuxvirtualserver.org/zh/index.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/zh/index.html</a><br>Keepalived - <a href="http://www.keepalived.org/" target="_blank" rel="noopener">http://www.keepalived.org/</a></p><hr><h2 id="ReadMe"><a href="#ReadMe" class="headerlink" title="ReadMe"></a>ReadMe</h2><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>Virtual Server via NAT - <a href="http://www.linuxvirtualserver.org/VS-NAT.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/VS-NAT.html</a><br>LVS 和 Keepalived 官方中文手册 PDF - <a href="https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg</a></p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><blockquote><p>以下术语涉及 LVS 三种工作模式的原理</p></blockquote><ul><li>LB (Load Balancer 负载均衡) </li><li>HA (High Available 高可用) </li><li>Failover (失败切换) </li><li>Cluster (集群) </li><li>LVS (Linux Virtual Server Linux 虚拟服务器) </li><li>DS (Director Server)，指的是前端负载均衡器节点</li><li>RS (Real Server)，后端真实的工作服务器</li><li>VIP (Virtual IP)，虚拟的 IP 地址，向外部直接面向用户请求，作为用户请求的目标的 IP 地址</li><li>DIP (Director IP)，主要用于和内部主机通讯的 IP 地址</li><li>RIP (Real Server IP)，后端服务器的 IP 地址</li><li>CIP (Client IP)，访问客户端的 IP 地址</li></ul><h2 id="LVS-三种模式的主要区别"><a href="#LVS-三种模式的主要区别" class="headerlink" title="LVS 三种模式的主要区别"></a>LVS 三种模式的主要区别</h2><table><thead><tr><th></th><th></th><th>VS/NAT</th><th>VS/TUN</th><th>VS/DR</th></tr></thead><tbody><tr><td></td><td>server</td><td>any</td><td>tunneling</td><td>non-arp device</td><td></td></tr><tr><td></td><td>server network</td><td>private</td><td>LAN/WAN</td><td>LAN</td><td></td></tr><tr><td></td><td>server number</td><td>low (10~20)</td><td>high</td><td>high</td><td></td></tr><tr><td></td><td>server gateway</td><td>load balancer</td><td>own router</td><td>own router</td><td></td></tr></tbody></table><table><thead><tr><th></th><th>模式与特点</th><th>NAT 模式</th><th>IPIP 模式</th><th>DR 模式</th></tr></thead><tbody><tr><td></td><td>对服务器的要求</td><td>服务节点可以使任何操作系统</td><td>必须支持 IP 隧道，目前只有 Linux 系统支持</td><td>服务器节点支持虚拟网卡设备，能够禁用设备的 ARP 响应</td><td></td></tr><tr><td></td><td>网络要求</td><td>拥有私有 IP 地址的局域网络</td><td>拥有合法 IP 地址的局域，网或广域网</td><td>拥有合法 IP 地址的局域，服务器节点与负载均衡器必须在同一个网段</td><td></td></tr><tr><td></td><td>通常支持节点数量</td><td>10 到 20 个，根据负载均衡器的处理能力而定</td><td>较高，可以支持 100 个服务节点</td><td>较高，可以支持 100 个服务节点</td><td></td></tr><tr><td></td><td>网关</td><td>负载均衡器为服务器节点网关</td><td>服务器的节点同自己的网关或者路由器连接，不经过负载均衡器</td><td>服务节点同自己的网关或者路由器连接，不经过负载均衡器</td><td></td></tr><tr><td></td><td>服务节点安全性</td><td>较好，采用内部 IP，服务节点隐蔽</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td></td></tr><tr><td></td><td>IP 要求</td><td>仅需要一个合法的 IP 地址作为 VIP 地址</td><td>除了 VIPO 地址外，每个服务器界定啊需要拥有合法的 IP 地址，可以直接从路由到客户端</td><td>除了 VIP 外，每个服务节点需拥有合法的 IP 地址，可以直接从路由到客户端</td><td></td></tr><tr><td></td><td>特点</td><td>地址转换</td><td>封装 IP</td><td>修改 MAC 地址</td><td></td></tr><tr><td></td><td>配置复杂度</td><td>简单</td><td>复杂</td><td>复杂</td><td></td></tr></tbody></table><h2 id="LVS-基本工作原理"><a href="#LVS-基本工作原理" class="headerlink" title="LVS 基本工作原理"></a>LVS 基本工作原理</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823142206.png" alt=""></p><ol><li>当用户向负载均衡调度器（Director Server）发起请求，调度器将请求发往至内核空间</li><li>PREROUTING 链首先会接收到用户请求，判断目标 IP 确定是本机 IP，将数据包发往 INPUT 链</li><li>IPVS 是工作在 INPUT 链上的，当用户请求到达 INPUT 时，IPVS 会将用户请求和自己已定义好的集群服务进行比对，如果用户请求的就是定义的集群服务，那么此时 IPVS 会强行修改数据包里的目标 IP 地址及端口，并将新的数据包发往 POSTROUTING 链</li><li>POSTROUTING 链接收数据包后发现目标 IP 地址刚好是自己的后端服务器，那么此时通过选路，将数据包最终发送给后端的服务器</li></ol><h3 id="LVS-的组成"><a href="#LVS-的组成" class="headerlink" title="LVS 的组成"></a>LVS 的组成</h3><blockquote><p>LVS 由 2 部分程序组成，包括 ipvs 和 ipvsadm。</p></blockquote><ol><li>ipvs(ip virtual server)：一段代码工作在内核空间，叫 ipvs，是真正生效实现调度的代码。</li><li>ipvsadm：另外一段是工作在用户空间，叫 ipvsadm，负责为 ipvs 内核框架编写规则，定义谁是集群服务，而谁是后端真实的服务器 (Real Server)</li></ol><h3 id="LVS-和-Keepalived"><a href="#LVS-和-Keepalived" class="headerlink" title="LVS 和 Keepalived"></a>LVS 和 Keepalived</h3><p>在 lvs+keepalived 环境里面，lvs 主要的工作是提供调度算法，把客户端请求按照需求调度在 real 服务器，keepalived 主要的工作是提供 lvs 控制器的一个冗余，并且对 real 服务器做健康检查，发现不健康的 real 服务器，就把它从 lvs 集群中剔除，real 服务器只负责提供服务。</p><h3 id="LVS-NAT"><a href="#LVS-NAT" class="headerlink" title="LVS/NAT"></a>LVS/NAT</h3><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823142555.png" alt=""></p><blockquote><p>重点理解 NAT 方式的实现原理和数据包的改变。</p></blockquote><p>(1). 当用户请求到达 Director Server，此时请求的数据报文会先到内核空间的 PREROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 VIP<br>(2). PREROUTING 检查发现数据包的目标 IP 是本机，将数据包送至 INPUT 链<br>(3). IPVS 比对数据包请求的服务是否为集群服务，若是，修改数据包的目标 IP 地址为后端服务器 IP，然后将数据包发至 POSTROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 RIP<br>(4). POSTROUTING 链通过选路，将数据包发送给 Real Server<br>(5). Real Server 比对发现目标为自己的 IP，开始构建响应报文发回给 Director Server。 此时报文的源 IP 为 RIP，目标 IP 为 CIP<br>(6). Director Server 在响应客户端前，此时会将源 IP 地址修改为自己的 VIP 地址，然后响应给客户端。 此时报文的源 IP 为 VIP，目标 IP 为 CIP</p><blockquote><p>LVS/NAT 模型的特性</p></blockquote><ul><li>RS 应该使用私有地址，RS 的网关必须指向 DIP</li><li>DIP 和 RIP 必须在同一个网段内</li><li>请求和响应报文都需要经过 Director Server，高负载场景中，Director Server 易成为性能瓶颈</li><li>支持端口映射</li><li>RS 可以使用任意操作系统</li><li>缺陷：对 Director Server 压力会比较大，请求和响应都需经过 director server</li></ul><p>NAT（Network Address Translation 网络地址转换）是一种外网和内外地址映射的技术，内网可以是私有网址，外网可以使用 NAT 方法修改数据报头，让外网与内网能够互相通信。NAT 模式下，网络数据报的进出都要经过 LVS 的处理。LVS 需作为 RS（真实服务器）的网关。当包到达 LVS 时，LVS 做目标地址转换（DNAT），将目标 IP 改为 RS 的 IP。RS 接收到包以后，仿佛是客户端直接发给它的一样。RS 处理完，返回响应时，源 IP 是 RS IP，目标 IP 是客户端的 IP。这时 RS 的包通过网（LVS）中转，LVS 会做源地址转换（SNAT），将包的源地址改为 VIP，这样，这个包对客户端看起来就仿佛是 LVS 直接返回给它的。客户端无法感知到后端 RS 的存在。</p><p>（1）RIP 和 DIP 必须在同一个 IP 网络，且应该使用私网地址；RS 的网关要指向 DIP；<br>（2）请求报文和响应报文都必须经由 Director 转发；Director 易于成为系统瓶颈；<br>（3）支持端口映射，可修改请求报文的目标 PORT；<br>（4）vs 必须是 Linux 系统，rs 可以是任意系统；</p><p>缺点：在整个过程中，所有输入输出的流量都要经过 LVS 调度服务器。显然，LVS 调度服务器的网络 I/O 压力将会非常大，因此很容易成为瓶颈，特别是对于请求流量很小，而响应流量很大的 Web 类应用来说尤为如此。</p><p>优点：NAT 模式的优点在于配置及管理简单，由于了使用 NAT 技术，LVS 调度器及应用服务器可以在不同网段中，网络架构更灵活，应用服务器只需要进行简单的网络设定即可加入集群。</p><h2 id="配置-LVS-NAT"><a href="#配置-LVS-NAT" class="headerlink" title="配置 LVS-NAT"></a>配置 LVS-NAT</h2><h3 id="DS"><a href="#DS" class="headerlink" title="DS"></a>DS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install keepalived</span></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install keepalived ipvsadm</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install keepalived ipvsadm</span><br><span class="line"></span><br><span class="line"><span class="comment"># update iptables</span></span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># For keepalived:</span></span><br><span class="line"><span class="comment"># allow vrrp </span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line"><span class="comment"># allow multicast</span></span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># reload iptables</span></span><br><span class="line">service iptables reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># open ip_forward</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="comment"># edit sysctl.conf</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived for lvs-nat</span></span><br><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group NC-MAIN-API &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        NC-MAIN-API-PUB</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance NC-MAIN-API-PUB &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond1</span><br><span class="line">    virtual_router_id 222</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xx.xx.xx.xx/25 dev bond1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server xx.xx.xx.xx 15000 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.71.12.69 15000 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 15000</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.71.12.76 15000 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 15000</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable and start keepalived</span></span><br><span class="line">systemctl start keepalived</span><br><span class="line">systemctl <span class="built_in">enable</span> keepalived</span><br><span class="line">watch ipvsadm -L -n --stats</span><br></pre></td></tr></table></figure><h3 id="RS"><a href="#RS" class="headerlink" title="RS"></a>RS</h3><p>修改默认网关指向 NAT 的 VIP 地址</p><h2 id="LVS-和-Keepalived-系列"><a href="#LVS-和-Keepalived-系列" class="headerlink" title="LVS 和 Keepalived 系列"></a>LVS 和 Keepalived 系列</h2><p><a href="https://wsgzao.github.io/post/lvs-keepalived/">LVS 和 Keepalived 的原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs/">LVS 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/keepalived/">Keepalived 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-nat/">LVS-NAT 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-dr/">LVS-DR 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-tun/">LVS-TUN 原理介绍和配置实践</a></p>]]></content>
    
    <summary type="html">
    
      LVS-NAT原理介绍和配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>LVS 原理介绍和配置实践</title>
    <link href="https://wsgzao.github.io/post/lvs/"/>
    <id>https://wsgzao.github.io/post/lvs/</id>
    <published>2019-09-03T07:59:49.000Z</published>
    <updated>2019-09-04T08:30:56.333Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>负载均衡技术 Load Balance 简称 LB 是构建大型网站必不可少的架构策略之一。它的目的是把用户的请求分发到多台后端的设备上，用以均衡服务器的负载。我们可以把负载均衡器划分为两大类：硬件负载均衡器和软件负载均衡器，这里重点介绍软件实现方法中的 LVS。</p><blockquote><p>LVS 原理介绍和配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 03 日 - 拆分 LVS-Keepalived 中 LVS<br>2019 年 08 月 23 日 - 更新 LVS/NAT、LVS/DR、LVS/TUN 三种模式的原理和配置实践<br>2018 年 12 月 03 日 - 精简和更新配置步骤<br>2018 年 07 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/lvs/">https://wsgzao.github.io/post/lvs/</a></p><p><strong> 扩展阅读 </strong></p><p>LVS - <a href="http://www.linuxvirtualserver.org/zh/index.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/zh/index.html</a><br>Keepalived - <a href="http://www.keepalived.org/" target="_blank" rel="noopener">http://www.keepalived.org/</a></p><hr><h2 id="ReadMe"><a href="#ReadMe" class="headerlink" title="ReadMe"></a>ReadMe</h2><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>LVS - <a href="http://www.linuxvirtualserver.org/Documents.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/Documents.html</a><br>How virtual server works? - <a href="http://www.linuxvirtualserver.org/how.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/how.html</a><br>LVS 和 Keepalived 官方中文手册 PDF - <a href="https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg</a></p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><blockquote><p>以下术语涉及 LVS 三种工作模式的原理</p></blockquote><ul><li>LB (Load Balancer 负载均衡) </li><li>HA (High Available 高可用) </li><li>Failover (失败切换) </li><li>Cluster (集群) </li><li>LVS (Linux Virtual Server Linux 虚拟服务器) </li><li>DS (Director Server)，指的是前端负载均衡器节点</li><li>RS (Real Server)，后端真实的工作服务器</li><li>VIP (Virtual IP)，虚拟的 IP 地址，向外部直接面向用户请求，作为用户请求的目标的 IP 地址</li><li>DIP (Director IP)，主要用于和内部主机通讯的 IP 地址</li><li>RIP (Real Server IP)，后端服务器的 IP 地址</li><li>CIP (Client IP)，访问客户端的 IP 地址</li></ul><h2 id="负载均衡-LB"><a href="#负载均衡-LB" class="headerlink" title="负载均衡(LB)"></a>负载均衡(LB)</h2><blockquote><p>负载均衡实现方法有两种：硬件实现和软件实现</p></blockquote><p>硬件比较常见的有：</p><ol><li>F5 Big-IP</li><li>Citrix Netscaler</li></ol><p>软件比较常见的有：</p><ol><li>LVS（Linux Virtual Server）</li><li>HAProxy</li><li>Nginx</li></ol><p>LVS 特点是：</p><ol><li>首先它是基于 4 层的网络协议的，抗负载能力强，对于服务器的硬件要求除了网卡外，其他没有太多要求；</li><li>配置性比较低，这是一个缺点也是一个优点，因为没有可太多配置的东西，大大减少了人为出错的几率；</li><li>应用范围比较广，不仅仅对 web 服务做负载均衡，还可以对其他应用（mysql）做负载均衡；</li><li>LVS 架构中存在一个虚拟 IP 的概念，需要向 IDC 多申请一个 IP 来做虚拟 IP。</li></ol><p>Nginx 负载均衡器的特点是：</p><ol><li>工作在网络的 7 层之上，可以针对 http 应用做一些分流的策略，比如针对域名、目录结构；</li><li>Nginx 安装和配置比较简单，测试起来比较方便；</li><li>也可以承担高的负载压力且稳定，一般能支撑超过上万次的并发；</li><li>Nginx 可以通过端口检测到服务器内部的故障，比如根据服务器处理网页返回的状态码、超时等等，并且会把返回错误的请求重新提交到另一个节点，不过其中缺点就是不支持 url 来检测；</li><li>Nginx 对请求的异步处理可以帮助节点服务器减轻负载；</li><li>Nginx 能支持 http 和 Email，这样就在适用范围上面小很多；</li><li>默认有三种调度算法: 轮询、weight 以及 ip_hash（可以解决会话保持的问题），还可以支持第三方的 fair 和 url_hash 等调度算法；</li></ol><p>HAProxy 的特点是：</p><ol><li>HAProxy 是工作在网络 7 层之上；</li><li>支持 Session 的保持，Cookie 的引导等；</li><li>支持 url 检测后端的服务器出问题的检测会有很好的帮助；</li><li>支持的负载均衡算法：动态加权轮循(Dynamic Round Robin)，加权源地址哈希(Weighted Source Hash)，加权 URL 哈希和加权参数哈希(Weighted Parameter Hash)；</li><li>单纯从效率上来讲 HAProxy 更会比 Nginx 有更出色的负载均衡速度；</li><li>HAProxy 可以对 Mysql 进行负载均衡，对后端的 DB 节点进行检测和负载均衡。</li></ol><h2 id="LVS-简介"><a href="#LVS-简介" class="headerlink" title="LVS 简介"></a>LVS 简介</h2><p>LVS 是一个开源的软件，可以实现 LINUX 平台下的简单负载均衡。LVS 是 Linux Virtual Server 的缩写，意思是 Linux 虚拟服务器。</p><p>LB 集群的架构和原理很简单，就是当用户的请求过来时，会直接分发到 Director Server 上，然后它把用户的请求根据设置好的调度算法，智能均衡地分发到后端真正服务器 (real server) 上。为了避免不同机器上用户请求得到的数据不一样，需要用到了共享存储，这样保证所有用户请求的数据是一样的。</p><p>LVS 是 Linux Virtual Server 的简称，也就是 Linux 虚拟服务器。这是一个由章文嵩博士发起的一个开源项目，它的官方网站是 <a href="http://www.linuxvirtualserver.org" target="_blank" rel="noopener">http://www.linuxvirtualserver.org</a> 现在 LVS 已经是 Linux 内核标准的一部分。使用 LVS 可以达到的技术目标是：通过 LVS 达到的负载均衡技术和 Linux 操作系统实现一个高性能高可用的 Linux 服务器集群，它具有良好的可靠性、可扩展性和可操作性。从而以低廉的成本实现最优的性能。LVS 是一个实现负载均衡集群的开源软件项目，LVS 架构从逻辑上可分为调度层、Server 集群层和共享存储。</p><blockquote><p>目前有三种 IP 负载均衡技术（VS/NAT,VS/TUN,VS/DR）</p></blockquote><p>Virtual Server via Network Address Translation（VS/NAT）<br>通过网络地址转换，调度器重写请求报文的目标地址，根据预设的调度算法，将请求分派给后端的真实服务器；真实服务器的响应报文通过调度器时，报文的源地址被重写，再返回给客户，完成整个负载调度过程。</p><p>Virtual Server via IP Tunneling（VS/TUN）<br>采用 NAT 技术时，由于请求和响应报文都必须经过调度器地址重写，当客户请求越来越多时，调度器的处理能力将成为瓶颈。为了解决这个问题，调度器把请求报 文通过 IP 隧道转发至真实服务器，而真实服务器将响应直接返回给客户，所以调度器只处理请求报文。由于一般网络服务应答比请求报文大许多，采用 VS/TUN 技术后，集群系统的最大吞吐量可以提高 10 倍。</p><p>Virtual Server via Direct Routing（VS/DR）<br>VS/DR 通过改写请求报文的 MAC 地址，将请求发送到真实服务器，而真实服务器将响应直接返回给客户。同 VS/TUN 技术一样，VS/DR 技术可极大地 提高集群系统的伸缩性。这种方法没有 IP 隧道的开销，对集群中的真实服务器也没有必须支持 IP 隧道协议的要求，但是要求调度器与真实服务器都有一块网卡连 在同一物理网段上。</p><blockquote><p>三种模式的主要区别</p></blockquote><table><thead><tr><th></th><th></th><th>VS/NAT</th><th>VS/TUN</th><th>VS/DR</th></tr></thead><tbody><tr><td></td><td>server</td><td>any</td><td>tunneling</td><td>non-arp device</td><td></td></tr><tr><td></td><td>server network</td><td>private</td><td>LAN/WAN</td><td>LAN</td><td></td></tr><tr><td></td><td>server number</td><td>low (10~20)</td><td>high</td><td>high</td><td></td></tr><tr><td></td><td>server gateway</td><td>load balancer</td><td>own router</td><td>own router</td><td></td></tr></tbody></table><table><thead><tr><th></th><th>模式与特点</th><th>NAT 模式</th><th>IPIP 模式</th><th>DR 模式</th></tr></thead><tbody><tr><td></td><td>对服务器的要求</td><td>服务节点可以使任何操作系统</td><td>必须支持 IP 隧道，目前只有 Linux 系统支持</td><td>服务器节点支持虚拟网卡设备，能够禁用设备的 ARP 响应</td><td></td></tr><tr><td></td><td>网络要求</td><td>拥有私有 IP 地址的局域网络</td><td>拥有合法 IP 地址的局域，网或广域网</td><td>拥有合法 IP 地址的局域，服务器节点与负载均衡器必须在同一个网段</td><td></td></tr><tr><td></td><td>通常支持节点数量</td><td>10 到 20 个，根据负载均衡器的处理能力而定</td><td>较高，可以支持 100 个服务节点</td><td>较高，可以支持 100 个服务节点</td><td></td></tr><tr><td></td><td>网关</td><td>负载均衡器为服务器节点网关</td><td>服务器的节点同自己的网关或者路由器连接，不经过负载均衡器</td><td>服务节点同自己的网关或者路由器连接，不经过负载均衡器</td><td></td></tr><tr><td></td><td>服务节点安全性</td><td>较好，采用内部 IP，服务节点隐蔽</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td></td></tr><tr><td></td><td>IP 要求</td><td>仅需要一个合法的 IP 地址作为 VIP 地址</td><td>除了 VIPO 地址外，每个服务器界定啊需要拥有合法的 IP 地址，可以直接从路由到客户端</td><td>除了 VIP 外，每个服务节点需拥有合法的 IP 地址，可以直接从路由到客户端</td><td></td></tr><tr><td></td><td>特点</td><td>地址转换</td><td>封装 IP</td><td>修改 MAC 地址</td><td></td></tr><tr><td></td><td>配置复杂度</td><td>简单</td><td>复杂</td><td>复杂</td><td></td></tr></tbody></table><h3 id="基本工作原理"><a href="#基本工作原理" class="headerlink" title="基本工作原理"></a>基本工作原理</h3><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823142206.png" alt=""></p><ol><li>当用户向负载均衡调度器（Director Server）发起请求，调度器将请求发往至内核空间</li><li>PREROUTING 链首先会接收到用户请求，判断目标 IP 确定是本机 IP，将数据包发往 INPUT 链</li><li>IPVS 是工作在 INPUT 链上的，当用户请求到达 INPUT 时，IPVS 会将用户请求和自己已定义好的集群服务进行比对，如果用户请求的就是定义的集群服务，那么此时 IPVS 会强行修改数据包里的目标 IP 地址及端口，并将新的数据包发往 POSTROUTING 链</li><li>POSTROUTING 链接收数据包后发现目标 IP 地址刚好是自己的后端服务器，那么此时通过选路，将数据包最终发送给后端的服务器</li></ol><h3 id="LVS-的组成"><a href="#LVS-的组成" class="headerlink" title="LVS 的组成"></a>LVS 的组成</h3><blockquote><p>LVS 由 2 部分程序组成，包括 ipvs 和 ipvsadm。</p></blockquote><ol><li>ipvs(ip virtual server)：一段代码工作在内核空间，叫 ipvs，是真正生效实现调度的代码。</li><li>ipvsadm：另外一段是工作在用户空间，叫 ipvsadm，负责为 ipvs 内核框架编写规则，定义谁是集群服务，而谁是后端真实的服务器(Real Server)</li></ol><h2 id="LVS-的-3-种工作模式"><a href="#LVS-的-3-种工作模式" class="headerlink" title="LVS 的 3 种工作模式"></a>LVS 的 3 种工作模式</h2><blockquote><p>原生只有 3 种模式(NAT,TUN,DR), fullnat 工作模式默认不支持</p></blockquote><p>LVS 是四层负载均衡，也就是说建立在 OSI 模型的第四层——传输层之上，传输层上有我们熟悉的 TCP/UDP，LVS 支持 TCP/UDP 的负载均衡。因为 LVS 是四层负载均衡，因此它相对于其它高层负载均衡的解决办法，比如 DNS 域名轮流解析、应用层负载的调度、客户端的调度等，它的效率是非常高的。</p><p>LVS 的 IP 负载均衡技术是通过 IPVS 模块来实现的，IPVS 是 LVS 集群系统的核心软件，它的主要作用是：安装在 Director Server 上，同时在 Director Server 上虚拟出一个 IP 地址，用户必须通过这个虚拟的 IP 地址访问服务。这个虚拟 IP 一般称为 LVS 的 VIP，即 Virtual IP。访问的请求首先经过 VIP 到达负载调度器，然后由负载调度器从 Real Server 列表中选取一个服务节点响应用户的请求。 当用户的请求到达负载调度器后，调度器如何将请求发送到提供服务的 Real Server 节点，而 Real Server 节点如何返回数据给用户，是 IPVS 实现的重点技术，IPVS 实现负载均衡机制有几种，分别是 NAT、DR、TUN 及 FULLNAT。</p><h3 id="LVS-NAT"><a href="#LVS-NAT" class="headerlink" title="LVS/NAT"></a>LVS/NAT</h3><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823142555.png" alt=""></p><blockquote><p>重点理解 NAT 方式的实现原理和数据包的改变。</p></blockquote><p>(1). 当用户请求到达 Director Server，此时请求的数据报文会先到内核空间的 PREROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 VIP<br>(2). PREROUTING 检查发现数据包的目标 IP 是本机，将数据包送至 INPUT 链<br>(3). IPVS 比对数据包请求的服务是否为集群服务，若是，修改数据包的目标 IP 地址为后端服务器 IP，然后将数据包发至 POSTROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 RIP<br>(4). POSTROUTING 链通过选路，将数据包发送给 Real Server<br>(5). Real Server 比对发现目标为自己的 IP，开始构建响应报文发回给 Director Server。 此时报文的源 IP 为 RIP，目标 IP 为 CIP<br>(6). Director Server 在响应客户端前，此时会将源 IP 地址修改为自己的 VIP 地址，然后响应给客户端。 此时报文的源 IP 为 VIP，目标 IP 为 CIP</p><blockquote><p>LVS/NAT 模型的特性</p></blockquote><ul><li>RS 应该使用私有地址，RS 的网关必须指向 DIP</li><li>DIP 和 RIP 必须在同一个网段内</li><li>请求和响应报文都需要经过 Director Server，高负载场景中，Director Server 易成为性能瓶颈</li><li>支持端口映射</li><li>RS 可以使用任意操作系统</li><li>缺陷：对 Director Server 压力会比较大，请求和响应都需经过 director server</li></ul><p>NAT（Network Address Translation 网络地址转换）是一种外网和内外地址映射的技术，内网可以是私有网址，外网可以使用 NAT 方法修改数据报头，让外网与内网能够互相通信。NAT 模式下，网络数据报的进出都要经过 LVS 的处理。LVS 需作为 RS（真实服务器）的网关。当包到达 LVS 时，LVS 做目标地址转换（DNAT），将目标 IP 改为 RS 的 IP。RS 接收到包以后，仿佛是客户端直接发给它的一样。RS 处理完，返回响应时，源 IP 是 RS IP，目标 IP 是客户端的 IP。这时 RS 的包通过网（LVS）中转，LVS 会做源地址转换（SNAT），将包的源地址改为 VIP，这样，这个包对客户端看起来就仿佛是 LVS 直接返回给它的。客户端无法感知到后端 RS 的存在。</p><p>（1）RIP 和 DIP 必须在同一个 IP 网络，且应该使用私网地址；RS 的网关要指向 DIP；<br>（2）请求报文和响应报文都必须经由 Director 转发；Director 易于成为系统瓶颈；<br>（3）支持端口映射，可修改请求报文的目标 PORT；<br>（4）vs 必须是 Linux 系统，rs 可以是任意系统；</p><p>缺点：在整个过程中，所有输入输出的流量都要经过 LVS 调度服务器。显然，LVS 调度服务器的网络 I/O 压力将会非常大，因此很容易成为瓶颈，特别是对于请求流量很小，而响应流量很大的 Web 类应用来说尤为如此。</p><p>优点：NAT 模式的优点在于配置及管理简单，由于了使用 NAT 技术，LVS 调度器及应用服务器可以在不同网段中，网络架构更灵活，应用服务器只需要进行简单的网络设定即可加入集群。</p><h3 id="LVS-DR"><a href="#LVS-DR" class="headerlink" title="LVS/DR"></a>LVS/DR</h3><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823150520.png" alt=""></p><blockquote><p>重点将请求报文的目标 MAC 地址设定为挑选出的 RS 的 MAC 地址</p></blockquote><p>(1) 当用户请求到达 Director Server，此时请求的数据报文会先到内核空间的 PREROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 VIP<br>(2) PREROUTING 检查发现数据包的目标 IP 是本机，将数据包送至 INPUT 链<br>(3) IPVS 比对数据包请求的服务是否为集群服务，若是，将请求报文中的源 MAC 地址修改为 DIP 的 MAC 地址，将目标 MAC 地址修改 RIP 的 MAC 地址，然后将数据包发至 POSTROUTING 链。 此时的源 IP 和目的 IP 均未修改，仅修改了源 MAC 地址为 DIP 的 MAC 地址，目标 MAC 地址为 RIP 的 MAC 地址<br>(4) 由于 DS 和 RS 在同一个网络中，所以是通过二层来传输。POSTROUTING 链检查目标 MAC 地址为 RIP 的 MAC 地址，那么此时数据包将会发至 Real Server。<br>(5) RS 发现请求报文的 MAC 地址是自己的 MAC 地址，就接收此报文。处理完成之后，将响应报文通过 lo 接口传送给 eth0 网卡然后向外发出。 此时的源 IP 地址为 VIP，目标 IP 为 CIP<br>(6) 响应报文最终送达至客户端</p><blockquote><p>LVS/DR 模型的特性</p></blockquote><ul><li><strong> 特点 1</strong>：保证前端路由将目标地址为 VIP 报文统统发给 Director Server，而不是 RS</li><li>RS 可以使用私有地址；也可以是公网地址，如果使用公网地址，此时可以通过互联网对 RIP 进行直接访问</li><li>RS 跟 Director Server 必须在同一个物理网络中</li><li>所有的请求报文经由 Director Server，但响应报文必须不能进过 Director Server</li><li>不支持地址转换，也不支持端口映射</li><li>RS 可以是大多数常见的操作系统</li><li>RS 的网关绝不允许指向 DIP(因为我们不允许他经过 director)</li><li>RS 上的 lo 接口配置 VIP 的 IP 地址</li><li>缺陷：RS 和 DS 必须在同一机房中</li></ul><blockquote><p>特点 1 的解决方案：</p></blockquote><ul><li>在前端路由器做静态地址路由绑定，将对于 VIP 的地址仅路由到 Director Server</li><li>存在问题：用户未必有路由操作权限，因为有可能是运营商提供的，所以这个方法未必实用</li><li>arptables：在 arp 的层次上实现在 ARP 解析时做防火墙规则，过滤 RS 响应 ARP 请求。这是由 iptables 提供的</li><li>修改 RS 上内核参数（arp_ignore 和 arp_announce）将 RS 上的 VIP 配置在 lo 接口的别名上，并限制其不能响应对 VIP 地址解析请求。</li></ul><p>DR（Direct Routing 直接路由模式）此模式时 LVS 调度器只接收客户发来的请求并将请求转发给后端服务器，后端服务器处理请求后直接把内容直接响应给客户，而不用再次经过 LVS 调度器。LVS 只需要将网络帧的 MAC 地址修改为某一台后端服务器 RS 的 MAC，该包就会被转发到相应的 RS 处理，注意此时的源 IP 和目标 IP 都没变。RS 收到 LVS 转发来的包时，链路层发现 MAC 是自己的，到上面的网络层，发现 IP 也是自己的，于是这个包被合法地接受，RS 感知不到前面有 LVS 的存在。而当 RS 返回响应时，只要直接向源 IP（即用户的 IP）返回即可，不再经过 LVS。</p><p>注意：<br>(1) 确保前端路由器将目标 IP 为 VIP 的请求报文发往 Director：<br>    (a) 在前端网关做静态绑定；<br>    (b) 在 RS 上使用 arptables；<br>    (c) 在 RS 上修改内核参数以限制 arp 通告及应答级别；<br>            arp_announce<br>            arp_ignore<br>(2) RS 的 RIP 可以使用私网地址，也可以是公网地址；RIP 与 DIP 在同一 IP 网络；RIP 的网关不能指向 DIP，以确保响应报文不会经由 Director；<br>(3) RS 跟 Director 要在同一个物理网络；<br>(4) 请求报文要经由 Director，但响应不能经由 Director，而是由 RS 直接发往 Client；<br>(5) 此模式不支持端口映射；</p><p>缺点：唯一的缺陷在于它要求 LVS 调度器及所有应用服务器在同一个网段中，因此不能实现集群的跨网段应用。</p><p>优点：可见在处理过程中 LVS Route 只处理请求的直接路由转发，所有响应结果由各个应用服务器自行处理，并对用户进行回复，网络流量将集中在 LVS 调度器之上。</p><h3 id="LVS-TUN"><a href="#LVS-TUN" class="headerlink" title="LVS/TUN"></a>LVS/TUN</h3><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823151135.png" alt=""></p><blockquote><p>在原有的 IP 报文外再次封装多一层 IP 首部，内部 IP 首部(源地址为 CIP，目标 IIP 为 VIP)，外层 IP 首部(源地址为 DIP，目标 IP 为 RIP)</p></blockquote><p>(1) 当用户请求到达 Director Server，此时请求的数据报文会先到内核空间的 PREROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 VIP 。<br>(2) PREROUTING 检查发现数据包的目标 IP 是本机，将数据包送至 INPUT 链<br>(3) IPVS 比对数据包请求的服务是否为集群服务，若是，在请求报文的首部再次封装一层 IP 报文，封装源 IP 为 DIP，目标 IP 为 RIP。然后发至 POSTROUTING 链。 此时源 IP 为 DIP，目标 IP 为 RIP<br>(4) POSTROUTING 链根据最新封装的 IP 报文，将数据包发至 RS（因为在外层封装多了一层 IP 首部，所以可以理解为此时通过隧道传输）。 此时源 IP 为 DIP，目标 IP 为 RIP<br>(5) RS 接收到报文后发现是自己的 IP 地址，就将报文接收下来，拆除掉最外层的 IP 后，会发现里面还有一层 IP 首部，而且目标是自己的 lo 接口 VIP，那么此时 RS 开始处理此请求，处理完成之后，通过 lo 接口送给 eth0 网卡，然后向外传递。 此时的源 IP 地址为 VIP，目标 IP 为 CIP<br>(6) 响应报文最终送达至客户端</p><blockquote><p>LVS/TUN 模型特性</p></blockquote><ul><li>RIP、VIP、DIP 全是公网地址</li><li>RS 的网关不会也不可能指向 DIP</li><li>所有的请求报文经由 Director Server，但响应报文必须不能进过 Director Server</li><li>不支持端口映射</li><li>RS 的系统必须支持隧道</li></ul><blockquote><p>其实企业中最常用的是 DR 实现方式，而 NAT 配置上比较简单和方便，后边实践中会总结 DR 和 NAT 具体使用配置过程。</p></blockquote><p>TUN（virtual server via ip tunneling　IP 隧道）调度器把请求的报文通过 IP 隧道转发到真实的服务器。真实的服务器将响应处理后的数据直接返回给客户端。这样调度器就只处理请求入站报文。此转发方式不修改请求报文的 IP 首部（源 IP 为 CIP，目标 IP 为 VIP），而在原 IP 报文之外再封装一个 IP 首部（源 IP 是 DIP，目标 IP 是 RIP），将报文发往挑选出的目标 RS；RS 直接响应给客户端（源 IP 是 VIP，目标 IP 是 CIP），由于一般网络服务应答数据比请求报文大很多，采用 lvs-tun 模式后，集群系统的最大吞吐量可以提高 10 倍</p><p>注意：<br>(1) DIP, VIP, RIP 都应该是公网地址；<br>(2) RS 的网关不能，也不可能指向 DIP；<br>(3) 请求报文要经由 Director，但响应不能经由 Director；<br>(4) 此模式不支持端口映射；<br>(5) RS 的操作系统得支持隧道功能</p><p>缺点: 由于后端服务器 RS 处理数据后响应发送给用户，此时需要租借大量 IP（特别是后端服务器使用较多的情况下）。</p><p>优点: 实现 lvs-tun 模式时，LVS 调度器将 TCP/IP 请求进行重新封装并转发给后端服务器，由目标应用服务器直接回复用户。应用服务器之间是通过 IP 隧道来进行转发，故两者可以存在于不同的网段中。</p><h3 id="LVS-FULLNAT"><a href="#LVS-FULLNAT" class="headerlink" title="LVS/FULLNAT"></a>LVS/FULLNAT</h3><blockquote><p>lvs-fullnat 工作模式默认不支持</p></blockquote><p>此模式类似 DNAT，它通过同时修改请求报文的源 IP 地址和目标 IP 地址进行转发</p><p>注意：<br>(1) VIP 是公网地址，RIP 和 DIP 是私网地址，且通常不在同一 IP 网络；因此，RIP 的网关一般不会指向 DIP；<br>(2) RS 收到的请求报文源地址是 DIP，因此，只需响应给 DIP；但 Director 还要将其发往 Client；<br>(3) 请求和响应报文都经由 Director；<br>(4) 支持端口映射；</p><h2 id="LVS-的-8-种调度算法"><a href="#LVS-的-8-种调度算法" class="headerlink" title="LVS 的 8 种调度算法"></a>LVS 的 8 种调度算法</h2><blockquote><p>八种调度算法（rr,wrr,lc,wlc,lblc,lblcr,dh,sh）</p></blockquote><p>针对不同的网络服务需求和服务器配置，IPVS 调度器实现了如下八种负载调度算法：</p><p>轮叫调度 rr（Round Robin）<br>调度器通过 “轮叫” 调度算法将外部请求按顺序轮流分配到集群中的真实服务器上，它均等地对待每一台服务器，而不管服务器上实际的连接数和系统负载。</p><p>加权轮叫 wrr（Weighted Round Robin）<br>调度器通过 “加权轮叫” 调度算法根据真实服务器的不同处理能力来调度访问请求。这样可以保证处理能力强的服务器处理更多的访问流量。调度器可以自动问询真实服务器的负载情况，并动态地调整其权值。</p><p>最少链接 lc（Least Connections）<br>调度器通过 “最少连接” 调度算法动态地将网络请求调度到已建立的链接数最少的服务器上。如果集群系统的真实服务器具有相近的系统性能，采用 “最小连接” 调度算法可以较好地均衡负载。</p><p>加权最少链接 wlc（Weighted Least Connections）<br>在集群系统中的服务器性能差异较大的情况下，调度器采用 “加权最少链接” 调度算法优化负载均衡性能，具有较高权值的服务器将承受较大比例的活动连接负载。调度器可以自动问询真实服务器的负载情况，并动态地调整其权值。</p><p>基于局部性的最少链接 lblc（Locality-Based Least Connections）<br>“基于局部性的最少链接” 调度算法是针对目标 IP 地址的负载均衡，目前主要用于 Cache 集群系统。该算法根据请求的目标 IP 地址找出该目标 IP 地址最近使用的服务器，若该服务器 是可用的且没有超载，将请求发送到该服务器；若服务器不存在，或者该服务器超载且有服务器处于一半的工作负载，则用 “最少链接” 的原则选出一个可用的服务 器，将请求发送到该服务器。</p><p>带复制的基于局部性最少链接 lblcr（Locality-Based Least Connections with Replication）<br>“带复制的基于局部性最少链接” 调度算法也是针对目标 IP 地址的负载均衡，目前主要用于 Cache 集群系统。它与 LBLC 算法的不同之处是它要维护从一个 目标 IP 地址到一组服务器的映射，而 LBLC 算法维护从一个目标 IP 地址到一台服务器的映射。该算法根据请求的目标 IP 地址找出该目标 IP 地址对应的服务 器组，按 “最小连接” 原则从服务器组中选出一台服务器，若服务器没有超载，将请求发送到该服务器，若服务器超载；则按 “最小连接” 原则从这个集群中选出一 台服务器，将该服务器加入到服务器组中，将请求发送到该服务器。同时，当该服务器组有一段时间没有被修改，将最忙的服务器从服务器组中删除，以降低复制的 程度。</p><p>目标地址散列 dh（Destination Hashing）<br>“目标地址散列” 调度算法根据请求的目标 IP 地址，作为散列键（Hash Key）从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。</p><p>源地址散列 sh（Source Hashing）<br>“源地址散列” 调度算法根据请求的源 IP 地址，作为散列键（Hash Key）从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。</p><h2 id="LVS-部署之细枝末节"><a href="#LVS-部署之细枝末节" class="headerlink" title="LVS 部署之细枝末节"></a>LVS 部署之细枝末节</h2><p>原作者写得很详细，我这边做下引用在此表示感谢，<a href="https://www.jianshu.com/p/76645e76f975" target="_blank" rel="noopener">LVS 部署之细枝末节</a></p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>本文总结了在 LVS 部署过程中需要注意的一些小细节。这些内容比较杂，并且没有规律和内在联系；它们分散在 LVS 部署过程中的各个小环节中，不是系统性的知识，也没有主线对它们进行连接。你可以通过此文对他们进行一个大概的了解，在实践过程中如果遇到可以再过来进行详细的查阅，以解决实际问题。</p><h3 id="开启-Linux-的路由转发功能"><a href="#开启-Linux-的路由转发功能" class="headerlink" title="开启 Linux 的路由转发功能"></a>开启 Linux 的路由转发功能</h3><p>LVS 在 VS/NAT 方式下需要开启数据包转发 (ip_forward) 功能。因为在 LVS 的 VS/NAT 模式下，对 IP 数据进行负载均衡时，需要把多台真实服务器节点中的专网 IP 映射到同一个虚拟服务器的公网 IP 上；这就需要通过 NAT 技术对 IP 数据包进行转发，从而将 IP 数据包发送到真实服务器上进行处理。LVS 在 VS/DR 模式下，因为 director 的 DIP 与真实服务器节点的 RIP 在同一网段，所以不需要开启路由转发功能。LVS 在 VS/TUN 模式下，IP 数据包是通过 IP 隧道技术进行封包后再分发的方式到达真实服务器节点的，也不需要开启路由转发功能。</p><p>开启 Linux 的路由转发功能的方法很多，具体细节请参阅文章 <a href="https://www.jianshu.com/p/134eeae69281" target="_blank" rel="noopener">Linux ip_forward 数据包转发</a>。</p><h3 id="配置真实服务器的-ARP-请求与响应策略"><a href="#配置真实服务器的-ARP-请求与响应策略" class="headerlink" title="配置真实服务器的 ARP 请求与响应策略"></a>配置真实服务器的 ARP 请求与响应策略</h3><p>在 ARP 协议中，为了减少 arp 请求的次数，当主机接收到询问自己的 arp 请求的时候，就会把源 ip 和源 Mac 放入自 己的 arp 表里面，方便接下来的通讯。如果收到不是询问自己的包（arp 是广播的，所有人都收到），就会丢掉，这样不会造成 arp 表里面无用数据太多导致 有用的记录被删除。</p><p>在 LVS 的 VS/DR 模式下，当内网的真实服务器（Linux 主机）要发送一个到外部网络的 ip 包（LVS 负载器分配置过来的作业的处理结果），那么它就会请求路由器的 Mac 地址，发送一个 arp 请求，这个 arp 请求里面包括了自己的 ip 地址和 Mac 地址。而 linux 主机默认是使用 ip 数据包的源 ip 地址作为 arp 里面的源 ip 地址，而不是使用发送设备上面网络接口卡的 ip 地址。这样在 LVS 的 VS/DR 架构下，所有真实服务器在响应外部请求时的 IP 数据包的源地址都是同一个 VIP 地址，那么 arp 请求就会包括 VIP 地址和设备 Mac。而路由器收到这个 arp 请求就会更新自己的 arp 缓存，这样就会造成 ip 欺骗了，VIP 被抢夺，所以就会有问题。</p><p>所以当 LVS 运行在 VS/DR 模式下时，需要在所有真实服务器上修改 ARP 请求与响应策略，以保证以上问题不会发生。</p><p>因为在 lo（本地环回网络接口）上配置了 VIP，所以需要对真实服务器中的 ARP 请求与响应策略配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.conf.all.arp_ignore=1</span><br><span class="line">net.ipv4.conf.lo.arp_ignore=1</span><br><span class="line"></span><br><span class="line">net.ipv4.conf.all.arp_announce=2</span><br><span class="line">net.ipv4.conf.lo.arp_announce=2</span><br></pre></td></tr></table></figure><p>将以上代码段追加到 /etc/sysctl.conf 文件中，然后执行 <code>sysctl -p</code> 指令就可以。以上配置的具体含义请参阅 <a href="https://www.jianshu.com/p/a682ecae9693" target="_blank" rel="noopener">Linux 内核参数 arp_ignore &amp; arp_announce 详解</a>。</p><h3 id="在-VS-DR-模式下-VIP-、DIP-和-RIP-必须在同一网段吗？"><a href="#在-VS-DR-模式下-VIP-、DIP-和-RIP-必须在同一网段吗？" class="headerlink" title="在 VS/DR 模式下 VIP 、DIP 和 RIP 必须在同一网段吗？"></a>在 VS/DR 模式下 VIP 、DIP 和 RIP 必须在同一网段吗？</h3><p>在 VS/DR 模式下 VIP 、DIP 和 RIP 不需要在同一网段！</p><p>其中 VIP 必须是公网 IP；而 DIP 和 RIP 必须在同一网段（可以是任意网段的 IP，也可以是私网 IP），且需要节点主机的 RIP 可以把 IP 数据包发送到一个能把 IP 数据包路由到公网的路由器上。</p><p>其实 LVS 在 VS/DR 模式下的要求是 DIP 和 RIP 必须处于同一网段中。在实际的部署过程中发现如果在 Director 上 VIP 和 DIP 在同一网段、或在 RealServer 上 VIP 与 RIP 在同一网段，LVS 集群工作会很不稳定。因为当一个 IP 数据包需要发到默认网关时（在 RealServer 或 Director 上），Linux 主机不知道应该使用哪个接口（在同一子网中的 VIP 和 DIP/RIP），他可能会随机选一个，但这个不一定能成功。我感觉可以通过在 Linux 中配置路由表来解决，但没有验证（哪位同学如果有兴趣可以实践验证一下，如果能把验证结果反馈给我那是再好不过了）。</p><h3 id="配置真实服务器的-反向路由过滤-策略"><a href="#配置真实服务器的-反向路由过滤-策略" class="headerlink" title="配置真实服务器的 反向路由过滤 策略"></a>配置真实服务器的 反向路由过滤 策略</h3><p>在 Linux 中用于对 网卡的反向路由过滤策略进行配置的内核参数是 rp_filter，有关此参数的详细介绍以及配置方式请参见 <a href="https://www.jianshu.com/p/16d5c130670b" target="_blank" rel="noopener">Linux 内核参数 rp_filter</a>。</p><p>LVS 在 VS/TUN 模式下，需要对 tunl0 虚拟网卡的反向路由过滤策略进行配置。最直接的办法是把其值设置为 0。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.conf.tunl0.rp_filter=0</span><br><span class="line">net.ipv4.conf.all.rp_filter=0</span><br></pre></td></tr></table></figure><p>因为 Linux 系统在对网卡应用反向路由过滤策略时，除了检查本网卡的 rp_filter 参数外，还会检查 all 配置项上的 rp_filter 参数，并使用这两个值中较大的值作为应用到当前网卡的反向路由过滤策略。所以需要同时把 <code>net.ipv4.conf.all.rp_filter</code> 参数设置为 0。</p><h3 id="配置-tunl0-网卡"><a href="#配置-tunl0-网卡" class="headerlink" title="配置 tunl0 网卡"></a>配置 tunl0 网卡</h3><p>LVS 在 VS/TUN 模式下，需要在每个真实服务器上开启 tunl0 网卡，并把 VIP 配置到 tunl0 网卡上。有关 tunl0 网卡的说明可以参考一下 <a href="https://www.jianshu.com/p/cb179f0bee1f" target="_blank" rel="noopener">Linux 中 IP 隧道模块浅析</a>。</p><h3 id="LVS-在-VS-TUN-模式下-RealServer-上的防火墙配置"><a href="#LVS-在-VS-TUN-模式下-RealServer-上的防火墙配置" class="headerlink" title="LVS 在 VS/TUN 模式下 RealServer 上的防火墙配置"></a>LVS 在 VS/TUN 模式下 RealServer 上的防火墙配置</h3><p>LVS 在 VS/TUN 模式下 因为 Director 主机需要通过 ipip 协议向 RealServer 分发数据包；所以需要在 RealServer 上配置防火墙，允许 ipip 协议的数据包通过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT 1 -p 4 -j ACCEPT</span><br></pre></td></tr></table></figure><h2 id="ipvsadm"><a href="#ipvsadm" class="headerlink" title="ipvsadm"></a>ipvsadm</h2><blockquote><p>一般建议和 Keepalived 配置文件搭配使用</p></blockquote><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">[root@d126009 wangao]<span class="comment"># ipvsadm -h</span></span><br><span class="line">ipvsadm v1.27 2008/5/15 (compiled with popt and IPVS v1.2.1)</span><br><span class="line">Usage:</span><br><span class="line">  ipvsadm -A|E -t|u|f service-address [-s scheduler] [-p [timeout]] [-M netmask] [--pe persistence_engine] [-b <span class="built_in">sched</span>-flags]</span><br><span class="line">  ipvsadm -D -t|u|f service-address</span><br><span class="line">  ipvsadm -C</span><br><span class="line">  ipvsadm -R</span><br><span class="line">  ipvsadm -S [-n]</span><br><span class="line">  ipvsadm -a|e -t|u|f service-address -r server-address [options]</span><br><span class="line">  ipvsadm -d -t|u|f service-address -r server-address</span><br><span class="line">  ipvsadm -L|l [options]</span><br><span class="line">  ipvsadm -Z [-t|u|f service-address]</span><br><span class="line">  ipvsadm --<span class="built_in">set</span> tcp tcpfin udp</span><br><span class="line">  ipvsadm --start-daemon state [--mcast-interface interface] [--syncid sid]</span><br><span class="line">  ipvsadm --stop-daemon state</span><br><span class="line">  ipvsadm -h</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">Either long or short options are allowed.</span><br><span class="line">  --add-service     -A        add virtual service with options</span><br><span class="line">  --edit-service    -E        edit virtual service with options</span><br><span class="line">  --delete-service  -D        delete virtual service</span><br><span class="line">  --clear           -C        clear the whole table</span><br><span class="line">  --restore         -R        restore rules from stdin</span><br><span class="line">  --save            -S        save rules to stdout</span><br><span class="line">  --add-server      -a        add real server with options</span><br><span class="line">  --edit-server     -e        edit real server with options</span><br><span class="line">  --delete-server   -d        delete real server</span><br><span class="line">  --list            -L|-l     list the table</span><br><span class="line">  --zero            -Z        zero counters <span class="keyword">in</span> a service or all services</span><br><span class="line">  --<span class="built_in">set</span> tcp tcpfin udp        <span class="built_in">set</span> connection timeout values</span><br><span class="line">  --start-daemon              start connection sync daemon</span><br><span class="line">  --stop-daemon               stop connection sync daemon</span><br><span class="line">  --<span class="built_in">help</span>            -h        display this <span class="built_in">help</span> message</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  --tcp-service  -t service-address   service-address is host[:port]</span><br><span class="line">  --udp-service  -u service-address   service-address is host[:port]</span><br><span class="line">  --fwmark-service  -f fwmark         fwmark is an <span class="built_in">integer</span> greater than zero</span><br><span class="line">  --ipv6         -6                   fwmark entry uses IPv6</span><br><span class="line">  --scheduler    -s scheduler         one of rr|wrr|lc|wlc|lblc|lblcr|dh|sh|sed|nq,</span><br><span class="line">                                      the default scheduler is wlc.</span><br><span class="line">  --pe            engine              alternate persistence engine may be sip,</span><br><span class="line">                                      not <span class="built_in">set</span> by default.</span><br><span class="line">  --persistent   -p [timeout]         persistent service</span><br><span class="line">  --netmask      -M netmask           persistent granularity mask</span><br><span class="line">  --real-server  -r server-address    server-address is host (and port)</span><br><span class="line">  --gatewaying   -g                   gatewaying (direct routing) (default)</span><br><span class="line">  --ipip         -i                   ipip encapsulation (tunneling)</span><br><span class="line">  --masquerading -m                   masquerading (NAT)</span><br><span class="line">  --weight       -w weight            capacity of real server</span><br><span class="line">  --u-threshold  -x uthreshold        upper threshold of connections</span><br><span class="line">  --l-threshold  -y lthreshold        lower threshold of connections</span><br><span class="line">  --mcast-interface interface         multicast interface <span class="keyword">for</span> connection sync</span><br><span class="line">  --syncid sid                        syncid <span class="keyword">for</span> connection sync (default=255)</span><br><span class="line">  --connection   -c                   output of current IPVS connections</span><br><span class="line">  --timeout                           output of timeout (tcp tcpfin udp)</span><br><span class="line">  --daemon                            output of daemon information</span><br><span class="line">  --stats                             output of statistics information</span><br><span class="line">  --rate                              output of rate information</span><br><span class="line">  --exact                             expand numbers (display exact values)</span><br><span class="line">  --thresholds                        output of thresholds information</span><br><span class="line">  --persistent-conn                   output of persistent connection info</span><br><span class="line">  --nosort                            <span class="built_in">disable</span> sorting output of service/server entries</span><br><span class="line">  --sort                              does nothing, <span class="keyword">for</span> backwards compatibility</span><br><span class="line">  --ops          -o                   one-packet scheduling</span><br><span class="line">  --numeric      -n                   numeric output of addresses and ports</span><br><span class="line">  --<span class="built_in">sched</span>-flags  -b flags             scheduler flags (comma-separated)</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每台 realserver index.html 文件内容为 ip 地址，例如 httpd： </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"172.27.233.43"</span> &gt; /var/www/html/index.html</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"172.27.233.44"</span> &gt; /var/www/html/index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># Nginx test</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rs1"</span> &gt; /usr/share/nginx/html/index.html</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rs2"</span> &gt; /usr/share/nginx/html/index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 http 服务 </span></span><br><span class="line">/etc/init.d/httpd start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 客户端模拟请求</span></span><br><span class="line"><span class="keyword">for</span>((i=1;i&lt;=10;i++));<span class="keyword">do</span> curl http://172.27.233.45/; <span class="keyword">done</span></span><br><span class="line">172.27.233.44 </span><br><span class="line">172.27.233.43 </span><br><span class="line">172.27.233.44 </span><br><span class="line">172.27.233.43 </span><br><span class="line">172.27.233.44 </span><br><span class="line">172.27.233.43 </span><br><span class="line">172.27.233.44 </span><br><span class="line">172.27.233.43 </span><br><span class="line">172.27.233.44 </span><br><span class="line">172.27.233.43 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求分配结果</span></span><br><span class="line">ipvsadm -Ln --stats</span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096) </span><br><span class="line">Prot LocalAddress:Port               Conns   InPkts  OutPkts  InBytes OutBytes </span><br><span class="line">  -&gt; RemoteAddress:Port </span><br><span class="line">TCP  172.27.233.45:80                   10      50        0     4330        0 </span><br><span class="line">  -&gt; 172.27.233.43:80                    5       25        0     2165        0 </span><br><span class="line">  -&gt; 172.27.233.44:80                    5       25        0     2165        0 </span><br><span class="line"></span><br><span class="line"> 参数含义 </span><br><span class="line">--stats 显示统计信息 </span><br><span class="line">Prot LocalAddress:Port Conns InPkts OutPkts InBytes OutBytes </span><br><span class="line">                       连接数 输入包 输出包 输入流量 输出流量 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时观察</span></span><br><span class="line">watch ipvsadm -Ln --stats</span><br></pre></td></tr></table></figure><h2 id="LVS-和-Keepalived-系列"><a href="#LVS-和-Keepalived-系列" class="headerlink" title="LVS 和 Keepalived 系列"></a>LVS 和 Keepalived 系列</h2><p><a href="https://wsgzao.github.io/post/lvs-keepalived/">LVS 和 Keepalived 的原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs/">LVS 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/keepalived/">Keepalived 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-nat/">LVS-NAT 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-dr/">LVS-DR 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-tun/">LVS-TUN 原理介绍和配置实践</a></p>]]></content>
    
    <summary type="html">
    
      LVS原理介绍和配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Keepalived 原理介绍和配置实践</title>
    <link href="https://wsgzao.github.io/post/keepalived/"/>
    <id>https://wsgzao.github.io/post/keepalived/</id>
    <published>2019-09-03T06:59:49.000Z</published>
    <updated>2019-09-04T08:30:47.669Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要讲述 Keepalived 原理介绍和配置实践</p><blockquote><p>Keepalived 原理介绍和配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 03 日 - 拆分 LVS-Keepalived 中 Keepalived<br>2019 年 08 月 23 日 - 更新 LVS/NAT、LVS/DR、LVS/TUN 三种模式的原理和配置实践<br>2018 年 12 月 03 日 - 精简和更新配置步骤<br>2018 年 07 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/keepalived/">https://wsgzao.github.io/post/keepalived/</a></p><p><strong> 扩展阅读 </strong></p><p>LVS - <a href="http://www.linuxvirtualserver.org/zh/index.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/zh/index.html</a><br>Keepalived - <a href="http://www.keepalived.org/" target="_blank" rel="noopener">http://www.keepalived.org/</a></p><hr><h2 id="ReadMe"><a href="#ReadMe" class="headerlink" title="ReadMe"></a>ReadMe</h2><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>Keepalived - <a href="http://www.keepalived.org/doc/" target="_blank" rel="noopener">http://www.keepalived.org/doc/</a><br>The Keepalived Solution - <a href="http://www.linuxvirtualserver.org/docs/ha/keepalived.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/docs/ha/keepalived.html</a><br>LVS 和 Keepalived 官方中文手册 PDF - <a href="https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg</a></p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><blockquote><p>以下术语涉及 LVS 三种工作模式的原理</p></blockquote><ul><li>LB (Load Balancer 负载均衡) </li><li>HA (High Available 高可用) </li><li>Failover (失败切换) </li><li>Cluster (集群) </li><li>LVS (Linux Virtual Server Linux 虚拟服务器) </li><li>DS (Director Server)，指的是前端负载均衡器节点</li><li>RS (Real Server)，后端真实的工作服务器</li><li>VIP (Virtual IP)，虚拟的 IP 地址，向外部直接面向用户请求，作为用户请求的目标的 IP 地址</li><li>DIP (Director IP)，主要用于和内部主机通讯的 IP 地址</li><li>RIP (Real Server IP)，后端服务器的 IP 地址</li><li>CIP (Client IP)，访问客户端的 IP 地址</li></ul><h2 id="负载均衡-LB"><a href="#负载均衡-LB" class="headerlink" title="负载均衡(LB)"></a>负载均衡(LB)</h2><blockquote><p>负载均衡实现方法有两种：硬件实现和软件实现</p></blockquote><p>硬件比较常见的有：</p><ol><li>F5 Big-IP</li><li>Citrix Netscaler</li></ol><p>软件比较常见的有：</p><ol><li>LVS（Linux Virtual Server）</li><li>HAProxy</li><li>Nginx</li></ol><p>LVS 特点是：</p><ol><li>首先它是基于 4 层的网络协议的，抗负载能力强，对于服务器的硬件要求除了网卡外，其他没有太多要求；</li><li>配置性比较低，这是一个缺点也是一个优点，因为没有可太多配置的东西，大大减少了人为出错的几率；</li><li>应用范围比较广，不仅仅对 web 服务做负载均衡，还可以对其他应用（mysql）做负载均衡；</li><li>LVS 架构中存在一个虚拟 IP 的概念，需要向 IDC 多申请一个 IP 来做虚拟 IP。</li></ol><p>Nginx 负载均衡器的特点是：</p><ol><li>工作在网络的 7 层之上，可以针对 http 应用做一些分流的策略，比如针对域名、目录结构；</li><li>Nginx 安装和配置比较简单，测试起来比较方便；</li><li>也可以承担高的负载压力且稳定，一般能支撑超过上万次的并发；</li><li>Nginx 可以通过端口检测到服务器内部的故障，比如根据服务器处理网页返回的状态码、超时等等，并且会把返回错误的请求重新提交到另一个节点，不过其中缺点就是不支持 url 来检测；</li><li>Nginx 对请求的异步处理可以帮助节点服务器减轻负载；</li><li>Nginx 能支持 http 和 Email，这样就在适用范围上面小很多；</li><li>默认有三种调度算法: 轮询、weight 以及 ip_hash（可以解决会话保持的问题），还可以支持第三方的 fair 和 url_hash 等调度算法；</li></ol><p>HAProxy 的特点是：</p><ol><li>HAProxy 是工作在网络 7 层之上；</li><li>支持 Session 的保持，Cookie 的引导等；</li><li>支持 url 检测后端的服务器出问题的检测会有很好的帮助；</li><li>支持的负载均衡算法：动态加权轮循(Dynamic Round Robin)，加权源地址哈希(Weighted Source Hash)，加权 URL 哈希和加权参数哈希(Weighted Parameter Hash)；</li><li>单纯从效率上来讲 HAProxy 更会比 Nginx 有更出色的负载均衡速度；</li><li>HAProxy 可以对 Mysql 进行负载均衡，对后端的 DB 节点进行检测和负载均衡。</li></ol><h2 id="keepalived-简介"><a href="#keepalived-简介" class="headerlink" title="keepalived 简介"></a>keepalived 简介</h2><p>Keepalived 是运行在 lvs 之上，是一个用于做双机热备（HA）的软件，它的主要功能是实现真实机的故障隔离及负载均衡器间的失败切换，提高系统的可用性。</p><h3 id="运行原理"><a href="#运行原理" class="headerlink" title="运行原理"></a>运行原理</h3><p>keepalived 通过选举（看服务器设置的权重）挑选出一台热备服务器做 MASTER 机器，MASTER 机器会被分配到一个指定的虚拟 ip，外部程序可通过该 ip 访问这台服务器，如果这台服务器出现故障（断网，重启，或者本机器上的 keepalived crash 等），keepalived 会从其他的备份机器上重选（还是看服务器设置的权重）一台机器做 MASTER 并分配同样的虚拟 IP，充当前一台 MASTER 的角色。</p><h3 id="选举策略"><a href="#选举策略" class="headerlink" title="选举策略"></a>选举策略</h3><p>选举策略是根据 VRRP 协议，完全按照权重大小，权重最大（0～255）的是 MASTER 机器，下面几种情况会触发选举</p><ol><li>keepalived 启动的时候</li><li>master 服务器出现故障（断网，重启，或者本机器上的 keepalived crash 等，而本机器上其他应用程序 crash 不算）</li><li>有新的备份服务器加入且权重最大</li></ol><h2 id="keepalived-的配置文件说明"><a href="#keepalived-的配置文件说明" class="headerlink" title="keepalived 的配置文件说明"></a>keepalived 的配置文件说明</h2><p>Keepalived 是运行在 lvs 之上, 它的主要功能是实现 RealServer(真实服务器)的故障隔离及 Director(负载均衡器)间的 FailOver(失败切换). </p><ul><li>keepalived 是 lvs 的扩展项目, 因此它们之间具备良好的兼容性</li><li>对 RealServer 的健康检查, 实现对失效机器 / 服务的故障隔离</li><li>负载均衡器之间的失败切换 failover</li></ul><h3 id="全局定义"><a href="#全局定义" class="headerlink" title="全局定义"></a>全局定义</h3><p>全局配置又包括两个子配置</p><ol><li>全局定义(global definition)</li><li>静态路由配置(static ipaddress/routes)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局定义 (global definition) </span></span><br><span class="line">global_defs &#123;                      </span><br><span class="line">   notification_email &#123;      </span><br><span class="line">   acassen@firewall.loc     </span><br><span class="line">   failover@firewall.loc</span><br><span class="line">   sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc   </span><br><span class="line">   smtp_server 192.168.200.1                         </span><br><span class="line">   smtp_connect_timeout 30                                  </span><br><span class="line">   router_id LVS_DEVEL     </span><br><span class="line">&#125;</span><br><span class="line">notification_email: 表示 keepalived 在发生诸如切换操作时需要发送 email 通知以及 email 发送给哪些邮件地址邮件地址可以多个每行一个</span><br><span class="line">notification_email_from admin@example.com: 表示发送通知邮件时邮件源地址是谁</span><br><span class="line">smtp_server 127.0.0.1: 表示发送 email 时使用的 smtp 服务器地址这里可以用本地的 sendmail 来实现</span><br><span class="line">smtp_connect_timeout 30: 连接 smtp 连接超时时间</span><br><span class="line">router_id node1: 机器标识，通常配置主机名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态地址和路由配置范例</span></span><br><span class="line">static_ipaddress &#123;</span><br><span class="line">    192.168.1.1/24 brd + dev eth0 scope global</span><br><span class="line">    192.168.1.2/24 brd + dev eth1 scope global</span><br><span class="line">&#125;</span><br><span class="line">static_routes &#123;</span><br><span class="line">    src <span class="variable">$SRC_IP</span> to <span class="variable">$DST_IP</span> dev <span class="variable">$SRC_DEVICE</span></span><br><span class="line">    src <span class="variable">$SRC_IP</span> to <span class="variable">$DST_IP</span> via <span class="variable">$GW</span> dev <span class="variable">$SRC_DEVICE</span></span><br><span class="line">&#125;</span><br><span class="line"> 这里实际上和系统里面命令配置 IP 地址和路由一样例如 </span><br><span class="line">192.168.1.1/24 brd + dev eth0 scope global 相当于: ip addr add 192.168.1.1/24 brd + dev eth0 scope global</span><br><span class="line"> 就是给 eth0 配置 IP 地址路由同理, 一般这个区域不需要配置 </span><br><span class="line"> 这里实际上就是给服务器配置真实的 IP 地址和路由的在复杂的环境下可能需要配置一般不会用这个来配置我们可以直接用 vi /etc/sysconfig/network-script/ifcfg-eth1 来配置切记这里可不是 VIP 不要搞混淆了切记切记</span><br></pre></td></tr></table></figure><h3 id="VRRPD-配置"><a href="#VRRPD-配置" class="headerlink" title="VRRPD 配置"></a>VRRPD 配置</h3><p>包括三个类:</p><ol><li>VRRP 同步组(synchroization group) </li><li>VRRP 实例(VRRP Instance) </li><li>VRRP 脚本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># VRRP 同步组 (synchroization group) 配置范例 </span></span><br><span class="line">vrrp_sync_group VG_1 &#123;   // 注意 vrrp_sync_group  后面可自定义名称如 lvs_httpd ,httpd</span><br><span class="line">group &#123;</span><br><span class="line">http</span><br><span class="line">mysql</span><br><span class="line">&#125;</span><br><span class="line">notify_master /path/to/to_master.sh</span><br><span class="line">notify_backup /path_to/to_backup.sh</span><br><span class="line">notify_fault <span class="string">"/path/fault.sh VG_1"</span></span><br><span class="line">notify /path/to/notify.sh</span><br><span class="line">smtp_alert </span><br><span class="line">&#125;</span><br><span class="line"> 其中 http 和 mysql 是实例名和下面的实例名一致 </span><br><span class="line">notify_master /path/to/to_master.sh // 表示当切换到 master 状态时要执行的脚本</span><br><span class="line">notify_backup /path_to/to_backup.sh // 表示当切换到 backup 状态时要执行的脚本</span><br><span class="line">notify_fault <span class="string">"/path/fault.sh VG_1"</span>  // keepalived 出现故障时执行的脚本</span><br><span class="line">notify /path/to/notify.sh  </span><br><span class="line">smtp_alert           // 表示切换时给 global defs 中定义的邮件地址发送邮件通知</span><br><span class="line"></span><br><span class="line"><span class="comment"># VRRP 实例(instance) 配置范例</span></span><br><span class="line">vrrp_instance http &#123;  // 注意 vrrp_instance 后面可自定义名称如 lvs_httpd ,httpd</span><br><span class="line">state MASTER</span><br><span class="line">interface eth0</span><br><span class="line">dont_track_primary</span><br><span class="line">track_interface &#123;</span><br><span class="line">eth0</span><br><span class="line">eth1</span><br><span class="line">&#125;</span><br><span class="line">mcast_src_ip &lt;IPADDR&gt;</span><br><span class="line">garp_master_delay 10</span><br><span class="line">virtual_router_id 51</span><br><span class="line">priority 100</span><br><span class="line">advert_int 1</span><br><span class="line">authentication &#123;</span><br><span class="line">auth_type PASS</span><br><span class="line">autp_pass 1234</span><br><span class="line">&#125;</span><br><span class="line">virtual_ipaddress &#123;</span><br><span class="line"><span class="comment">#&lt;IPADDR&gt;/&lt;MASK&gt; brd &lt;IPADDR&gt; dev &lt;STRING&gt; scope &lt;SCOPT&gt; label &lt;LABEL&gt;</span></span><br><span class="line">192.168.200.17/24 dev eth1</span><br><span class="line">192.168.200.18/24 dev eth2 label eth2:1</span><br><span class="line">&#125;</span><br><span class="line">virtual_routes &#123;</span><br><span class="line"><span class="comment"># src &lt;IPADDR&gt; [to] &lt;IPADDR&gt;/&lt;MASK&gt; via|gw &lt;IPADDR&gt; dev &lt;STRING&gt; scope &lt;SCOPE&gt; tab</span></span><br><span class="line">src 192.168.100.1 to 192.168.109.0/24 via 192.168.200.254 dev eth1</span><br><span class="line">192.168.110.0/24 via 192.168.200.254 dev eth1</span><br><span class="line">192.168.111.0/24 dev eth2</span><br><span class="line">192.168.112.0/24 via 192.168.100.254</span><br><span class="line">&#125;</span><br><span class="line">nopreempt</span><br><span class="line">preemtp_delay 300</span><br><span class="line">debug</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>state: state 指定 instance(Initial)的初始状态就是说在配置好后这台 服务器的初始状态就是这里指定的但这里指定的不算还是得要通过竞选通过优先级来确定里如果这里设置为 master 但如若他的优先级不及另外一台 那么这台在发送通告时会发送自己的优先级另外一台发现优先级不如自己的高那么他会就回抢占为 master</p><p>interface: 实例绑定的网卡因为在配置虚拟 VIP 的时候必须是在已有的网卡上添加的</p><p>dont track primary: 忽略 VRRP 的 interface 错误</p><p>track interface: 跟踪接口设置额外的监控里面任意一块网卡出现问题都会进入故障 (FAULT) 状态例如用 nginx 做均衡器的时候内网必须正常工作如果内网出问题了这个均衡器也就无法运作了所以必须对内外网同时做健康检查</p><p>mcast src ip: 发送多播数据包时的源 IP 地址这里注意了这里实际上就是在那个地址上发送 VRRP 通告这个非常重要一定要选择稳定的网卡端口来发送这里相当于 heartbeat 的心跳端口如果没有设置那么就用默认的绑定的网卡的 IP 也就是 interface 指定的 IP 地址</p><p>garp master delay: 在切换到 master 状态后延迟进行免费的 ARP(gratuitous ARP)请求，默认 5s</p><p>virtual router id: 这里设置 VRID 这里非常重要相同的 VRID 为一个组他将决定多播的 MAC 地址</p><p>priority 100: 设置本节点的优先级优先级高的为 master</p><p>advert int: 设置 MASTER 与 BACKUP 负载均衡之间同步即主备间通告时间检查的时间间隔, 单位为秒，默认 1s</p><p>virtual ipaddress: 这里设置的就是 VIP 也就是虚拟 IP 地址他随着 state 的变化而增加删除当 state 为 master 的时候就添加当 state 为 backup 的时候删除这里主要是有优先级来决定的和 state 设置的值没有多大关系这里可以设置多个 IP 地址</p><p>virtual routes: 原理和 virtual ipaddress 一样只不过这里是增加和删除路由</p><p>lvs sync daemon interface: lvs syncd 绑定的网卡，类似 HA 中的心跳检测绑定的网卡</p><p>authentication: 这里设置认证</p><p>auth type: 认证方式可以是 PASS 或 AH 两种认证方式</p><p>auth pass: 认证密码</p><p>nopreempt: 设置不抢占 master，这里只能设置在 state 为 backup 的节点上而且这个节点的优先级必须别另外的高，比如 master 因为异常将调度圈交给了备份 serve，master serve 检修后没问题，如果不设置 nopreempt 就会将调度权重新夺回来，这样就容易造成业务中断问题</p><p>preempt delay: 抢占延迟多少秒，即延迟多少秒后竞选 master</p><p>debug：debug 级别</p><p>notify master：和 sync group 这里设置的含义一样可以单独设置例如不同的实例通知不同的管理人员 http 实例发给网站管理员 mysql 的就发邮件给 DBA</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># VRRP 脚本 </span></span><br><span class="line"><span class="comment"># 如下所示为相关配置示例</span></span><br><span class="line">vrrp_script check_running &#123;</span><br><span class="line">   script <span class="string">"/usr/local/bin/check_running"</span></span><br><span class="line">   interval 10</span><br><span class="line">   weight 10</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance http &#123;</span><br><span class="line">   state BACKUP</span><br><span class="line">   smtp_alert</span><br><span class="line">   interface eth0</span><br><span class="line">   virtual_router_id 101</span><br><span class="line">   priority 90</span><br><span class="line">   advert_int 3</span><br><span class="line">   authentication &#123;</span><br><span class="line">   auth_type PASS</span><br><span class="line">   auth_pass whatever</span><br><span class="line">   &#125;</span><br><span class="line">   virtual_ipaddress &#123;</span><br><span class="line">   1.1.1.1</span><br><span class="line">   &#125;</span><br><span class="line">   track_script &#123;</span><br><span class="line">   check_running </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 首先在 vrrp_script 区域定义脚本名字和脚本执行的间隔和脚本执行的优先级变更, 如下所示:</span></span><br><span class="line">vrrp_script check_running &#123;</span><br><span class="line">            script <span class="string">"/usr/local/bin/check_running"</span></span><br><span class="line">            interval 10     <span class="comment"># 脚本执行间隔</span></span><br><span class="line">            weight 10       <span class="comment"># 脚本结果导致的优先级变更 10 表示优先级 + 10-10 则表示优先级 - 10</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment"># 然后在实例(vrrp_instance) 里面引用有点类似脚本里面的函数引用一样先定义后引用函数名</span></span><br><span class="line">track_script &#123;</span><br><span class="line">      check_running </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:<br>VRRP 脚本 (vrrp_script) 和 VRRP 实例 (vrrp_instance) 属于同一个级别<br>keepalived 会定时执行脚本并对脚本执行的结果进行分析，动态调整 vrrp_instance 的优先级。一般脚本检测返回的值为 0，说明脚本检测成功，如果为非 0 数值，则说明检测失败<br>如果脚本执行结果为 0，并且 weight 配置的值大于 0，则优先级相应的增加, 如果 weight 为非 0，则优先级不变<br>如果脚本执行结果非 0，并且 weight 配置的值小于 0，则优先级相应的减少, 如果 weight 为 0，则优先级不变<br>其他情况，维持原本配置的优先级，即配置文件中 priority 对应的值。<br>这里需要注意的是：<br>1） 优先级不会不断的提高或者降低<br>2） 可以编写多个检测脚本并为每个检测脚本设置不同的 weight<br>3） 不管提高优先级还是降低优先级，最终优先级的范围是在[1,254]，不会出现优先级小于等于 0 或者优先级大于等于 255 的情况<br>这样可以做到利用脚本检测业务进程的状态，并动态调整优先级从而实现主备切换。</p><h3 id="virtual-server-虚拟主机配置"><a href="#virtual-server-虚拟主机配置" class="headerlink" title="virtual_server 虚拟主机配置"></a>virtual_server 虚拟主机配置</h3><p>关于 keeplived 的虚拟主机配置有三种如下所示<br>virtual server IP port<br>virtual server fwmark int<br>virtual server group string</p><p>以常用的第一种为例<br>virtual_server 192.168.1.2 80<br>含义: 设置一个 virtual server: VIP:Vport</p><p>delay_loop 3<br>含义: 设置 service polling 的 delay 时间即服务轮询的时间间隔</p><p>lb_algo rr|wrr|lc|wlc|lblc|sh|dh<br>含义: 设置 LVS 调度算法</p><p>lb_kind NAT|DR|TUN<br>含义: 设置 LVS 集群模式  </p><p>persistence_timeout 120<br>含义: 设置会话保持时间秒为单位即以用户在 120 秒内被分配到同一个后端 realserver, 超过此时间就重新分配</p><p>persistence_granularity <netmask><br>含义: 设置 LVS 会话保持粒度 ipvsadm 中的 - M 参数默认是 0xffffffff 即每个客户端都做会话保持</netmask></p><p>protocol TCP<br>含义: 设置健康检查用的是 TCP 还是 UDP</p><p>ha_suspend<br>含义: suspendhealthchecker’s activity</p><p>virtualhost <string><br>含义: HTTP_GET 做健康检查时检查的 web 服务器的虚拟主机即 host 头</string></p><p>sorry_server <ipaddr> <port><br>含义: 设置 backupserver 就是当所有后端 realserver 节点都不可用时就用这里设置的也就是临时把所有的请求都发送到这里</port></ipaddr></p><p>real_server <ipaddr> <port><br>含义: 设置后端真实节点主机的权重等设置主要后端有几台这里就要设置几个</port></ipaddr></p><p>weight 1<br>含义: 设置给每台的权重 0 表示失效 (不知给他转发请求知道他恢复正常) 默认是 1</p><p>inhibit_on_failure<br>含义: 表示在节点失败后把他权重设置成 0 而不是冲 IPVS 中删除</p><p>notify_up <string> | <quoted-string><br>含义: 设置检查服务器正常 (UP) 后要执行的脚本<br>notify_down <string> | <quoted-string><br>含义: 设置检查服务器失败 (down) 后要执行的脚本</quoted-string></string></quoted-string></string></p><p>注: keepalived 检查机制说明<br>keepalived 健康检查方式有: HTTP_GET|SSL_GET|TCP_CHECK|SMTP_CHECK|MISC_CHECK 几种如下所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#HTTP/HTTPS 方式 </span></span><br><span class="line">HTTP_GET|SSL_GET &#123;      <span class="comment"># 设置健康检查方式</span></span><br><span class="line"></span><br><span class="line">url &#123;                   <span class="comment"># 设置要检查的 URL 可以有多个</span></span><br><span class="line">path /                  <span class="comment"># 设置 URL 具体路径</span></span><br><span class="line">digest &lt;STRING&gt;         <span class="comment"># 检查后的摘要信息这些摘要信息可以通过 genhash 命令工具获取                                   </span></span><br><span class="line">status_code 200         <span class="comment"># 设置返回状态码</span></span><br><span class="line">&#125;</span><br><span class="line">connect_port 80         <span class="comment"># 设置监控检查的端口</span></span><br><span class="line">bindto  &lt;IPADD&gt;         <span class="comment"># 设置健康检查的 IP 地址</span></span><br><span class="line">connect_timeout   3     <span class="comment"># 设置连接超时时间</span></span><br><span class="line">nb_get_retry  3         <span class="comment"># 设置重连次数</span></span><br><span class="line">delay_before_retry  2   <span class="comment"># 设置重连间隔</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">#TCP 方式  </span></span><br><span class="line">TCP_CHECK     &#123;</span><br><span class="line">connect_port 80         <span class="comment"># 设置监控检查的端口</span></span><br><span class="line">bindto  &lt;IPADD&gt;         <span class="comment"># 设置健康检查的 IP 地址</span></span><br><span class="line">connect_timeout   3     <span class="comment"># 设置连接超时时间</span></span><br><span class="line">nb_get_retry  3         <span class="comment"># 设置重连次数</span></span><br><span class="line">delay_before_retry  2   <span class="comment"># 设置重连间隔</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#SMTP 方式 (这个可以用来给邮件服务器做集群)</span></span><br><span class="line">SMTP_CHECK &#123;</span><br><span class="line">host &#123;</span><br><span class="line">connect_ip &lt;IP ADDRESS&gt;</span><br><span class="line">connect_port &lt;PORT&gt;     <span class="comment"># 默认检查 25 端口</span></span><br><span class="line">14 KEEPALIVED</span><br><span class="line">bindto &lt;IP ADDRESS&gt;</span><br><span class="line">&#125;</span><br><span class="line">connect_timeout &lt;INTEGER&gt;</span><br><span class="line">retry &lt;INTEGER&gt;</span><br><span class="line">delay_before_retry &lt;INTEGER&gt;</span><br><span class="line">helo_name &lt;STRING&gt;|&lt;QUOTED-STRING&gt;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">#MISC 方式 这个可以用来检查很多服务器只需要自己会些脚本即可</span></span><br><span class="line">MISC_CHECK &#123;</span><br><span class="line">misc_path &lt;STRING&gt;|&lt;QUOTED-STRING&gt;  <span class="comment"># 外部程序或脚本</span></span><br><span class="line">misc_timeout &lt;INT&gt;                  <span class="comment"># 脚本或程序执行超时时间</span></span><br><span class="line">misc_dynamic                                              </span><br><span class="line"><span class="comment"># 这个就很好用了可以非常精确的来调整权重是后端每天服务器的压力都能均衡调配这个主要是通过执行的程序或脚本返回的状态代码来动态调整 weight 值使权重根据真实的后端压力来适当调整不过这需要有过硬的脚本功夫才行哦</span></span><br><span class="line"><span class="comment"># 返回 0 健康检查没问题不修改权重</span></span><br><span class="line"><span class="comment"># 返回 1 健康检查失败权重设置为 0</span></span><br><span class="line"><span class="comment"># 返回 2-255 健康检查没问题但是权重却要根据返回代码修改为返回码 - 2 例如如果程序或脚本执行后返回的代码为 200# 那么权重这回被修改为 200-2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上就是 keepalived 的配置项说明虽然配置项很多但很多时候很多配置项保持默认即可，以下是默认配置文件，方便大家做个对比参考</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-65-32-140 wangao]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">     failover@firewall.loc</span><br><span class="line">     sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">   vrrp_strict</span><br><span class="line">   vrrp_garp_interval 0</span><br><span class="line">   vrrp_gna_interval 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.200.16</span><br><span class="line">        192.168.200.17</span><br><span class="line">        192.168.200.18</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 192.168.200.100 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 192.168.201.100 443 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        SSL_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /</span><br><span class="line">              digest ff20ad2481f97b1754ef3e12ecd3a9cc</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /mrtg/</span><br><span class="line">              digest 9b3a0c85a887a256d6939da88aabd8cd</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.10.2 1358 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    sorry_server 192.168.200.200 1358</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.2 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.3 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.10.3 1358 &#123;</span><br><span class="line">    delay_loop 3</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.4 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.5 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最简单的-Keepalived-HA-配置实例"><a href="#最简单的-Keepalived-HA-配置实例" class="headerlink" title="最简单的 Keepalived HA 配置实例"></a>最简单的 Keepalived HA 配置实例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 keepalived,ipvsadm</span></span><br><span class="line">yum install keepalived -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果开启防火墙，请添加 VRRP 白名单</span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 keepalived 配置文件，master 和 backup 节点配置文件一样</span></span><br><span class="line">vi /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group VI_GOP_NC1_HA &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_GOP_NC1_HA_PRI</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_GOP_NC1_HA_PRI &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 139</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.65.33.139/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动启动节点即为 master</span></span><br><span class="line">service keepalived start</span><br></pre></td></tr></table></figure><p>如果需要配合自定义脚本监控使用，可以参考<a href="https://wsgzao.github.io/post/redis/">Redis 主从同步配置实践</a></p><h2 id="LVS-和-Keepalived-系列"><a href="#LVS-和-Keepalived-系列" class="headerlink" title="LVS 和 Keepalived 系列"></a>LVS 和 Keepalived 系列</h2><p><a href="https://wsgzao.github.io/post/lvs-keepalived/">LVS 和 Keepalived 的原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs/">LVS 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/keepalived/">Keepalived 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-nat/">LVS-NAT 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-dr/">LVS-DR 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-tun/">LVS-TUN 原理介绍和配置实践</a></p>]]></content>
    
    <summary type="html">
    
      Keepalived原理介绍和配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>LVS 和 Keepalived 的原理介绍和配置实践</title>
    <link href="https://wsgzao.github.io/post/lvs-keepalived/"/>
    <id>https://wsgzao.github.io/post/lvs-keepalived/</id>
    <published>2019-09-03T05:59:49.000Z</published>
    <updated>2019-09-06T11:23:17.177Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>负载均衡技术 Load Balance 简称 LB 是构建大型网站必不可少的架构策略之一。它的目的是把用户的请求分发到多台后端的设备上，用以均衡服务器的负载。我们可以把负载均衡器划分为两大类：硬件负载均衡器和软件负载均衡器。这里重点介绍软件实现方法中的 LVS 和 Keepalived。</p><blockquote><p>LVS 和 Keepalived 的原理介绍和配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 03 日 - 拆分 LVS-Keepalived<br>2019 年 08 月 23 日 - 更新 LVS/NAT、LVS/DR、LVS/TUN 三种模式的原理和配置实践<br>2018 年 12 月 03 日 - 精简和更新配置步骤<br>2018 年 07 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/lvs-keepalived/">https://wsgzao.github.io/post/lvs-keepalived/</a></p><p><strong> 扩展阅读 </strong></p><p>LVS - <a href="http://www.linuxvirtualserver.org/zh/index.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/zh/index.html</a><br>Keepalived - <a href="http://www.keepalived.org/" target="_blank" rel="noopener">http://www.keepalived.org/</a></p><hr><h2 id="ReadMe"><a href="#ReadMe" class="headerlink" title="ReadMe"></a>ReadMe</h2><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>LVS - <a href="http://www.linuxvirtualserver.org/Documents.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/Documents.html</a><br>How virtual server works? - <a href="http://www.linuxvirtualserver.org/how.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/how.html</a><br>Keepalived - <a href="http://www.keepalived.org/doc/" target="_blank" rel="noopener">http://www.keepalived.org/doc/</a><br>LVS 入门系列：初识 LVS 与 LVS-NAT - <a href="http://www.zsythink.net/archives/2134" target="_blank" rel="noopener">http://www.zsythink.net/archives/2134</a><br>使用 LVS 实现负载均衡原理及安装配置详解 - <a href="https://www.cnblogs.com/liwei0526vip/p/6370103.html" target="_blank" rel="noopener">https://www.cnblogs.com/liwei0526vip/p/6370103.html</a><br>LVS 之 VS/TUN 应用场景 - <a href="https://www.jianshu.com/p/5524034b6086" target="_blank" rel="noopener">https://www.jianshu.com/p/5524034b6086</a><br>LVS 和 Keepalived 官方中文手册 PDF - <a href="https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg</a></p><p><a href="https://segmentfault.com/a/1190000019907036" target="_blank" rel="noopener">【均衡负载之 LVS 系列一】 - LVS 五种工作模式</a><br><a href="https://segmentfault.com/a/1190000019967549" target="_blank" rel="noopener">【均衡负载之 LVS 系列二】 - LVS 基础配置</a><br><a href="https://segmentfault.com/a/1190000020144590" target="_blank" rel="noopener">【均衡负载之 LVS 系列三】 - 高可用 LVS+KeepAlived 集群</a><br><a href="https://segmentfault.com/a/1190000020299695" target="_blank" rel="noopener">【均衡负载之 LVS 系列四】 - OSPF (ECMP)-LVS 集群</a></p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><blockquote><p>以下术语涉及 LVS 三种工作模式的原理</p></blockquote><ul><li>LB (Load Balancer 负载均衡) </li><li>HA (High Available 高可用) </li><li>Failover (失败切换) </li><li>Cluster (集群) </li><li>LVS (Linux Virtual Server Linux 虚拟服务器) </li><li>DS (Director Server)，指的是前端负载均衡器节点</li><li>RS (Real Server)，后端真实的工作服务器</li><li>VIP (Virtual IP)，虚拟的 IP 地址，向外部直接面向用户请求，作为用户请求的目标的 IP 地址</li><li>DIP (Director IP)，主要用于和内部主机通讯的 IP 地址</li><li>RIP (Real Server IP)，后端服务器的 IP 地址</li><li>CIP (Client IP)，访问客户端的 IP 地址</li></ul><h2 id="负载均衡-LB"><a href="#负载均衡-LB" class="headerlink" title="负载均衡(LB)"></a>负载均衡(LB)</h2><blockquote><p>负载均衡实现方法有两种：硬件实现和软件实现</p></blockquote><p>硬件比较常见的有：</p><ol><li>F5 Big-IP</li><li>Citrix Netscaler</li></ol><p>软件比较常见的有：</p><ol><li>LVS（Linux Virtual Server）</li><li>HAProxy</li><li>Nginx</li></ol><p>LVS 特点是：</p><ol><li>首先它是基于 4 层的网络协议的，抗负载能力强，对于服务器的硬件要求除了网卡外，其他没有太多要求；</li><li>配置性比较低，这是一个缺点也是一个优点，因为没有可太多配置的东西，大大减少了人为出错的几率；</li><li>应用范围比较广，不仅仅对 web 服务做负载均衡，还可以对其他应用（mysql）做负载均衡；</li><li>LVS 架构中存在一个虚拟 IP 的概念，需要向 IDC 多申请一个 IP 来做虚拟 IP。</li></ol><p>Nginx 负载均衡器的特点是：</p><ol><li>工作在网络的 7 层之上，可以针对 http 应用做一些分流的策略，比如针对域名、目录结构；</li><li>Nginx 安装和配置比较简单，测试起来比较方便；</li><li>也可以承担高的负载压力且稳定，一般能支撑超过上万次的并发；</li><li>Nginx 可以通过端口检测到服务器内部的故障，比如根据服务器处理网页返回的状态码、超时等等，并且会把返回错误的请求重新提交到另一个节点，不过其中缺点就是不支持 url 来检测；</li><li>Nginx 对请求的异步处理可以帮助节点服务器减轻负载；</li><li>Nginx 能支持 http 和 Email，这样就在适用范围上面小很多；</li><li>默认有三种调度算法: 轮询、weight 以及 ip_hash（可以解决会话保持的问题），还可以支持第三方的 fair 和 url_hash 等调度算法；</li></ol><p>HAProxy 的特点是：</p><ol><li>HAProxy 是工作在网络 7 层之上；</li><li>支持 Session 的保持，Cookie 的引导等；</li><li>支持 url 检测后端的服务器出问题的检测会有很好的帮助；</li><li>支持的负载均衡算法：动态加权轮循(Dynamic Round Robin)，加权源地址哈希(Weighted Source Hash)，加权 URL 哈希和加权参数哈希(Weighted Parameter Hash)；</li><li>单纯从效率上来讲 HAProxy 更会比 Nginx 有更出色的负载均衡速度；</li><li>HAProxy 可以对 Mysql 进行负载均衡，对后端的 DB 节点进行检测和负载均衡。</li></ol><h2 id="LVS-Keepalived-简介"><a href="#LVS-Keepalived-简介" class="headerlink" title="LVS+Keepalived 简介"></a>LVS+Keepalived 简介</h2><p>在 lvs+keepalived 环境里面，lvs 主要的工作是提供调度算法，把客户端请求按照需求调度在 real 服务器，keepalived 主要的工作是提供 lvs 控制器的一个冗余，并且对 real 服务器做健康检查，发现不健康的 real 服务器，就把它从 lvs 集群中剔除，real 服务器只负责提供服务。</p><h2 id="LVS"><a href="#LVS" class="headerlink" title="LVS"></a>LVS</h2><p>LVS 是一个开源的软件，可以实现 LINUX 平台下的简单负载均衡。LVS 是 Linux Virtual Server 的缩写，意思是 Linux 虚拟服务器。</p><p>LB 集群的架构和原理很简单，就是当用户的请求过来时，会直接分发到 Director Server 上，然后它把用户的请求根据设置好的调度算法，智能均衡地分发到后端真正服务器 (real server) 上。为了避免不同机器上用户请求得到的数据不一样，需要用到了共享存储，这样保证所有用户请求的数据是一样的。</p><p>LVS 是 Linux Virtual Server 的简称，也就是 Linux 虚拟服务器。这是一个由章文嵩博士发起的一个开源项目，它的官方网站是 <a href="http://www.linuxvirtualserver.org" target="_blank" rel="noopener">http://www.linuxvirtualserver.org</a> 现在 LVS 已经是 Linux 内核标准的一部分。使用 LVS 可以达到的技术目标是：通过 LVS 达到的负载均衡技术和 Linux 操作系统实现一个高性能高可用的 Linux 服务器集群，它具有良好的可靠性、可扩展性和可操作性。从而以低廉的成本实现最优的性能。LVS 是一个实现负载均衡集群的开源软件项目，LVS 架构从逻辑上可分为调度层、Server 集群层和共享存储。</p><blockquote><p>目前有三种 IP 负载均衡技术（VS/NAT,VS/TUN,VS/DR）</p></blockquote><p>Virtual Server via Network Address Translation（VS/NAT）<br>通过网络地址转换，调度器重写请求报文的目标地址，根据预设的调度算法，将请求分派给后端的真实服务器；真实服务器的响应报文通过调度器时，报文的源地址被重写，再返回给客户，完成整个负载调度过程。</p><p>Virtual Server via IP Tunneling（VS/TUN）<br>采用 NAT 技术时，由于请求和响应报文都必须经过调度器地址重写，当客户请求越来越多时，调度器的处理能力将成为瓶颈。为了解决这个问题，调度器把请求报 文通过 IP 隧道转发至真实服务器，而真实服务器将响应直接返回给客户，所以调度器只处理请求报文。由于一般网络服务应答比请求报文大许多，采用 VS/TUN 技术后，集群系统的最大吞吐量可以提高 10 倍。</p><p>Virtual Server via Direct Routing（VS/DR）<br>VS/DR 通过改写请求报文的 MAC 地址，将请求发送到真实服务器，而真实服务器将响应直接返回给客户。同 VS/TUN 技术一样，VS/DR 技术可极大地 提高集群系统的伸缩性。这种方法没有 IP 隧道的开销，对集群中的真实服务器也没有必须支持 IP 隧道协议的要求，但是要求调度器与真实服务器都有一块网卡连 在同一物理网段上。</p><blockquote><p>三种模式的主要区别</p></blockquote><table><thead><tr><th></th><th></th><th>VS/NAT</th><th>VS/TUN</th><th>VS/DR</th></tr></thead><tbody><tr><td></td><td>server</td><td>any</td><td>tunneling</td><td>non-arp device</td><td></td></tr><tr><td></td><td>server network</td><td>private</td><td>LAN/WAN</td><td>LAN</td><td></td></tr><tr><td></td><td>server number</td><td>low (10~20)</td><td>high</td><td>high</td><td></td></tr><tr><td></td><td>server gateway</td><td>load balancer</td><td>own router</td><td>own router</td><td></td></tr></tbody></table><table><thead><tr><th></th><th>模式与特点</th><th>NAT 模式</th><th>IPIP 模式</th><th>DR 模式</th></tr></thead><tbody><tr><td></td><td>对服务器的要求</td><td>服务节点可以使任何操作系统</td><td>必须支持 IP 隧道，目前只有 Linux 系统支持</td><td>服务器节点支持虚拟网卡设备，能够禁用设备的 ARP 响应</td><td></td></tr><tr><td></td><td>网络要求</td><td>拥有私有 IP 地址的局域网络</td><td>拥有合法 IP 地址的局域，网或广域网</td><td>拥有合法 IP 地址的局域，服务器节点与负载均衡器必须在同一个网段</td><td></td></tr><tr><td></td><td>通常支持节点数量</td><td>10 到 20 个，根据负载均衡器的处理能力而定</td><td>较高，可以支持 100 个服务节点</td><td>较高，可以支持 100 个服务节点</td><td></td></tr><tr><td></td><td>网关</td><td>负载均衡器为服务器节点网关</td><td>服务器的节点同自己的网关或者路由器连接，不经过负载均衡器</td><td>服务节点同自己的网关或者路由器连接，不经过负载均衡器</td><td></td></tr><tr><td></td><td>服务节点安全性</td><td>较好，采用内部 IP，服务节点隐蔽</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td></td></tr><tr><td></td><td>IP 要求</td><td>仅需要一个合法的 IP 地址作为 VIP 地址</td><td>除了 VIPO 地址外，每个服务器界定啊需要拥有合法的 IP 地址，可以直接从路由到客户端</td><td>除了 VIP 外，每个服务节点需拥有合法的 IP 地址，可以直接从路由到客户端</td><td></td></tr><tr><td></td><td>特点</td><td>地址转换</td><td>封装 IP</td><td>修改 MAC 地址</td><td></td></tr><tr><td></td><td>配置复杂度</td><td>简单</td><td>复杂</td><td>复杂</td><td></td></tr></tbody></table><h3 id="基本工作原理"><a href="#基本工作原理" class="headerlink" title="基本工作原理"></a>基本工作原理</h3><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823142206.png" alt=""></p><ol><li>当用户向负载均衡调度器（Director Server）发起请求，调度器将请求发往至内核空间</li><li>PREROUTING 链首先会接收到用户请求，判断目标 IP 确定是本机 IP，将数据包发往 INPUT 链</li><li>IPVS 是工作在 INPUT 链上的，当用户请求到达 INPUT 时，IPVS 会将用户请求和自己已定义好的集群服务进行比对，如果用户请求的就是定义的集群服务，那么此时 IPVS 会强行修改数据包里的目标 IP 地址及端口，并将新的数据包发往 POSTROUTING 链</li><li>POSTROUTING 链接收数据包后发现目标 IP 地址刚好是自己的后端服务器，那么此时通过选路，将数据包最终发送给后端的服务器</li></ol><h3 id="LVS-的组成"><a href="#LVS-的组成" class="headerlink" title="LVS 的组成"></a>LVS 的组成</h3><blockquote><p>LVS 由 2 部分程序组成，包括 ipvs 和 ipvsadm。</p></blockquote><ol><li>ipvs(ip virtual server)：一段代码工作在内核空间，叫 ipvs，是真正生效实现调度的代码。</li><li>ipvsadm：另外一段是工作在用户空间，叫 ipvsadm，负责为 ipvs 内核框架编写规则，定义谁是集群服务，而谁是后端真实的服务器(Real Server)</li></ol><h3 id="工作模式"><a href="#工作模式" class="headerlink" title="工作模式"></a>工作模式</h3><blockquote><p>原生只有 3 种模式(NAT,TUN,DR), fullnat 工作模式默认不支持</p></blockquote><p>LVS 是四层负载均衡，也就是说建立在 OSI 模型的第四层——传输层之上，传输层上有我们熟悉的 TCP/UDP，LVS 支持 TCP/UDP 的负载均衡。因为 LVS 是四层负载均衡，因此它相对于其它高层负载均衡的解决办法，比如 DNS 域名轮流解析、应用层负载的调度、客户端的调度等，它的效率是非常高的。</p><p>LVS 的 IP 负载均衡技术是通过 IPVS 模块来实现的，IPVS 是 LVS 集群系统的核心软件，它的主要作用是：安装在 Director Server 上，同时在 Director Server 上虚拟出一个 IP 地址，用户必须通过这个虚拟的 IP 地址访问服务。这个虚拟 IP 一般称为 LVS 的 VIP，即 Virtual IP。访问的请求首先经过 VIP 到达负载调度器，然后由负载调度器从 Real Server 列表中选取一个服务节点响应用户的请求。 当用户的请求到达负载调度器后，调度器如何将请求发送到提供服务的 Real Server 节点，而 Real Server 节点如何返回数据给用户，是 IPVS 实现的重点技术，IPVS 实现负载均衡机制有几种，分别是 NAT、DR、TUN 及 FULLNAT。</p><h4 id="LVS-NAT"><a href="#LVS-NAT" class="headerlink" title="LVS/NAT"></a>LVS/NAT</h4><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823142555.png" alt=""></p><blockquote><p>重点理解 NAT 方式的实现原理和数据包的改变。</p></blockquote><p>(1). 当用户请求到达 Director Server，此时请求的数据报文会先到内核空间的 PREROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 VIP<br>(2). PREROUTING 检查发现数据包的目标 IP 是本机，将数据包送至 INPUT 链<br>(3). IPVS 比对数据包请求的服务是否为集群服务，若是，修改数据包的目标 IP 地址为后端服务器 IP，然后将数据包发至 POSTROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 RIP<br>(4). POSTROUTING 链通过选路，将数据包发送给 Real Server<br>(5). Real Server 比对发现目标为自己的 IP，开始构建响应报文发回给 Director Server。 此时报文的源 IP 为 RIP，目标 IP 为 CIP<br>(6). Director Server 在响应客户端前，此时会将源 IP 地址修改为自己的 VIP 地址，然后响应给客户端。 此时报文的源 IP 为 VIP，目标 IP 为 CIP</p><blockquote><p>LVS/NAT 模型的特性</p></blockquote><ul><li>RS 应该使用私有地址，RS 的网关必须指向 DIP</li><li>DIP 和 RIP 必须在同一个网段内</li><li>请求和响应报文都需要经过 Director Server，高负载场景中，Director Server 易成为性能瓶颈</li><li>支持端口映射</li><li>RS 可以使用任意操作系统</li><li>缺陷：对 Director Server 压力会比较大，请求和响应都需经过 director server</li></ul><p>NAT（Network Address Translation 网络地址转换）是一种外网和内外地址映射的技术，内网可以是私有网址，外网可以使用 NAT 方法修改数据报头，让外网与内网能够互相通信。NAT 模式下，网络数据报的进出都要经过 LVS 的处理。LVS 需作为 RS（真实服务器）的网关。当包到达 LVS 时，LVS 做目标地址转换（DNAT），将目标 IP 改为 RS 的 IP。RS 接收到包以后，仿佛是客户端直接发给它的一样。RS 处理完，返回响应时，源 IP 是 RS IP，目标 IP 是客户端的 IP。这时 RS 的包通过网（LVS）中转，LVS 会做源地址转换（SNAT），将包的源地址改为 VIP，这样，这个包对客户端看起来就仿佛是 LVS 直接返回给它的。客户端无法感知到后端 RS 的存在。</p><p>（1）RIP 和 DIP 必须在同一个 IP 网络，且应该使用私网地址；RS 的网关要指向 DIP；<br>（2）请求报文和响应报文都必须经由 Director 转发；Director 易于成为系统瓶颈；<br>（3）支持端口映射，可修改请求报文的目标 PORT；<br>（4）vs 必须是 Linux 系统，rs 可以是任意系统；</p><p>缺点：在整个过程中，所有输入输出的流量都要经过 LVS 调度服务器。显然，LVS 调度服务器的网络 I/O 压力将会非常大，因此很容易成为瓶颈，特别是对于请求流量很小，而响应流量很大的 Web 类应用来说尤为如此。</p><p>优点：NAT 模式的优点在于配置及管理简单，由于了使用 NAT 技术，LVS 调度器及应用服务器可以在不同网段中，网络架构更灵活，应用服务器只需要进行简单的网络设定即可加入集群。</p><h4 id="LVS-DR"><a href="#LVS-DR" class="headerlink" title="LVS/DR"></a>LVS/DR</h4><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823150520.png" alt=""></p><blockquote><p>重点将请求报文的目标 MAC 地址设定为挑选出的 RS 的 MAC 地址</p></blockquote><p>(1) 当用户请求到达 Director Server，此时请求的数据报文会先到内核空间的 PREROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 VIP<br>(2) PREROUTING 检查发现数据包的目标 IP 是本机，将数据包送至 INPUT 链<br>(3) IPVS 比对数据包请求的服务是否为集群服务，若是，将请求报文中的源 MAC 地址修改为 DIP 的 MAC 地址，将目标 MAC 地址修改 RIP 的 MAC 地址，然后将数据包发至 POSTROUTING 链。 此时的源 IP 和目的 IP 均未修改，仅修改了源 MAC 地址为 DIP 的 MAC 地址，目标 MAC 地址为 RIP 的 MAC 地址<br>(4) 由于 DS 和 RS 在同一个网络中，所以是通过二层来传输。POSTROUTING 链检查目标 MAC 地址为 RIP 的 MAC 地址，那么此时数据包将会发至 Real Server。<br>(5) RS 发现请求报文的 MAC 地址是自己的 MAC 地址，就接收此报文。处理完成之后，将响应报文通过 lo 接口传送给 eth0 网卡然后向外发出。 此时的源 IP 地址为 VIP，目标 IP 为 CIP<br>(6) 响应报文最终送达至客户端</p><blockquote><p>LVS/DR 模型的特性</p></blockquote><ul><li><strong> 特点 1</strong>：保证前端路由将目标地址为 VIP 报文统统发给 Director Server，而不是 RS</li><li>RS 可以使用私有地址；也可以是公网地址，如果使用公网地址，此时可以通过互联网对 RIP 进行直接访问</li><li>RS 跟 Director Server 必须在同一个物理网络中</li><li>所有的请求报文经由 Director Server，但响应报文必须不能进过 Director Server</li><li>不支持地址转换，也不支持端口映射</li><li>RS 可以是大多数常见的操作系统</li><li>RS 的网关绝不允许指向 DIP(因为我们不允许他经过 director)</li><li>RS 上的 lo 接口配置 VIP 的 IP 地址</li><li>缺陷：RS 和 DS 必须在同一机房中</li></ul><blockquote><p>特点 1 的解决方案：</p></blockquote><ul><li>在前端路由器做静态地址路由绑定，将对于 VIP 的地址仅路由到 Director Server</li><li>存在问题：用户未必有路由操作权限，因为有可能是运营商提供的，所以这个方法未必实用</li><li>arptables：在 arp 的层次上实现在 ARP 解析时做防火墙规则，过滤 RS 响应 ARP 请求。这是由 iptables 提供的</li><li>修改 RS 上内核参数（arp_ignore 和 arp_announce）将 RS 上的 VIP 配置在 lo 接口的别名上，并限制其不能响应对 VIP 地址解析请求。</li></ul><p>DR（Direct Routing 直接路由模式）此模式时 LVS 调度器只接收客户发来的请求并将请求转发给后端服务器，后端服务器处理请求后直接把内容直接响应给客户，而不用再次经过 LVS 调度器。LVS 只需要将网络帧的 MAC 地址修改为某一台后端服务器 RS 的 MAC，该包就会被转发到相应的 RS 处理，注意此时的源 IP 和目标 IP 都没变。RS 收到 LVS 转发来的包时，链路层发现 MAC 是自己的，到上面的网络层，发现 IP 也是自己的，于是这个包被合法地接受，RS 感知不到前面有 LVS 的存在。而当 RS 返回响应时，只要直接向源 IP（即用户的 IP）返回即可，不再经过 LVS。</p><p>注意：<br>(1) 确保前端路由器将目标 IP 为 VIP 的请求报文发往 Director：<br>    (a) 在前端网关做静态绑定；<br>    (b) 在 RS 上使用 arptables；<br>    (c) 在 RS 上修改内核参数以限制 arp 通告及应答级别；<br>            arp_announce<br>            arp_ignore<br>(2) RS 的 RIP 可以使用私网地址，也可以是公网地址；RIP 与 DIP 在同一 IP 网络；RIP 的网关不能指向 DIP，以确保响应报文不会经由 Director；<br>(3) RS 跟 Director 要在同一个物理网络；<br>(4) 请求报文要经由 Director，但响应不能经由 Director，而是由 RS 直接发往 Client；<br>(5) 此模式不支持端口映射；</p><p>缺点：唯一的缺陷在于它要求 LVS 调度器及所有应用服务器在同一个网段中，因此不能实现集群的跨网段应用。</p><p>优点：可见在处理过程中 LVS Route 只处理请求的直接路由转发，所有响应结果由各个应用服务器自行处理，并对用户进行回复，网络流量将集中在 LVS 调度器之上。</p><h4 id="LVS-TUN"><a href="#LVS-TUN" class="headerlink" title="LVS/TUN"></a>LVS/TUN</h4><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823151135.png" alt=""></p><blockquote><p>在原有的 IP 报文外再次封装多一层 IP 首部，内部 IP 首部(源地址为 CIP，目标 IIP 为 VIP)，外层 IP 首部(源地址为 DIP，目标 IP 为 RIP)</p></blockquote><p>(1) 当用户请求到达 Director Server，此时请求的数据报文会先到内核空间的 PREROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 VIP 。<br>(2) PREROUTING 检查发现数据包的目标 IP 是本机，将数据包送至 INPUT 链<br>(3) IPVS 比对数据包请求的服务是否为集群服务，若是，在请求报文的首部再次封装一层 IP 报文，封装源 IP 为 DIP，目标 IP 为 RIP。然后发至 POSTROUTING 链。 此时源 IP 为 DIP，目标 IP 为 RIP<br>(4) POSTROUTING 链根据最新封装的 IP 报文，将数据包发至 RS（因为在外层封装多了一层 IP 首部，所以可以理解为此时通过隧道传输）。 此时源 IP 为 DIP，目标 IP 为 RIP<br>(5) RS 接收到报文后发现是自己的 IP 地址，就将报文接收下来，拆除掉最外层的 IP 后，会发现里面还有一层 IP 首部，而且目标是自己的 lo 接口 VIP，那么此时 RS 开始处理此请求，处理完成之后，通过 lo 接口送给 eth0 网卡，然后向外传递。 此时的源 IP 地址为 VIP，目标 IP 为 CIP<br>(6) 响应报文最终送达至客户端</p><blockquote><p>LVS/TUN 模型特性</p></blockquote><ul><li>RIP、VIP、DIP 全是公网地址</li><li>RS 的网关不会也不可能指向 DIP</li><li>所有的请求报文经由 Director Server，但响应报文必须不能进过 Director Server</li><li>不支持端口映射</li><li>RS 的系统必须支持隧道</li></ul><blockquote><p>其实企业中最常用的是 DR 实现方式，而 NAT 配置上比较简单和方便，后边实践中会总结 DR 和 NAT 具体使用配置过程。</p></blockquote><p>TUN（virtual server via ip tunneling　IP 隧道）调度器把请求的报文通过 IP 隧道转发到真实的服务器。真实的服务器将响应处理后的数据直接返回给客户端。这样调度器就只处理请求入站报文。此转发方式不修改请求报文的 IP 首部（源 IP 为 CIP，目标 IP 为 VIP），而在原 IP 报文之外再封装一个 IP 首部（源 IP 是 DIP，目标 IP 是 RIP），将报文发往挑选出的目标 RS；RS 直接响应给客户端（源 IP 是 VIP，目标 IP 是 CIP），由于一般网络服务应答数据比请求报文大很多，采用 lvs-tun 模式后，集群系统的最大吞吐量可以提高 10 倍</p><p>注意：<br>(1) DIP, VIP, RIP 都应该是公网地址；<br>(2) RS 的网关不能，也不可能指向 DIP；<br>(3) 请求报文要经由 Director，但响应不能经由 Director；<br>(4) 此模式不支持端口映射；<br>(5) RS 的操作系统得支持隧道功能</p><p>缺点: 由于后端服务器 RS 处理数据后响应发送给用户，此时需要租借大量 IP（特别是后端服务器使用较多的情况下）。</p><p>优点: 实现 lvs-tun 模式时，LVS 调度器将 TCP/IP 请求进行重新封装并转发给后端服务器，由目标应用服务器直接回复用户。应用服务器之间是通过 IP 隧道来进行转发，故两者可以存在于不同的网段中。</p><h4 id="LVS-FULLNAT"><a href="#LVS-FULLNAT" class="headerlink" title="LVS/FULLNAT"></a>LVS/FULLNAT</h4><blockquote><p>lvs-fullnat 工作模式默认不支持</p></blockquote><p>此模式类似 DNAT，它通过同时修改请求报文的源 IP 地址和目标 IP 地址进行转发</p><p>注意：<br>(1) VIP 是公网地址，RIP 和 DIP 是私网地址，且通常不在同一 IP 网络；因此，RIP 的网关一般不会指向 DIP；<br>(2) RS 收到的请求报文源地址是 DIP，因此，只需响应给 DIP；但 Director 还要将其发往 Client；<br>(3) 请求和响应报文都经由 Director；<br>(4) 支持端口映射；</p><h3 id="调度算法"><a href="#调度算法" class="headerlink" title="调度算法"></a>调度算法</h3><blockquote><p>八种调度算法（rr,wrr,lc,wlc,lblc,lblcr,dh,sh）</p></blockquote><p>针对不同的网络服务需求和服务器配置，IPVS 调度器实现了如下八种负载调度算法：</p><p>轮叫调度 rr（Round Robin）<br>调度器通过 “轮叫” 调度算法将外部请求按顺序轮流分配到集群中的真实服务器上，它均等地对待每一台服务器，而不管服务器上实际的连接数和系统负载。</p><p>加权轮叫 wrr（Weighted Round Robin）<br>调度器通过 “加权轮叫” 调度算法根据真实服务器的不同处理能力来调度访问请求。这样可以保证处理能力强的服务器处理更多的访问流量。调度器可以自动问询真实服务器的负载情况，并动态地调整其权值。</p><p>最少链接 lc（Least Connections）<br>调度器通过 “最少连接” 调度算法动态地将网络请求调度到已建立的链接数最少的服务器上。如果集群系统的真实服务器具有相近的系统性能，采用 “最小连接” 调度算法可以较好地均衡负载。</p><p>加权最少链接 wlc（Weighted Least Connections）<br>在集群系统中的服务器性能差异较大的情况下，调度器采用 “加权最少链接” 调度算法优化负载均衡性能，具有较高权值的服务器将承受较大比例的活动连接负载。调度器可以自动问询真实服务器的负载情况，并动态地调整其权值。</p><p>基于局部性的最少链接 lblc（Locality-Based Least Connections）<br>“基于局部性的最少链接” 调度算法是针对目标 IP 地址的负载均衡，目前主要用于 Cache 集群系统。该算法根据请求的目标 IP 地址找出该目标 IP 地址最近使用的服务器，若该服务器 是可用的且没有超载，将请求发送到该服务器；若服务器不存在，或者该服务器超载且有服务器处于一半的工作负载，则用 “最少链接” 的原则选出一个可用的服务 器，将请求发送到该服务器。</p><p>带复制的基于局部性最少链接 lblcr（Locality-Based Least Connections with Replication）<br>“带复制的基于局部性最少链接” 调度算法也是针对目标 IP 地址的负载均衡，目前主要用于 Cache 集群系统。它与 LBLC 算法的不同之处是它要维护从一个 目标 IP 地址到一组服务器的映射，而 LBLC 算法维护从一个目标 IP 地址到一台服务器的映射。该算法根据请求的目标 IP 地址找出该目标 IP 地址对应的服务 器组，按 “最小连接” 原则从服务器组中选出一台服务器，若服务器没有超载，将请求发送到该服务器，若服务器超载；则按 “最小连接” 原则从这个集群中选出一 台服务器，将该服务器加入到服务器组中，将请求发送到该服务器。同时，当该服务器组有一段时间没有被修改，将最忙的服务器从服务器组中删除，以降低复制的 程度。</p><p>目标地址散列 dh（Destination Hashing）<br>“目标地址散列” 调度算法根据请求的目标 IP 地址，作为散列键（Hash Key）从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。</p><p>源地址散列 sh（Source Hashing）<br>“源地址散列” 调度算法根据请求的源 IP 地址，作为散列键（Hash Key）从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。</p><h2 id="keepalived"><a href="#keepalived" class="headerlink" title="keepalived"></a>keepalived</h2><p>Keepalived 是运行在 lvs 之上，是一个用于做双机热备（HA）的软件，它的主要功能是实现真实机的故障隔离及负载均衡器间的失败切换，提高系统的可用性。</p><h3 id="运行原理"><a href="#运行原理" class="headerlink" title="运行原理"></a>运行原理</h3><p>keepalived 通过选举（看服务器设置的权重）挑选出一台热备服务器做 MASTER 机器，MASTER 机器会被分配到一个指定的虚拟 ip，外部程序可通过该 ip 访问这台服务器，如果这台服务器出现故障（断网，重启，或者本机器上的 keepalived crash 等），keepalived 会从其他的备份机器上重选（还是看服务器设置的权重）一台机器做 MASTER 并分配同样的虚拟 IP，充当前一台 MASTER 的角色。</p><h3 id="选举策略"><a href="#选举策略" class="headerlink" title="选举策略"></a>选举策略</h3><p>选举策略是根据 VRRP 协议，完全按照权重大小，权重最大（0～255）的是 MASTER 机器，下面几种情况会触发选举</p><ol><li>keepalived 启动的时候</li><li>master 服务器出现故障（断网，重启，或者本机器上的 keepalived crash 等，而本机器上其他应用程序 crash 不算）</li><li>有新的备份服务器加入且权重最大</li></ol><h2 id="keepalived-的配置文件说明"><a href="#keepalived-的配置文件说明" class="headerlink" title="keepalived 的配置文件说明"></a>keepalived 的配置文件说明</h2><p>Keepalived 是运行在 lvs 之上, 它的主要功能是实现 RealServer(真实服务器)的故障隔离及 Director(负载均衡器)间的 FailOver(失败切换). </p><ul><li>keepalived 是 lvs 的扩展项目, 因此它们之间具备良好的兼容性</li><li>对 RealServer 的健康检查, 实现对失效机器 / 服务的故障隔离</li><li>负载均衡器之间的失败切换 failover</li></ul><h3 id="全局定义"><a href="#全局定义" class="headerlink" title="全局定义"></a>全局定义</h3><p>全局配置又包括两个子配置</p><ol><li>全局定义(global definition)</li><li>静态路由配置(static ipaddress/routes)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局定义 (global definition) </span></span><br><span class="line">global_defs &#123;                      </span><br><span class="line">   notification_email &#123;      </span><br><span class="line">   acassen@firewall.loc     </span><br><span class="line">   failover@firewall.loc</span><br><span class="line">   sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc   </span><br><span class="line">   smtp_server 192.168.200.1                         </span><br><span class="line">   smtp_connect_timeout 30                                  </span><br><span class="line">   router_id LVS_DEVEL     </span><br><span class="line">&#125;</span><br><span class="line">notification_email: 表示 keepalived 在发生诸如切换操作时需要发送 email 通知以及 email 发送给哪些邮件地址邮件地址可以多个每行一个</span><br><span class="line">notification_email_from admin@example.com: 表示发送通知邮件时邮件源地址是谁</span><br><span class="line">smtp_server 127.0.0.1: 表示发送 email 时使用的 smtp 服务器地址这里可以用本地的 sendmail 来实现</span><br><span class="line">smtp_connect_timeout 30: 连接 smtp 连接超时时间</span><br><span class="line">router_id node1: 机器标识，通常配置主机名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态地址和路由配置范例</span></span><br><span class="line">static_ipaddress &#123;</span><br><span class="line">    192.168.1.1/24 brd + dev eth0 scope global</span><br><span class="line">    192.168.1.2/24 brd + dev eth1 scope global</span><br><span class="line">&#125;</span><br><span class="line">static_routes &#123;</span><br><span class="line">    src <span class="variable">$SRC_IP</span> to <span class="variable">$DST_IP</span> dev <span class="variable">$SRC_DEVICE</span></span><br><span class="line">    src <span class="variable">$SRC_IP</span> to <span class="variable">$DST_IP</span> via <span class="variable">$GW</span> dev <span class="variable">$SRC_DEVICE</span></span><br><span class="line">&#125;</span><br><span class="line"> 这里实际上和系统里面命令配置 IP 地址和路由一样例如 </span><br><span class="line">192.168.1.1/24 brd + dev eth0 scope global 相当于: ip addr add 192.168.1.1/24 brd + dev eth0 scope global</span><br><span class="line"> 就是给 eth0 配置 IP 地址路由同理, 一般这个区域不需要配置 </span><br><span class="line"> 这里实际上就是给服务器配置真实的 IP 地址和路由的在复杂的环境下可能需要配置一般不会用这个来配置我们可以直接用 vi /etc/sysconfig/network-script/ifcfg-eth1 来配置切记这里可不是 VIP 不要搞混淆了切记切记</span><br></pre></td></tr></table></figure><h3 id="VRRPD-配置"><a href="#VRRPD-配置" class="headerlink" title="VRRPD 配置"></a>VRRPD 配置</h3><p>包括三个类:</p><ol><li>VRRP 同步组(synchroization group) </li><li>VRRP 实例(VRRP Instance) </li><li>VRRP 脚本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># VRRP 同步组 (synchroization group) 配置范例 </span></span><br><span class="line">vrrp_sync_group VG_1 &#123;   // 注意 vrrp_sync_group  后面可自定义名称如 lvs_httpd ,httpd</span><br><span class="line">group &#123;</span><br><span class="line">http</span><br><span class="line">mysql</span><br><span class="line">&#125;</span><br><span class="line">notify_master /path/to/to_master.sh</span><br><span class="line">notify_backup /path_to/to_backup.sh</span><br><span class="line">notify_fault <span class="string">"/path/fault.sh VG_1"</span></span><br><span class="line">notify /path/to/notify.sh</span><br><span class="line">smtp_alert </span><br><span class="line">&#125;</span><br><span class="line"> 其中 http 和 mysql 是实例名和下面的实例名一致 </span><br><span class="line">notify_master /path/to/to_master.sh // 表示当切换到 master 状态时要执行的脚本</span><br><span class="line">notify_backup /path_to/to_backup.sh // 表示当切换到 backup 状态时要执行的脚本</span><br><span class="line">notify_fault <span class="string">"/path/fault.sh VG_1"</span>  // keepalived 出现故障时执行的脚本</span><br><span class="line">notify /path/to/notify.sh  </span><br><span class="line">smtp_alert           // 表示切换时给 global defs 中定义的邮件地址发送邮件通知</span><br><span class="line"></span><br><span class="line"><span class="comment"># VRRP 实例(instance) 配置范例</span></span><br><span class="line">vrrp_instance http &#123;  // 注意 vrrp_instance 后面可自定义名称如 lvs_httpd ,httpd</span><br><span class="line">state MASTER</span><br><span class="line">interface eth0</span><br><span class="line">dont_track_primary</span><br><span class="line">track_interface &#123;</span><br><span class="line">eth0</span><br><span class="line">eth1</span><br><span class="line">&#125;</span><br><span class="line">mcast_src_ip &lt;IPADDR&gt;</span><br><span class="line">garp_master_delay 10</span><br><span class="line">virtual_router_id 51</span><br><span class="line">priority 100</span><br><span class="line">advert_int 1</span><br><span class="line">authentication &#123;</span><br><span class="line">auth_type PASS</span><br><span class="line">autp_pass 1234</span><br><span class="line">&#125;</span><br><span class="line">virtual_ipaddress &#123;</span><br><span class="line"><span class="comment">#&lt;IPADDR&gt;/&lt;MASK&gt; brd &lt;IPADDR&gt; dev &lt;STRING&gt; scope &lt;SCOPT&gt; label &lt;LABEL&gt;</span></span><br><span class="line">192.168.200.17/24 dev eth1</span><br><span class="line">192.168.200.18/24 dev eth2 label eth2:1</span><br><span class="line">&#125;</span><br><span class="line">virtual_routes &#123;</span><br><span class="line"><span class="comment"># src &lt;IPADDR&gt; [to] &lt;IPADDR&gt;/&lt;MASK&gt; via|gw &lt;IPADDR&gt; dev &lt;STRING&gt; scope &lt;SCOPE&gt; tab</span></span><br><span class="line">src 192.168.100.1 to 192.168.109.0/24 via 192.168.200.254 dev eth1</span><br><span class="line">192.168.110.0/24 via 192.168.200.254 dev eth1</span><br><span class="line">192.168.111.0/24 dev eth2</span><br><span class="line">192.168.112.0/24 via 192.168.100.254</span><br><span class="line">&#125;</span><br><span class="line">nopreempt</span><br><span class="line">preemtp_delay 300</span><br><span class="line">debug</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>state: state 指定 instance(Initial)的初始状态就是说在配置好后这台 服务器的初始状态就是这里指定的但这里指定的不算还是得要通过竞选通过优先级来确定里如果这里设置为 master 但如若他的优先级不及另外一台 那么这台在发送通告时会发送自己的优先级另外一台发现优先级不如自己的高那么他会就回抢占为 master</p><p>interface: 实例绑定的网卡因为在配置虚拟 VIP 的时候必须是在已有的网卡上添加的</p><p>dont track primary: 忽略 VRRP 的 interface 错误</p><p>track interface: 跟踪接口设置额外的监控里面任意一块网卡出现问题都会进入故障 (FAULT) 状态例如用 nginx 做均衡器的时候内网必须正常工作如果内网出问题了这个均衡器也就无法运作了所以必须对内外网同时做健康检查</p><p>mcast src ip: 发送多播数据包时的源 IP 地址这里注意了这里实际上就是在那个地址上发送 VRRP 通告这个非常重要一定要选择稳定的网卡端口来发送这里相当于 heartbeat 的心跳端口如果没有设置那么就用默认的绑定的网卡的 IP 也就是 interface 指定的 IP 地址</p><p>garp master delay: 在切换到 master 状态后延迟进行免费的 ARP(gratuitous ARP)请求，默认 5s</p><p>virtual router id: 这里设置 VRID 这里非常重要相同的 VRID 为一个组他将决定多播的 MAC 地址</p><p>priority 100: 设置本节点的优先级优先级高的为 master</p><p>advert int: 设置 MASTER 与 BACKUP 负载均衡之间同步即主备间通告时间检查的时间间隔, 单位为秒，默认 1s</p><p>virtual ipaddress: 这里设置的就是 VIP 也就是虚拟 IP 地址他随着 state 的变化而增加删除当 state 为 master 的时候就添加当 state 为 backup 的时候删除这里主要是有优先级来决定的和 state 设置的值没有多大关系这里可以设置多个 IP 地址</p><p>virtual routes: 原理和 virtual ipaddress 一样只不过这里是增加和删除路由</p><p>lvs sync daemon interface: lvs syncd 绑定的网卡，类似 HA 中的心跳检测绑定的网卡</p><p>authentication: 这里设置认证</p><p>auth type: 认证方式可以是 PASS 或 AH 两种认证方式</p><p>auth pass: 认证密码</p><p>nopreempt: 设置不抢占 master，这里只能设置在 state 为 backup 的节点上而且这个节点的优先级必须别另外的高，比如 master 因为异常将调度圈交给了备份 serve，master serve 检修后没问题，如果不设置 nopreempt 就会将调度权重新夺回来，这样就容易造成业务中断问题</p><p>preempt delay: 抢占延迟多少秒，即延迟多少秒后竞选 master</p><p>debug：debug 级别</p><p>notify master：和 sync group 这里设置的含义一样可以单独设置例如不同的实例通知不同的管理人员 http 实例发给网站管理员 mysql 的就发邮件给 DBA</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># VRRP 脚本 </span></span><br><span class="line"><span class="comment"># 如下所示为相关配置示例</span></span><br><span class="line">vrrp_script check_running &#123;</span><br><span class="line">   script <span class="string">"/usr/local/bin/check_running"</span></span><br><span class="line">   interval 10</span><br><span class="line">   weight 10</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance http &#123;</span><br><span class="line">   state BACKUP</span><br><span class="line">   smtp_alert</span><br><span class="line">   interface eth0</span><br><span class="line">   virtual_router_id 101</span><br><span class="line">   priority 90</span><br><span class="line">   advert_int 3</span><br><span class="line">   authentication &#123;</span><br><span class="line">   auth_type PASS</span><br><span class="line">   auth_pass whatever</span><br><span class="line">   &#125;</span><br><span class="line">   virtual_ipaddress &#123;</span><br><span class="line">   1.1.1.1</span><br><span class="line">   &#125;</span><br><span class="line">   track_script &#123;</span><br><span class="line">   check_running </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 首先在 vrrp_script 区域定义脚本名字和脚本执行的间隔和脚本执行的优先级变更, 如下所示:</span></span><br><span class="line">vrrp_script check_running &#123;</span><br><span class="line">            script <span class="string">"/usr/local/bin/check_running"</span></span><br><span class="line">            interval 10     <span class="comment"># 脚本执行间隔</span></span><br><span class="line">            weight 10       <span class="comment"># 脚本结果导致的优先级变更 10 表示优先级 + 10-10 则表示优先级 - 10</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment"># 然后在实例(vrrp_instance) 里面引用有点类似脚本里面的函数引用一样先定义后引用函数名</span></span><br><span class="line">track_script &#123;</span><br><span class="line">      check_running </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:<br>VRRP 脚本 (vrrp_script) 和 VRRP 实例 (vrrp_instance) 属于同一个级别<br>keepalived 会定时执行脚本并对脚本执行的结果进行分析，动态调整 vrrp_instance 的优先级。一般脚本检测返回的值为 0，说明脚本检测成功，如果为非 0 数值，则说明检测失败<br>如果脚本执行结果为 0，并且 weight 配置的值大于 0，则优先级相应的增加, 如果 weight 为非 0，则优先级不变<br>如果脚本执行结果非 0，并且 weight 配置的值小于 0，则优先级相应的减少, 如果 weight 为 0，则优先级不变<br>其他情况，维持原本配置的优先级，即配置文件中 priority 对应的值。<br>这里需要注意的是：<br>1） 优先级不会不断的提高或者降低<br>2） 可以编写多个检测脚本并为每个检测脚本设置不同的 weight<br>3） 不管提高优先级还是降低优先级，最终优先级的范围是在[1,254]，不会出现优先级小于等于 0 或者优先级大于等于 255 的情况<br>这样可以做到利用脚本检测业务进程的状态，并动态调整优先级从而实现主备切换。</p><h3 id="virtual-server-虚拟主机配置"><a href="#virtual-server-虚拟主机配置" class="headerlink" title="virtual_server 虚拟主机配置"></a>virtual_server 虚拟主机配置</h3><p>关于 keeplived 的虚拟主机配置有三种如下所示<br>virtual server IP port<br>virtual server fwmark int<br>virtual server group string</p><p>以常用的第一种为例<br>virtual_server 192.168.1.2 80<br>含义: 设置一个 virtual server: VIP:Vport</p><p>delay_loop 3<br>含义: 设置 service polling 的 delay 时间即服务轮询的时间间隔</p><p>lb_algo rr|wrr|lc|wlc|lblc|sh|dh<br>含义: 设置 LVS 调度算法</p><p>lb_kind NAT|DR|TUN<br>含义: 设置 LVS 集群模式  </p><p>persistence_timeout 120<br>含义: 设置会话保持时间秒为单位即以用户在 120 秒内被分配到同一个后端 realserver, 超过此时间就重新分配</p><p>persistence_granularity <netmask><br>含义: 设置 LVS 会话保持粒度 ipvsadm 中的 - M 参数默认是 0xffffffff 即每个客户端都做会话保持</netmask></p><p>protocol TCP<br>含义: 设置健康检查用的是 TCP 还是 UDP</p><p>ha_suspend<br>含义: suspendhealthchecker’s activity</p><p>virtualhost <string><br>含义: HTTP_GET 做健康检查时检查的 web 服务器的虚拟主机即 host 头</string></p><p>sorry_server <ipaddr> <port><br>含义: 设置 backupserver 就是当所有后端 realserver 节点都不可用时就用这里设置的也就是临时把所有的请求都发送到这里</port></ipaddr></p><p>real_server <ipaddr> <port><br>含义: 设置后端真实节点主机的权重等设置主要后端有几台这里就要设置几个</port></ipaddr></p><p>weight 1<br>含义: 设置给每台的权重 0 表示失效 (不知给他转发请求知道他恢复正常) 默认是 1</p><p>inhibit_on_failure<br>含义: 表示在节点失败后把他权重设置成 0 而不是冲 IPVS 中删除</p><p>notify_up <string> | <quoted-string><br>含义: 设置检查服务器正常 (UP) 后要执行的脚本<br>notify_down <string> | <quoted-string><br>含义: 设置检查服务器失败 (down) 后要执行的脚本</quoted-string></string></quoted-string></string></p><p>注: keepalived 检查机制说明<br>keepalived 健康检查方式有: HTTP_GET|SSL_GET|TCP_CHECK|SMTP_CHECK|MISC_CHECK 几种如下所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#HTTP/HTTPS 方式 </span></span><br><span class="line">HTTP_GET|SSL_GET &#123;      <span class="comment"># 设置健康检查方式</span></span><br><span class="line"></span><br><span class="line">url &#123;                   <span class="comment"># 设置要检查的 URL 可以有多个</span></span><br><span class="line">path /                  <span class="comment"># 设置 URL 具体路径</span></span><br><span class="line">digest &lt;STRING&gt;         <span class="comment"># 检查后的摘要信息这些摘要信息可以通过 genhash 命令工具获取                                   </span></span><br><span class="line">status_code 200         <span class="comment"># 设置返回状态码</span></span><br><span class="line">&#125;</span><br><span class="line">connect_port 80         <span class="comment"># 设置监控检查的端口</span></span><br><span class="line">bindto  &lt;IPADD&gt;         <span class="comment"># 设置健康检查的 IP 地址</span></span><br><span class="line">connect_timeout   3     <span class="comment"># 设置连接超时时间</span></span><br><span class="line">nb_get_retry  3         <span class="comment"># 设置重连次数</span></span><br><span class="line">delay_before_retry  2   <span class="comment"># 设置重连间隔</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">#TCP 方式  </span></span><br><span class="line">TCP_CHECK     &#123;</span><br><span class="line">connect_port 80         <span class="comment"># 设置监控检查的端口</span></span><br><span class="line">bindto  &lt;IPADD&gt;         <span class="comment"># 设置健康检查的 IP 地址</span></span><br><span class="line">connect_timeout   3     <span class="comment"># 设置连接超时时间</span></span><br><span class="line">nb_get_retry  3         <span class="comment"># 设置重连次数</span></span><br><span class="line">delay_before_retry  2   <span class="comment"># 设置重连间隔</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#SMTP 方式 (这个可以用来给邮件服务器做集群)</span></span><br><span class="line">SMTP_CHECK &#123;</span><br><span class="line">host &#123;</span><br><span class="line">connect_ip &lt;IP ADDRESS&gt;</span><br><span class="line">connect_port &lt;PORT&gt;     <span class="comment"># 默认检查 25 端口</span></span><br><span class="line">14 KEEPALIVED</span><br><span class="line">bindto &lt;IP ADDRESS&gt;</span><br><span class="line">&#125;</span><br><span class="line">connect_timeout &lt;INTEGER&gt;</span><br><span class="line">retry &lt;INTEGER&gt;</span><br><span class="line">delay_before_retry &lt;INTEGER&gt;</span><br><span class="line">helo_name &lt;STRING&gt;|&lt;QUOTED-STRING&gt;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">#MISC 方式 这个可以用来检查很多服务器只需要自己会些脚本即可</span></span><br><span class="line">MISC_CHECK &#123;</span><br><span class="line">misc_path &lt;STRING&gt;|&lt;QUOTED-STRING&gt;  <span class="comment"># 外部程序或脚本</span></span><br><span class="line">misc_timeout &lt;INT&gt;                  <span class="comment"># 脚本或程序执行超时时间</span></span><br><span class="line">misc_dynamic                                              </span><br><span class="line"><span class="comment"># 这个就很好用了可以非常精确的来调整权重是后端每天服务器的压力都能均衡调配这个主要是通过执行的程序或脚本返回的状态代码来动态调整 weight 值使权重根据真实的后端压力来适当调整不过这需要有过硬的脚本功夫才行哦</span></span><br><span class="line"><span class="comment"># 返回 0 健康检查没问题不修改权重</span></span><br><span class="line"><span class="comment"># 返回 1 健康检查失败权重设置为 0</span></span><br><span class="line"><span class="comment"># 返回 2-255 健康检查没问题但是权重却要根据返回代码修改为返回码 - 2 例如如果程序或脚本执行后返回的代码为 200# 那么权重这回被修改为 200-2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上就是 keepalived 的配置项说明虽然配置项很多但很多时候很多配置项保持默认即可，以下是默认配置文件，方便大家做个对比参考</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-65-32-140 wangao]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">     failover@firewall.loc</span><br><span class="line">     sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">   vrrp_strict</span><br><span class="line">   vrrp_garp_interval 0</span><br><span class="line">   vrrp_gna_interval 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.200.16</span><br><span class="line">        192.168.200.17</span><br><span class="line">        192.168.200.18</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 192.168.200.100 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 192.168.201.100 443 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        SSL_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /</span><br><span class="line">              digest ff20ad2481f97b1754ef3e12ecd3a9cc</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /mrtg/</span><br><span class="line">              digest 9b3a0c85a887a256d6939da88aabd8cd</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.10.2 1358 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    sorry_server 192.168.200.200 1358</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.2 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.3 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.10.3 1358 &#123;</span><br><span class="line">    delay_loop 3</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.4 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.5 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ipvsadm"><a href="#ipvsadm" class="headerlink" title="ipvsadm"></a>ipvsadm</h2><blockquote><p>一般建议和 Keepalived 配置文件搭配使用</p></blockquote><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">[root@d126009 wangao]<span class="comment"># ipvsadm -h</span></span><br><span class="line">ipvsadm v1.27 2008/5/15 (compiled with popt and IPVS v1.2.1)</span><br><span class="line">Usage:</span><br><span class="line">  ipvsadm -A|E -t|u|f service-address [-s scheduler] [-p [timeout]] [-M netmask] [--pe persistence_engine] [-b <span class="built_in">sched</span>-flags]</span><br><span class="line">  ipvsadm -D -t|u|f service-address</span><br><span class="line">  ipvsadm -C</span><br><span class="line">  ipvsadm -R</span><br><span class="line">  ipvsadm -S [-n]</span><br><span class="line">  ipvsadm -a|e -t|u|f service-address -r server-address [options]</span><br><span class="line">  ipvsadm -d -t|u|f service-address -r server-address</span><br><span class="line">  ipvsadm -L|l [options]</span><br><span class="line">  ipvsadm -Z [-t|u|f service-address]</span><br><span class="line">  ipvsadm --<span class="built_in">set</span> tcp tcpfin udp</span><br><span class="line">  ipvsadm --start-daemon state [--mcast-interface interface] [--syncid sid]</span><br><span class="line">  ipvsadm --stop-daemon state</span><br><span class="line">  ipvsadm -h</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">Either long or short options are allowed.</span><br><span class="line">  --add-service     -A        add virtual service with options</span><br><span class="line">  --edit-service    -E        edit virtual service with options</span><br><span class="line">  --delete-service  -D        delete virtual service</span><br><span class="line">  --clear           -C        clear the whole table</span><br><span class="line">  --restore         -R        restore rules from stdin</span><br><span class="line">  --save            -S        save rules to stdout</span><br><span class="line">  --add-server      -a        add real server with options</span><br><span class="line">  --edit-server     -e        edit real server with options</span><br><span class="line">  --delete-server   -d        delete real server</span><br><span class="line">  --list            -L|-l     list the table</span><br><span class="line">  --zero            -Z        zero counters <span class="keyword">in</span> a service or all services</span><br><span class="line">  --<span class="built_in">set</span> tcp tcpfin udp        <span class="built_in">set</span> connection timeout values</span><br><span class="line">  --start-daemon              start connection sync daemon</span><br><span class="line">  --stop-daemon               stop connection sync daemon</span><br><span class="line">  --<span class="built_in">help</span>            -h        display this <span class="built_in">help</span> message</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  --tcp-service  -t service-address   service-address is host[:port]</span><br><span class="line">  --udp-service  -u service-address   service-address is host[:port]</span><br><span class="line">  --fwmark-service  -f fwmark         fwmark is an <span class="built_in">integer</span> greater than zero</span><br><span class="line">  --ipv6         -6                   fwmark entry uses IPv6</span><br><span class="line">  --scheduler    -s scheduler         one of rr|wrr|lc|wlc|lblc|lblcr|dh|sh|sed|nq,</span><br><span class="line">                                      the default scheduler is wlc.</span><br><span class="line">  --pe            engine              alternate persistence engine may be sip,</span><br><span class="line">                                      not <span class="built_in">set</span> by default.</span><br><span class="line">  --persistent   -p [timeout]         persistent service</span><br><span class="line">  --netmask      -M netmask           persistent granularity mask</span><br><span class="line">  --real-server  -r server-address    server-address is host (and port)</span><br><span class="line">  --gatewaying   -g                   gatewaying (direct routing) (default)</span><br><span class="line">  --ipip         -i                   ipip encapsulation (tunneling)</span><br><span class="line">  --masquerading -m                   masquerading (NAT)</span><br><span class="line">  --weight       -w weight            capacity of real server</span><br><span class="line">  --u-threshold  -x uthreshold        upper threshold of connections</span><br><span class="line">  --l-threshold  -y lthreshold        lower threshold of connections</span><br><span class="line">  --mcast-interface interface         multicast interface <span class="keyword">for</span> connection sync</span><br><span class="line">  --syncid sid                        syncid <span class="keyword">for</span> connection sync (default=255)</span><br><span class="line">  --connection   -c                   output of current IPVS connections</span><br><span class="line">  --timeout                           output of timeout (tcp tcpfin udp)</span><br><span class="line">  --daemon                            output of daemon information</span><br><span class="line">  --stats                             output of statistics information</span><br><span class="line">  --rate                              output of rate information</span><br><span class="line">  --exact                             expand numbers (display exact values)</span><br><span class="line">  --thresholds                        output of thresholds information</span><br><span class="line">  --persistent-conn                   output of persistent connection info</span><br><span class="line">  --nosort                            <span class="built_in">disable</span> sorting output of service/server entries</span><br><span class="line">  --sort                              does nothing, <span class="keyword">for</span> backwards compatibility</span><br><span class="line">  --ops          -o                   one-packet scheduling</span><br><span class="line">  --numeric      -n                   numeric output of addresses and ports</span><br><span class="line">  --<span class="built_in">sched</span>-flags  -b flags             scheduler flags (comma-separated)</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每台 realserver index.html 文件内容为 ip 地址，例如 httpd： </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"172.27.233.43"</span> &gt; /var/www/html/index.html</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"172.27.233.44"</span> &gt; /var/www/html/index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># Nginx test</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rs1"</span> &gt; /usr/share/nginx/html/index.html</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rs2"</span> &gt; /usr/share/nginx/html/index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 http 服务 </span></span><br><span class="line">/etc/init.d/httpd start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 客户端模拟请求</span></span><br><span class="line"><span class="keyword">for</span>((i=1;i&lt;=10;i++));<span class="keyword">do</span> curl http://172.27.233.45/; <span class="keyword">done</span></span><br><span class="line">172.27.233.44 </span><br><span class="line">172.27.233.43 </span><br><span class="line">172.27.233.44 </span><br><span class="line">172.27.233.43 </span><br><span class="line">172.27.233.44 </span><br><span class="line">172.27.233.43 </span><br><span class="line">172.27.233.44 </span><br><span class="line">172.27.233.43 </span><br><span class="line">172.27.233.44 </span><br><span class="line">172.27.233.43 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求分配结果</span></span><br><span class="line">ipvsadm -Ln --stats</span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096) </span><br><span class="line">Prot LocalAddress:Port               Conns   InPkts  OutPkts  InBytes OutBytes </span><br><span class="line">  -&gt; RemoteAddress:Port </span><br><span class="line">TCP  172.27.233.45:80                   10      50        0     4330        0 </span><br><span class="line">  -&gt; 172.27.233.43:80                    5       25        0     2165        0 </span><br><span class="line">  -&gt; 172.27.233.44:80                    5       25        0     2165        0 </span><br><span class="line"></span><br><span class="line"> 参数含义 </span><br><span class="line">--stats 显示统计信息 </span><br><span class="line">Prot LocalAddress:Port Conns InPkts OutPkts InBytes OutBytes </span><br><span class="line">                       连接数 输入包 输出包 输入流量 输出流量 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时观察</span></span><br><span class="line">watch ipvsadm -Ln --stats</span><br></pre></td></tr></table></figure><h2 id="lvs-keepalived-配置实践"><a href="#lvs-keepalived-配置实践" class="headerlink" title="lvs+keepalived 配置实践"></a>lvs+keepalived 配置实践</h2><blockquote><p>防火墙的配置不在本文的范围，请关闭 selinux 和 firewall</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭防火墙</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁用 selinux</span></span><br><span class="line">setenforce 0</span><br><span class="line">vi /etc/selinux/config</span><br><span class="line"></span><br><span class="line">SELINUX=disabled</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 keepalived,ipvsadm</span></span><br><span class="line">yum install keepalived ipvsadm -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启 LVS 服务器的 IP 路由转发功能</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="comment"># 添加路由转发至 sysctl.conf</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h3 id="最简单的-keepalived-做-HA"><a href="#最简单的-keepalived-做-HA" class="headerlink" title="最简单的 keepalived 做 HA"></a>最简单的 keepalived 做 HA</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果开启防火墙，请添加 VRRP 白名单</span></span><br><span class="line"><span class="comment"># For keepalived</span></span><br><span class="line"><span class="comment"># allow vrrp</span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line"><span class="comment"># allow multicast</span></span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 keepalived 配置文件</span></span><br><span class="line">vi /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group VI_GOP_NC1_HA &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_GOP_NC1_HA_PRI</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_GOP_NC1_HA_PRI &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 139</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.65.33.139/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置-LVS-NAT"><a href="#配置-LVS-NAT" class="headerlink" title="配置 LVS-NAT"></a>配置 LVS-NAT</h3><h4 id="DS"><a href="#DS" class="headerlink" title="DS"></a>DS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install keepalived</span></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install keepalived ipvsadm</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install keepalived ipvsadm</span><br><span class="line"></span><br><span class="line"><span class="comment"># update iptables</span></span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># For keepalived:</span></span><br><span class="line"><span class="comment"># allow vrrp </span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line"><span class="comment"># allow multicast</span></span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># reload iptables</span></span><br><span class="line">service iptables reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># open ip_forward</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="comment"># edit sysctl.conf</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived for lvs-nat</span></span><br><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group NC-MAIN-API &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        NC-MAIN-API-PUB</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance NC-MAIN-API-PUB &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond1</span><br><span class="line">    virtual_router_id 222</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xx.xx.xx.xx/25 dev bond1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server xx.xx.xx.xx 15000 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.71.12.69 15000 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 15000</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.71.12.76 15000 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 15000</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="RS"><a href="#RS" class="headerlink" title="RS"></a>RS</h4><p>修改默认网关指向 NAT 的 VIP 地址</p><h3 id="配置-LVS-DR"><a href="#配置-LVS-DR" class="headerlink" title="配置 LVS-DR"></a>配置 LVS-DR</h3><h4 id="DS-1"><a href="#DS-1" class="headerlink" title="DS"></a>DS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install keepalived</span></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install keepalived ipvsadm</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install keepalived ipvsadm</span><br><span class="line"></span><br><span class="line"><span class="comment"># update iptables</span></span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># For keepalived:</span></span><br><span class="line"><span class="comment"># allow vrrp </span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line"><span class="comment"># allow multicast</span></span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># reload iptables</span></span><br><span class="line">service iptables reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># open ip_forward</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="comment"># edit sysctl.conf</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived for lvs-dr</span></span><br><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_CONNECT</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_CONNECT &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 128</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.65.32.28/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.28 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.13 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.65.32.14 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.28 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.13 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.65.32.14 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_AUTH &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 129</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.65.32.29/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.29 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.22 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 110.65.32.23 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.29 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.22 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 110.65.32.23 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># enable and start keepalived</span></span><br><span class="line">systemctl start keepalived</span><br><span class="line">systemctl <span class="built_in">enable</span> keepalived</span><br><span class="line">watch ipvsadm -L -n --stats</span><br></pre></td></tr></table></figure><h4 id="RS-1"><a href="#RS-1" class="headerlink" title="RS"></a>RS</h4><ol><li>Edit “/etc/sysconfig/network-scripts/ifcfg-lo” to patch bug in Centos 7 (if using Centos 7). Add TYPE=Loopback to the file.</li><li>Add loopback for each Virtual IP on each worker. E.g. first virtual IP create file “/etc/sysconfig/network-scripts/ifcfg-lo:0”.</li><li>Start adapters if not yet started</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># add TYPE=Loopback</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"TYPE=Loopback"</span> &gt;&gt; /etc/sysconfig/network-scripts/ifcfg-lo</span><br><span class="line"><span class="comment"># add ifcfg-lo:0</span></span><br><span class="line">cat &gt; /etc/sysconfig/network-scripts/ifcfg-lo:0 &lt;&lt; EOF</span><br><span class="line">DEVICE=lo:0</span><br><span class="line">IPADDR=10.65.32.28</span><br><span class="line">NETMASK=255.255.255.255</span><br><span class="line">ONBOOT=yes</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># ifup lo:0</span></span><br><span class="line">ifup lo:0</span><br><span class="line"></span><br><span class="line"><span class="comment"># add real_start</span></span><br><span class="line">cat &gt; /root/real_start.sh &lt;&lt; EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># chmod 755</span></span><br><span class="line">chmod 755 /root/real_start.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># add real.service</span></span><br><span class="line">cat &gt; /usr/lib/systemd/system/real.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=autostart lvs real</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/root/real_start.sh</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable service</span></span><br><span class="line">systemctl <span class="built_in">enable</span> real.service</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># lvs real server example</span></span><br><span class="line">vim /root/lvs_real.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: Start realserver</span></span><br><span class="line"><span class="comment"># Description:       Start realserver</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># change the VIP to proper value</span></span><br><span class="line">VIP=10.65.32.28</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Start REAL Server"</span></span><br><span class="line">    /sbin/ifconfig lo:0 <span class="variable">$VIP</span> broadcast <span class="variable">$VIP</span> netmask 255.255.255.255 up</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    stop)</span><br><span class="line"></span><br><span class="line">    /sbin/ifconfig lo:0 down</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Stop REAL Server"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    restart)</span><br><span class="line"></span><br><span class="line">    <span class="variable">$0</span> stop</span><br><span class="line">    <span class="variable">$0</span> start</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    *)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop&#125;"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><h3 id="配置-LVS-TUN"><a href="#配置-LVS-TUN" class="headerlink" title="配置 LVS-TUN"></a>配置 LVS-TUN</h3><h4 id="DS-2"><a href="#DS-2" class="headerlink" title="DS"></a>DS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install keepalived</span></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install keepalived ipvsadm</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install keepalived ipvsadm</span><br><span class="line"></span><br><span class="line"><span class="comment"># update iptables</span></span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># For keepalived:</span></span><br><span class="line"><span class="comment"># allow vrrp </span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line"><span class="comment"># allow multicast</span></span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># reload iptables</span></span><br><span class="line">service iptables reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># open ip_forward</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="comment"># edit sysctl.conf</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived for lvs-tun</span></span><br><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_AUTH &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface em1</span><br><span class="line">    virtual_router_id 11</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.10.36.11/23 dev em1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind TUN</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.4 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.10.36.7 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable and start keepalived</span></span><br><span class="line">systemctl start keepalived</span><br><span class="line">systemctl <span class="built_in">enable</span> keepalived</span><br><span class="line">watch ipvsadm -L -n --stats</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编写 DS 脚本，推荐用 keepalived 配置文件</span></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># Startup script handle the initialisation of LVS</span></span><br><span class="line"><span class="comment"># chkconfig: - 28 72</span></span><br><span class="line"><span class="comment"># description: Initialise the Linux Virtual Server for TUN</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides: ipvsadm</span></span><br><span class="line"><span class="comment"># Required-Start: $local_fs $network $named</span></span><br><span class="line"><span class="comment"># Required-Stop: $local_fs $remote_fs $network</span></span><br><span class="line"><span class="comment"># Short-Description: Initialise the Linux Virtual Server</span></span><br><span class="line"><span class="comment"># Description: The Linux Virtual Server is a highly scalable and highly</span></span><br><span class="line"><span class="comment">#   available server built on a cluster of real servers, with the load</span></span><br><span class="line"><span class="comment">#   balancer running on Linux.</span></span><br><span class="line"><span class="comment"># description: start LVS of TUN</span></span><br><span class="line">LOCK=/var/lock/lvs-tun.lock</span><br><span class="line">VIP=10.10.36.11</span><br><span class="line">RIP1=10.10.36.4</span><br><span class="line">RIP2=10.10.36.7</span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>()    &#123;</span><br><span class="line">     PID=`ipvsadm -Ln | grep <span class="variable">$&#123;VIP&#125;</span> | wc -l`</span><br><span class="line">     <span class="keyword">if</span>    [ <span class="variable">$PID</span> -gt 0 ];</span><br><span class="line"></span><br><span class="line">     <span class="keyword">then</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"The LVS-TUN Server is already running !"</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">           <span class="comment">#Load the tun mod</span></span><br><span class="line">           /sbin/modprobe tun</span><br><span class="line">           /sbin/modprobe ipip</span><br><span class="line">           <span class="comment">#Set the tun Virtual IP Address</span></span><br><span class="line">           /sbin/ifconfig tunl0 <span class="variable">$VIP</span> broadcast <span class="variable">$VIP</span> netmask 255.255.255.255 up</span><br><span class="line">           /sbin/route add -host <span class="variable">$VIP</span> dev tunl0</span><br><span class="line">           <span class="comment">#Clear IPVS Table</span></span><br><span class="line">           /sbin/ipvsadm -C</span><br><span class="line">           <span class="comment">#The icmp recruit setting</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/ip_forward</span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/send_redirects</span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/default/send_redirects</span><br><span class="line">           <span class="comment">#Set Lvs</span></span><br><span class="line">           /sbin/ipvsadm -At <span class="variable">$VIP</span>:80 -s rr</span><br><span class="line">           /sbin/ipvsadm -at <span class="variable">$VIP</span>:80 -r <span class="variable">$RIP1</span>:80 -i  -w 1</span><br><span class="line">           /sbin/ipvsadm -at <span class="variable">$VIP</span>:80 -r <span class="variable">$RIP2</span>:80 -i  -w 1</span><br><span class="line">           /bin/touch <span class="variable">$LOCK</span></span><br><span class="line">           <span class="comment">#Run Lvs</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"starting LVS-TUN-DIR Server is ok !"</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>()    &#123;</span><br><span class="line">           <span class="comment">#stop  Lvs server</span></span><br><span class="line">           /sbin/ipvsadm -C</span><br><span class="line">           /sbin/ifconfig tunl0 down &gt;/dev/null</span><br><span class="line">           <span class="comment">#Remove the tun mod</span></span><br><span class="line">           /sbin/modprobe -r tun</span><br><span class="line">           /sbin/modprobe -r ipip</span><br><span class="line">           rm -rf <span class="variable">$LOCK</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"stopping LVS-TUN-DIR server is ok !"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status</span></span>()  &#123;</span><br><span class="line">     <span class="keyword">if</span> [ -e <span class="variable">$LOCK</span> ];</span><br><span class="line">     <span class="keyword">then</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"The LVS-TUN Server is already running !"</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"The LVS-TUN Server is not running !"</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">  stop)</span><br><span class="line">        stop</span><br><span class="line">        ;;</span><br><span class="line">  restart)</span><br><span class="line">        stop</span><br><span class="line">        sleep 1</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">  status)</span><br><span class="line">        status</span><br><span class="line">        ;;</span><br><span class="line">  *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$1</span> &#123;start|stop|restart|status&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><h4 id="RS-2"><a href="#RS-2" class="headerlink" title="RS"></a>RS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在加载好 ipip 模块后就会有默认的 tunl0 隧道</span></span><br><span class="line">modprobe ipip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 VIP</span></span><br><span class="line"><span class="comment"># ifconfig tunl0 down</span></span><br><span class="line">ifconfig tunl0 10.10.36.11 broadcast 10.10.36.11 netmask 255.255.255.255 up</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加路由</span></span><br><span class="line">route add -host 10.10.36.11 tunl0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动关闭 ARP 转发</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'1'</span> &gt; /proc/sys/net/ipv4/conf/tunl0/arp_ignore </span><br><span class="line"><span class="built_in">echo</span> <span class="string">'2'</span> &gt; /proc/sys/net/ipv4/conf/tunl0/arp_announce</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'1'</span> &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'2'</span> &gt; /proc/sys/net/ipv4/conf/all/arp_announce </span><br><span class="line"><span class="built_in">echo</span> <span class="string">'0'</span> &gt; /proc/sys/net/ipv4/conf/tunl0/rp_filter</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'0'</span> &gt; /proc/sys/net/ipv4/conf/all/rp_filter </span><br><span class="line"></span><br><span class="line"><span class="comment"># iptables 允许 ipip 协议</span></span><br><span class="line">iptables -I INPUT 1 -p 4 -j ACCEPT</span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line">-A INPUT -p ipv4 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编写 RS 启停脚本</span></span><br><span class="line">vim /etc/init.d/lvs-tun</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Startup script handle the initialisation of LVS</span></span><br><span class="line"><span class="comment"># chkconfig: - 28 72</span></span><br><span class="line"><span class="comment"># description: Initialise the Linux Virtual Server for TUN</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides: ipvsadm</span></span><br><span class="line"><span class="comment"># Required-Start: $local_fs $network $named</span></span><br><span class="line"><span class="comment"># Required-Stop: $local_fs $remote_fs $network</span></span><br><span class="line"><span class="comment"># Short-Description: Initialise the Linux Virtual Server</span></span><br><span class="line"><span class="comment"># Description: The Linux Virtual Server is a highly scalable and highly</span></span><br><span class="line"><span class="comment">#   available server built on a cluster of real servers, with the load</span></span><br><span class="line"><span class="comment">#   balancer running on Linux.</span></span><br><span class="line"><span class="comment"># description: start LVS of TUN-RIP</span></span><br><span class="line">LOCK=/var/lock/ipvsadm.lock</span><br><span class="line">VIP=10.10.36.11</span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">     PID=`ifconfig | grep tunl0 | wc -l`</span><br><span class="line">     <span class="keyword">if</span> [ <span class="variable">$PID</span> -ne 0 ];</span><br><span class="line">     <span class="keyword">then</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"The LVS-TUN-RIP Server is already running !"</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">         <span class="comment">#Load the tun mod</span></span><br><span class="line">         /sbin/modprobe tun</span><br><span class="line">         /sbin/modprobe ipip</span><br><span class="line">         <span class="comment">#Set the tun Virtual IP Address</span></span><br><span class="line">         /sbin/ifconfig tunl0 <span class="variable">$VIP</span> netmask 255.255.255.255 broadcast <span class="variable">$VIP</span> up</span><br><span class="line">         /sbin/route add -host <span class="variable">$VIP</span> dev tunl0</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/tunl0/arp_ignore</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/tunl0/arp_announce</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt; /proc/sys/net/ipv4/conf/tunl0/rp_filter</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt; /proc/sys/net/ipv4/conf/all/rp_filter</span><br><span class="line">         /bin/touch <span class="variable">$LOCK</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"starting LVS-TUN-RIP server is ok !"</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">         /sbin/ifconfig tunl0 down</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/tunl0/arp_ignore</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/tunl0/arp_announce</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">         <span class="comment">#Remove the tun mod</span></span><br><span class="line">         /sbin/modprobe -r tun</span><br><span class="line">         /sbin/modprobe -r ipip</span><br><span class="line">         rm -rf <span class="variable">$LOCK</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"stopping LVS-TUN-RIP server is ok !"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status</span></span>() &#123;</span><br><span class="line">     <span class="keyword">if</span> [ -e <span class="variable">$LOCK</span> ];</span><br><span class="line">     <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"The LVS-TUN-RIP Server is already running !"</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"The LVS-TUN-RIP Server is not running !"</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">  stop)</span><br><span class="line">        stop</span><br><span class="line">        ;;</span><br><span class="line">  restart)</span><br><span class="line">        stop</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">  status)</span><br><span class="line">        status</span><br><span class="line">        ;;</span><br><span class="line">  *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$1</span> &#123;start|stop|restart|status&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># start lvs-tun</span></span><br><span class="line">chmod 755 /etc/init.d/lvs-tun</span><br><span class="line">service lvs-tun start</span><br><span class="line">chkconfig lvs-tun on</span><br><span class="line"></span><br><span class="line"><span class="comment"># Nginx test</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rs1"</span> &gt; /usr/share/nginx/html/index.html</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rs2"</span> &gt; /usr/share/nginx/html/index.html</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..100&#125;; <span class="keyword">do</span> curl 10.10.36.11; sleep 0.5; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>这一步的主要目的是让 RS 禁言，在相对较新的版本中新增了两个内核参数 (kernel parameter)</p><ul><li>第一个是 arp_ignore 定义接受到 ARP 请求时的相应级别</li><li>第二个是 arp_announce 定义将自己地址向外通告是的通告级别</li><li>第三个是 rp_filter 定义系统是否开启对数据包源地址的校验</li></ul><p>总结: LVS/TUN 是所有模式中最最适用于跨网络跨地域地理位置的一种模式，需要注意的是:</p><ol><li>若 DIR 和 RIP 在不同 lan 网络中，比如不同的网段，不同的 IDC 机房，就不需要设置 arp 仰制，不同网段中，arp 会被屏蔽掉，所以只需设置 ip tunne 以及报文反向验证即可；</li><li>若 DIR 和 RIP 在同一广播域中，需要和 LVS/DR 模式一样在所有的 RIP 上仰制 arp，防止 arp 响应导致 arp 表混乱，这样 lvs 就不能正常工作！</li></ol><p>配置时除了配置 DIR，还需要需要配置后端 RS server，即在 tunl 上口配置 vip 地址（需要系统支持 tunl 才行），广播为为自己，此模式下无需开启路由转发功能！</p><h3 id="配置-LVS-DR-和-LVS-TUN-混合模式"><a href="#配置-LVS-DR-和-LVS-TUN-混合模式" class="headerlink" title="配置 LVS/DR 和 LVS/TUN 混合模式"></a>配置 LVS/DR 和 LVS/TUN 混合模式</h3><h4 id="DS-3"><a href="#DS-3" class="headerlink" title="DS"></a>DS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关于 3 中模式的参数</span></span><br><span class="line">[packet-forwarding-method]</span><br><span class="line">       -g, --gatewaying  Use gatewaying (direct routing). This is the default.</span><br><span class="line">       -i, --ipip  Use ipip encapsulation (tunneling).</span><br><span class="line">       -m, --masquerading  Use masquerading (network access translation, or NAT).</span><br><span class="line">       Note:  Regardless of the packet-forwarding mechanism specified, real servers <span class="keyword">for</span> addresses <span class="keyword">for</span> <span class="built_in">which</span> there are interfaces on the <span class="built_in">local</span> node will  be  use  the</span><br><span class="line">       <span class="built_in">local</span>  forwarding  method, <span class="keyword">then</span> packets <span class="keyword">for</span> the servers will be passed to upper layer on the <span class="built_in">local</span> node. This cannot be specified by ipvsadm, rather it <span class="built_in">set</span> by</span><br><span class="line">       the kernel as real servers are added or modified.</span><br><span class="line"></span><br><span class="line"><span class="comment"># ipvsadm 命令行混配</span></span><br><span class="line">/sbin/ifconfig tunl0 10.10.36.11 broadcast 10.10.36.11 netmask 255.255.255.255 up</span><br><span class="line">/sbin/route add -host 10.10.36.11 dev tunl0</span><br><span class="line">/sbin/ipvsadm -At 10.10.36.11:80 -s rr</span><br><span class="line">/sbin/ipvsadm -at 10.10.36.11:80 -r 10.10.36.4:80 -g -w 1</span><br><span class="line">/sbin/ipvsadm -at 10.10.36.11:80 -r 10.10.36.7:80 -i -w 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived 混配</span></span><br><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_AUTH &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface em1</span><br><span class="line">    virtual_router_id 11</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.10.36.11/23 dev em1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.4 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind TUN</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.7 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查结果可用</span></span><br><span class="line">[root@d126027 wangao]<span class="comment"># for i in &#123;1..100&#125;; do curl 10.10.36.11; sleep 0.5; done</span></span><br><span class="line">rs2</span><br><span class="line">rs1</span><br><span class="line">rs2</span><br><span class="line">rs1</span><br><span class="line">rs2</span><br><span class="line"></span><br><span class="line">[root@d126009 keepalived]<span class="comment"># ipvsadm -Ln --stats</span></span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port               Conns   InPkts  OutPkts  InBytes OutBytes</span><br><span class="line">  -&gt; RemoteAddress:Port</span><br><span class="line">TCP  10.10.36.11:80                    100      700        0    36700        0</span><br><span class="line">  -&gt; 10.10.36.4:80                      50      350        0    18350        0</span><br><span class="line">  -&gt; 10.10.36.7:80                      50      350        0    18350        0</span><br></pre></td></tr></table></figure><h4 id="RS-3"><a href="#RS-3" class="headerlink" title="RS"></a>RS</h4><blockquote><p>DR 和 TUN 的模式基本不用做改动</p></blockquote><h2 id="LVS-部署之细枝末节"><a href="#LVS-部署之细枝末节" class="headerlink" title="LVS 部署之细枝末节"></a>LVS 部署之细枝末节</h2><p>原作者写得很详细，我这边做下引用在此表示感谢，<a href="https://www.jianshu.com/p/76645e76f975" target="_blank" rel="noopener">LVS 部署之细枝末节</a></p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>本文总结了在 LVS 部署过程中需要注意的一些小细节。这些内容比较杂，并且没有规律和内在联系；它们分散在 LVS 部署过程中的各个小环节中，不是系统性的知识，也没有主线对它们进行连接。你可以通过此文对他们进行一个大概的了解，在实践过程中如果遇到可以再过来进行详细的查阅，以解决实际问题。</p><h3 id="开启-Linux-的路由转发功能"><a href="#开启-Linux-的路由转发功能" class="headerlink" title="开启 Linux 的路由转发功能"></a>开启 Linux 的路由转发功能</h3><p>LVS 在 VS/NAT 方式下需要开启数据包转发 (ip_forward) 功能。因为在 LVS 的 VS/NAT 模式下，对 IP 数据进行负载均衡时，需要把多台真实服务器节点中的专网 IP 映射到同一个虚拟服务器的公网 IP 上；这就需要通过 NAT 技术对 IP 数据包进行转发，从而将 IP 数据包发送到真实服务器上进行处理。LVS 在 VS/DR 模式下，因为 director 的 DIP 与真实服务器节点的 RIP 在同一网段，所以不需要开启路由转发功能。LVS 在 VS/TUN 模式下，IP 数据包是通过 IP 隧道技术进行封包后再分发的方式到达真实服务器节点的，也不需要开启路由转发功能。</p><p>开启 Linux 的路由转发功能的方法很多，具体细节请参阅文章 <a href="https://www.jianshu.com/p/134eeae69281" target="_blank" rel="noopener">Linux ip_forward 数据包转发</a>。</p><h3 id="配置真实服务器的-ARP-请求与响应策略"><a href="#配置真实服务器的-ARP-请求与响应策略" class="headerlink" title="配置真实服务器的 ARP 请求与响应策略"></a>配置真实服务器的 ARP 请求与响应策略</h3><p>在 ARP 协议中，为了减少 arp 请求的次数，当主机接收到询问自己的 arp 请求的时候，就会把源 ip 和源 Mac 放入自 己的 arp 表里面，方便接下来的通讯。如果收到不是询问自己的包（arp 是广播的，所有人都收到），就会丢掉，这样不会造成 arp 表里面无用数据太多导致 有用的记录被删除。</p><p>在 LVS 的 VS/DR 模式下，当内网的真实服务器（Linux 主机）要发送一个到外部网络的 ip 包（LVS 负载器分配置过来的作业的处理结果），那么它就会请求路由器的 Mac 地址，发送一个 arp 请求，这个 arp 请求里面包括了自己的 ip 地址和 Mac 地址。而 linux 主机默认是使用 ip 数据包的源 ip 地址作为 arp 里面的源 ip 地址，而不是使用发送设备上面网络接口卡的 ip 地址。这样在 LVS 的 VS/DR 架构下，所有真实服务器在响应外部请求时的 IP 数据包的源地址都是同一个 VIP 地址，那么 arp 请求就会包括 VIP 地址和设备 Mac。而路由器收到这个 arp 请求就会更新自己的 arp 缓存，这样就会造成 ip 欺骗了，VIP 被抢夺，所以就会有问题。</p><p>所以当 LVS 运行在 VS/DR 模式下时，需要在所有真实服务器上修改 ARP 请求与响应策略，以保证以上问题不会发生。</p><p>因为在 lo（本地环回网络接口）上配置了 VIP，所以需要对真实服务器中的 ARP 请求与响应策略配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.conf.all.arp_ignore=1</span><br><span class="line">net.ipv4.conf.lo.arp_ignore=1</span><br><span class="line"></span><br><span class="line">net.ipv4.conf.all.arp_announce=2</span><br><span class="line">net.ipv4.conf.lo.arp_announce=2</span><br></pre></td></tr></table></figure><p>将以上代码段追加到 /etc/sysctl.conf 文件中，然后执行 <code>sysctl -p</code> 指令就可以。以上配置的具体含义请参阅 <a href="https://www.jianshu.com/p/a682ecae9693" target="_blank" rel="noopener">Linux 内核参数 arp_ignore &amp; arp_announce 详解</a>。</p><h3 id="在-VS-DR-模式下-VIP-、DIP-和-RIP-必须在同一网段吗？"><a href="#在-VS-DR-模式下-VIP-、DIP-和-RIP-必须在同一网段吗？" class="headerlink" title="在 VS/DR 模式下 VIP 、DIP 和 RIP 必须在同一网段吗？"></a>在 VS/DR 模式下 VIP 、DIP 和 RIP 必须在同一网段吗？</h3><p>在 VS/DR 模式下 VIP 、DIP 和 RIP 不需要在同一网段！</p><p>其中 VIP 必须是公网 IP；而 DIP 和 RIP 必须在同一网段（可以是任意网段的 IP，也可以是私网 IP），且需要节点主机的 RIP 可以把 IP 数据包发送到一个能把 IP 数据包路由到公网的路由器上。</p><p>其实 LVS 在 VS/DR 模式下的要求是 DIP 和 RIP 必须处于同一网段中。在实际的部署过程中发现如果在 Director 上 VIP 和 DIP 在同一网段、或在 RealServer 上 VIP 与 RIP 在同一网段，LVS 集群工作会很不稳定。因为当一个 IP 数据包需要发到默认网关时（在 RealServer 或 Director 上），Linux 主机不知道应该使用哪个接口（在同一子网中的 VIP 和 DIP/RIP），他可能会随机选一个，但这个不一定能成功。我感觉可以通过在 Linux 中配置路由表来解决，但没有验证（哪位同学如果有兴趣可以实践验证一下，如果能把验证结果反馈给我那是再好不过了）。</p><h3 id="配置真实服务器的-反向路由过滤-策略"><a href="#配置真实服务器的-反向路由过滤-策略" class="headerlink" title="配置真实服务器的 反向路由过滤 策略"></a>配置真实服务器的 反向路由过滤 策略</h3><p>在 Linux 中用于对 网卡的反向路由过滤策略进行配置的内核参数是 rp_filter，有关此参数的详细介绍以及配置方式请参见 <a href="https://www.jianshu.com/p/16d5c130670b" target="_blank" rel="noopener">Linux 内核参数 rp_filter</a>。</p><p>LVS 在 VS/TUN 模式下，需要对 tunl0 虚拟网卡的反向路由过滤策略进行配置。最直接的办法是把其值设置为 0。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.conf.tunl0.rp_filter=0</span><br><span class="line">net.ipv4.conf.all.rp_filter=0</span><br></pre></td></tr></table></figure><p>因为 Linux 系统在对网卡应用反向路由过滤策略时，除了检查本网卡的 rp_filter 参数外，还会检查 all 配置项上的 rp_filter 参数，并使用这两个值中较大的值作为应用到当前网卡的反向路由过滤策略。所以需要同时把 <code>net.ipv4.conf.all.rp_filter</code> 参数设置为 0。</p><h3 id="配置-tunl0-网卡"><a href="#配置-tunl0-网卡" class="headerlink" title="配置 tunl0 网卡"></a>配置 tunl0 网卡</h3><p>LVS 在 VS/TUN 模式下，需要在每个真实服务器上开启 tunl0 网卡，并把 VIP 配置到 tunl0 网卡上。有关 tunl0 网卡的说明可以参考一下 <a href="https://www.jianshu.com/p/cb179f0bee1f" target="_blank" rel="noopener">Linux 中 IP 隧道模块浅析</a>。</p><h3 id="LVS-在-VS-TUN-模式下-RealServer-上的防火墙配置"><a href="#LVS-在-VS-TUN-模式下-RealServer-上的防火墙配置" class="headerlink" title="LVS 在 VS/TUN 模式下 RealServer 上的防火墙配置"></a>LVS 在 VS/TUN 模式下 RealServer 上的防火墙配置</h3><p>LVS 在 VS/TUN 模式下 因为 Director 主机需要通过 ipip 协议向 RealServer 分发数据包；所以需要在 RealServer 上配置防火墙，允许 ipip 协议的数据包通过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT 1 -p 4 -j ACCEPT</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="配置日志"><a href="#配置日志" class="headerlink" title="配置日志"></a>配置日志</h3><p>此配置为可选步骤</p><p>keepalived 默认将日志输出到系统日志 / var/log/messages 中，因为系统日志很多，查询问题时相对麻烦。</p><p>我们可以将 keepalived 的日志单独拿出来，这需要修改日志输出路径。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改 Keepalived 配置</span></span><br><span class="line">vi /etc/sysconfig/keepalived</span><br><span class="line"></span><br><span class="line"><span class="comment"># Options for keepalived. See `keepalived --help'output and keepalived(8) and</span></span><br><span class="line"><span class="comment"># keepalived.conf(5) man pages for a list of all options. Here are the most</span></span><br><span class="line"><span class="comment"># common ones :</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># --vrrp               -P    Only run with VRRP subsystem.</span></span><br><span class="line"><span class="comment"># --check              -C    Only run with Health-checker subsystem.</span></span><br><span class="line"><span class="comment"># --dont-release-vrrp  -V    Dont remove VRRP VIPs &amp; VROUTEs on daemon stop.</span></span><br><span class="line"><span class="comment"># --dont-release-ipvs  -I    Dont remove IPVS topology on daemon stop.</span></span><br><span class="line"><span class="comment"># --dump-conf          -d    Dump the configuration data.</span></span><br><span class="line"><span class="comment"># --log-detail         -D    Detailed log messages.</span></span><br><span class="line"><span class="comment"># --log-facility       -S    0-7 Set local syslog facility (default=LOG_DAEMON)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把 KEEPALIVED_OPTIONS=”-D” 修改为 KEEPALIVED_OPTIONS=”-D -d -S 0”，其中 -S 指定 syslog 的 facility</span></span><br><span class="line">KEEPALIVED_OPTIONS=<span class="string">"-D -d -S 0"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 /etc/rsyslog.conf 末尾添加</span></span><br><span class="line">vi /etc/rsyslog.conf </span><br><span class="line">local0.*                                                /var/<span class="built_in">log</span>/keepalived.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启日志记录服务</span></span><br><span class="line">systemctl restart rsyslog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 keepalived</span></span><br><span class="line">systemctl restart keepalived</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时可以从 /var/log/keepalived.log 查看日志了</span></span><br><span class="line">tailf /var/<span class="built_in">log</span>/keepalived.log</span><br></pre></td></tr></table></figure><h3 id="ARP-导致-MAC-地址冲突"><a href="#ARP-导致-MAC-地址冲突" class="headerlink" title="ARP 导致 MAC 地址冲突"></a>ARP 导致 MAC 地址冲突</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-65-32-35 wangao]<span class="comment"># arp -n</span></span><br><span class="line">Address                  HWtype  HWaddress           Flags Mask            Iface</span><br><span class="line">10.65.32.31              ether   48:8e:ef:7b:c6:0a   C                     bond0</span><br><span class="line">10.65.32.83              ether   50:5d:ac:ed:89:dd   C                     bond0</span><br><span class="line">10.65.32.254             ether   00:00:0c:9f:f0:ec   C                     bond0</span><br><span class="line">10.65.32.252             ether   bc:16:65:68:07:81   C                     bond0</span><br><span class="line">10.65.32.34              ether   50:1d:93:f5:eb:97   C                     bond0</span><br><span class="line">10.65.32.8               ether   48:8e:ef:7c:0a:8d   C                     bond0</span><br><span class="line">10.65.32.253             ether   18:e7:28:97:e5:01   C                     bond0</span><br><span class="line">[root@sg-gop-10-65-32-35 wangao]<span class="comment"># arp -d 10.65.32.31</span></span><br><span class="line">[root@sg-gop-10-65-32-35 wangao]<span class="comment">#</span></span><br><span class="line">[root@sg-gop-10-65-32-35 wangao]<span class="comment">#</span></span><br><span class="line">[root@sg-gop-10-65-32-35 wangao]<span class="comment"># telnet 10.65.32.31 12100</span></span><br><span class="line">Trying 10.65.32.31...</span><br><span class="line">Connected to 10.65.32.31.</span><br><span class="line">Escape character is <span class="string">'^]'</span>.</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-65-32-35 wangao]<span class="comment"># arp -n</span></span><br><span class="line">Address                  HWtype  HWaddress           Flags Mask            Iface</span><br><span class="line">10.65.32.31              ether   48:8e:ef:7b:c7:5a   C                     bond0</span><br><span class="line">10.65.32.70              ether   00:2e:c7:3a:a5:b5   C                     bond0</span><br><span class="line">10.65.32.83              ether   50:5d:ac:ed:89:dd   C                     bond0</span><br><span class="line">10.65.32.254             ether   00:00:0c:9f:f0:ec   C                     bond0</span><br><span class="line">10.65.32.252             ether   bc:16:65:68:07:81   C                     bond0</span><br><span class="line">10.65.32.34              ether   50:1d:93:f5:eb:97   C                     bond0</span><br><span class="line">10.65.32.8               ether   48:8e:ef:7c:0a:8d   C                     bond0</span><br><span class="line">10.65.32.253             ether   18:e7:28:97:e5:01   C                     bond0</span><br></pre></td></tr></table></figure><h2 id="LVS-和-Keepalived-系列"><a href="#LVS-和-Keepalived-系列" class="headerlink" title="LVS 和 Keepalived 系列"></a>LVS 和 Keepalived 系列</h2><p><a href="https://wsgzao.github.io/post/lvs-keepalived/">LVS 和 Keepalived 的原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs/">LVS 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/keepalived/">Keepalived 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-nat/">LVS-NAT 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-dr/">LVS-DR 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-tun/">LVS-TUN 原理介绍和配置实践</a></p>]]></content>
    
    <summary type="html">
    
      LVS和Keepalived的原理介绍和配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>PyCharm 使用心得</title>
    <link href="https://wsgzao.github.io/post/pycharm/"/>
    <id>https://wsgzao.github.io/post/pycharm/</id>
    <published>2019-08-30T08:40:53.000Z</published>
    <updated>2019-08-30T10:50:40.776Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>PyCharm 是大 JB 旗下的产品之一，对于广大 Python 开发者来说应该不会陌生，对于个人开发者来说用什么 IDE(VIM/Sublime Text/Visual Studio Code) 可能并不重要，但是面对一个开发素质参差不齐的团队时，我相信老老实实统一使用 PyCharm 会是一个虽然大但是全的不错选择，因为一开始就开启 pep8 和 pylint 检测能显著提升代码质量，各种错误和警告提示会逼着你写出高质量的代码。当然统一编码和注释风格，小团队做一些适度的 code review 和单元测试会帮助团队一起更快的成长，良好的代码有时候靠的是自律、规范和 review，而不仅仅是技术。</p><p>“我不是个伟大的程序员，我只是个有着一些优秀习惯的好程序员” | By Kent Beck</p><blockquote><p>PyCharm - Python IDE for Professional Developers by JetBrains.</p></blockquote><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2019 年 08 月 30 日 - 增加玩转 PyCharm<br>2017 年 08 月 25 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/pycharm/">https://wsgzao.github.io/post/pycharm/</a></p><p><strong> 扩展阅读 </strong></p><p>PyCharm - <a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">https://www.jetbrains.com/pycharm/</a></p><h2 id="购买和使用"><a href="#购买和使用" class="headerlink" title="购买和使用"></a>购买和使用</h2><p>JetBrains 的产品大多数是付费形式，但是对于教育行业却实行免费授权计划，几乎涵盖所有产品，十分良心。</p><p><a href="https://sales.jetbrains.com/hc/zh-cn/articles/207154369" target="_blank" rel="noopener">学生授权申请方式</a></p><p>如果已经有一定经济能力请支持正版</p><h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><blockquote><p>以下设置选项随着版本调整可能发生位置变化，但可以在 Settings(Ctrl+Alt+S) 左上角的搜索栏里快速进行查询</p></blockquote><h3 id="字体调整"><a href="#字体调整" class="headerlink" title="字体调整"></a>字体调整</h3><p>默认的字体个人觉得偏小，<code>File--&gt;Settings--&gt;Editor--&gt;Font</code>，新版本不必像老版本一样调整前必须要保持一个新的 Scheme，直接修改你喜欢的字体和大小应用就可以看到效果了</p><h3 id="显示行号"><a href="#显示行号" class="headerlink" title="显示行号"></a>显示行号</h3><p>在 <code>File--&gt;Settings--&gt;Editor--&gt;General--&gt;Appearance</code> 里勾选 Show line numbers</p><h3 id="显示空格"><a href="#显示空格" class="headerlink" title="显示空格"></a>显示空格</h3><p>在 <code>File--&gt;Settings--&gt;Editor--&gt;General--&gt;Appearance</code> 里勾选 Show whitespaces</p><h3 id="皮肤主题与编辑器主题"><a href="#皮肤主题与编辑器主题" class="headerlink" title="皮肤主题与编辑器主题"></a>皮肤主题与编辑器主题</h3><p>皮肤主题和编辑器主题是分开设置的</p><p>皮肤主题在 <code>File--&gt;Settings--&gt;Appearance &amp; Behavior--&gt;Appearance</code> 的 Theme 选项下选择</p><p>编辑器主题在 <code>File--&gt;Settings--&gt;Editor--&gt;Colors Scheme</code> 的 Scheme 选项下选择</p><h3 id="自动生成文件头"><a href="#自动生成文件头" class="headerlink" title="自动生成文件头"></a>自动生成文件头</h3><p>默认情况下，新建完一个文件后，PyCharm 会生成一个<strong>author</strong> = ‘$USER’的文件头，但通常每个 Python 文件都会添加 <code># -*- coding: utf-8 -*-</code> 来控制编码。可以在 <code>File--&gt;Settings--&gt;File and Code Templates</code> 中的 Templates 选中 Python Script 在右侧把你要自动添加的内容加进去</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># __author__ = 'wangao'</span></span><br></pre></td></tr></table></figure><h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h3><blockquote><p>温馨提示：PyCharm 会实时自动保存代码并写入本地文件</p></blockquote><p>Ctrl + / 行注释，可以批量选择和取消<br><code>快速按 2 次 Shift</code> 全局文件名称查找，可以快速定位所要编辑的文件</p><p>Ctrl + F 当前文件查找<br>Ctrl + R 当前文件替换<br>Ctrl + Shift + F 全局查找，可能会和输入法的简繁快捷键冲突，记得关闭<br>Ctrl + Shift + R 全局替换</p><p>Ctrl + Z 撤销<br>Ctrl + Shift + Z 回撤</p><h2 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h2><p><a href="https://github.com/jackfrued/Python-100-Days/blob/master / 玩转 PyCharm.md" target="_blank" rel="noopener">玩转 PyCharm</a></p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><blockquote><p>@陈俊岭 把 Pycharm 官方帮助文档翻译了一遍，如果英文不好可以适度参考</p></blockquote><p>我的 Pycharm，我做主 - <a href="http://blog.csdn.net/u013088062/article/details/50388329" target="_blank" rel="noopener">http://blog.csdn.net/u013088062/article/details/50388329</a></p>]]></content>
    
    <summary type="html">
    
      PyCharm - Python IDE for Professional Developers by JetBrains.
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>iptables 配置实践</title>
    <link href="https://wsgzao.github.io/post/iptables/"/>
    <id>https://wsgzao.github.io/post/iptables/</id>
    <published>2019-08-26T07:52:17.000Z</published>
    <updated>2019-08-26T08:33:35.840Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在大企业中防火墙角色主要交给硬件来支持，效果自然没话说只是需要增加一点点成本，但对于大多数个人或者互联网公司来说选择系统自带的 <code>iptables</code> 或者第三方云防火墙似乎是更加合适的选择，通过一些合理的优化和灵活的配置，我们也可以很轻松实现硬件防火墙的部分功能，够用就好。</p><blockquote><p>建立防火墙白名单机制很重要   </p></blockquote><hr><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 08 月 26 日 - 更新配置 lvs/tun 的配置和基于 ansible 修改 iptables 的最佳实践<br>2019 年 03 月 06 日 - 增加使用 ansible blockinfile 模块管理 iptables 规则<br>2018 年 07 月 18 日 - 更新 iptables 原理和 NAT 配置<br>2015 年 07 月 24 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/iptables/">https://wsgzao.github.io/post/iptables/</a></p><p><strong> 扩展阅读 </strong></p><p>Linux 防火墙和 iptables - <a href="http://liaoph.com/iptables/" target="_blank" rel="noopener">http://liaoph.com/iptables/</a><br>iptables 零基础快速入门系列 - <a href="http://www.zsythink.net/archives/tag/iptables/" target="_blank" rel="noopener">http://www.zsythink.net/archives/tag/iptables/</a></p><hr><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="Netfilter-与-iptables-的关系"><a href="#Netfilter-与-iptables-的关系" class="headerlink" title="Netfilter 与 iptables 的关系"></a>Netfilter 与 iptables 的关系</h3><p>Linux 系统在内核中提供了对报文数据包过滤和修改的官方项目名为 Netfilter，它指的是 Linux 内核中的一个框架，它可以用于在不同阶段将某些钩子函数（hook）作用域网络协议栈。Netfilter 本身并不对数据包进行过滤，它只是允许可以过滤数据包或修改数据包的函数挂接到内核网络协议栈中的适当位置。这些函数是可以自定义的。</p><p>iptables 是用户层的工具，它提供命令行接口，能够向 Netfilter 中添加规则策略，从而实现报文过滤，修改等功能。Linux 系统中并不止有 iptables 能够生成防火墙规则，其他的工具如 firewalld 等也能实现类似的功能。</p><h3 id="使用-iptables-进行包过滤"><a href="#使用-iptables-进行包过滤" class="headerlink" title="使用 iptables 进行包过滤"></a>使用 iptables 进行包过滤</h3><p>iptables 策略是由一组有序的规则建立的，它告诉内核应该如何处理某些类别的数据包。每一个 iptables 规则应用于一个表中的一个链。一个 iptables 链就是一个规则集，这些规则按序与包含某种特征的数据包进行比较匹配。</p><h3 id="表"><a href="#表" class="headerlink" title="表"></a>表</h3><p>iptables 默认有 4 个表</p><ol><li>nat 表（地址转换表）</li><li>filter 表（数据过滤表）</li><li>raw 表（状态跟踪表）</li><li>mangle 表（包标记表）</li></ol><h3 id="链"><a href="#链" class="headerlink" title="链"></a>链</h3><p>每个表都有一组内置链，用户还可以添加自定义的链。最重要的内置链是 filter 表中的 INPUT、OUTPUT 和 FORWARD 链。</p><ol><li>INPUT 链（入站规则）</li><li>OUTPUT 链（出站规则）</li><li>FORWARD 链（转发规则）</li><li>PREROUTING 链（路有前规则）</li><li>POSTROUTING 链（路由后规则）</li></ol><p>下图展现了一个数据包是如何通过内核中的 net 和 filter 表的：</p><p><img src="https://i.v2ex.co/4WFXrnn2.png" alt=""><br><img src="http://wx4.sinaimg.cn/large/7207510dgy1ftfb6rbw5tj20sr0f73z2.jpg" alt=""></p><h3 id="iptables-的-4-表-5-链"><a href="#iptables-的-4-表-5-链" class="headerlink" title="iptables 的 4 表 5 链"></a>iptables 的 4 表 5 链</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">iptables --&gt; 四表五链 </span><br><span class="line">    添加规则是的考量点：</span><br><span class="line">        （1）要实现那种功能：判断添加在那张表上</span><br><span class="line">        （2）报文流经的路径：判断添加在那个链上</span><br><span class="line"></span><br><span class="line"> 链 --&gt;&gt; 练上规则的次序，即为检查的次序，因此隐含一定的法则 </span><br><span class="line">        （1）同类规则(访问同一应用)：匹配范围小的放上面</span><br><span class="line">        （2）不同类规则(访问不同应用)：匹配到报文平率较大的放上面</span><br><span class="line">        （3）将可以由条规则描述的多个规则合并为一个</span><br><span class="line">        （4）设置默认策略：</span><br><span class="line"></span><br><span class="line"> 功能的优先级次序：raw --&gt; mangle --&gt; nat --&gt; filter</span><br><span class="line"></span><br><span class="line">规则：</span><br><span class="line">    组成部分：报文的匹配条件，匹配到后处理动作 </span><br><span class="line">    匹配条件：根据协议报文特征指定匹配条件</span><br><span class="line">            基本匹配条件：源 IP，目标 IP，源端口，目标端口</span><br><span class="line">                        扩展匹配条件：IP 追踪</span><br><span class="line">    处理动作：</span><br><span class="line">                        内建处理机制</span><br><span class="line">                        自定义处理机制</span><br><span class="line"> 注意：</span><br><span class="line"></span><br><span class="line">报文不会经过自定义链，只能在内置链上通过规则引用后生效</span><br><span class="line">        iptables 的规则管理工具</span><br><span class="line">                添加、修改、删除、显示等功能</span><br><span class="line">        规则和链有计数器：</span><br><span class="line">                pkgs：有规则或链所匹配到的报文的个数</span><br><span class="line">                bytes: 由规则或链匹配到的所有报文大小之和</span><br></pre></td></tr></table></figure><h3 id="匹配"><a href="#匹配" class="headerlink" title="匹配"></a>匹配</h3><p>每个 iptables 规则都包含一组匹配和一个目标动作，后者定义了复合规则的数据包应该采取什么处理行为。iptables 匹配指定是数据包必须匹配的条件，只有当数据包满足所有的匹配条件时，iptables 才能根据规则的目标所指定的动作来处理该数据包。</p><p>每个匹配都在 iptables 的命令行中指定。下面是一些常用的基本匹配：</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-P</td><td>设置默认策略</td></tr><tr><td>-F</td><td>清空规则链</td></tr><tr><td>-L</td><td>查看规则链</td></tr><tr><td>-A</td><td>在规则链的末尾加入新规则                        </td></tr><tr><td>-I num</td><td>在规则链的头部加入新规则                        </td></tr><tr><td>-D num</td><td>删除某一条规则                                    </td></tr><tr><td>-s</td><td>匹配来源地址 IP/MASK，加叹号 “!” 表示除这个 IP 外    </td></tr><tr><td>-d</td><td>匹配目标地址                                    </td></tr><tr><td>-i 网卡名称</td><td>匹配从这块网卡流入的数据                        </td></tr><tr><td>-o 网卡名称</td><td>匹配从这块网卡流出的数据                        </td></tr><tr><td>-p</td><td>匹配协议，如 TCP、UDP、ICMP                        </td></tr><tr><td>–dport num</td><td>匹配目标端口号                                    </td></tr><tr><td>–sport num</td><td>匹配来源端口号                                    </td></tr></tbody></table><h3 id="防火墙的匹配规则"><a href="#防火墙的匹配规则" class="headerlink" title="防火墙的匹配规则"></a>防火墙的匹配规则</h3><ul><li>匹配即可停止</li><li>匹配有先后顺序</li><li>默认规则的优先级最低</li></ul><h3 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h3><blockquote><p>表名作用：</p></blockquote><p>raw：高级功能，如：网址过滤。<br>mangle：数据包修改（QOS），用于实现服务质量。<br>net：地址转换，用于网关路由器。<br>filter：包过滤，用于防火墙规则。</p><blockquote><p>规则链作用：</p></blockquote><p>INPUT 链：处理输入数据包。<br>OUTPUT 链：处理输出数据包。<br>PORWARD 链：处理转发数据包。<br>PREROUTING 链：用于目标地址转换（DNAT）。<br>POSTOUTING 链：用于源地址转换（SNAT）。</p><blockquote><p>动作作用：</p></blockquote><p>accept：接收数据包。<br>DROP：丢弃数据包。<br>REJECT ：拒绝数据包<br>REDIRECT：重定向、映射、透明代理。<br>SNAT：源地址转换。<br>DNAT：目标地址转换。<br>MASQUERADE：IP 伪装（NAT），用于 ADSL。<br>LOG：日志记录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 规则的观察与清除 </span></span><br><span class="line"></span><br><span class="line">     iptables [-t tables] [-L] [-nv]</span><br><span class="line"></span><br><span class="line"> 选项与参数：</span><br><span class="line">-t ：后面接 table ，例如 nat 或 filter ，若省略此项目，则使用默认的 filter</span><br><span class="line">-L ：列出目前的 table 的规则 </span><br><span class="line">-n ：不进行 IP 与 HOSTNAME 的反查，显示讯息的速度会快很多！</span><br><span class="line">-v ：列出更多的信息，包括通过该规则的封包总位数、相关的网络接口等</span><br><span class="line"></span><br><span class="line">     iptables [-t tables] [-FXZ]</span><br><span class="line"></span><br><span class="line"> 选项与参数：</span><br><span class="line">-F ：清除所有的已订定的规则；</span><br><span class="line">-X ：杀掉所有使用者 <span class="string">"自定义"</span> 的 chain (应该说的是 tables ）啰；</span><br><span class="line">-Z ：将所有的 chain 的计数与流量统计都归零 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 封包的基础比对：IP, 网域及接口装置</span></span><br><span class="line"></span><br><span class="line">    iptables [-AI 链名] [-io 网络接口] [-p 协议] [-s 来源 IP / 网域] [-d 目标 IP / 网域] -j [ACCEPT|DROP|REJECT|LOG]</span><br><span class="line"></span><br><span class="line"> 选项与参数：</span><br><span class="line">-AI 链名：针对某的链进行规则的 <span class="string">"插入"</span> 或 <span class="string">"累加"</span></span><br><span class="line">    -A ：新增加一条规则，该规则增加在原本规则的最后面。例如原本已经有四条规则，</span><br><span class="line">         使用 -A 就可以加上第五条规则！</span><br><span class="line">    -I ：插入一条规则。如果没有指定此规则的顺序，默认是插入变成第一条规则。</span><br><span class="line">         例如原本有四条规则，使用 -I 则该规则变成第一条，而原本四条变成 2~5 号 </span><br><span class="line">    链 ：有 INPUT, OUTPUT, FORWARD 等，此链名称又与 -io 有关，请看底下。</span><br><span class="line"></span><br><span class="line">-io 网络接口：设定封包进出的接口规范</span><br><span class="line">    -i ：封包所进入的那个网络接口，例如 eth0, lo 等接口。需与 INPUT 链配合；</span><br><span class="line">    -o ：封包所传出的那个网络接口，需与 OUTPUT 链配合；</span><br><span class="line"></span><br><span class="line">-p 协定：设定此规则适用于哪种封包格式</span><br><span class="line">   主要的封包格式有： tcp, udp, icmp 及 all 。</span><br><span class="line"></span><br><span class="line">-s 来源 IP / 网域：设定此规则之封包的来源项目，可指定单纯的 IP 或包括网域，例如：</span><br><span class="line">   IP  ：192.168.0.100</span><br><span class="line">   网域：192.168.0.0/24, 192.168.0.0/255.255.255.0 均可。</span><br><span class="line">   若规范为『不许』时，则加上 ! 即可，例如：</span><br><span class="line">   -s ! 192.168.100.0/24 表示不许 192.168.100.0/24 之封包来源；</span><br><span class="line"></span><br><span class="line">-d 目标 IP / 网域：同 -s ，只不过这里指的是目标的 IP 或网域。</span><br><span class="line"></span><br><span class="line">-j ：后面接动作，主要的动作有接受(ACCEPT)、丢弃(DROP)、拒绝(REJECT) 及记录 (LOG)</span><br><span class="line"></span><br><span class="line"><span class="comment">#TCP, UDP 的规则比对：针对端口设定</span></span><br><span class="line"></span><br><span class="line">    iptables [-AI 链] [-io 网络接口] [-p tcp,udp] [-s 来源 IP / 网域] [--sport 埠口范围] [-d 目标 IP / 网域] [--dport 端口范围] -j [ACCEPT|DROP|REJECT]</span><br><span class="line"></span><br><span class="line"> 选项与参数：</span><br><span class="line">--sport 埠口范围：限制来源的端口号码，端口号码可以是连续的，例如 1024:65535</span><br><span class="line">--dport 埠口范围：限制目标的端口号码。</span><br><span class="line"></span><br><span class="line"><span class="comment">#iptables 外挂模块：mac 与 state</span></span><br><span class="line"></span><br><span class="line">    iptables -A INPUT [-m state] [--state 状态]</span><br><span class="line"></span><br><span class="line">选项与参数：</span><br><span class="line">-m ：一些 iptables 的外挂模块，主要常见的有：</span><br><span class="line">     state ：状态模块 </span><br><span class="line">     mac   ：网络卡硬件地址 (hardware address)</span><br><span class="line">--state ：一些封包的状态，主要有：</span><br><span class="line">     INVALID    ：无效的封包，例如数据破损的封包状态</span><br><span class="line">     ESTABLISHED：已经联机成功的联机状态；</span><br><span class="line">     NEW        ：想要新建立联机的封包状态；</span><br><span class="line">     RELATED    ：这个最常用！表示这个封包是与我们主机发送出去的封包有关</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#ICMP 封包规则的比对：针对是否响应 ping 来设计</span></span><br><span class="line"></span><br><span class="line">    iptables -A INPUT [-p icmp] [--icmp-type 类型] -j ACCEPT</span><br><span class="line"></span><br><span class="line"> 选项与参数：</span><br><span class="line">--icmp-type ：后面必须要接 ICMP 的封包类型，也可以使用代号，</span><br><span class="line">              例如 8  代表 <span class="built_in">echo</span> request 的意思。</span><br></pre></td></tr></table></figure><blockquote><p>注意事项与规律</p></blockquote><ul><li>可以不指定表，默认为 filter 表</li><li>可以不指定链，默认为对应表的所有链</li><li>除非设置默认策略，否则必须指定匹配条件</li><li>选项 / 链名 / 目标操作用大写字母，其余都小写</li></ul><h2 id="配置-iptables-白名单机制"><a href="#配置-iptables-白名单机制" class="headerlink" title="配置 iptables 白名单机制"></a>配置 iptables 白名单机制</h2><blockquote><p>配置 iptables 白名单是相对简单有效的管理手段</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 清除所有规则(慎用)</span></span><br><span class="line">iptables -F</span><br><span class="line">iptables -X</span><br><span class="line">iptables -Z</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 iptable 和行号</span></span><br><span class="line">iptables -nL --line-number</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存当前防火墙配置</span></span><br><span class="line">service iptables save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动编辑防火墙策略</span></span><br><span class="line">vi /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line">*filter</span><br><span class="line">:INPUT ACCEPT [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line"><span class="comment"># 开放本地和 Ping</span></span><br><span class="line">-A INPUT -i lo -j ACCEPT  </span><br><span class="line">-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT </span><br><span class="line">-A INPUT -p icmp -j ACCEPT</span><br><span class="line"><span class="comment"># 配置内网白名单</span></span><br><span class="line">-A INPUT -s 10.0.0.0/8 -j ACCEPT</span><br><span class="line">-A INPUT -s 172.16.0.0/12 -j ACCEPT</span><br><span class="line">-A INPUT -s 192.168.0.0/16 -j ACCEPT</span><br><span class="line"><span class="comment"># 配置外网白名单</span></span><br><span class="line">-A INPUT -s 180.168.36.198 -j ACCEPT </span><br><span class="line">-A INPUT -s 180.168.34.218 -j ACCEPT </span><br><span class="line">-A INPUT -s 222.73.202.251 -j ACCEPT </span><br><span class="line"><span class="comment"># 控制端口</span></span><br><span class="line">-A INPUT -p tcp --dport 80 -j ACCEPT </span><br><span class="line">-A INPUT -p tcp --dport 22 -j ACCEPT</span><br><span class="line"><span class="comment"># 拒绝其它</span></span><br><span class="line">-A INPUT -j DROP </span><br><span class="line">-A FORWARD -j DROP </span><br><span class="line"><span class="comment"># 开放出口</span></span><br><span class="line">-A OUTPUT -j ACCEPT </span><br><span class="line">COMMIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启生效</span></span><br><span class="line">service iptables restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复查结果</span></span><br><span class="line"></span><br><span class="line">iptables -nL --line-number</span><br><span class="line"></span><br><span class="line">Chain INPUT (policy ACCEPT)</span><br><span class="line">num  target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">1    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           </span><br><span class="line">2    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           state RELATED,ESTABLISHED </span><br><span class="line">3    ACCEPT     icmp --  0.0.0.0/0            0.0.0.0/0           </span><br><span class="line">4    ACCEPT     all  --  10.0.0.0/8           0.0.0.0/0           </span><br><span class="line">5    ACCEPT     all  --  172.16.0.0/12        0.0.0.0/0           </span><br><span class="line">6    ACCEPT     all  --  192.168.0.0/16       0.0.0.0/0           </span><br><span class="line">7    ACCEPT     all  --  180.168.36.198       0.0.0.0/0           </span><br><span class="line">8    ACCEPT     all  --  180.168.34.218       0.0.0.0/0           </span><br><span class="line">9    ACCEPT     all  --  222.73.202.251       0.0.0.0/0           </span><br><span class="line">10   ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           tcp dpt:80 </span><br><span class="line">11   ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0           tcp dpt:22 </span><br><span class="line">12   DROP       all  --  0.0.0.0/0            0.0.0.0/0           </span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT)</span><br><span class="line">num  target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">1    DROP       all  --  0.0.0.0/0            0.0.0.0/0           </span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT)</span><br><span class="line">num  target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">1    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0</span><br></pre></td></tr></table></figure><h2 id="设置-crontab-脚本"><a href="#设置-crontab-脚本" class="headerlink" title="设置 crontab 脚本"></a>设置 crontab 脚本</h2><blockquote><p>便于运维集中化管理扩展</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">vim /root/start_iptables.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#0 0 * * * /root/start_iptables.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除配置</span></span><br><span class="line">/sbin/iptables -P INPUT ACCEPT</span><br><span class="line">/sbin/iptables -F</span><br><span class="line">/sbin/iptables -X</span><br><span class="line"><span class="comment"># 开放本地和 Ping</span></span><br><span class="line">/sbin/iptables -A INPUT -i lo -j ACCEPT  </span><br><span class="line">/sbin/iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT </span><br><span class="line">/sbin/iptables -A INPUT -p icmp -j ACCEPT</span><br><span class="line"><span class="comment"># 配置内网白名单</span></span><br><span class="line">/sbin/iptables -A INPUT -s 10.0.0.0/8 -j ACCEPT</span><br><span class="line">/sbin/iptables -A INPUT -s 172.16.0.0/12 -j ACCEPT</span><br><span class="line">/sbin/iptables -A INPUT -s 192.168.0.0/16 -j ACCEPT</span><br><span class="line"><span class="comment"># 配置外网白名单</span></span><br><span class="line">/sbin/iptables -A INPUT -s 180.168.36.198 -j ACCEPT </span><br><span class="line">/sbin/iptables -A INPUT -s 180.168.34.218 -j ACCEPT </span><br><span class="line">/sbin/iptables -A INPUT -s 222.73.202.251 -j ACCEPT </span><br><span class="line"><span class="comment"># 控制端口</span></span><br><span class="line">/sbin/iptables -A INPUT -p tcp --dport 80 -j ACCEPT </span><br><span class="line">/sbin/iptables -A INPUT -p tcp --dport 22 -j ACCEPT</span><br><span class="line"><span class="comment"># 拒绝其它</span></span><br><span class="line">/sbin/iptables -A INPUT -j DROP </span><br><span class="line">/sbin/iptables -A FORWARD -j DROP </span><br><span class="line"><span class="comment"># 开放出口</span></span><br><span class="line">/sbin/iptables -A OUTPUT -j ACCEPT </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chmod 755 /root/start_iptables.sh</span><br><span class="line">crontab -e</span><br><span class="line">0 0 * * * /root/start_iptables.sh</span><br></pre></td></tr></table></figure><h2 id="CentOS7-配置-iptables"><a href="#CentOS7-配置-iptables" class="headerlink" title="CentOS7 配置 iptables"></a>CentOS7 配置 iptables</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置好 yum 源以后安装 iptables-service</span></span><br><span class="line">yum install -y iptables-services</span><br><span class="line"><span class="comment"># 停止 firewalld</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line"><span class="comment"># 禁止 firewalld 自动启动</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line"><span class="comment"># 启动 iptables</span></span><br><span class="line">systemctl start iptables</span><br><span class="line"><span class="comment"># 将 iptables 设置为开机自动启动，以后即可通过 iptables-service 控制 iptables 服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> iptables</span><br></pre></td></tr></table></figure><h3 id="开启-Linux-路由转发"><a href="#开启-Linux-路由转发" class="headerlink" title="开启 Linux 路由转发"></a>开启 Linux 路由转发</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭路由转发</span></span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/ip_forward            </span><br><span class="line"><span class="comment"># 开启路由转发</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward            </span><br><span class="line"><span class="comment"># 注意以上操作仅当前有效，计算机重启后无效，修改 / etc/sysctl.conf 配置文件，可以实现永久有效规则</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'net.ipv4.ip_forward=1'</span> &gt;&gt; /etc/sysctl.conf</span><br></pre></td></tr></table></figure><h2 id="配置-NAT-Tunnel"><a href="#配置-NAT-Tunnel" class="headerlink" title="配置 NAT Tunnel"></a>配置 NAT Tunnel</h2><blockquote><p>俗称跳板机</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置 iptables</span></span><br><span class="line">vi /etc/sysconfig/iptables</span><br><span class="line">*nat</span><br><span class="line">:PREROUTING ACCEPT [6:504]</span><br><span class="line">:INPUT ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [1:52]</span><br><span class="line">:POSTROUTING ACCEPT [1:52]</span><br><span class="line"></span><br><span class="line">-A POSTROUTING -j MASQUERADE</span><br><span class="line">COMMIT</span><br><span class="line"></span><br><span class="line">*filter</span><br><span class="line">:INPUT DROP [1029028:53321694]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [44723822:21524638399]</span><br><span class="line"></span><br><span class="line"><span class="comment">#zabbix</span></span><br><span class="line">-A INPUT -s 10.65.200.90 -p tcp -m tcp --dport 10050 -j ACCEPT</span><br><span class="line"></span><br><span class="line">-A INPUT -p tcp --dport 22 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># For keepalived:</span></span><br><span class="line"><span class="comment"># allow vrrp</span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line"><span class="comment"># allow multicast</span></span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># Drop packets from spoofed networks</span></span><br><span class="line">-A INPUT -s 169.254.0.0/16   -j DROP</span><br><span class="line"><span class="comment">#-A INPUT -s 10.0.0.0/8       -j DROP</span></span><br><span class="line"><span class="comment">#-A INPUT -s 127.0.0.0/8      -j DROP</span></span><br><span class="line">-A INPUT -s 224.0.0.0/4      -j DROP</span><br><span class="line">-A INPUT -d 224.0.0.0/4      -j DROP</span><br><span class="line">-A INPUT -s 240.0.0.0/5      -j DROP</span><br><span class="line">-A INPUT -d 240.0.0.0/5      -j DROP</span><br><span class="line">-A INPUT -s 0.0.0.0/8        -j DROP</span><br><span class="line">-A INPUT -d 0.0.0.0/8        -j DROP</span><br><span class="line">-A INPUT -d 239.255.255.0/24 -j DROP</span><br><span class="line">-A INPUT -d 255.255.255.255  -j DROP</span><br><span class="line"></span><br><span class="line"><span class="comment"># Drop Invalid packets</span></span><br><span class="line">-A INPUT   -m state --state INVALID -j DROP</span><br><span class="line"><span class="comment">#-A FORWARD -m state --state INVALID -j DROP</span></span><br><span class="line">-A OUTPUT  -m state --state INVALID -j DROP</span><br><span class="line"></span><br><span class="line"><span class="comment"># Drop Bogus TCP packets</span></span><br><span class="line">-A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP</span><br><span class="line">-A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP</span><br><span class="line"></span><br><span class="line">-A INPUT -p icmp --icmp-type <span class="built_in">echo</span>-reply -j ACCEPT</span><br><span class="line">-A INPUT -p icmp --icmp-type destination-unreachable -j ACCEPT</span><br><span class="line">-A INPUT -p icmp --icmp-type redirect -j ACCEPT</span><br><span class="line">-A INPUT -p icmp --icmp-type <span class="built_in">echo</span>-request -j ACCEPT</span><br><span class="line">-A INPUT -p icmp --icmp-type time-exceeded -j ACCEPT</span><br><span class="line">-A INPUT -i lo -j ACCEPT</span><br><span class="line">-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">COMMIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启生效并检查</span></span><br><span class="line">service iptables restart</span><br><span class="line">iptables -nvL</span><br></pre></td></tr></table></figure><h2 id="常用的-iptables-配置文件"><a href="#常用的-iptables-配置文件" class="headerlink" title="常用的 iptables 配置文件"></a>常用的 iptables 配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dnat</span></span><br><span class="line">-A PREROUTING -s 1.1.1.1/30,2.2.2.2 -p tcp --dport 10000 -j DNAT --to-destination 10.71.12.89:80</span><br><span class="line"><span class="comment"># snat</span></span><br><span class="line">-A POSTROUTING -d 1.1.1.1 -j SNAT --to-source 2.2.2.2</span><br><span class="line">-A POSTROUTING -o bond1 -j SNAT --to-source 3.3.3.3</span><br><span class="line">-A POSTROUTING -j MASQUERADE</span><br><span class="line"><span class="comment"># multiport</span></span><br><span class="line">-A INPUT -s 10.65.200.90 -p tcp -m multiport --dports 10050,10051 -j ACCEPT</span><br><span class="line">-A INPUT -s 10.65.200.90 -p tcp -m multiport --dports 10050:10060 -j ACCEPT</span><br></pre></td></tr></table></figure><h2 id="Ansible-管理-iptables"><a href="#Ansible-管理-iptables" class="headerlink" title="Ansible 管理 iptables"></a>Ansible 管理 iptables</h2><blockquote><p>核心先规范好 iptables 模板格式，然后利用 ansible blockinfile 中的 marker 批量修改</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">*filter</span><br><span class="line">:INPUT DROP [0:0]</span><br><span class="line">:FORWARD ACCEPT [0:0]</span><br><span class="line">:OUTPUT ACCEPT [0:0]</span><br><span class="line"></span><br><span class="line"># lvs-tun</span><br><span class="line">-A INPUT -p ipv4 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># keepalived vrrp</span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># http/https</span><br><span class="line">-A INPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp --dport 443 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># BEGIN ANSIBLE MANAGED BLOCK iptables</span><br><span class="line">-A INPUT -s xxx -p tcp --dport 22 -j ACCEPT</span><br><span class="line">-A INPUT -s xxx -p tcp --dport 22 -j ACCEPT</span><br><span class="line">-A INPUT -s xxx -p tcp --dport 22 -j ACCEPT</span><br><span class="line"># END ANSIBLE MANAGED BLOCK iptables</span><br><span class="line"></span><br><span class="line"># BEGIN ANSIBLE MANAGED BLOCK jumphost</span><br><span class="line">-A INPUT -s 10.10.8.151/32     -p tcp --dport 22 -j ACCEPT</span><br><span class="line">-A INPUT -s 10.10.70.149 -p tcp -m tcp --dport 38422 -j ACCEPT</span><br><span class="line"># END ANSIBLE MANAGED BLOCK jumphost</span><br><span class="line"></span><br><span class="line"># BEGIN ANSIBLE MANAGED BLOCK userdefined</span><br><span class="line"># END ANSIBLE MANAGED BLOCK userdefined</span><br><span class="line"></span><br><span class="line"># Drop packets from spoofed networks</span><br><span class="line">-A INPUT -s 169.254.0.0/16   -j DROP</span><br><span class="line">-A INPUT -s 224.0.0.0/4      -j DROP</span><br><span class="line">-A INPUT -d 224.0.0.0/4      -j DROP</span><br><span class="line">-A INPUT -s 240.0.0.0/5      -j DROP</span><br><span class="line">-A INPUT -d 240.0.0.0/5      -j DROP</span><br><span class="line">-A INPUT -s 0.0.0.0/8        -j DROP</span><br><span class="line">-A INPUT -d 0.0.0.0/8        -j DROP</span><br><span class="line">-A INPUT -d 239.255.255.0/24 -j DROP</span><br><span class="line">-A INPUT -d 255.255.255.255  -j DROP</span><br><span class="line"></span><br><span class="line"># Drop Invalid packets</span><br><span class="line">-A INPUT   -m state --state INVALID -j DROP</span><br><span class="line">#-A FORWARD -m state --state INVALID -j DROP</span><br><span class="line">-A OUTPUT  -m state --state INVALID -j DROP</span><br><span class="line"></span><br><span class="line"># Drop Bogus TCP packets</span><br><span class="line">-A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP</span><br><span class="line">-A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP</span><br><span class="line"></span><br><span class="line">-A INPUT -p icmp --icmp-type echo-reply -j ACCEPT</span><br><span class="line">-A INPUT -p icmp --icmp-type destination-unreachable -j ACCEPT</span><br><span class="line">-A INPUT -p icmp --icmp-type redirect -j ACCEPT</span><br><span class="line">-A INPUT -p icmp --icmp-type echo-request -j ACCEPT</span><br><span class="line">-A INPUT -p icmp --icmp-type time-exceeded -j ACCEPT</span><br><span class="line">-A INPUT -i lo -j ACCEPT</span><br><span class="line">-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">- hosts:</span> <span class="string">all</span></span><br><span class="line"><span class="attr">  become:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">no</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">backup</span> <span class="string">iptables</span></span><br><span class="line"><span class="attr">      copy:</span></span><br><span class="line"><span class="attr">        src:</span> <span class="string">/etc/sysconfig/iptables</span></span><br><span class="line"><span class="attr">        dest:</span> <span class="string">/etc/sysconfig/iptables.bak</span></span><br><span class="line"><span class="attr">        remote_src:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">add</span> <span class="string">iptables</span> <span class="string">line</span> <span class="string">for</span> <span class="string">internal</span> <span class="string">logic</span> <span class="string">service</span></span><br><span class="line"><span class="attr">      blockinfile:</span></span><br><span class="line"><span class="attr">        path:</span> <span class="string">/etc/sysconfig/iptables</span></span><br><span class="line"><span class="attr">        insertafter:</span> <span class="string">'^:OUTPUT ACCEPT'</span></span><br><span class="line"><span class="attr">        marker:</span> <span class="string">"# &#123;mark&#125; iptables whitelist only for internal logic service"</span></span><br><span class="line"><span class="attr">        block:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          -A INPUT -s 10.0.0.0/8 -j ACCEPT</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span><span class="attr">    - name:</span> <span class="string">reload</span> <span class="string">service</span></span><br><span class="line"><span class="attr">      service:</span> <span class="string">name=iptables</span> <span class="string">state=reloaded</span></span><br><span class="line"><span class="attr">      tags:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">reload</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      建立防火墙白名单机制很重要
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>macOS Mojave 升级后开机卡在进度条和唤醒时黑屏的解决方法</title>
    <link href="https://wsgzao.github.io/post/macos/"/>
    <id>https://wsgzao.github.io/post/macos/</id>
    <published>2019-08-22T04:43:14.000Z</published>
    <updated>2019-08-27T02:38:28.197Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190822151646.gif" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>第一次升级 macOS 在抱着对 Apple 高质量软硬件的幻想中破灭，从 macOS High Sierra 手贱升级到 macOS Mojave (version 10.14)，各种字体发虚，Kernel Panic(六国语言重启)，系统卡顿，耗电快等问题接踵而至。本来寄希望于升级 macOS Mojave (version 10.14.1-10.14.6)可以解决部分稳定性和兼容性问题，但是 MacBook 居然开机卡在进度条，然后我等了一上午都没有完成，差点以为要悲剧的重装系统丢失数据了。所以很有必要给大伙提个醒，无论是 Windows 还是 macOS 在新版本推送的早期都不要点击更新，升级到高版本后如果不选择 erase 擦除数据是无法降级至低版本的，比如从 Catalina 降级至 Mojave 或 High Sierra。抑制住你体内的洪荒之力和强迫症，不要手贱，不要手贱，不要手贱。实在手痒的厉害，千万记住先备份后折腾。</p><blockquote><p>拒绝重装！教你如何拯救开机失败的 Mac 电脑</p></blockquote><hr><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2019 年 08 月 22 日 - 更新解决问题的常见套路，可修复截止至 10.14.6 之前的大多数问题，对 Catalina 不抱有 Bug 变少希望<br>2019 年 01 月 30 日 - 更新解决唤醒时黑屏只看见鼠标的问题<br>2018 年 11 月 01 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/macos/">https://wsgzao.github.io/post/macos/</a></p><p><strong> 扩展阅读 </strong></p><p>Upgrade to macOS Mojave - <a href="https://www.apple.com/macos/how-to-upgrade/" target="_blank" rel="noopener">https://www.apple.com/macos/how-to-upgrade/</a><br>如何升级到 macOS Mojave - <a href="https://support.apple.com/zh-cn/HT201475" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201475</a><br>如何通过 macOS 恢复功能重新安装 macOS - <a href="https://support.apple.com/zh-cn/HT204904" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT204904</a><br>如何创建可引导的 macOS 安装器 - <a href="https://support.apple.com/zh-cn/HT201372" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201372</a><br>使用 “时间机器” 备份您的 Mac - <a href="https://support.apple.com/zh-cn/HT201250" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201250</a></p><hr><h2 id="macOS-history"><a href="#macOS-history" class="headerlink" title="macOS history"></a>macOS history</h2><blockquote><p>第一次体验苹果虚拟机和黑苹果记得还是 Tiger 和 Leopard 的时候</p></blockquote><table><thead><tr><th>Version</th><th>Codename</th><th>﻿Most recent version</th></tr></thead><tbody><tr><td>Mac OS X 10.0</td><td>Cheetah</td><td>﻿10.0.4 (June 22, 2001)</td></tr><tr><td>Mac OS X 10.1</td><td>Puma</td><td>10.1.5 (June 6, 2002)</td></tr><tr><td>Mac OS X 10.2</td><td>Jaguar</td><td>10.2.8 (October 3, 2003)</td></tr><tr><td>Mac OS X 10.3</td><td>Panther</td><td>10.3.9 (April 15, 2005)</td></tr><tr><td>Mac OS X 10.4</td><td>Tiger</td><td>10.4.11 (November 14, 2007)</td></tr><tr><td>Mac OS X 10.5</td><td>Leopard</td><td>10.5.8 (August 5, 2009)</td></tr><tr><td>Mac OS X 10.6</td><td>Snow Leopard</td><td>10.6.8 v1.1 (July 25, 2011)</td></tr><tr><td>Mac OS X 10.7</td><td>Lion</td><td>10.7.5 (September 19, 2012)</td></tr><tr><td>OS X 10.8</td><td>Mountain Lion</td><td>10.8.5 (12F45) (October 3, 2013)</td></tr><tr><td>OS X 10.9</td><td>Mavericks</td><td>10.9.5 (13F1112) (September 18, 2014)[170]</td></tr><tr><td>OS X 10.10</td><td>Yosemite</td><td>10.10.5 (14F27) (August 13, 2015)</td></tr><tr><td>OS X 10.11</td><td>El Capitan</td><td>10.11.6 (15G31) (July 18, 2016)</td></tr><tr><td>macOS 10.12</td><td>Sierra</td><td>10.12.6 (16G29) (July 19, 2017)</td></tr><tr><td>macOS 10.13</td><td>High Sierra</td><td>10.13.6 (17G65) (July 9, 2018)</td></tr><tr><td>macOS 10.14</td><td>Mojave</td><td>10.14 (18A391) (September 24, 2018)</td></tr><tr><td>macOS 10.15</td><td>Catalina</td><td>N/A</td></tr></tbody></table><p>macOS release history - <a href="https://en.wikipedia.org/wiki/MacOS" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/MacOS</a></p><h2 id="常见的拯救方法"><a href="#常见的拯救方法" class="headerlink" title="常见的拯救方法"></a>常见的拯救方法</h2><blockquote><p>苹果官方客服的标准答复三板斧，有一定道理但不一定可以解决你的问题，属于玄学。重点还是要掌握正确的分析思路，检查日志和启动项，通过安全模式做对比交叉分析寻找蛛丝马迹</p></blockquote><ol><li>Reset NVRAM</li><li>Rest SMC</li><li>Use safe mode to isolate issues</li></ol><h3 id="重置-SMC"><a href="#重置-SMC" class="headerlink" title="重置 SMC"></a>重置 SMC</h3><p>先关机，然后断开电源，拔掉所有 USB 的连接，然后同时按住键盘左下角的 Shift，Control，Option 和开机键 15 秒。全过程 Mac 不会开机。15 秒后松手插上电源开机。</p><p>如何重置 Mac 上的系统管理控制器 (SMC) - <a href="https://support.apple.com/zh-cn/HT201295" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201295</a></p><h3 id="重置-NVRAM"><a href="#重置-NVRAM" class="headerlink" title="重置 NVRAM"></a>重置 NVRAM</h3><p>将 Mac 关机，然后开机并立即同时按住以下四个按键：Option、Command、P 和 R。您可以在大约 20 秒后松开这些按键，在此期间您的 Mac 可能看似在重新启动。</p><p>重置 Mac 上的 NVRAM 或 PRAM - <a href="https://support.apple.com/zh-cn/HT204063" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT204063</a></p><h3 id="使用安全模式"><a href="#使用安全模式" class="headerlink" title="使用安全模式"></a>使用安全模式</h3><p>要以安全模式启动，请按照以下步骤操作：</p><ol><li>启动或重新启动 Mac，然后立即按住 Shift 键。显示屏上将出现 Apple 标志。如果没有看到 Apple 标志，请了解该如何操作。</li><li>看到登录窗口时，松开 Shift 键。如果启动磁盘使用 FileVault 进行了加密，系统可能会两次提示登录：第一次为解锁启动磁盘，第二次则为登录 Finder。</li></ol><p>使用安全模式查明 Mac 的相关问题 - <a href="https://support.apple.com/zh-cn/HT201262" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201262</a></p><h3 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h3><p>如果以上都不能解决你的问题，且系统是最新的，硬件是没问题的，那么重装系统吧。哈哈，重装系统总是这么简单霸气的解决一些问题。</p><p>前提：</p><ol><li>保证你能连到 wifi 或者有线，因为重装系统需要连接远程服务器</li><li>保证有足够的电源，最好是附件有插板可以充电的情况下重装系统，这个过程还是比较久的，50 分钟左右。</li></ol><p>步骤如下：</p><ol><li>开机按住 Command (⌘)-R</li><li>出现的四个选项的界面选择第二个重装系统(Reinstall macOS)</li><li>等待重装系统完成即可</li></ol><p>如何通过 macOS 恢复功能重新安装 macOS - <a href="https://support.apple.com/zh-cn/HT204904" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT204904</a></p><h3 id="TimeMachine-恢复"><a href="#TimeMachine-恢复" class="headerlink" title="TimeMachine 恢复"></a>TimeMachine 恢复</h3><blockquote><p>TimeMachine 数据恢复的成本太高，需要先 Reinstall macOS 然后使用 TimeMacthine 恢复，再重新配置软件，不到万不得已之时不推荐</p></blockquote><ol><li>制作 U 盘启动</li><li>TimeMachine 恢复</li></ol><p>如何创建可引导的 macOS 安装器 - <a href="https://support.apple.com/zh-cn/HT201372" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201372</a></p><p>使用 “时间机器” 备份您的 Mac - <a href="https://support.apple.com/zh-cn/HT201250" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201250</a></p><h2 id="Mac-的启动组合键"><a href="#Mac-的启动组合键" class="headerlink" title="Mac 的启动组合键"></a>Mac 的启动组合键</h2><p>若要使用这些组合键中的任何一个，请在按下电源按钮以开启 Mac 后或在 Mac 开始重新启动后，立即按住相应按键。请一直按住，直至电脑出现对应的行为。</p><p>Command (⌘)-R：从内建的 macOS 恢复系统启动。或者，您也可以使用 Option-Command-R 或 Shift-Option-Command-R 以通过互联网从 macOS 恢复功能启动。macOS 恢复功能可以安装不同版本的 macOS，具体取决于您在电脑启动时使用的组合键。如果您的 Mac 使用了固件密码，系统将要求您输入这个密码。</p><p>Option (⌥)：启动进入“启动管理器”，您可以从中选取其他启动磁盘或宗卷（若可用）。如果您的 Mac 使用了固件密码，系统将要求您输入这个密码。</p><p>Option-Command-P-R：重置 NVRAM 或 PRAM。如果您的 Mac 使用了固件密码，它会忽略这个组合键或从 macOS 恢复功能启动。</p><p>Shift (⇧)：以安全模式启动。</p><p>D：从内建的 Apple Hardware Test 或 Apple Diagnostics 实用工具启动，具体取决于您的 Mac 机型。或者，您也可以使用 Option-D 通过互联网从这个实用工具启动。</p><p>N：从兼容的 NetBoot 服务器启动（若可用）。要使用 NetBoot 服务器上默认的引导映像，则请按住 Option-N。配备 Apple T2 芯片的电脑不支持这个启动键。</p><p>Command-S：以单用户模式启动。这个组合键要求使用 macOS High Sierra 或更早版本。</p><p>T：以目标磁盘模式启动。</p><p>Command-V：以详细模式启动。</p><p>Mac 的启动组合键 - <a href="https://support.apple.com/zh-cn/HT201255" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201255</a></p><h2 id="有效的解决方法"><a href="#有效的解决方法" class="headerlink" title="有效的解决方法"></a>有效的解决方法</h2><blockquote><p>如果你遇到和我类似的问题，不妨尝试寻找下具体的错误日志，然后向 Google 或者咨询苹果客服求助</p></blockquote><ol><li>command + v 进入代码界面，等出现不停的输出 Too many corpses being created 这段代码的时候，说明是缓存太多造成的</li><li>command + R 进入 macOS 使用工具页面，左上角找到终端工具</li><li>输入以下代码，重命名数据库缓存就行了</li><li>然后再重新启动电脑，耐心等待一会儿就可以重新进入桌面</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /Volumes/Macintosh\ HD/var/db/caches/opendirectory/</span><br><span class="line">mv ./mbr_cache ./mbr_cache-old</span><br></pre></td></tr></table></figure><h2 id="解决唤醒时黑屏只看见鼠标的问题"><a href="#解决唤醒时黑屏只看见鼠标的问题" class="headerlink" title="解决唤醒时黑屏只看见鼠标的问题"></a>解决唤醒时黑屏只看见鼠标的问题</h2><p>先关机，然后开机快速同时点击 Command + S 按键进入 single-user 单用户模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/sbin/fsck -fy</span><br><span class="line">/sbin/mount -uw /</span><br><span class="line">rm -f /Library/Preferences/com.apple.loginwindow.plist</span><br><span class="line">rm -f /var/db/.AppleUpgrade</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="其它异常"><a href="#其它异常" class="headerlink" title="其它异常"></a>其它异常</h2><blockquote><p>最直接的方法莫过于检查日志文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 如果非意外重启报错可以打开 console 控制台查看</span><br><span class="line">pmset -g log</span><br><span class="line"></span><br><span class="line"># 常见的手动清理步骤</span><br><span class="line">brew list</span><br><span class="line">brew uninstall</span><br><span class="line">brew uninstall v2ray-core</span><br><span class="line"></span><br><span class="line">brew cask list</span><br><span class="line">brew cask uninstall</span><br><span class="line">brew cask v2rayu</span><br><span class="line"></span><br><span class="line">brew services list</span><br><span class="line">brew services stop</span><br><span class="line">brew services stop v2rayu</span><br><span class="line"></span><br><span class="line"># 如果 system.log 有已删除但没有清理干净的自启动服务</span><br><span class="line">launchctl unload -w ~/Library/LaunchAgents/yanue.v2rayu.v2ray-core.plist</span><br><span class="line"></span><br><span class="line"># open(/var/db/DetachedSignatures) - No such file or directory</span><br><span class="line">sudo touch /var/db/DetachedSignatures</span><br><span class="line"></span><br><span class="line"># 检查启动项清理脏数据</span><br><span class="line">cd /Library/LaunchAgents</span><br><span class="line">cd /Library/LaunchDaemons</span><br><span class="line">sudo rm</span><br></pre></td></tr></table></figure><table><thead><tr><th>Name</th><th>Path</th></tr></thead><tbody><tr><td>系统日志文件夹</td><td>/var/log</td></tr><tr><td>系统日志文件</td><td>/var/log/system.log</td></tr><tr><td>Mac 分析数据</td><td>/var/log/DiagnosticMessages</td></tr><tr><td>系统应用程序日志</td><td>/Library/Logs</td></tr><tr><td>系统报告</td><td>/Library/Logs/DiagnosticReports</td></tr><tr><td>用户应用程序日志</td><td>~/Library/Logs</td></tr><tr><td>用户报告</td><td>~/Library/Logs/DiagnosticReports</td></tr></tbody></table><p><a href="https://support.apple.com/zh-cn/HT200553" target="_blank" rel="noopener">如果 Mac 因为出现问题而重新启动</a></p><p><a href="https://zxtechart.com/2017/05/10/mac-finder-stuck/" target="_blank" rel="noopener">排查 Mac 中的 Finder 无限卡住的问题</a></p><p><a href="https://blog.macsales.com/45586-how-to-use-the-mac-console-app-to-diagnose-a-crash/" target="_blank" rel="noopener">How to Use the Mac Console App to Diagnose a Crash</a></p><p><a href="https://blog.macsales.com/46475-macos-reversion-how-to-downgrade-from-mojave/" target="_blank" rel="noopener">macOS Reversion: How to Downgrade from Mojave</a></p><p>如果遇到频繁卡死并黑屏无法唤醒，最后经常自动重启，我的解决步骤是</p><ol><li>移除了一些比较旧的应用</li><li>关闭了蓝牙等不需要使用的服务</li><li>清理了自启动的脏数据</li><li>最后 Reset NVRAM 和 SMC</li><li>如果电脑目前非常稳定，请不要考虑升级，一个从坑里爬出来的肺腑之言</li></ol><h2 id="不着急的解决方案"><a href="#不着急的解决方案" class="headerlink" title="不着急的解决方案"></a>不着急的解决方案</h2><p>联系 Apple 支持 - <a href="https://getsupport.apple.com/" target="_blank" rel="noopener">https://getsupport.apple.com/</a></p>]]></content>
    
    <summary type="html">
    
      拒绝重装！教你如何拯救开机失败的Mac电脑
    
    </summary>
    
      <category term="软件 | Soft" scheme="https://wsgzao.github.io/categories/%E8%BD%AF%E4%BB%B6-Soft/"/>
    
    
  </entry>
  
  <entry>
    <title>Google Chrome 浏览器插件和油猴脚本推荐</title>
    <link href="https://wsgzao.github.io/post/chrome-extensions/"/>
    <id>https://wsgzao.github.io/post/chrome-extensions/</id>
    <published>2019-08-20T06:59:49.000Z</published>
    <updated>2019-08-22T06:31:59.386Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>到了新加坡再也不用考虑科学上网的问题，加上 macOS 跨平台浏览器做得比较成熟的自然是 Google Chrome 和 Firefox，在 Windows 平台用了十几年的 Maxthon，期间也尝试过无数第三方浏览器，傲游浏览器努力改变着世界却也渐行渐远，有着同样命运的应该还包括我从 M8 用到 MX2 的魅族吧。回到 Google Chrome 浏览器插件和油猴脚本推荐正题，Google Chrome 除了最重要的快以外，更重要的是 Chrome Web Store 上一系列好用插件，我很喜欢 Chrome 简单纯粹的设计和极致的性能。在插件的推荐上分为 <code>通用</code> 和 <code>开发者</code> 两部分来写方便区分，大部分 Chrome 可用的插件 Firefox 也同样适用，如果有遗漏或有更好用的同类型插件和脚本欢迎留言分享。</p><blockquote><p>Google Chrome 浏览器插件和油猴脚本推荐</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 08 月 20 日 - 添加自用部分插件和脚本，增加谷粒 Chrome 插件英雄榜<br>2019 年 08 月 01 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/chrome-extensions/">https://wsgzao.github.io/post/chrome-extensions/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://github.com/zhaoolee/ChromeAppHeroes" target="_blank" rel="noopener">谷粒 Chrome 插件英雄榜</a></p><p><a href="https://www.pcmag.com/article/247971/the-100-best-free-google-chrome-extensions" target="_blank" rel="noopener">The 100 Best Free Google Chrome Extensions</a></p><p><a href="https://www.runningcheese.com/extensions" target="_blank" rel="noopener">Chrome Firefox 双修，2019 年度最喜欢浏览器拓展</a></p><p><a href="https://www.runningcheese.com/userscripts" target="_blank" rel="noopener">脚本里的 “赤兔”，2019 年度最喜欢油猴脚本</a></p><hr><h2 id="Chrome-插件推荐"><a href="#Chrome-插件推荐" class="headerlink" title="Chrome 插件推荐"></a>Chrome 插件推荐</h2><blockquote><p>以下链接大部分都是 Google Chrome Webstore，如果无法访问可以考虑从第三方下载到本地导入</p></blockquote><p><a href="https://chrome.google.com/webstore/category/extensions" target="_blank" rel="noopener">Chrome Web Store</a></p><p><a href="https://www.crx4chrome.com/" target="_blank" rel="noopener">Crx4Chrome</a></p><p><a href="https://chrome-extension-downloader.com/" target="_blank" rel="noopener">Chrome Extension Downloader</a></p><h3 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h3><p><a href="https://chrome.google.com/webstore/detail/simpleextmanager/kniehgiejgnnpgojkdhhjbgbllnfkfdk" target="_blank" rel="noopener">SimpleExtManager</a> - 我个人首推的管理插件小工具，对于插件控们一定灰常有帮助</p><p><a href="https://chrome.google.com/webstore/detail/ie-tab/hehijbfgiekmjfkfjpbkbammjbdenadd" target="_blank" rel="noopener">IE Tab</a> - 为了向下兼容那些没有与时俱进的网站，大多数时候我们只能选择妥协</p><p><a href="https://chrome.google.com/webstore/detail/undo-closed-tabs-button/ieehkmoiljghfkejgahoheemdjpdinml" target="_blank" rel="noopener">Undo Closed Tabs Button</a> - Google 原生取消了恢复网页的按钮的设计，你可以通过快捷键或者历史记录恢复，但这个小工具确实可以帮到我</p><p><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener">Tampermonkey</a> - 老牌的油猴管理工具，和 Violentmonkey 暴力猴相比哪款用得顺手选择哪个</p><p><a href="https://chrome.google.com/webstore/detail/cdonnmffkdaoajfknoeeecmchibpmkmg?hl=en" target="_blank" rel="noopener">沙拉查词 - 聚合词典划词翻译</a> - 我个人觉得这是目前 Chrome 划词翻译插件中体验最好的</p><p><a href="https://chrome.google.com/webstore/detail/grammarly-for-chrome/kbfnbcaeplbcioakkpcpgfkobkghlhen" target="_blank" rel="noopener">Grammarly for Chrome</a> - 智能检查英文语法拼写错误，在 Web 写邮件和文档时会发现它的重要价值</p><p><a href="https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc" target="_blank" rel="noopener">Evernote Web Clipper</a> - 中文称为印象笔记，平时会把优质的内容保存到 Evernote 中，虽然没有 OneNote 功能强大但胜在简单方便可跨平台同步</p><p><a href="https://chrome.google.com/webstore/detail/simpread-reader-view/ijllcpnolfcooahcekpamkbidhejabll" target="_blank" rel="noopener">简悦 - SimpRead</a> - 沉浸式阅读模式，还支持丰富的导出功能比如 Markdown/PDF 等</p><p><a href="https://chrome.google.com/webstore/detail/enable-right-click/gpeddepmnbmkjfnhifmggnjdggibjjkf" target="_blank" rel="noopener">破解右键锁</a> - 比 Enable Copy 更加强大，不过大众点评的评论好像无解</p><p><a href="https://chrome.google.com/webstore/detail/mbklgpngoohbbagagdfoccaclpdhgihd" target="_blank" rel="noopener">爱搜资源云盘助手</a> - 插件方便是方便，但是可能会涉及用户隐私数据，如果介意需要慎用类似插件</p><p><a href="https://chrome.google.com/webstore/detail/take-webpage-screenshots/mcbpblocgmgfnpjjppndjkmgjaogfceg" target="_blank" rel="noopener">FireShot</a> - 捕捉网页截图</p><p><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="noopener">Proxy SwitchyOmega</a> - 轻松快捷地管理和切换多个代理设置</p><p><a href="https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm" target="_blank" rel="noopener">uBlock Origin</a> - 类似 Adblock Plus(ABP)，用于代替一款高效的网络请求过滤工具，占用极低的内存和 CPU，推荐额外添加适合自己的规则效果更佳</p><h3 id="开发者"><a href="#开发者" class="headerlink" title="开发者"></a>开发者</h3><p><a href="https://github.com/jaywcjlove/oscnews" target="_blank" rel="noopener">oscnews</a> - jaywcjlove 制作的新插件，目前我的主要用途是辅助新建标签页浏览开源中国更新资讯和 GitHub 趋势榜，从作者 TODO 计划来看，Github Start 管理和集成 octotree 部分功能都非常吸引人，加油</p><p><a href="https://github.com/zxlie/FeHelper" target="_blank" rel="noopener">FeHelper</a> - WEB 前端助手，All In One 的一个工具，包含多个独立小应用，比如：Json 工具、代码美化、代码压缩、二维码、Postman、markdown、网页油猴、便签笔记、信息加密与解密、随机密码生成、Crontab 等等</p><p><a href="https://github.com/openstyles/stylus" target="_blank" rel="noopener">Stylus</a> - Stylus 是基于 Stylish 调整网页外观的用户样式管理器</p><p><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc" target="_blank" rel="noopener">Octotree</a> - 在 GitHub 上显示代码树</p><p><a href="http://www.pullywood.com/ImageAssistant/" target="_blank" rel="noopener">ImageAssistant</a> - 国人开发的图片助手 (ImageAssistant) 批量图片下载器</p><p><a href="https://github.com/BlackGlory/copycat" target="_blank" rel="noopener">Copycat</a> - 我主要是为了复制网页直接转化为 markdown</p><p><a href="https://github.com/oppoic/JSONViewer/" target="_blank" rel="noopener">JSONViewer</a> - 一个页面格式化多条 JSON，提升工作效率</p><p><a href="https://github.com/gildas-lormeau/SingleFile" target="_blank" rel="noopener">SingleFile</a> - 将完整的页面保存到一个 HTML 文件中</p><p><a href="https://www.uku.im" target="_blank" rel="noopener">Unblock Youku</a> - 我平时很少看国内在线视频，不过这款良心插件已经坚持了 5 年，作者不容易。如果速度不稳定大家也可以购买国内的阿里云、腾讯云等，我始终相信云即未来</p><p><a href="https://github.com/vinta/pangu.js" target="_blank" rel="noopener">为什么你们就是不能加个空格呢？</a> - 对文字排版有强迫症的福音吧</p><p><a href="https://github.com/sciooga/v2ex-plus" target="_blank" rel="noopener">v2ex plus</a> - 可能是 v2ex 最好用的扩展</p><h2 id="油猴脚本推荐"><a href="#油猴脚本推荐" class="headerlink" title="油猴脚本推荐"></a>油猴脚本推荐</h2><blockquote><p>我个人的选择是 TemperMoneky &gt; ViolentMoneky</p></blockquote><p><a href="https://www.tampermonkey.net" target="_blank" rel="noopener">Tampermonkey</a> - Tampermonkey 是一款免费的浏览器扩展和最为流行的用户脚本管理器</p><p><a href="https://greasyfork.org/zh-CN" target="_blank" rel="noopener">Greasy Fork</a> - 这里是一个提供用户脚本的网站</p><h3 id="通用-1"><a href="#通用-1" class="headerlink" title="通用"></a>通用</h3><p><a href="https://greasyfork.org/zh-CN/scripts/329484" target="_blank" rel="noopener">豆瓣资源下载大师</a> - 装这一个脚本就够了！可能是你遇到的最好的豆瓣增强脚本</p><p><a href="https://greasyfork.org/zh-CN/scripts/29762" target="_blank" rel="noopener">网盘自动填写密码【威力加强版】</a> - 这个功能比插件弱一些，好处就是不涉及上传隐私数据</p><p><a href="https://greasyfork.org/zh-CN/scripts/370634" target="_blank" rel="noopener">懒人专用，自用组合型多功能脚本</a> - 为避免争议，各位可以阅读脚本描述后决定是否使用</p><p><a href="https://greasyfork.org/zh-CN/scripts/25718" target="_blank" rel="noopener">解除 B 站区域限制</a> - 通过替换获取视频地址接口的方式，实现解除 B 站区域限制</p><p><a href="https://tiansh.github.io/yawf/" target="_blank" rel="noopener">YAWF</a> - 新浪微博根据关键词、作者、话题、来源等过滤微博，清理版面，以及其他改造功能</p><p><a href="https://tiansh.github.io/us-else/zhihu_visitor/" target="_blank" rel="noopener">知乎免登录</a> - 如题</p><p><a href="https://greasyfork.org/zh-CN/scripts/2312" target="_blank" rel="noopener">右键在新标签中打开图片时显示最优化图像质量</a> - 支持：谷歌 (G+ blogspot YouTube)、Tumblr、推特、Steam、新浪微博、知乎、豆瓣、百度贴吧、淘宝（天猫）、ArtStation、Pinimg 等</p><h3 id="开发者-1"><a href="#开发者-1" class="headerlink" title="开发者"></a>开发者</h3><blockquote><p>不解释，大伙都是为了努力学习新知识，但你值得拥有一种更舒服的姿势</p></blockquote><p><a href="https://greasyfork.org/zh-CN/scripts/23840" target="_blank" rel="noopener">大人的 Greasyfork</a></p><p><a href="https://sleazyfork.org/zh-CN/scripts/25781" target="_blank" rel="noopener">JAV 老司机</a></p><p><a href="https://greasyfork.org/zh-CN/scripts/23316" target="_blank" rel="noopener">琉神转</a></p>]]></content>
    
    <summary type="html">
    
      Google Chrome浏览器插件和油猴脚本推荐
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>泰国普吉岛和甲米的旅游经历分享</title>
    <link href="https://wsgzao.github.io/post/thailand/"/>
    <id>https://wsgzao.github.io/post/thailand/</id>
    <published>2019-08-16T06:59:49.000Z</published>
    <updated>2019-08-16T10:39:31.787Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>2017/2018 年末加上 2019 年 8 月分别去了泰国的普吉岛和甲米旅游，说实话泰国普吉岛的蜜月旅行也是我的第一次出国经历，当然没想到的是一年后我已经从上海飞到了新加坡，如果你对新加坡的工作和生活感兴趣可以搜索《从国内跳槽至新加坡工作的经验分享》。这篇文章算是对泰国之旅的补交作业吧，大部分以文字描述为主不做剧透，不吹不黑列举和点评自己购买的第三方服务体验感受，想去泰国旅游的朋友可以参考下。</p><blockquote><p>泰国普吉岛和甲米的旅游经历分享</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 08 月 16 日 - 更新泰国普吉岛第 2 次旅游<br>2019 年 01 月 20 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/thailand/">https://wsgzao.github.io/post/thailand/</a></p><p><strong> 扩展阅读 </strong></p><p>泰国国家旅游局 - <a href="http://amazingthailand.org.cn/" target="_blank" rel="noopener">http://amazingthailand.org.cn/</a></p><hr><h2 id="普吉岛-Phuket-2017"><a href="#普吉岛-Phuket-2017" class="headerlink" title="普吉岛. Phuket 2017"></a>普吉岛. Phuket 2017</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190816165407.jpeg" alt=""></p><p>时间: 20171206-20171212<br>行程: 半自由行<br>签证: 普通旅游签，爱游蜜月套餐<br>通信: Happy 卡，爱游蜜月套餐<br>人数: 2<br>天数: 7 天 5 晚<br>机票: 上海至泰国普吉岛直飞往返，吉祥航空，爱游蜜月套餐<br>酒店: 卡里玛水疗度假村 3 晚 + 卡塔塔尼海滩度假村 2 晚，爱游蜜月套餐</p><p>提前预定项目: 价格为 1 人单价</p><ul><li>爱游泰国旅游普吉岛自由行 7 天 5 星蜜月春节机票飞猪，￥8699.00</li><li>浦发龙腾出行礼宾车机场接送机</li><li>浪花朵朵旅行 普吉岛王权免税店一日游骑大象自助餐泰国 KingPower，￥9.79</li><li>浪花朵朵旅行泰国普吉岛素可 Sukko Spa 90 分钟蜜月套餐 泰式按摩，￥492.37</li><li>浪花朵朵旅行普吉岛一日游大小皇帝岛浮潜海钓泰国旅游女神号游艇，￥592.23</li><li>浪花朵朵旅行普吉岛绿洲 SPA 水疗馆 The Oasis Spa 泰国绿洲 泰式按摩，￥463.69</li></ul><p>当地购买项目: 行程比较紧凑，去了班赞海鲜市场也没有购买欲望</p><p>小结:</p><ol><li>首次出国就是蜜月旅行，在选择地点时也受到《欢乐颂》安迪最后选择去普吉岛，出于稳妥的考虑选择了半自由行 + 当地游的方式，缺点自然是花钱买省心。如果你往下看第二次去甲米的行程基本就是自由行 + 当地游，费用大幅减少而时间成本其实也没有增加很多</li><li>这次普吉岛只安排 1 天出海行程，我没有选择斯米兰因为不考虑深潜。结合下面甲米 2 次出海经历，我这里推荐大家尽可能选择靠谱的精致小团，在长时间坐游艇和游玩项目过程中体验会提升不少</li><li>普吉岛的整体商业化程度高体现在吃喝玩乐各个方面，而普吉岛 SPA 的 2 次体验都非常棒，尤其是最后一天绿洲 SPA 是目前我所接触过最舒服的一次双人 SPA，连洗澡都贴心的配置了 2 个花洒，安静且私密性极好，价格也没有很贵，非常值得二刷</li><li>虽然酒店是爱游搭配的，但是我现在可以理解 7 天行程住 2 种不同酒店的意义，高中搭配会带来新鲜的感受，成本上也会节约不少，就是中间牺牲更换酒店的时间有一点折腾</li><li>普吉岛的项目由于安排的有些紧凑导致没有太多睡到自然醒的休闲时间，毕竟出国一次也不容易想着到处多转转长长见识。如果条件允许推荐大家采用自由行 + 当地游的组合，出发前签证等重要材料一定要准备充分，不要辜负自己宝贵的假期哈</li></ol><h2 id="甲米-Krabi-2018"><a href="#甲米-Krabi-2018" class="headerlink" title="甲米. Krabi 2018"></a>甲米. Krabi 2018</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190816165012.jpeg" alt=""></p><p>时间: 20181204-20181209<br>行程: 自由行<br>签证: 落地签，免费<br>通信: 华为天际通，泰国 5 日行￥58.00<br>人数: 2<br>天数: 6 天 5 晚<br>机票: 酷航 TR686 新加坡 - 甲米, TR689 甲米 - 新加坡, ￥1192.00, 飞猪<br>酒店: Sugar Marina CLIFFHANGER 池景高级房, ￥1992.25, 飞猪</p><p>提前预定项目: 价格为 1 人单价</p><ul><li>浪花朵朵旅行泰国甲米接送机接机送机机场接送服务中文可急单，￥245.69</li><li>浪花朵朵 甲米翡翠池一日游温泉瀑布虎窟寺 ATV 皮划艇骑大象半日游，￥340.92</li><li>浪花朵朵泰国曼谷 lets relax spa 普吉岛清迈芭提雅甲米泰式按摩，￥299.52</li><li>浪花朵朵旅行 甲米一日游皮皮岛 pp 岛竹子岛四岛兰塔岛 快艇浮潜，￥329.57</li><li>浪花朵朵 洛克岛一日游兰塔 Rok 哈岛 游艇浮潜水 泰国甲米旅游中文，￥494.35</li></ul><p>当地购买项目: 记不清楚价格，仅列举自己推荐的店</p><ul><li>奥南按摩角中心</li><li>Jungle Kitchen</li><li>Ton Ma Yom Thai Food Restaurant</li><li>Kodam Kitchen</li></ul><p>小结:</p><ol><li>如果我可以重新选择会去掉翡翠池，lets relax spa，2 天的出海。翡翠池和九寨沟相比就是小巫见大巫，关于出海我不喜欢深潜，所以浮潜的效果会差好多，而且非常容易晒伤皮肤，需要很早出发然后长时间航行，对于不喜欢坐船的小伙伴来说是挺难受的。</li><li>体验过奥南按摩角中心基本就不会再考虑其它按摩馆了，技师年龄加手法都很成熟，整过过程没有过多的闲聊和休息，做足了时长。</li><li>由于时间和路程原因没有体验甲米镇的夜市，奥南夜市很一般，还是推荐大家多体验我上面写的 3 家餐厅，对食物如果没有忌口可以从热门推荐菜开始尝试。</li><li>落地签需要稍微多花一些填表时间，不过我们没有被要求重新现场拍照，省去了 2000 泰铢签证费用还是很划算的。</li></ol><h2 id="普吉岛-Phuket-2019"><a href="#普吉岛-Phuket-2019" class="headerlink" title="普吉岛. Phuket 2019"></a>普吉岛. Phuket 2019</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190816165431.jpeg" alt=""></p><p>时间: 20190804-20190809<br>行程: 自由行<br>签证: 落地签免费，入境时需要交纳 200 泰铢服务费名曰快速通道<br>通信: 华为天际通，泰国 7 日行￥89.00<br>人数: 2<br>天数: 6 天 5 晚<br>机票: 捷星亚洲航空 3K535 新加坡 - 普吉岛, 3K536 普吉岛 - 新加坡, ￥556.00, 飞猪<br>酒店: 普吉自然酒店 (The Nature Phuket) 池景豪华房, ￥2328.70, 飞猪</p><p>提前预定项目: 价格为 1 人单价</p><ul><li>浪花朵朵旅行普吉岛接机送机服务普吉接送机机场接机 24 时泰国旅游，￥78.15</li><li>浪花朵朵旅行 普吉岛王权免税店自助餐 king power 可接送泰国旅游，￥0.01</li><li>浪花朵朵旅行 普吉岛 Dream Spa 梦水疗馆泰式按摩赠网红小吃可接送，￥355.11</li></ul><p>当地购买项目: 这次没有订任何出海项目，就是盯着当地美食和 SPA 上</p><ul><li>MOONTREE | Elemental Spa(Patong Beach) ，钻石梦幻 3200 泰铢现金 1 人</li><li>Doo Dee Thai Food</li><li>6 号餐厅 No. 6 Restaurant</li><li>Dang Restaurant </li><li>After You</li><li>椰子冰激凌</li></ul><p>小结:</p><ol><li>第二次来普吉岛，这次没有安排出海行程，所以每天都可以睡到自然醒，行程没有那么紧凑人也不会像之前那么累。本来计划想考取 padi 潜水证或者去斯米兰体验下深潜，可惜时间没开放，建议大家出行前确认下开放时间和天气情况。</li><li>这次住的酒店 The Nature 和第一次 Kalima 离得蛮近都在芭东海滩，因为没有选择去很远的地方所以整个行程没有单独花钱坐车，酒店有班车往返 Jungceylon 江西冷购物中心，一般购物可以去 Big C 或者对面的 Central，网红的吃饭点也都在附近，十分方便。</li><li>因为行程很宽松所以我们特意岔开饭点时间去体验了泰国当地的网红美食，虽然不用排队但非饭点吃饭的人还是挺多的，不是第一次来泰国之前也吃过甲米的美食，整体都还行吧。这里友情提醒下各位慎重前往大众点评上长期霸榜的两兄弟和第一海鲜，600 泰铢一斤的超大龙虾或者皮皮虾会贵上一倍都不止，都不知道这么高评价怎么来的，店里一个外国人都没有和 6 号餐厅相比真是天壤之别。如果你不喜欢被热情的拉扯和激烈的砍价我也不建议你去班赞海鲜，若是喜欢吃海鲜回国内去盒马现做现吃也挺自在。</li><li>关于 SPA 我引用一下大众点评的一条评价，作为一个体验过 Divana、绿洲、Let’s relax、万豪酒店 Spa、Deep relax 等等的顾客，这家店绝对物有所值，我赞同大部分观点，MOONTREE 和 Oasis Spa 可以打个平手吧，也许未来真应该去体验下传说中悦榕庄 SPA。</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>3 次泰国旅游经历可以为将来更远的旅行打下扎实的基础</p></blockquote><ol><li>通过 3 次的泰国旅行，浮潜可能不是我的菜，大家注意水下安全和晒伤，美食和 SPA 的体验都非常棒</li><li>确认目的地的天气，开放项目和人流量，除了机票和酒店推荐提前预定接送机，出海和 SPA 等项目，虽然一定比当地预定贵一丢丢，但节约了时间成本，辅助你规划行程，不过千万不要把行程安排的过于紧凑，避免牵一发而动全身，旅游嘛开心最重要。</li><li>旅行攻略除了国内的美团点评和小红书等以外，推荐 TripAdvisor，俗称猫头鹰</li><li>东南亚移动支付越来越普及，真的可以期待未来走出国门也无需带钱包那一刻到来</li><li>无论选择去哪里旅游切记人身安全才是第一位的，祝大家旅途愉快哈</li></ol>]]></content>
    
    <summary type="html">
    
      泰国普吉岛和甲米的旅游经历分享
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>基于 bash find 命令执行 log 日志备份和清理的一次简单实践</title>
    <link href="https://wsgzao.github.io/post/find/"/>
    <id>https://wsgzao.github.io/post/find/</id>
    <published>2019-07-29T06:59:49.000Z</published>
    <updated>2019-09-02T03:46:12.348Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>find 作为最基础的 bash shell 命令之一我就不多做介绍了，由于每月压缩后的日志增长量已经超过 20TB，和 PB 相比应该还不算很大，选择的日志归档同步方案是 <a href="https://github.com/facebookarchive/scribe" target="_blank" rel="noopener">Facebook Scribe</a>，之后或许会基于<a href="https://www.elastic.co/cn/what-is/elk-stack" target="_blank" rel="noopener">ELK</a> 或<a href="https://grafana.com/oss/loki" target="_blank" rel="noopener">Grafana Loki</a>搭建日志实时分析平台，不过眼下的问题还是想办法在没有商业化集中式存储和软件定义分布式存储的支持下，用比较简单粗暴的方法苦苦支撑，本文分享了一些简单的小技巧方便回顾和二次利用。</p><blockquote><p>基于 bash find 命令执行 log 日志备份和清理日志简单实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 07 月 29 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/find/">https://wsgzao.github.io/post/find/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://linux.die.net/man/1/find" target="_blank" rel="noopener">find</a></p><hr><h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><p>find - search for files in a directory hierarchy</p><p><a href="https://linux.die.net/man/1/find" target="_blank" rel="noopener">https://linux.die.net/man/1/find</a></p><p>find 命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则 find 命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。</p><p><a href="https://man.linuxde.net/find" target="_blank" rel="noopener">https://man.linuxde.net/find</a></p><h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><blockquote><p>log archive</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line"></span><br><span class="line"><span class="comment"># For details see man 4 crontabs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Example of job definition:</span></span><br><span class="line"><span class="comment"># .---------------- minute (0 - 59)</span></span><br><span class="line"><span class="comment"># |  .------------- hour (0 - 23)</span></span><br><span class="line"><span class="comment"># |  |  .---------- day of month (1 - 31)</span></span><br><span class="line"><span class="comment"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span></span><br><span class="line"><span class="comment"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span></span><br><span class="line"><span class="comment"># |  |  |  |  |</span></span><br><span class="line"><span class="comment"># *  *  *  *  * user-name  command to be executed</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#zip</span></span><br><span class="line"><span class="comment">#15 3 * * * root cd /opt/sa_scripts/archive_from_date &amp;&amp; bash run.sh   /data/gop/live/primary/gop 2</span></span><br><span class="line">15 3 * * * root bash /opt/sa_scripts/archive_from_date/one_run_2d.sh</span><br></pre></td></tr></table></figure><blockquote><p>log backup and cleanup</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/scripts</span><br><span class="line">./check_original_log.sh 2019-05</span><br><span class="line">./move_backup.sh 2019-05</span><br><span class="line">./check_backup_log.sh 2019-05</span><br><span class="line">nohup sh rsync_backup_10-71-12-61.sh &gt; <span class="built_in">log</span>/2019-04.rsync.out 2&gt;&amp;1 &amp;</span><br><span class="line">nohup sh rsync_backup_10-71-14-132.sh &gt; <span class="built_in">log</span>/2019-05.rsync.out 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h2 id="log-archive"><a href="#log-archive" class="headerlink" title="log archive"></a>log archive</h2><blockquote><p>archive_from_date.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#to compress all files like:</span></span><br><span class="line"><span class="comment">#auth_data-2017-01-11_00000</span></span><br><span class="line"><span class="comment">#auth_data-2017-01-11_00001</span></span><br><span class="line"><span class="comment">#auth_data-2017-01-11_00002</span></span><br><span class="line"><span class="comment">#auth_data-2017-01-11_00003</span></span><br><span class="line"><span class="comment">#auth_data-2017-01-12_00000</span></span><br><span class="line"><span class="comment">#auth_data-2017-01-12_00001</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#by day till the specified date</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$#</span>"</span> -lt 2 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> path archive_days [trailing_digit]"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">FILE_PATH=<span class="variable">$1</span></span><br><span class="line">ARCHIVE_DAYS=<span class="variable">$2</span></span><br><span class="line"><span class="comment">#seems no need traling digit param here</span></span><br><span class="line">TRAILING_DIGIT=<span class="variable">$3</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$&#123;TRAILING_DIGIT//&#125;</span>"</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">TRAILING_DIGIT=6</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">start_date=<span class="string">"2017-01-01"</span></span><br><span class="line"></span><br><span class="line">end_date=`date`</span><br><span class="line">end_date=`date -d -<span class="variable">$&#123;ARCHIVE_DAYS&#125;</span>days +%Y-%m-%d`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Scanning from <span class="variable">$start_date</span> to <span class="variable">$end_date</span> (not inclusive)"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"=================================="</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$end_date</span>"</span> &lt; <span class="string">"<span class="variable">$start_date</span>"</span> ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Invalid end date: <span class="variable">$end_date</span>,it should be later than start date: <span class="variable">$&#123;start_date&#125;</span>. Exit..."</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">RESULT_PATH=/tmp/log_archive</span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$RESULT_PATH</span>"</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">mkdir -p <span class="variable">$RESULT_PATH</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$FILE_PATH</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [ <span class="string">"<span class="variable">$start_date</span>"</span> != <span class="string">"<span class="variable">$end_date</span>"</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> ls *<span class="variable">$&#123;start_date&#125;</span>*[0-9] 1&gt;/dev/null 2&gt;&amp;1</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Compressing: <span class="variable">$start_date</span>"</span></span><br><span class="line">first_file=`ls *<span class="variable">$&#123;start_date&#125;</span>*[0-9]|head -1`</span><br><span class="line">file_name=<span class="variable">$&#123;first_file%_*&#125;</span></span><br><span class="line">tar cvzf <span class="variable">$&#123;file_name&#125;</span>.tgz <span class="variable">$&#123;file_name&#125;</span>*[0-9]</span><br><span class="line"></span><br><span class="line"><span class="comment">##Case 1: compare tar size with origin, uncomment if needed</span></span><br><span class="line"><span class="comment">#original_size=`ls -l *$&#123;start_date&#125;*[0-9]|awk '&#123;sum+=$5&#125; END &#123;print sum&#125;'`</span></span><br><span class="line"><span class="comment">#weighted_size=$((original_size/20))</span></span><br><span class="line"><span class="comment">#tar_size=`ls -l $&#123;file_name&#125;.tgz|awk '&#123;print $5&#125;'`</span></span><br><span class="line"><span class="comment">#echo $tar_size,$weighted_size</span></span><br><span class="line"><span class="comment">#if (( $tar_size &lt; $weighted_size ))</span></span><br><span class="line"><span class="comment">#then</span></span><br><span class="line"><span class="comment">#echo "tar size: $&#123;tar_size&#125;; weighted size:$&#123;weighted_size&#125;"</span></span><br><span class="line"><span class="comment">#echo "tar size too small; not deleting origin"</span></span><br><span class="line"><span class="comment">#echo "`pwd`: $file_name" &gt;&gt;/opt/sa_scripts/archive/result</span></span><br><span class="line"><span class="comment">#else</span></span><br><span class="line"><span class="comment">#echo "Done.Deleting origin."</span></span><br><span class="line"><span class="comment">#rm $&#123;file_name&#125;*[0-9]</span></span><br><span class="line"><span class="comment">#fi</span></span><br><span class="line"><span class="comment">##End of Case 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##############</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Case 2, compare tar size with 0</span></span><br><span class="line">tar_size=`ls -l <span class="variable">$&#123;file_name&#125;</span>.tgz|awk <span class="string">'&#123;print $5&#125;'</span>`</span><br><span class="line"><span class="keyword">if</span> (( <span class="variable">$tar_size</span> &gt; 0 ))</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Done.Deleting origin."</span></span><br><span class="line">rm <span class="variable">$&#123;file_name&#125;</span>*[0-9]</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"tar file size is ZERO!"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"`pwd`: <span class="variable">$file_name</span>"</span> &gt;&gt;<span class="variable">$RESULT_PATH</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#End of Case 2</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">start_date=$(date -I -d <span class="string">"<span class="variable">$start_date</span> +1day"</span>)</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>archive_from_day.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># bash one_day.sh /data/gop/live/primary/gop 2017-01-11</span></span><br><span class="line"></span><br><span class="line">FILE_PATH=<span class="variable">$1</span></span><br><span class="line">ARCHIVE_DAYS=<span class="variable">$2</span></span><br><span class="line"></span><br><span class="line">start_date=<span class="variable">$ARCHIVE_DAYS</span></span><br><span class="line"></span><br><span class="line">end_date=<span class="variable">$ARCHIVE_DAYS</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Scanning from <span class="variable">$start_date</span> to <span class="variable">$end_date</span> (not inclusive)"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"=================================="</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RESULT_PATH=/tmp/log_archive</span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$RESULT_PATH</span>"</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">mkdir -p <span class="variable">$RESULT_PATH</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$FILE_PATH</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ls *<span class="variable">$&#123;start_date&#125;</span>*[0-9] 1&gt;/dev/null 2&gt;&amp;1</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Compressing: <span class="variable">$start_date</span>"</span></span><br><span class="line">first_file=`ls *<span class="variable">$&#123;start_date&#125;</span>*[0-9]|head -1`</span><br><span class="line">file_name=<span class="variable">$&#123;first_file%_*&#125;</span></span><br><span class="line">tar cvzf <span class="variable">$&#123;file_name&#125;</span>.tgz <span class="variable">$&#123;file_name&#125;</span>*[0-9]</span><br><span class="line"><span class="comment">#Case 2, compare tar size with 0</span></span><br><span class="line">tar_size=`ls -l <span class="variable">$&#123;file_name&#125;</span>.tgz|awk <span class="string">'&#123;print $5&#125;'</span>`</span><br><span class="line"><span class="keyword">if</span> (( <span class="variable">$tar_size</span> &gt; 0 ))</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Done.Deleting origin."</span></span><br><span class="line">rm <span class="variable">$&#123;file_name&#125;</span>*[0-9]</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"tar file size is ZERO!"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"`pwd`: <span class="variable">$file_name</span>"</span> &gt;&gt;<span class="variable">$RESULT_PATH</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#End of Case 2</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><blockquote><p>run.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">PARENT_PATH=<span class="variable">$1</span></span><br><span class="line">ARCHIVE_DAY=<span class="variable">$2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$#</span>"</span> -ne 2 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> parent_path archive_day"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> folder <span class="keyword">in</span> $(find <span class="variable">$PARENT_PATH</span> -<span class="built_in">type</span> d -links 2)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"processing:<span class="variable">$&#123;folder&#125;</span>..."</span></span><br><span class="line">./archive_from_date.sh <span class="variable">$folder</span> <span class="variable">$ARCHIVE_DAY</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>one_run_2d.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">end_date=`date -d -2days +%Y-%m-%d`</span><br><span class="line"></span><br><span class="line">nohup bash /opt/sa_scripts/archive_from_date/one_run.sh /data/gop/live/primary/gop <span class="variable">$end_date</span> &gt; /opt/sa_scripts/archive_from_date/logs/<span class="variable">$end_date</span>.<span class="built_in">log</span> 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><blockquote><p>one_run.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">PARENT_PATH=<span class="variable">$1</span></span><br><span class="line">ARCHIVE_DAY=<span class="variable">$2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$#</span>"</span> -ne 2 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> parent_path archive_day"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> folder <span class="keyword">in</span> $(find <span class="variable">$PARENT_PATH</span> -<span class="built_in">type</span> d -links 2)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"processing:<span class="variable">$&#123;folder&#125;</span>..."</span></span><br><span class="line">/opt/sa_scripts/archive_from_date/day.sh <span class="variable">$folder</span> <span class="variable">$ARCHIVE_DAY</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>log example</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">total 2197444</span><br><span class="line">-rw-r--r-- 1 root root 35386495 Jun  3 21:20 gop-live-point_txn_aggregator-data-2019-06-01.tgz</span><br><span class="line">-rw-r--r-- 1 root root 33273034 Jun  4 20:37 gop-live-point_txn_aggregator-data-2019-06-02.tgz</span><br><span class="line">-rw-r--r-- 1 root root 33390884 Jun  5 20:23 gop-live-point_txn_aggregator-data-2019-06-03.tgz</span><br><span class="line">-rw-r--r-- 1 root root 35553038 Jun  6 20:18 gop-live-point_txn_aggregator-data-2019-06-04.tgz</span><br><span class="line">-rw-r--r-- 1 root root 35081679 Jun  7 19:16 gop-live-point_txn_aggregator-data-2019-06-05.tgz</span><br><span class="line">-rw-r--r-- 1 root root 35397705 Jun  8 19:17 gop-live-point_txn_aggregator-data-2019-06-06.tgz</span><br><span class="line">-rw-r--r-- 1 root root 36039754 Jun  9 18:55 gop-live-point_txn_aggregator-data-2019-06-07.tgz</span><br><span class="line">-rw-r--r-- 1 root root 38596404 Jun 10 20:22 gop-live-point_txn_aggregator-data-2019-06-08.tgz</span><br><span class="line">-rw-r--r-- 1 root root 38048982 Jun 11 20:26 gop-live-point_txn_aggregator-data-2019-06-09.tgz</span><br><span class="line">-rw-r--r-- 1 root root 33026017 Jun 12 19:16 gop-live-point_txn_aggregator-data-2019-06-10.tgz</span><br><span class="line">-rw-r--r-- 1 root root 29198108 Jun 13 19:56 gop-live-point_txn_aggregator-data-2019-06-11.tgz</span><br><span class="line">-rw-r--r-- 1 root root 25771109 Jun 14 19:19 gop-live-point_txn_aggregator-data-2019-06-12.tgz</span><br><span class="line">-rw-r--r-- 1 root root 26092930 Jun 15 19:09 gop-live-point_txn_aggregator-data-2019-06-13.tgz</span><br><span class="line">-rw-r--r-- 1 root root 35349519 Jun 16 19:13 gop-live-point_txn_aggregator-data-2019-06-14.tgz</span><br><span class="line">-rw-r--r-- 1 root root 31780817 Jun 17 21:27 gop-live-point_txn_aggregator-data-2019-06-15.tgz</span><br><span class="line">-rw-r--r-- 1 root root 36549729 Jun 18 21:57 gop-live-point_txn_aggregator-data-2019-06-16.tgz</span><br><span class="line">-rw-r--r-- 1 root root 26007332 Jun 19 19:58 gop-live-point_txn_aggregator-data-2019-06-17.tgz</span><br><span class="line">-rw-r--r-- 1 root root 25114440 Jun 20 19:20 gop-live-point_txn_aggregator-data-2019-06-18.tgz</span><br><span class="line">-rw-r--r-- 1 root root 22494565 Jun 21 19:25 gop-live-point_txn_aggregator-data-2019-06-19.tgz</span><br><span class="line">-rw-r--r-- 1 root root 25132986 Jun 22 19:19 gop-live-point_txn_aggregator-data-2019-06-20.tgz</span><br><span class="line">-rw-r--r-- 1 root root 30698833 Jun 23 20:08 gop-live-point_txn_aggregator-data-2019-06-21.tgz</span><br><span class="line">-rw-r--r-- 1 root root 38639032 Jun 24 21:12 gop-live-point_txn_aggregator-data-2019-06-22.tgz</span><br><span class="line">-rw-r--r-- 1 root root 31422932 Jun 25 21:27 gop-live-point_txn_aggregator-data-2019-06-23.tgz</span><br><span class="line">-rw-r--r-- 1 root root 25262186 Jun 26 19:57 gop-live-point_txn_aggregator-data-2019-06-24.tgz</span><br><span class="line">-rw-r--r-- 1 root root 25402079 Jun 27 19:30 gop-live-point_txn_aggregator-data-2019-06-25.tgz</span><br><span class="line">-rw-r--r-- 1 root root 22227072 Jun 28 17:09 gop-live-point_txn_aggregator-data-2019-06-26.tgz</span><br><span class="line">-rw-r--r-- 1 root root 26174268 Jun 29 19:59 gop-live-point_txn_aggregator-data-2019-06-27.tgz</span><br><span class="line">-rw-r--r-- 1 root root 27484303 Jun 30 20:43 gop-live-point_txn_aggregator-data-2019-06-28.tgz</span><br><span class="line">-rw-r--r-- 1 root root 25607704 Jul  1 21:37 gop-live-point_txn_aggregator-data-2019-06-29.tgz</span><br><span class="line">-rw-r--r-- 1 root root 23545276 Jul  2 21:34 gop-live-point_txn_aggregator-data-2019-06-30.tgz</span><br><span class="line">-rw-r--r-- 1 root root 28956480 Jul  3 21:03 gop-live-point_txn_aggregator-data-2019-07-01.tgz</span><br><span class="line">-rw-r--r-- 1 root root 27250475 Jul  4 20:21 gop-live-point_txn_aggregator-data-2019-07-02.tgz</span><br><span class="line">-rw-r--r-- 1 root root 26443417 Jul  5 20:56 gop-live-point_txn_aggregator-data-2019-07-03.tgz</span><br><span class="line">-rw-r--r-- 1 root root 23445274 Jul  6 20:28 gop-live-point_txn_aggregator-data-2019-07-04.tgz</span><br><span class="line">-rw-r--r-- 1 root root 35914567 Jul  7 21:01 gop-live-point_txn_aggregator-data-2019-07-05.tgz</span><br><span class="line">-rw-r--r-- 1 root root 42759699 Jul  8 21:46 gop-live-point_txn_aggregator-data-2019-07-06.tgz</span><br><span class="line">-rw-r--r-- 1 root root 41146298 Jul  9 23:28 gop-live-point_txn_aggregator-data-2019-07-07.tgz</span><br><span class="line">-rw-r--r-- 1 root root 30890861 Jul 10 21:50 gop-live-point_txn_aggregator-data-2019-07-08.tgz</span><br><span class="line">-rw-r--r-- 1 root root 29505781 Jul 11 22:16 gop-live-point_txn_aggregator-data-2019-07-09.tgz</span><br><span class="line">-rw-r--r-- 1 root root 25130694 Jul 12 21:04 gop-live-point_txn_aggregator-data-2019-07-10.tgz</span><br><span class="line">-rw-r--r-- 1 root root 30355468 Jul 13 21:44 gop-live-point_txn_aggregator-data-2019-07-11.tgz</span><br><span class="line">-rw-r--r-- 1 root root 32142222 Jul 14 22:47 gop-live-point_txn_aggregator-data-2019-07-12.tgz</span><br><span class="line">-rw-r--r-- 1 root root 30846192 Jul 15 22:54 gop-live-point_txn_aggregator-data-2019-07-13.tgz</span><br><span class="line">-rw-r--r-- 1 root root 32435568 Jul 17 00:21 gop-live-point_txn_aggregator-data-2019-07-14.tgz</span><br><span class="line">-rw-r--r-- 1 root root 24601862 Jul 17 23:54 gop-live-point_txn_aggregator-data-2019-07-15.tgz</span><br><span class="line">-rw-r--r-- 1 root root 26708856 Jul 19 00:54 gop-live-point_txn_aggregator-data-2019-07-16.tgz</span><br><span class="line">-rw-r--r-- 1 root root 21915660 Jul 19 23:23 gop-live-point_txn_aggregator-data-2019-07-17.tgz</span><br><span class="line">-rw-r--r-- 1 root root 19324816 Jul 21 00:01 gop-live-point_txn_aggregator-data-2019-07-18.tgz</span><br><span class="line">-rw-r--r-- 1 root root 29234368 Jul 22 00:47 gop-live-point_txn_aggregator-data-2019-07-19.tgz</span><br><span class="line">-rw-r--r-- 1 root root 32138171 Jul 23 02:44 gop-live-point_txn_aggregator-data-2019-07-20.tgz</span><br><span class="line">-rw-r--r-- 1 root root 31359175 Jul 24 04:05 gop-live-point_txn_aggregator-data-2019-07-21.tgz</span><br><span class="line">-rw-r--r-- 1 root root 26123344 Jul 24 23:36 gop-live-point_txn_aggregator-data-2019-07-22.tgz</span><br><span class="line">-rw-r--r-- 1 root root 25337107 Jul 26 00:10 gop-live-point_txn_aggregator-data-2019-07-23.tgz</span><br><span class="line">-rw-r--r-- 1 root root 23113614 Jul 26 23:52 gop-live-point_txn_aggregator-data-2019-07-24.tgz</span><br><span class="line">-rw-r--r-- 1 root root 22578291 Jul 28 00:37 gop-live-point_txn_aggregator-data-2019-07-25.tgz</span><br><span class="line">-rw-r--r-- 1 root root 28572628 Jul 29 01:21 gop-live-point_txn_aggregator-data-2019-07-26.tgz</span><br><span class="line">-rw-r--r-- 1 root root 29820440 Jul 30 01:18 gop-live-point_txn_aggregator-data-2019-07-27.tgz</span><br><span class="line">-rw-r--r-- 1 root root 25214160 Jul 31 01:26 gop-live-point_txn_aggregator-data-2019-07-28.tgz</span><br><span class="line">-rw-r--r-- 1 root root 20978337 Aug  1 00:27 gop-live-point_txn_aggregator-data-2019-07-29.tgz</span><br><span class="line">-rw-r--r-- 1 root root 22192620 Aug  1 23:12 gop-live-point_txn_aggregator-data-2019-07-30.tgz</span><br><span class="line">-rw-r--r-- 1 root root  6329205 Jul 31 00:59 gop-live-point_txn_aggregator-data-2019-07-31_00000</span><br><span class="line">-rw-r--r-- 1 root root  5786176 Jul 31 02:00 gop-live-point_txn_aggregator-data-2019-07-31_00001</span><br><span class="line">-rw-r--r-- 1 root root  5451181 Jul 31 03:00 gop-live-point_txn_aggregator-data-2019-07-31_00002</span><br><span class="line">-rw-r--r-- 1 root root  5621760 Jul 31 04:00 gop-live-point_txn_aggregator-data-2019-07-31_00003</span><br><span class="line">-rw-r--r-- 1 root root  5820921 Jul 31 05:00 gop-live-point_txn_aggregator-data-2019-07-31_00004</span><br><span class="line">-rw-r--r-- 1 root root  6088472 Jul 31 05:59 gop-live-point_txn_aggregator-data-2019-07-31_00005</span><br><span class="line">-rw-r--r-- 1 root root  6048663 Jul 31 06:59 gop-live-point_txn_aggregator-data-2019-07-31_00006</span><br><span class="line">-rw-r--r-- 1 root root  6434107 Jul 31 08:00 gop-live-point_txn_aggregator-data-2019-07-31_00007</span><br><span class="line">-rw-r--r-- 1 root root  6937321 Jul 31 09:00 gop-live-point_txn_aggregator-data-2019-07-31_00008</span><br><span class="line">-rw-r--r-- 1 root root  6717315 Jul 31 09:59 gop-live-point_txn_aggregator-data-2019-07-31_00009</span><br><span class="line">-rw-r--r-- 1 root root  6667836 Jul 31 10:59 gop-live-point_txn_aggregator-data-2019-07-31_00010</span><br><span class="line">-rw-r--r-- 1 root root  6559363 Jul 31 12:00 gop-live-point_txn_aggregator-data-2019-07-31_00011</span><br><span class="line">-rw-r--r-- 1 root root  6107832 Jul 31 12:59 gop-live-point_txn_aggregator-data-2019-07-31_00012</span><br><span class="line">-rw-r--r-- 1 root root  6323896 Jul 31 13:59 gop-live-point_txn_aggregator-data-2019-07-31_00013</span><br><span class="line">-rw-r--r-- 1 root root  6389052 Jul 31 15:00 gop-live-point_txn_aggregator-data-2019-07-31_00014</span><br><span class="line">-rw-r--r-- 1 root root  6504740 Jul 31 16:00 gop-live-point_txn_aggregator-data-2019-07-31_00015</span><br><span class="line">-rw-r--r-- 1 root root  6796378 Jul 31 17:00 gop-live-point_txn_aggregator-data-2019-07-31_00016</span><br><span class="line">-rw-r--r-- 1 root root  7878303 Jul 31 18:00 gop-live-point_txn_aggregator-data-2019-07-31_00017</span><br><span class="line">-rw-r--r-- 1 root root  8900771 Jul 31 19:00 gop-live-point_txn_aggregator-data-2019-07-31_00018</span><br><span class="line">-rw-r--r-- 1 root root  9379681 Jul 31 20:00 gop-live-point_txn_aggregator-data-2019-07-31_00019</span><br><span class="line">-rw-r--r-- 1 root root 10435828 Jul 31 21:00 gop-live-point_txn_aggregator-data-2019-07-31_00020</span><br><span class="line">-rw-r--r-- 1 root root 10127803 Jul 31 22:00 gop-live-point_txn_aggregator-data-2019-07-31_00021</span><br><span class="line">-rw-r--r-- 1 root root  8788741 Jul 31 22:59 gop-live-point_txn_aggregator-data-2019-07-31_00022</span><br><span class="line">-rw-r--r-- 1 root root  7747234 Jul 31 23:59 gop-live-point_txn_aggregator-data-2019-07-31_00023</span><br><span class="line">-rw-r--r-- 1 root root  6983387 Aug  1 00:59 gop-live-point_txn_aggregator-data-2019-08-01_00000</span><br><span class="line">-rw-r--r-- 1 root root  6572435 Aug  1 02:00 gop-live-point_txn_aggregator-data-2019-08-01_00001</span><br><span class="line">-rw-r--r-- 1 root root  5959884 Aug  1 03:00 gop-live-point_txn_aggregator-data-2019-08-01_00002</span><br><span class="line">-rw-r--r-- 1 root root  5834298 Aug  1 04:00 gop-live-point_txn_aggregator-data-2019-08-01_00003</span><br><span class="line">-rw-r--r-- 1 root root  6008950 Aug  1 04:59 gop-live-point_txn_aggregator-data-2019-08-01_00004</span><br><span class="line">-rw-r--r-- 1 root root  6614511 Aug  1 06:00 gop-live-point_txn_aggregator-data-2019-08-01_00005</span><br><span class="line">-rw-r--r-- 1 root root  6934464 Aug  1 07:00 gop-live-point_txn_aggregator-data-2019-08-01_00006</span><br><span class="line">-rw-r--r-- 1 root root  7501841 Aug  1 08:00 gop-live-point_txn_aggregator-data-2019-08-01_00007</span><br><span class="line">-rw-r--r-- 1 root root  8018389 Aug  1 09:00 gop-live-point_txn_aggregator-data-2019-08-01_00008</span><br><span class="line">-rw-r--r-- 1 root root  8113113 Aug  1 10:00 gop-live-point_txn_aggregator-data-2019-08-01_00009</span><br><span class="line">-rw-r--r-- 1 root root  8247397 Aug  1 11:00 gop-live-point_txn_aggregator-data-2019-08-01_00010</span><br><span class="line">-rw-r--r-- 1 root root  9334051 Aug  1 12:00 gop-live-point_txn_aggregator-data-2019-08-01_00011</span><br><span class="line">-rw-r--r-- 1 root root  8284898 Aug  1 12:59 gop-live-point_txn_aggregator-data-2019-08-01_00012</span><br><span class="line">-rw-r--r-- 1 root root  9218796 Aug  1 14:00 gop-live-point_txn_aggregator-data-2019-08-01_00013</span><br><span class="line">-rw-r--r-- 1 root root  7875013 Aug  1 15:00 gop-live-point_txn_aggregator-data-2019-08-01_00014</span><br><span class="line">-rw-r--r-- 1 root root  4420827 Aug  1 16:00 gop-live-point_txn_aggregator-data-2019-08-01_00015</span><br><span class="line">-rw-r--r-- 1 root root  7999875 Aug  1 16:59 gop-live-point_txn_aggregator-data-2019-08-01_00016</span><br><span class="line">-rw-r--r-- 1 root root  9480688 Aug  1 18:00 gop-live-point_txn_aggregator-data-2019-08-01_00017</span><br><span class="line">-rw-r--r-- 1 root root 10069991 Aug  1 19:00 gop-live-point_txn_aggregator-data-2019-08-01_00018</span><br><span class="line">-rw-r--r-- 1 root root 11397317 Aug  1 20:00 gop-live-point_txn_aggregator-data-2019-08-01_00019</span><br><span class="line">-rw-r--r-- 1 root root 12597957 Aug  1 21:00 gop-live-point_txn_aggregator-data-2019-08-01_00020</span><br><span class="line">-rw-r--r-- 1 root root 11541451 Aug  1 22:00 gop-live-point_txn_aggregator-data-2019-08-01_00021</span><br><span class="line">-rw-r--r-- 1 root root 10813577 Aug  1 23:00 gop-live-point_txn_aggregator-data-2019-08-01_00022</span><br><span class="line">-rw-r--r-- 1 root root  9507499 Aug  2 00:00 gop-live-point_txn_aggregator-data-2019-08-01_00023</span><br><span class="line">-rw-r--r-- 1 root root  8110763 Aug  2 01:00 gop-live-point_txn_aggregator-data-2019-08-02_00000</span><br><span class="line">-rw-r--r-- 1 root root  7238339 Aug  2 02:00 gop-live-point_txn_aggregator-data-2019-08-02_00001</span><br><span class="line">-rw-r--r-- 1 root root  6577030 Aug  2 02:59 gop-live-point_txn_aggregator-data-2019-08-02_00002</span><br><span class="line">-rw-r--r-- 1 root root  6586196 Aug  2 04:00 gop-live-point_txn_aggregator-data-2019-08-02_00003</span><br><span class="line">-rw-r--r-- 1 root root  6883540 Aug  2 05:00 gop-live-point_txn_aggregator-data-2019-08-02_00004</span><br><span class="line">-rw-r--r-- 1 root root  7172237 Aug  2 06:00 gop-live-point_txn_aggregator-data-2019-08-02_00005</span><br><span class="line">-rw-r--r-- 1 root root  7293336 Aug  2 07:00 gop-live-point_txn_aggregator-data-2019-08-02_00006</span><br><span class="line">-rw-r--r-- 1 root root  7728992 Aug  2 08:00 gop-live-point_txn_aggregator-data-2019-08-02_00007</span><br><span class="line">-rw-r--r-- 1 root root  8154425 Aug  2 09:00 gop-live-point_txn_aggregator-data-2019-08-02_00008</span><br><span class="line">-rw-r--r-- 1 root root  8036346 Aug  2 09:59 gop-live-point_txn_aggregator-data-2019-08-02_00009</span><br><span class="line">-rw-r--r-- 1 root root  7940669 Aug  2 11:00 gop-live-point_txn_aggregator-data-2019-08-02_00010</span><br><span class="line">-rw-r--r-- 1 root root  7901900 Aug  2 12:00 gop-live-point_txn_aggregator-data-2019-08-02_00011</span><br><span class="line">-rw-r--r-- 1 root root  8501400 Aug  2 13:00 gop-live-point_txn_aggregator-data-2019-08-02_00012</span><br><span class="line">-rw-r--r-- 1 root root  8024730 Aug  2 13:59 gop-live-point_txn_aggregator-data-2019-08-02_00013</span><br><span class="line">-rw-r--r-- 1 root root  8413981 Aug  2 14:59 gop-live-point_txn_aggregator-data-2019-08-02_00014</span><br><span class="line">-rw-r--r-- 1 root root  5899646 Aug  2 15:50 gop-live-point_txn_aggregator-data-2019-08-02_00015</span><br><span class="line">lrwxrwxrwx 1 root root       51 Aug  2 15:00 gop-live-point_txn_aggregator-data_current -&gt; gop-live-point_txn_aggregator-data-2019-08-02_00015</span><br></pre></td></tr></table></figure><h2 id="backup-and-rsync-scripts"><a href="#backup-and-rsync-scripts" class="headerlink" title="backup and rsync scripts"></a>backup and rsync scripts</h2><blockquote><p>check_original_log.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">var_date=<span class="variable">$1</span></span><br><span class="line">var_src=<span class="string">"/data/gop/live/primary/gop"</span></span><br><span class="line">find <span class="variable">$&#123;var_src&#125;</span> | grep -i <span class="variable">$&#123;var_date&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>check_backup_log.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">var_date=<span class="variable">$1</span></span><br><span class="line">var_src=<span class="string">"/data/backup/"</span></span><br><span class="line">find <span class="variable">$&#123;var_src&#125;</span> | grep -i <span class="variable">$&#123;var_date&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>copy_dir_to_backup.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">var_path=<span class="string">"/data/gop/live/primary/gop/"</span></span><br><span class="line">var_str=<span class="string">"/data/backup/"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rsync copy all directories </span></span><br><span class="line"><span class="comment"># rsync -anv --include='*/' --exclude='*' $&#123;var_path&#125; $&#123;var_str&#125;</span></span><br><span class="line">rsync -a --include=<span class="string">'*/'</span> --exclude=<span class="string">'*'</span> <span class="variable">$&#123;var_path&#125;</span> <span class="variable">$&#123;var_str&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>move_backup.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">var_date=\<span class="variable">$1</span></span><br><span class="line">var_path=<span class="string">"/data/gop/live/primary/gop"</span></span><br><span class="line">var_str=<span class="string">"/data/backup"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># analyze log</span></span><br><span class="line"></span><br><span class="line">find <span class="variable">$&#123;var_path&#125;</span> | grep -i <span class="variable">$&#123;var_date&#125;</span> &gt; <span class="built_in">log</span>/<span class="variable">$&#123;var_date&#125;</span>.ori.out</span><br><span class="line">cp <span class="built_in">log</span>/<span class="variable">$&#123;var_date&#125;</span>.ori.out <span class="built_in">log</span>/<span class="variable">$&#123;var_date&#125;</span>.mod.out</span><br><span class="line">sed -i <span class="string">"s:/data/gop/live/primary/gop:<span class="variable">$&#123;var_str&#125;</span>:g"</span> <span class="built_in">log</span>/\<span class="variable">$&#123;var_date&#125;</span>.mod.out</span><br><span class="line"></span><br><span class="line"><span class="comment"># merge move action</span></span><br><span class="line"></span><br><span class="line">paste -d <span class="string">"|"</span> <span class="built_in">log</span>/<span class="variable">$&#123;var_date&#125;</span>.ori.out <span class="built_in">log</span>/<span class="variable">$&#123;var_date&#125;</span>.mod.out &gt; <span class="built_in">log</span>/\<span class="variable">$&#123;var_date&#125;</span>.out</span><br><span class="line"></span><br><span class="line"><span class="comment"># move files</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `cat <span class="built_in">log</span>/<span class="variable">$&#123;var_date&#125;</span>.out`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">var_a=`<span class="built_in">echo</span> <span class="variable">$&#123;i&#125;</span> | cut -f1 -d<span class="string">"|"</span>`</span><br><span class="line">var_b=`<span class="built_in">echo</span> <span class="variable">$&#123;i&#125;</span> | cut -f2 -d<span class="string">"|"</span>`</span><br><span class="line">mv <span class="variable">$&#123;var_a&#125;</span> <span class="variable">$&#123;var_b&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>rsync_backup.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">var_src=<span class="string">"/data/backup/"</span></span><br><span class="line">var_des=<span class="string">"rsync://10.71.12.61:873/backup/"</span></span><br><span class="line">rsync -aP <span class="variable">$&#123;var_src&#125;</span> <span class="variable">$&#123;var_des&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>clean_backup_log.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">var_date=<span class="variable">$1</span></span><br><span class="line">var_src=<span class="string">"/data/backup/"</span></span><br><span class="line">find <span class="variable">$&#123;var_src&#125;</span> | grep -i <span class="variable">$&#123;var_date&#125;</span> | xargs rm -f</span><br></pre></td></tr></table></figure><blockquote><p>log out samples</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"># 2019-05.ori.out</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-25.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-27.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-23.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-30.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-31.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-28.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-24.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-26.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-29.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-31.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-29.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-23.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-30.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-27.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-28.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-24.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-25.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-26.tgz</span><br><span class="line"></span><br><span class="line"># 2019-05.mod.out</span><br><span class="line">/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-25.tgz</span><br><span class="line">/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-27.tgz</span><br><span class="line">/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-23.tgz</span><br><span class="line">/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-30.tgz</span><br><span class="line">/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-31.tgz</span><br><span class="line">/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-28.tgz</span><br><span class="line">/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-24.tgz</span><br><span class="line">/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-26.tgz</span><br><span class="line">/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-29.tgz</span><br><span class="line">/data/backup/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-31.tgz</span><br><span class="line">/data/backup/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-29.tgz</span><br><span class="line">/data/backup/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-23.tgz</span><br><span class="line">/data/backup/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-30.tgz</span><br><span class="line">/data/backup/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-27.tgz</span><br><span class="line">/data/backup/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-28.tgz</span><br><span class="line">/data/backup/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-24.tgz</span><br><span class="line">/data/backup/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-25.tgz</span><br><span class="line">/data/backup/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-26.tgz</span><br><span class="line"></span><br><span class="line"># 2019-05.out</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-25.tgz|/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-25.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-27.tgz|/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-27.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-23.tgz|/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-23.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-30.tgz|/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-30.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-31.tgz|/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-31.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-28.tgz|/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-28.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-24.tgz|/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-24.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-26.tgz|/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-26.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-29.tgz|/data/backup/gop-live-gop_huawei_data_server-daemon/gop-live-gop_huawei_data_server-daemon-2019-05-29.tgz</span><br><span class="line">/data/gop/live/primary/gop/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-31.tgz|/data/backup/gop-live-gop_line_data_server-daemon/gop-live-gop_line_data_server-daemon-2019-05-31.tgz</span><br><span class="line"></span><br><span class="line"># 2019-05.rsync.out</span><br><span class="line">nohup: ignoring input</span><br><span class="line">sending incremental file list</span><br><span class="line">./</span><br><span class="line">gop-live-account.garena.com-access/</span><br><span class="line">gop-live-account.garena.com-access/gop-live-account.garena.com-access-2019-05-01.tgz</span><br><span class="line">^M         32,768   0%    0.00kB/s    0:00:00  ^M     75,551,185 100%  188.53MB/s    0:00:00 (xfr#1, ir-chk=1053/1441)</span><br><span class="line">gop-live-account.garena.com-access/gop-live-account.garena.com-access-2019-05-02.tgz</span><br><span class="line">^M         32,768   0%   81.01kB/s    0:15:24  ^M     74,896,153 100%   82.01MB/s    0:00:00 (xfr#2, ir-chk=1052/1441)</span><br></pre></td></tr></table></figure><h2 id="log-cleanup-exclude-list"><a href="#log-cleanup-exclude-list" class="headerlink" title="log cleanup exclude list"></a>log cleanup exclude list</h2><p>/data/nc_backup</p><p>gop-live-tcp_server<br>gop-live-sso_website<br>gop-live-app_point<br>gop-live-gop_vk_data_server<br>gop-live-gop_huawei_data_server<br>gop-live-gop_line_data_server<br>gop-live-gop_google_data_server<br>gop-live-gop_fb_data_server<br>gop-live-gop_data_server<br>gop-live-general-api_server<br>gop-live-payment_center<br>gop-live-msdk_api<br>gop-live-cron_autofix<br>gop-live-shell_api_server<br>gop-live-api_server<br>gop-staging-payment_center<br>gop-staging-msdk_api</p><blockquote><p>create python script to combine multiple lines</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">data=open(<span class="string">"file"</span>).readlines()</span><br><span class="line"><span class="keyword">for</span> n,line <span class="keyword">in</span> enumerate(data):</span><br><span class="line">    <span class="keyword">if</span> line.startswith(<span class="string">"line"</span>):</span><br><span class="line">       data[n] = <span class="string">"\n"</span>+line.rstrip()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">       data[n]=line.rstrip()</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'|'</span>.join(data))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># simple example</span><br><span class="line">Englist</span><br><span class="line">中文</span><br><span class="line"></span><br><span class="line">Englist | 中文</span><br><span class="line"></span><br><span class="line"># can change line.startwith</span><br><span class="line">line1</span><br><span class="line">text1</span><br><span class="line">text2</span><br><span class="line">text3</span><br><span class="line">line2</span><br><span class="line">something1</span><br><span class="line">something2</span><br><span class="line"></span><br><span class="line">line1|text1|text2|text3|</span><br><span class="line">line2|something1|something2</span><br></pre></td></tr></table></figure><blockquote><p>use find to filter the log</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use find command filter directory</span></span><br><span class="line">find /data/nc_backup -<span class="built_in">type</span> d &gt; log_source</span><br><span class="line">find /data/nc_backup -<span class="built_in">type</span> d | egrep -v <span class="string">"gop-live-tcp_server|gop-live-sso_website|gop-live-app_point|gop-live-gop_vk_data_server|gop-live-gop_huawei_data_server|gop-live-gop_line_data_server|gop-live-gop_google_data_server|gop-live-gop_fb_data_server|gop-live-gop_data_server|gop-live-general-api_server|gop-live-payment_center|gop-live-msdk_api|gop-live-cron_autofix|gop-live-shell_api_server|gop-live-api_server|gop-staging-payment_center|gop-staging-msdk_api"</span> &gt; log_target</span><br><span class="line"><span class="comment"># remove the fist line</span></span><br><span class="line">sed -i <span class="string">'1d'</span> log_source</span><br><span class="line">sed -i <span class="string">'1d'</span> log_target</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      基于bash find命令执行log日志备份和清理日志简单实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>InfluxDB 安装部署</title>
    <link href="https://wsgzao.github.io/post/influxdb/"/>
    <id>https://wsgzao.github.io/post/influxdb/</id>
    <published>2019-07-25T06:59:49.000Z</published>
    <updated>2019-07-25T11:35:43.094Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>InfluxDB 是专为时序数据设计的数据库，能支撑大量的读写负载，是一个高性能的时序数据 datastore。</p><blockquote><p>InfluxDB is the Time Series Database in the TICK Stack</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 07 月 25 日 - 更新 influx 命令使用技巧<br>2019 年 04 月 05 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/influxdb/">https://wsgzao.github.io/post/influxdb/</a></p><p><strong> 扩展阅读 </strong></p><p>InfluxDB - <a href="https://www.influxdata.com/time-series-platform/influxdb/" target="_blank" rel="noopener">https://www.influxdata.com/time-series-platform/influxdb/</a></p><hr><h2 id="InfluxDB-简介"><a href="#InfluxDB-简介" class="headerlink" title="InfluxDB 简介"></a>InfluxDB 简介</h2><blockquote><p>InfluxDB is the Time Series Database in the TICK Stack</p></blockquote><p>InfluxData’s TICK Stack is built around InfluxDB to handle massive amounts of time-stamped information. This time series database provides support for your metrics analysis needs, from DevOps Monitoring, IoT Sensor data, and Real-Time Analytics. Users can adapt their SQL skills with InfluxQL, so they can get up to speed on this time series database.</p><p><img src="https://www.influxdata.com/wp-content/uploads/Tick-Stack-InfluxDB-2.png" alt=""></p><p>默认预留端口:</p><p>8086，HTTP API<br>8088，RPC 端口，用于备份和恢复</p><p>NTP 服务:<br>InfluxDB 使用机器本地时间作为 timestamp，需要机器之间使用 NTP 进行同步；如果没有同步的话，写入的时间序列数据可能会不准确</p><h2 id="InfluxDB-安装"><a href="#InfluxDB-安装" class="headerlink" title="InfluxDB 安装"></a>InfluxDB 安装</h2><p>InfluxDB 里存储的数据被称为时间序列数据, InfluxDB 存储方式跟传统关系型数据库不同的是：传统关系型数据库通过数据库 + 表 + 字段组织数据，InfluxDB 通过指标、标签、字段组织数据，时间戳是默认的索引列，标签跟字段其实就相当于关系型数据库中的字段，只不过标签会被索引，而字段不会。</p><p>Grafana 默认支持的数据源：Graphite，InfluxDB，OpenTSDB，Prometheus，Elasticsearch，CloudWatch<br>Grafana 支持同时绑定多套数据源，根据自己需求管理即可，这里以 InfluxDB 为例。</p><p><a href="https://portal.influxdata.com/downloads" target="_blank" rel="noopener">https://portal.influxdata.com/downloads</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install influxdb</span></span><br><span class="line">cat &gt; /etc/yum.repos.d/influxdb.repo &lt;&lt; <span class="string">'EOF'</span></span><br><span class="line">[influxdb]</span><br><span class="line">name = InfluxDB Repository - RHEL \<span class="variable">$releasever</span></span><br><span class="line">baseurl = https://repos.influxdata.com/rhel/\<span class="variable">$releasever</span>/\<span class="variable">$basearch</span>/stable</span><br><span class="line">enabled = 1</span><br><span class="line">gpgcheck = 1</span><br><span class="line">gpgkey = https://repos.influxdata.com/influxdb.key</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum install influxdb</span></span><br><span class="line">yum install -y influxdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># start and enable influxdb</span></span><br><span class="line">sudo systemctl start influxdb</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> influxdb</span><br><span class="line">sudo systemctl status influxdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过 influx 命令进入 cli 命令行 </span></span><br><span class="line">influx</span><br><span class="line">Connected to http://localhost:8086 version 1.4.2</span><br><span class="line">InfluxDB shell version: 1.4.2</span><br><span class="line">&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看用户 </span></span><br><span class="line">SHOW USERS</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建用户 </span></span><br><span class="line">CREATE USER influx WITH PASSWORD <span class="string">'influx'</span> WITH ALL PRIVILEGES</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看用户 </span></span><br><span class="line">SHOW USERS</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库 </span></span><br><span class="line">CREATE DATABASE <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据库 </span></span><br><span class="line">SHOW DATABASES</span><br><span class="line"></span><br><span class="line"><span class="comment"># Using 数据库 </span></span><br><span class="line">USE <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 插入数据 </span></span><br><span class="line">INSERT cpu,host=192.168.1.1 load=0.1,usage=0.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询所有数据 </span></span><br><span class="line">SELECT * FROM <span class="string">"cpu"</span></span><br><span class="line">SELECT <span class="string">"host"</span>,<span class="string">"load"</span>,<span class="string">"usage"</span> FROM <span class="string">"cpu"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据条件查询 </span></span><br><span class="line">SELECT <span class="string">"host"</span>,<span class="string">"load"</span>,<span class="string">"usage"</span> FROM <span class="string">"cpu"</span> WHERE <span class="string">"host"</span> = <span class="string">'192.168.1.1'</span></span><br><span class="line">SELECT <span class="string">"host"</span>,<span class="string">"load"</span>,<span class="string">"usage"</span> FROM <span class="string">"cpu"</span> WHERE <span class="string">"usage"</span> &gt; 0.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库 </span></span><br><span class="line">CREATE DATABASE <span class="string">"db_name"</span></span><br><span class="line"><span class="comment"># 显示所有数据库 </span></span><br><span class="line">SHOW DATABASES</span><br><span class="line"><span class="comment"># 删除数据库 </span></span><br><span class="line">DROP DATABASE <span class="string">"db_name"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用数据库 </span></span><br><span class="line">USE mydb</span><br><span class="line"><span class="comment"># 显示该数据库中的表 </span></span><br><span class="line">SHOW MEASUREMENTS</span><br><span class="line"><span class="comment"># 删除表 </span></span><br><span class="line">DROP MEASUREMENT <span class="string">"t_name"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 简单查询 </span></span><br><span class="line">SELECT * FROM codis_usage ORDER BY time DESC LIMIT 3</span><br><span class="line"><span class="comment"># 最近 60min 内的数据 </span></span><br><span class="line">SELECT * FROM codis_usage WHERE time &gt;= now() - 60m;</span><br><span class="line"><span class="comment"># 获取最近更新数据，并转换为当前时间 </span></span><br><span class="line">precision rfc3339</span><br><span class="line">select * from codis_usage order by time desc <span class="built_in">limit</span> 10;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询保存策略 </span></span><br><span class="line">show retention policies on codis</span><br><span class="line">name    duration shardGroupDuration replicaN default</span><br><span class="line">----    -------- ------------------ -------- -------</span><br><span class="line">autogen 0s       168h0m0s           1        <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新的 Retention Policies 并设置为默认值 </span></span><br><span class="line"><span class="comment"># duration 保留多少天 </span></span><br><span class="line"><span class="comment"># replication 副本数 </span></span><br><span class="line">create retention policy <span class="string">"rp_14d"</span> ON <span class="string">"codis"</span> duration 14d replication 1 default</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复默认策略（永久保存）</span></span><br><span class="line">alter retention policy <span class="string">"autogen"</span> on <span class="string">"codis"</span> duration 0s replication 1 default</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库 API</span></span><br><span class="line">curl -i -XPOST http://localhost:8086/query --data-urlencode <span class="string">"q=CREATE DATABASE test"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入数据 API</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入单条 </span></span><br><span class="line">curl -i -XPOST http://localhost:8086/write?db=<span class="built_in">test</span> --data-binary <span class="string">"cpu,host=192.168.1.3 load=0.1,usage=0.33"</span></span><br><span class="line">curl -i -XPOST http://localhost:8086/write?db=<span class="built_in">test</span> --data-binary <span class="string">"cpu,host=192.168.1.3 load=0.1,usage=0.33 6666666666666666666"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入多条 </span></span><br><span class="line">curl -i -XPOST http://localhost:8086/write?db=<span class="built_in">test</span> --data-binary <span class="string">"cpu,host=192.168.1.2 load=0.1,usage=0.22 1666666666666666661 </span></span><br><span class="line"><span class="string">cpu,host=192.168.1.3 load=0.1,usage=0.33 1666666666666666661 </span></span><br><span class="line"><span class="string">cpu,host=192.168.1.2 load=0.2,usage=0.22 1666666666666666662 </span></span><br><span class="line"><span class="string">cpu,host=192.168.1.3 load=0.2,usage=0.33 1666666666666666662"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询数据 API</span></span><br><span class="line">curl -G http://localhost:8086/query?db=<span class="built_in">test</span> --data-urlencode <span class="string">"q=SELECT * FROM  \"cpu\""</span></span><br></pre></td></tr></table></figure><h2 id="influx-命令"><a href="#influx-命令" class="headerlink" title="influx 命令"></a>influx 命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-71-12-145 wangao]# influx</span><br><span class="line">Connected to http://localhost:8086 version 1.7.7</span><br><span class="line">InfluxDB shell version: 1.7.7</span><br><span class="line">&gt; help</span><br><span class="line">Usage:</span><br><span class="line">        connect &lt;host:port&gt;   connects to another node specified by host:port</span><br><span class="line">        auth                  prompts for username and password</span><br><span class="line">        pretty                toggles pretty print for the json format</span><br><span class="line">        chunked               turns on chunked responses from server</span><br><span class="line">        chunk size &lt;size&gt;     sets the size of the chunked responses.  Set to 0 to reset to the default chunked size</span><br><span class="line">        use &lt;db_name&gt;         sets current database</span><br><span class="line">        format &lt;format&gt;       specifies the format of the server responses: json, csv, or column</span><br><span class="line">        precision &lt;format&gt;    specifies the format of the timestamp: rfc3339, h, m, s, ms, u or ns</span><br><span class="line">        consistency &lt;level&gt;   sets write consistency level: any, one, quorum, or all</span><br><span class="line">        history               displays command history</span><br><span class="line">        settings              outputs the current settings for the shell</span><br><span class="line">        clear                 clears settings such as database or retention policy.  run &apos;clear&apos; for help</span><br><span class="line">        exit/quit/ctrl+d      quits the influx shell</span><br><span class="line"></span><br><span class="line">        show databases        show database names</span><br><span class="line">        show series           show series information</span><br><span class="line">        show measurements     show measurement information</span><br><span class="line">        show tag keys         show tag key information</span><br><span class="line">        show field keys       show field key information</span><br><span class="line"></span><br><span class="line">        A full list of influxql commands can be found at:</span><br><span class="line">        https://docs.influxdata.com/influxdb/latest/query_language/spec/</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h3 id="用户权限管理"><a href="#用户权限管理" class="headerlink" title="用户权限管理"></a>用户权限管理</h3><p>InfluxDB 的权限设置比较简单，只有读、写、ALL 三种，详细参考 官方文档 。默认不开启用户认证，需要修改配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[http]</span><br><span class="line">auth-enabled = true</span><br></pre></td></tr></table></figure></p><p><a href="https://docs.influxdata.com/influxdb/v1.7/administration/authentication_and_authorization/" target="_blank" rel="noopener">https://docs.influxdata.com/influxdb/v1.7/administration/authentication_and_authorization/</a></p><p>常见命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 授权 </span><br><span class="line">GRANT [READ,WRITE,ALL] ON &lt;database_name&gt; TO &lt;username&gt;</span><br><span class="line">GRANT ALL PRIVILEGES TO &quot;username&quot;</span><br><span class="line"></span><br><span class="line"># 撤销权限 </span><br><span class="line">REVOKE [READ,WRITE,ALL] ON &lt;database_name&gt; FROM &lt;username&gt;</span><br><span class="line">REVOKE ALL PRIVILEGES FROM &quot;username&quot;</span><br><span class="line"></span><br><span class="line"># 查看权限 </span><br><span class="line">SHOW GRANTS FOR &lt;user_name&gt;</span><br><span class="line"></span><br><span class="line"># 显示用户 </span><br><span class="line">SHOW USERS</span><br><span class="line"></span><br><span class="line"># 创建用户 </span><br><span class="line">CREATE USER &quot;readonly&quot; WITH PASSWORD &apos;password&apos;</span><br><span class="line"></span><br><span class="line"># 创建管理员权限的用户 </span><br><span class="line">CREATE USER &quot;readonly&quot; WITH PASSWORD &apos;password&apos; WITH ALL PRIVILEGES</span><br><span class="line"></span><br><span class="line"># 删除用户 </span><br><span class="line">DROP USER &quot;readonly&quot;</span><br><span class="line"></span><br><span class="line"># 修改密码 </span><br><span class="line">SET PASSWORD FOR &lt;username&gt; = &apos;&lt;password&gt;&apos;</span><br></pre></td></tr></table></figure><h3 id="数据保存策略"><a href="#数据保存策略" class="headerlink" title="数据保存策略"></a>数据保存策略</h3><p>也就是 Retention Policies，可以设置保存的时间，例如保存 30 天<br><a href="https://docs.influxdata.com/influxdb/v1.7/guides/downsampling_and_retention/" target="_blank" rel="noopener">https://docs.influxdata.com/influxdb/v1.7/guides/downsampling_and_retention/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 查询 </span><br><span class="line">SHOW RETENTION POLICIES ON &quot;database_name&quot;;</span><br><span class="line"></span><br><span class="line"># 新建 </span><br><span class="line">CREATE RETENTION POLICY &quot;rp_name&quot; ON &quot;db_name&quot; DURATION 30d REPLICATION 1 DEFAULT;</span><br><span class="line"></span><br><span class="line"># 修改 </span><br><span class="line">ALTER RETENTION POLICY &quot;rp_name&quot; ON db_name DURATION 3w DEFAULT;</span><br><span class="line"></span><br><span class="line"># 删除 </span><br><span class="line">DROP RETENTION POLICY &quot;rp_name&quot; ON &quot;db_name&quot;;</span><br></pre></td></tr></table></figure><h3 id="连续查询"><a href="#连续查询" class="headerlink" title="连续查询"></a>连续查询</h3><p>也就是 Continuous Queries，当数据超过保存策略里指定的时间之后，就会被删除；可以通过连续查询把原来的秒级数据，保存为分钟级或者小时级的数据，从而减小数据的占用空间。<br><a href="https://docs.influxdata.com/influxdb/v1.7/query_language/continuous_queries/" target="_blank" rel="noopener">https://docs.influxdata.com/influxdb/v1.7/query_language/continuous_queries/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 查看 </span><br><span class="line">SHOW CONTINUOUS QUERIES;</span><br><span class="line"></span><br><span class="line"># 创建 </span><br><span class="line">CREATE CONTINUOUS QUERY cq-name ON db-name BEGIN</span><br><span class="line">    SELECT mean(tbl-name) INTO newtbl-name FROM tbl-name GROUP BY time(30m) END;</span><br><span class="line"></span><br><span class="line"># 删除 </span><br><span class="line">DROP CONTINUOUS QUERY &lt;cq-name&gt; ON &lt;db-name&gt;;</span><br></pre></td></tr></table></figure><h3 id="备份恢复"><a href="#备份恢复" class="headerlink" title="备份恢复"></a>备份恢复</h3><p>只支持全量备份，不支持增量，包括了元数据以及增量数据的备份，可以参考 官方文档<br><a href="https://docs.influxdata.com/influxdb/v1.7/administration/backup_and_restore/" target="_blank" rel="noopener">https://docs.influxdata.com/influxdb/v1.7/administration/backup_and_restore/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 元数据备份 </span><br><span class="line">influxd backup &lt;path-to-backup&gt;</span><br><span class="line"></span><br><span class="line"># 数据备份 </span><br><span class="line">influxd backup -database &lt;mydatabase&gt; &lt;path-to-backup&gt;</span><br><span class="line">influxd backup -database telegraf -retention autogen -since 2016-02-01T00:00:00Z /tmp/backup</span><br><span class="line">influxd backup -database mydatabase -host 10.0.0.1:8088 /tmp/remote-backup</span><br><span class="line"></span><br><span class="line"># 恢复 </span><br><span class="line">influxd restore -metadir /var/lib/influxdb/meta /tmp/backup</span><br><span class="line">influxd restore -database telegraf -datadir /var/lib/influxdb/data /tmp/backup</span><br></pre></td></tr></table></figure><h3 id="time-格式显示设置"><a href="#time-格式显示设置" class="headerlink" title="time 格式显示设置"></a>time 格式显示设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 方法 1</span><br><span class="line">$ influx -precision rfc3339</span><br><span class="line"></span><br><span class="line"># 方法 2</span><br><span class="line">$ influx</span><br><span class="line">  Connected to http://localhost:8086 version 0.xx.x</span><br><span class="line">  InfluxDB shell 0.xx.x</span><br><span class="line">  &gt; precision rfc3339</span><br><span class="line"></span><br><span class="line">&gt; precision rfc3339</span><br><span class="line">&gt; select * from codis_usage order by time desc limit 10;</span><br><span class="line">name: codis_usage</span><br><span class="line">time                           admin_addr         hostname              ops_fails ops_qps ops_redis_errors ops_total   product_name   proxy_addr        runtime_gc_num runtime_gc_total_pausems runtime_num_cgo_call runtime_num_goroutines runtime_num_mem_offheap runtime_num_procs rusage_cpu          rusage_mem sessions_alive sessions_total token</span><br><span class="line">----                           ----------         --------              --------- ------- ---------------- ---------   ------------   ----------        -------------- ------------------------ -------------------- ---------------------- ----------------------- ----------------- ----------          ---------- -------------- -------------- -----</span><br><span class="line">2019-07-25T10:48:43.186693914Z 10.71.15.97:11080  sg-gop-xxx-xxx-xxx-xx                                                gop-codis-misc 10.71.15.97:6389                                          2455469                                     49217536                8                                     456200192  58                            2bdaa076222fec82f9204310255cc2e3</span><br><span class="line">2019-07-25T10:48:43.160702877Z 10.71.15.98:11080  sg-gop-xxx-xxx-xxx-xx 0         44      12258            8381660     gop-codis-misc 10.71.15.98:6389  5099           426                      2455685              266                    48037888                8                 0                   390696960  56             12404          b2d20caf9f3c9af555cb9a9fa5c07844</span><br><span class="line">2019-07-25T10:48:42.838745142Z 10.71.15.96:11080  sg-gop-xxx-xxx-xxx-xx 0         0       0                0           gop-codis-data 10.71.15.96:6389  79             6                        37247                26                     0                       8                 0                   142471168  0              0              47629170465564037278443f7fc0a2b0</span><br><span class="line">2019-07-25T10:48:42.786535306Z 10.71.14.113:11080 localhost.localdomain 0         9740    4                32159612367 gop-codis      10.71.15.112:6389 27922          10471                    76744489             8754                   1073741824              8                 0.809847412599755   4961280000 4304           45663317       e72634f3a81e4edcf24dca9454e22c1b</span><br><span class="line">2019-07-25T10:48:42.727826769Z 10.71.14.112:11080 localhost.localdomain 0         9602    2                33816047337 gop-codis      10.71.15.112:6389 31458          11034                    77809963             8806                   1073741824              8                 0.7998623956727604  4950290432 4330           45663036       646f70b8381ca449cad4bb1316e17b78</span><br><span class="line">2019-07-25T10:48:42.598859131Z 10.71.15.95:11080  sg-gop-xxx-xxx-xxx-xx 0         0       0                0           gop-codis-data 10.71.15.95:6389  80             5                        37771                26                     0                       8                 0                   140034048  0              0              939a496343900150dc87238b953bb14b</span><br><span class="line">2019-07-25T10:48:42.333392816Z 10.71.15.91:11080  sg-gop-xxx-xxx-xxx-xx 0         4034    0                93719633    gop-codis-pay  10.71.15.91:6389  5122           445                      2463785              4406                   876150784               8                 0.36992110507631487 1682124800 2126           4836           64ebb14da86e74313c0f5dca10336a4d</span><br><span class="line">2019-07-25T10:48:42.322101493Z 10.71.15.92:11080  sg-gop-xxx-xxx-xxx-xx 0         3721    0                89276911    gop-codis-pay  10.71.15.92:6389  5122           450                      2463671              4388                   895614976               8                 0.3399291832331154  1677733888 2117           4750           7b76feefc30f93483d7b8e5432084f34</span><br><span class="line">2019-07-25T10:48:42.227508795Z 10.71.15.93:11080  sg-gop-xxx-xxx-xxx-xx 0         405     0                15300438    gop-codis-auth 10.71.15.93:6389  5096           434                      2446269              1504                   414908416               8                 0.04998992792934094 613736448  675            1592           7a320ee2bb9fe9cecfdd685a5fbfbc1c</span><br><span class="line">2019-07-25T10:48:42.194695137Z 10.71.15.94:11080  sg-gop-xxx-xxx-xxx-xx 0         524     0                15128150    gop-codis-auth 10.71.15.94:6389  5096           421                      2446079              1486                   409600000               8                 0.04998935201807339 492064768  666            1546           6b516b3b0344063a6936fc13c40fc40a</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 获取最近更新数据，并转换为当前时间 </span><br><span class="line">select threads_running from mysql order by time desc limit 1;</span><br><span class="line">date -d @`echo 1483441750000000000 | awk &apos;&#123;print substr($0,1,10)&#125;&apos;` +&quot;%Y-%m-%d %H:%M:%S&quot;</span><br><span class="line"></span><br><span class="line"># 检查系统是否存活 </span><br><span class="line">$ curl -sl -I localhost:8086/ping</span><br><span class="line"></span><br><span class="line"># 简单查询 </span><br><span class="line">SELECT * FROM weather ORDER BY time DESC LIMIT 3;</span><br><span class="line"></span><br><span class="line"># 指定时间范围，时间格式也可以为 & apos;2017-01-03 00:00:00&apos;</span><br><span class="line">SELECT usage_idle FROM cpu WHERE time &gt;= &apos;2017-01-03T12:40:38.708Z&apos; AND time &lt;= &apos;2017-01-03T12:40:50.708Z&apos;;</span><br><span class="line"></span><br><span class="line"># 最近 40min 内的数据 </span><br><span class="line">SELECT * FROM mysql WHERE time &gt;= now() - 40m;</span><br><span class="line"></span><br><span class="line"># 最近 5 分钟的秒级差值 </span><br><span class="line">SELECT derivative(&quot;queries&quot;, 1s) AS &quot;queries&quot; from &quot;mysql&quot; where time &gt; now() - 5m;</span><br><span class="line"></span><br><span class="line"># 最近 5min 的秒级写入 </span><br><span class="line">$ influx -database &apos;_internal&apos; -precision &apos;rfc3339&apos;</span><br><span class="line">      -execute &apos;select derivative(pointReq, 1s) from &quot;write&quot; where time &gt; now() - 5m&apos;</span><br><span class="line"></span><br><span class="line"># 也可以通过日志查看 </span><br><span class="line">$ grep &apos;POST&apos; /var/log/influxdb/influxd.log | awk &apos;&#123; print $10 &#125;&apos; | sort | uniq -c</span><br><span class="line">$ journalctl -u influxdb.service | awk &apos;/POST/ &#123; print $10 &#125;&apos; | sort | uniq -c</span><br></pre></td></tr></table></figure><h2 id="InfluxDB-配置优化"><a href="#InfluxDB-配置优化" class="headerlink" title="InfluxDB 配置优化"></a>InfluxDB 配置优化</h2><p>配置文件默认全部注释掉，使用默认的配置项，可以根据需要配置。每个配置项有对应的、相同功能的环境变量。</p><p>配置文件：/etc/influxdb/influxdb.conf</p><p>查看配置：influxd config</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[meta]                                <span class="comment"># 元数据 </span></span><br><span class="line">dir = /var/lib/influxdb/meta  </span><br><span class="line"></span><br><span class="line">[data]                                <span class="comment"># 数据 / WAL</span></span><br><span class="line">dir = /var/lib/influxdb/data  </span><br><span class="line">wal-dir = /var/lib/influxdb/wal  </span><br><span class="line">cache-max-memory-size = <span class="string">"1g"</span>          <span class="comment"># Cache 最大可用内存 </span></span><br><span class="line"></span><br><span class="line">[coordinator]                         <span class="comment"># 查询相关 </span></span><br><span class="line">query-timeout = <span class="string">"0s"</span>                  <span class="comment"># 查询最大执行时间  </span></span><br><span class="line"><span class="built_in">log</span>-queries-after = <span class="string">"0s"</span>              <span class="comment"># 打印慢查询 </span></span><br><span class="line"></span><br><span class="line">[http]           <span class="comment"># HTTP 服务 </span></span><br><span class="line">auth-enabled = <span class="literal">false</span>                  <span class="comment"># 启用安全认证  </span></span><br><span class="line">max-connection-limit = 0              <span class="comment"># 最大连接数 </span></span><br></pre></td></tr></table></figure><p>更多帮助信息请参考官网<br>InfluxDB documentation - <a href="https://docs.influxdata.com/platform/introduction" target="_blank" rel="noopener">https://docs.influxdata.com/platform/introduction</a></p>]]></content>
    
    <summary type="html">
    
      InfluxDB is the Time Series Database in the TICK Stack
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Redis(Codis) 分布式集群部署实践</title>
    <link href="https://wsgzao.github.io/post/codis/"/>
    <id>https://wsgzao.github.io/post/codis/</id>
    <published>2019-07-23T06:59:49.000Z</published>
    <updated>2019-08-09T07:50:35.601Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190724154111.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Codis 3.x 稳定版本已经很久没更新了，虽然有缺点也称不上完美但确实可以有效解决横向扩展问题。Redis 5.0 因为所谓的 <code>政治正确</code> 把 master-slave 名字修改为 master-replica 上了开源社区热议排行榜，然而大家在选择 Redis 集群方案的时候除了自研和 Codis 以外依然没有太多的选择余地。我们使用 Codis 的原因也很简单，Redis 主从模式内存从 128GB 一路增加到 1TB 后硬件终于受不鸟了，要么像数据库借鉴 “拆” 的奥义做到庖丁解牛一般，不然摆在眼前的路基本只剩下相对成熟可靠的 Codis。本文分享了 Redis 高可用技术解决方案选型的参考文章和 Codis 集群搭建的过程，希望对大家有帮助。</p><blockquote><p>Redis(Codis)分布式集群部署实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 07 月 23 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/codis/">https://wsgzao.github.io/post/codis/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://redis.io/" target="_blank" rel="noopener">Redis</a><br><a href="https://github.com/CodisLabs/codis" target="_blank" rel="noopener">Codis</a></p><hr><h2 id="Codis-简介"><a href="#Codis-简介" class="headerlink" title="Codis 简介"></a>Codis 简介</h2><p>Codis 是一个分布式 Redis 解决方案, 对于上层的应用来说, 连接到 Codis Proxy 和连接原生的 Redis Server 没有显著区别 (<a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/unsupported_cmds.md" target="_blank" rel="noopener">不支持的命令列表</a>), 上层应用可以像使用单机的 Redis 一样使用, Codis 底层会处理请求的转发, 不停机的数据迁移等工作, 所有后边的一切事情, 对于前面的客户端来说是透明的, 可以简单的认为后边连接的是一个内存无限大的 Redis 服务。</p><blockquote><p>Compared with Twemproxy and Redis Cluster</p></blockquote><table><thead><tr><th></th><th>Codis</th><th>Twemproxy</th><th>Redis Cluster</th></tr></thead><tbody><tr><td>resharding without restarting cluster</td><td>Yes</td><td>No</td><td>Yes</td></tr><tr><td>pipeline</td><td>Yes</td><td>Yes</td><td>No</td></tr><tr><td>hash tags for multi-key operations</td><td>Yes</td><td>Yes</td><td>Yes</td></tr><tr><td>multi-key operations while resharding</td><td>Yes</td><td>-</td><td>No(<a href="http://redis.io/topics/cluster-spec#multiple-keys-operations" target="_blank" rel="noopener">details</a>)</td></tr><tr><td>Redis clients supporting</td><td>Any clients</td><td>Any clients</td><td>Clients have to support cluster protocol</td></tr></tbody></table><p>“Resharding” means migrating the data in one slot from one redis server to another, usually happens while increasing/decreasing the number of redis servers.</p><blockquote><p>为什么要选择 Codis</p></blockquote><p>Redis 获得动态扩容 / 缩容的能力，增减 redis 实例对 client 完全透明、不需要重启服务，不需要业务方担心 Redis 内存爆掉的问题. 也不用担心申请太大, 造成浪费. 业务方也不需要自己维护 Redis.</p><p>Codis 支持水平扩容 / 缩容，扩容可以直接界面的 “Auto Rebalance” 按钮，缩容只需要将要下线的实例拥有的 slot 迁移到其它实例，然后在界面上删除下线的 group 即可。</p><p><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/tutorial_zh.md" target="_blank" rel="noopener">Codis 使用文档</a><br><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/FAQ_zh.md" target="_blank" rel="noopener">Codis FAQ</a><br><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/unsupported_cmds.md" target="_blank" rel="noopener">Codis 不支持的命令列表</a><br><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/redis_change_zh.md" target="_blank" rel="noopener">redis 修改部分（增加若干指令）</a><br><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/benchmark.md" target="_blank" rel="noopener">Performance (Benchmark)</a></p><h2 id="Codis-架构"><a href="#Codis-架构" class="headerlink" title="Codis 架构"></a>Codis 架构</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190724162130.png" alt=""></p><p>集群配置前需要了解架构，集群分片主要分三种：</p><ol><li>客户端分片：这个需要自己开发，对客户端要求严格，集群很难扩容</li><li>代理端分片：如 codis，对客户端几乎无要求，集群容易扩容</li><li>服务端分片：如 redis 集群，需要智能客户端支持集群协议的，集群容易扩容</li></ol><p>Codis 3.x 由以下组件组成：</p><ul><li><p><strong>Codis Server</strong>：基于 redis-3.2.8 分支开发。增加了额外的数据结构，以支持 slot 有关的操作以及数据迁移指令。具体的修改可以参考文档 <a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/redis_change_zh.md" target="_blank" rel="noopener">redis 的修改</a>。</p></li><li><p><strong>Codis Proxy</strong>：客户端连接的 Redis 代理服务, 实现了 Redis 协议。 除部分命令不支持以外(<a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/unsupported_cmds.md" target="_blank" rel="noopener">不支持的命令列表</a>)，表现的和原生的 Redis 没有区别（就像 Twemproxy）。</p><ul><li>对于同一个业务集群而言，可以同时部署多个 codis-proxy 实例；</li><li>不同 codis-proxy 之间由 codis-dashboard 保证状态同步。</li></ul></li><li><p><strong>Codis Dashboard</strong>：集群管理工具，支持 codis-proxy、codis-server 的添加、删除，以及据迁移等操作。在集群状态发生改变时，codis-dashboard 维护集群下所有 codis-proxy 的状态的一致性。</p><ul><li>对于同一个业务集群而言，同一个时刻 codis-dashboard 只能有 0 个或者 1 个；</li><li>所有对集群的修改都必须通过 codis-dashboard 完成。</li></ul></li><li><p><strong>Codis Admin</strong>：集群管理的命令行工具。</p><ul><li>可用于控制 codis-proxy、codis-dashboard 状态以及访问外部存储。</li></ul></li><li><p><strong>Codis FE</strong>：集群管理界面。</p><ul><li>多个集群实例共享可以共享同一个前端展示页面；</li><li>通过配置文件管理后端 codis-dashboard 列表，配置文件可自动更新。</li></ul></li><li><p><strong>Storage</strong>：为集群状态提供外部存储。</p><ul><li>提供 Namespace 概念，不同集群的会按照不同 product name 进行组织；</li><li>目前仅提供了 Zookeeper、Etcd、Fs 三种实现，但是提供了抽象的 interface 可自行扩展。</li></ul></li></ul><h2 id="Codis-部署"><a href="#Codis-部署" class="headerlink" title="Codis 部署"></a>Codis 部署</h2><p>Codis 官方的 GitHub 教程已经写的比较详细了，这里重点分享 Ansible 自动化部署方案</p><h2 id="Codis-HA"><a href="#Codis-HA" class="headerlink" title="Codis HA"></a>Codis HA</h2><p>Codis 的架构本身分成 Proxy 集群 + Redis 集群，Proxy 集群的高可用，可以基于 Zookeeper 来做故障转移，而 Redis 集群的高可用是借助于 Redis Sentinel 开源的哨兵集群来实现，那边 Codis 作为非 Redis 组件，需要解决的一个问题就是如何集成 Redis 哨兵集群。</p><h2 id="Codis-监控"><a href="#Codis-监控" class="headerlink" title="Codis 监控"></a>Codis 监控</h2><h2 id="Redis-迁移至-Codis"><a href="#Redis-迁移至-Codis" class="headerlink" title="Redis 迁移至 Codis"></a>Redis 迁移至 Codis</h2><p>分两种情况:</p><ol><li>原来使用 twemproxy 的用户: 可以, 使用 codis 项目内的 redis-port 工具, 可以实时的同步 twemproxy 底下的 redis 数据到你的 codis 集群上. 搞定了以后, 只需要你修改一下你的配置, 将 twemproxy 的地址改成 codis 的地址就好了. 除此之外, 你什么事情都不用做.</li><li>原来使用 Redis 的用户: 如果你使用了 <a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/unsupported_cmds.md" target="_blank" rel="noopener">doc/unsupported_cmds</a>中提到的命令，是无法直接迁移到 Codis 上的. 你需要修改你的代码, 用其他的方式实现.</li></ol><p>先搭建好 codis 集群并让 codis-proxy 正确运行起来。对线上每一个 redis 实例运行一个 redis-port 来向 codis 导入数据，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">for port in &#123;6379,6380,6479,6480&#125;; do</span><br><span class="line">    nohup redis-port sync --ncpu=4 --from=redis-server:$&#123;port&#125; \</span><br><span class="line">        --target=codis-proxy:19000 &gt; $&#123;port&#125;.log 2&gt;&amp;1 &amp;</span><br><span class="line">    sleep 5</span><br><span class="line">done</span><br><span class="line">tail -f *.log</span><br></pre></td></tr></table></figure><ul><li>每个 redis-port 负责将对应的 redis 数据导入到 codis</li><li>多个 redis-port 之间不互相干扰，除非多个 redis 上的 key 本身出现冲突</li><li>单个 redis-port 可以将负责的数据并行迁移以提高速度，通过 –ncpu 来指定并行数</li><li>导入速度受带宽以及 codis-proxy 处理速度限制(本质是大量的 slotsrestore 操作)</li><li>完成数据迁移，在适当的时候将服务指向 Codis，并将原 redis 下线，旧 redis 下线时，会导致 reids-port 链接断开，于是自动退出</li></ul><p><a href="https://github.com/CodisLabs/redis-port" target="_blank" rel="noopener">redis-port</a><br><a href="https://github.com/alibaba/RedisShake" target="_blank" rel="noopener">RedisShake</a><br><a href="https://github.com/sripathikrishnan/redis-rdb-tools" target="_blank" rel="noopener">redis-rdb-tools</a></p><h2 id="Codis-扩容"><a href="#Codis-扩容" class="headerlink" title="Codis 扩容"></a>Codis 扩容</h2><p>Codis 可以实现在线不停服务进行扩容，具体的步骤如下：</p><ol><li>安装配置 codis-server 主从</li><li>打开 codis 管理界面，新建 server group 并添加刚刚安装的 redis 实例（注意：codis 默认第一个添加的是 master）</li><li>规划 slot 分布，把部分 slot 迁移到新的 server group 中</li></ol><p><strong> 备注说明 </strong></p><ol><li>slot 迁移的过程中，Codis 服务可以正常访问，codis 的迁移机制可以保证数据的一致性</li><li>迁移时，key 都是单个进行迁移，并且不能同时运行多个迁移任务，所以 codis 的迁移时间会比较长。一定要在扩容前留有足够的时间和空间。</li></ol><h2 id="Codis-其他经验分享"><a href="#Codis-其他经验分享" class="headerlink" title="Codis 其他经验分享"></a>Codis 其他经验分享</h2><ol><li><p>关于 HOT KEY， HOT KEY 很影响 Codis/Redis 的性能，这点如果你监控不到位，你就得花一些力气去找到底是哪组出了问题，再 monitor 看看找出是哪个应用干的，比较费时费力，所以在交付 rd 上线时， 我们就严肃声明坚决不允许存在 HOT KEY，宁可使用笨方法多消耗一些内存，也要降低线上故障的风险。</p></li><li><p>关于 BIG KEY,  这点风险更为巨大：</p></li></ol><p>由于 Codis 支持 “resharding without restarting cluster”，如果迁移失败，所导致的后果也是不可简单衡量的。Redis 是串行提供服务的，所以当迁移该 BIG KEY 时，其他的请求就会被 BLOCK 住，这点是十分危险的，访问该组的请求皆会失败。</p><p>由于 Codis-ha 也会依赖该节点的返回来判断 Codis-server 是否挂掉，如果无响应超过设置时间，便会强制提升 SLAVE 至 MASTER，导致整个迁移任务失败。这时如果 Proxy 的信息没有更新的话，并且迁移故障的 KEY 所在 SLOT 可能会存在 KEY 的信息不完整，虽然服务恢复，但是仍有大量 key 失效。</p><p>所以一般不推荐使用 Codis 存大的 HASH 表，LIST 等等，并且在迁移之前，至少要对该 Group 做一次检查 BIG KEY 即：redis-cli –bigkeys 查看是否有 BIG KEY 存在，再酌情迁移。</p><ol start="3"><li>关于 Codis-server，一般 Codis-proxy 或者 Codis-dashboard 我们使用 supervisor 管理，在进程退出的情况下立即拉起来重新服务，而 Codis-Server 则不推荐使用该方式，原因是这样的：一般作为 Codis-server，是关闭 rdb dump 的，如果 Codis-server 挂掉，当重新启动时，是没有 rdb 文件的，或者 rdb 文件是上一次切换之前的。如果挂掉立即重新启动，则该 Codis 有可能是空的，或者数据不是最新，而同时，SLAVE 同步，也会清空数据库，或者同步旧数据。</li></ol><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://mp.weixin.qq.com/s/BoLsVKYyu8yRXZbxd1uuQw" target="_blank" rel="noopener">史上最全 Redis 高可用技术解决方案大全</a><br><a href="https://mp.weixin.qq.com/s/F68-e2umTQIq0aGfif58ow" target="_blank" rel="noopener">深入浅出百亿请求高可用 Redis (codis) 分布式集群揭秘</a><br><a href="https://cloud.tencent.com/developer/article/1006262" target="_blank" rel="noopener">大规模 codis 集群的治理与实践</a><br><a href="https://www.menina.cn/article/61" target="_blank" rel="noopener">避免 Redis (Codis) 的 Timeout 及监控</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzA4Nzg5Nzc5OA==&amp;mid=2651678993&amp;idx=1&amp;sn=195b7e98450befb9bde04ea58756a731&amp;chksm=8bcbaab8bcbc23ae01f8288bcfb2c65d0e8b9ee4610420c252fa1ab5709b7909b26d4d5da67b&amp;mpshare=1&amp;scene=23&amp;srcid&amp;sharer_sharetime=1565249364003&amp;sharer_shareid=456ba82bbd1a1c9f32e5725824095308%23rd" target="_blank" rel="noopener">10 分钟彻底理解 Redis 的持久化和主从复制</a></p>]]></content>
    
    <summary type="html">
    
      Redis(Codis)分布式集群部署实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 MegaCli64 快速查看 RAID 和定位故障硬盘实践</title>
    <link href="https://wsgzao.github.io/post/megacli64/"/>
    <id>https://wsgzao.github.io/post/megacli64/</id>
    <published>2019-07-21T06:59:49.000Z</published>
    <updated>2019-07-22T08:52:16.363Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>MegaCli 是 LSI 公司官方提供的 SCSI 卡管理工具，由于 LSI 被收购变成了现在的 Broadcom，所以想下载 MegaCli，需要去 Broadcom 官网查找。现在官方有 Storcli，整合了 LSI 和 3ware 所有产品，本文主要以 MegaCli64 为例，无论选择 MegaCli 还是 Storcli 只要在线上环境运行稳定可以获取正确数据就都是合适的方法。</p><blockquote><p>使用 MegaCli64 快速查看 RAID 和定位故障硬盘实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 07 月 21 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/megacli64/">https://wsgzao.github.io/post/megacli64/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://www.broadcom.com/support/knowledgebase/1211161499760/lsi-command-line-interface-cross-reference-megacli-vs-twcli-vs-s" target="_blank" rel="noopener">MegaCLI vs tw_cli vs Storcli</a><br><a href="https://www.dell.com/support/article/sg/en/sgdhs1/sln292232/extracting-the-raid-controller-logs-via-megacli?lang=en" target="_blank" rel="noopener">Extracting the RAID-Controller Logs via MegaCLI</a></p><hr><h2 id="MegaCli-简介"><a href="#MegaCli-简介" class="headerlink" title="MegaCli 简介"></a>MegaCli 简介</h2><p>MegaRaid 阵列卡管理工具。他可以查看当前 RAID 卡的所有信息，包括 RAID 卡型号、类型、磁盘状态、电池状态等等。学会了如何使用 MegaCli，我们可以在硬盘没有彻底嗝屁（Failed）之前，监测到是否已经出现预告警报错，不需要现场逐台巡检磁盘状态灯。</p><ol><li>使用 Zabbix 监控硬盘或者使用 IPMI 接入 OOB(Out-of-Band) 监控硬件状态</li><li>使用更加成熟的商业化工具管理如 <a href="http://www.idcos.com/products/cloudboot-compare" target="_blank" rel="noopener">云霁科技 CloudBoot</a>，拒绝被单一厂商绑架</li></ol><p>MegaCli64 官网地址: <a href="http://docs.avagotech.com/docs/12351587" target="_blank" rel="noopener">http://docs.avagotech.com/docs/12351587</a></p><p>Linux 下默认路径: <code>/opt/MegaRAID/MegaCli/MegaCli64</code></p><h2 id="MegaCli-安装"><a href="#MegaCli-安装" class="headerlink" title="MegaCli 安装"></a>MegaCli 安装</h2><ol><li><p>Download the <a href="http://docs.avagotech.com/docs/12351587?_ga=2.81670295.1654370925.1557214314-814067834.1557214314" target="_blank" rel="noopener">MegaCli utility</a> from the Broadcom support site</p></li><li><p>Unzip the downloaded files and install them to any directory of your installed operating system (e.g.: Linux – /tmp/megacli)</p></li><li><p>From a terminal window in Linux, install the using the the following command:</p><p> <strong>Note</strong>: root priviledges required to install MegaCLI:</p><p> <code>rpm -i MegaCli-8.07.14-1.noarch.rpm</code></p></li><li><p>Then change directory into <strong>/opt/MegaRAID/MegaCLI/</strong> and run any of the commands from the table below:</p></li></ol><table><thead><tr><th>Command</th><th>Action</th></tr></thead><tbody><tr><td><code>./MegaCli64 -FwTermLog -Dsply -aALL &gt; /tmp/ttylog.txt</code></td><td>Creates the RAID controller log (ttylog)</td></tr><tr><td><code>./MegaCli64 -PDList -aALL &gt; /tmp/disks.txt</code></td><td>Creates a list with information about the RAID controllers, virtual disks and hard disks installed</td></tr><tr><td><code>./MegaCli64 -LDInfo -LALL -aALL &gt; /tmp/LDinfo.txt</code></td><td>Creates a list with information about existing RAID volumes and configurations</td></tr><tr><td><code>./MegaCli64 -AdpAllInfo -aALL &gt; /tmp/Adapterinfo.txt</code></td><td>Creates a list with information about RAID controller settings</td></tr><tr><td><code>./MegaCli64 -AdpBbuCmd -aALL &gt; /tmp/Battery.txt</code></td><td>Creates a detailed list of the battery status of the RAID controller (state of charge, learning cycle, etc.)</td></tr><tr><td><code>./MegaCli64 -AdpEventLog -IncludeDeleted -f deleted.txt -aALL</code></td><td>Creates the RAID controller log (ttylog) with all information since very first controller initialization( <strong>Note</strong>: This file will always be saved in the MegaCLI root folder)</td></tr></tbody></table><h2 id="使用-MegaCli64-查看硬盘信息"><a href="#使用-MegaCli64-查看硬盘信息" class="headerlink" title="使用 MegaCli64 查看硬盘信息"></a>使用 MegaCli64 查看硬盘信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost wangao]<span class="comment"># MegaCli -ShowSummary -aALL</span></span><br><span class="line"></span><br><span class="line">System</span><br><span class="line">Operating System:  Linux version 3.10.0-957.21.3.el7.x86_64</span><br><span class="line">Driver Version: 07.705.02.00-rh1</span><br><span class="line">CLI Version: 8.07.06</span><br><span class="line"></span><br><span class="line">Hardware</span><br><span class="line">        Controller</span><br><span class="line">                 ProductName       : PERC H730P Mini(Bus 0, Dev 0)</span><br><span class="line">                 SAS Address       : 51866da0a1306300</span><br><span class="line">                 FW Package Version: 25.5.0.0018</span><br><span class="line">                 Status            : Optimal</span><br><span class="line">        BBU</span><br><span class="line">                 BBU Type          : BBU</span><br><span class="line">                 Status            : Healthy</span><br><span class="line">        Enclosure</span><br><span class="line">                 Product Id        : BP13G+EXP</span><br><span class="line">                 Type              : SES</span><br><span class="line">                 Status            : OK</span><br><span class="line"></span><br><span class="line">        PD</span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 0</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 1</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 2</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 3</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 4</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 5</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 6</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 7</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 8</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 9</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 10</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 11</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 12</span><br><span class="line">                Vendor Id          : ATA</span><br><span class="line">                Product Id         : ST9250610NS</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SATA,Hard Disk Device</span><br><span class="line">                Capacity           : 232.375 GB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 13</span><br><span class="line">                Vendor Id          : ATA</span><br><span class="line">                Product Id         : ST9250610NS</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SATA,Hard Disk Device</span><br><span class="line">                Capacity           : 232.375 GB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 14</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 15</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 16</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">                Connector          : 00&lt;Internal&gt;&lt;Encl Pos 1 &gt;: Slot 17</span><br><span class="line">                Vendor Id          : HGST</span><br><span class="line">                Product Id         : HUS726060AL5214</span><br><span class="line">                State              : Online</span><br><span class="line">                Disk Type          : SAS,Hard Disk Device</span><br><span class="line">                Capacity           : 5.457 TB</span><br><span class="line">                Power State        : Active</span><br><span class="line"></span><br><span class="line">Storage</span><br><span class="line"></span><br><span class="line">       Virtual Drives</span><br><span class="line">                Virtual drive      : Target Id 0 ,VD name</span><br><span class="line">                Size               : 232.375 GB</span><br><span class="line">                State              : Optimal</span><br><span class="line">                RAID Level         : 1</span><br><span class="line"></span><br><span class="line">                Virtual drive      : Target Id 1 ,VD name</span><br><span class="line">                Size               : 81.862 TB</span><br><span class="line">                State              : Optimal</span><br><span class="line">                RAID Level         : 5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exit Code: 0x00</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check virutal disk / raid info</span></span><br><span class="line"><span class="keyword">if</span> [[ -f /opt/MegaRAID/MegaCli/MegaCli64 ]]; <span class="keyword">then</span></span><br><span class="line">    raidlevel=`sudo /opt/MegaRAID/MegaCli/MegaCli64 -LDInfo -Lall -aALL -NoLog | grep <span class="string">'RAID Level'</span> | awk -F <span class="string">":"</span> <span class="string">'&#123;print $2&#125;'</span> | awk -F <span class="string">","</span> &#123;<span class="string">'print $1&#125;'</span> | awk -F <span class="string">"-"</span> <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">    disk_number=`sudo /opt/MegaRAID/MegaCli/MegaCli64 -PDList -aALL -NoLog | egrep <span class="string">'Device Id'</span> | awk <span class="string">'BEGIN &#123;RS=""; FS="\n"&#125; &#123;print NF&#125;'</span>`</span><br><span class="line">    disk_type=`sudo /opt/MegaRAID/MegaCli/MegaCli64 -PDList -aALL -NoLog | egrep <span class="string">'Media Type'</span> | head -1 | awk -F <span class="string">":"</span> <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    raidlevel=<span class="string">"none"</span></span><br><span class="line">    disk_number=<span class="string">"none"</span></span><br><span class="line">    disk_type=<span class="string">"none"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line">[root@localhost wangao]<span class="comment"># echo $raidlevel</span></span><br><span class="line">1 5</span><br><span class="line">[root@localhost wangao]<span class="comment"># echo $disk_number</span></span><br><span class="line">18</span><br><span class="line">[root@localhost wangao]<span class="comment"># echo $disk_type</span></span><br><span class="line">Hard Disk Device</span><br></pre></td></tr></table></figure><h2 id="Ansible-安装-MegaCLi64"><a href="#Ansible-安装-MegaCLi64" class="headerlink" title="Ansible 安装 MegaCLi64"></a>Ansible 安装 MegaCLi64</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">- hosts:</span> <span class="string">all</span></span><br><span class="line"><span class="attr">  become:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">no</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">upload</span> <span class="string">MegaCli64</span></span><br><span class="line"><span class="attr">      copy:</span></span><br><span class="line"><span class="attr">        src:</span> <span class="string">files/MegaCli-8.07.14-1.noarch.rpm</span></span><br><span class="line"><span class="attr">        dest:</span> <span class="string">/tmp/MegaCli-8.07.14-1.noarch.rpm</span></span><br><span class="line">        </span><br><span class="line"><span class="attr">    - name:</span> <span class="string">install</span> <span class="string">MegaCli64</span> <span class="string">rpm</span> <span class="string">from</span> <span class="string">a</span> <span class="string">local</span> <span class="string">file</span></span><br><span class="line"><span class="attr">      yum:</span></span><br><span class="line"><span class="attr">        name:</span> <span class="string">/tmp/MegaCli-8.07.14-1.noarch.rpm</span></span><br><span class="line"><span class="attr">        state:</span> <span class="string">present</span></span><br><span class="line">        </span><br><span class="line"><span class="attr">    - name:</span> <span class="string">create</span> <span class="string">symlink</span> <span class="string">for</span> <span class="string">MegaCli64</span></span><br><span class="line"><span class="attr">      file:</span></span><br><span class="line"><span class="attr">        src:</span> <span class="string">/opt/MegaRAID/MegaCli/MegaCli64</span></span><br><span class="line"><span class="attr">        dest:</span> <span class="string">/usr/sbin/MegaCli</span></span><br><span class="line"><span class="attr">        state:</span> <span class="string">link</span></span><br></pre></td></tr></table></figure><h2 id="Ansible-使用-MegaCli64-检查故障硬盘"><a href="#Ansible-使用-MegaCli64-检查故障硬盘" class="headerlink" title="Ansible 使用 MegaCli64 检查故障硬盘"></a>Ansible 使用 MegaCli64 检查故障硬盘</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">- hosts:</span> <span class="string">all</span></span><br><span class="line"><span class="attr">  become:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">  gather_facts:</span> <span class="literal">no</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Check</span> <span class="string">Disk</span> <span class="string">Status</span></span><br><span class="line"><span class="attr">      command:</span> <span class="string">./MegaCli64</span> <span class="bullet">-ShowSummary</span> <span class="bullet">-aALL</span></span><br><span class="line"><span class="attr">      args:</span></span><br><span class="line"><span class="attr">        chdir:</span> <span class="string">/opt/MegaRAID/MegaCli/</span></span><br><span class="line"><span class="attr">      register:</span> <span class="string">result</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">    - name:</span> <span class="string">Log</span> <span class="string">check</span> <span class="string">info</span></span><br><span class="line"><span class="attr">      lineinfile:</span></span><br><span class="line"><span class="attr">        dest:</span> <span class="string">"<span class="template-variable">&#123;&#123;inventory_dir&#125;&#125;</span>/ansible.log"</span></span><br><span class="line"><span class="attr">        line:</span> <span class="string">'[Ansiable Tasks: Disk Failure info] host=<span class="template-variable">&#123;&#123;inventory_hostname&#125;&#125;</span>'</span></span><br><span class="line"><span class="attr">        insertafter:</span> <span class="string">EOF</span> </span><br><span class="line"><span class="attr">        create:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">      when:</span> <span class="string">'"Failed" in result.stdout'</span></span><br><span class="line"><span class="attr">      delegate_to:</span> <span class="string">localhost</span></span><br><span class="line"><span class="attr">      become:</span> <span class="literal">no</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check log</span></span><br><span class="line">cat ansible.log</span><br><span class="line">[Ansiable Tasks: Disk Failure info] host=10.71.12.89</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      使用MegaCli64快速查看RAID和定位故障硬盘实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>CPU 优化建议使用 cpupower 设置 CPU Performance 模式</title>
    <link href="https://wsgzao.github.io/post/cpupower/"/>
    <id>https://wsgzao.github.io/post/cpupower/</id>
    <published>2019-07-17T05:59:49.000Z</published>
    <updated>2019-07-19T02:57:25.284Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>CPU 动态节能技术用于降低服务器功耗，通过选择系统空闲状态不同的电源管理策略，可以实现不同程度降低服务器功耗，更低的功耗策略意味着 CPU 唤醒更慢对性能影响更大。对于对时延和性能要求高的应用，建议关闭 CPU 的动态调节功能，禁止 CPU 休眠，并把 CPU 频率固定到最高。通常建议在服务器 BIOS 中修改电源管理为 Performance，如果发现 CPU 模式为 conservative 或者 powersave，可以使用 cpupower 设置 CPU Performance 模式，效果也是相当显著的。</p><blockquote><p>CPU 优化建议使用 cpupower 设置 CPU Performance 模式</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 07 月 17 日 - 更新 cpupower 自启动设置脚本<br>2019 年 01 月 18 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/cpupower/">https://wsgzao.github.io/post/cpupower/</a></p><p><strong> 扩展阅读 </strong></p><p>CPU frequency scaling - <a href="https://wiki.archlinux.org/index.php/CPU_frequency_scaling" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/CPU_frequency_scaling</a></p><hr><h2 id="cpufreq-的五种模式"><a href="#cpufreq-的五种模式" class="headerlink" title="cpufreq 的五种模式"></a>cpufreq 的五种模式</h2><p>cpufreq 是一个动态调整 cpu 频率的模块，系统启动时生成一个文件夹 / sys/devices/system/cpu/cpu0/cpufreq/，里面有几个文件，其中 scaling_min_freq 代表最低频率，scaling_max_freq 代表最高频率，scalin_governor 代表 cpu 频率调整模式，用它来控制 CPU 频率。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /sys/devices/system/cpu/cpu0/cpufreq/</span><br><span class="line"></span><br><span class="line">affected_cpus</span><br><span class="line">bios_limit</span><br><span class="line">cpuinfo_cur_freq</span><br><span class="line">cpuinfo_max_freq</span><br><span class="line">cpuinfo_min_freq</span><br><span class="line">cpuinfo_transition_latency</span><br><span class="line">freqdomain_cpus</span><br><span class="line">related_cpus</span><br><span class="line">scaling_available_frequencies</span><br><span class="line">scaling_available_governors</span><br><span class="line">scaling_cur_freq</span><br><span class="line">scaling_driver</span><br><span class="line">scaling_governor</span><br><span class="line">scaling_max_freq</span><br><span class="line">scaling_min_freq</span><br><span class="line">scaling_setspeed</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前的调节器</span></span><br><span class="line">cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor</span><br><span class="line">conservative</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看频率信息</span></span><br><span class="line">cpupower frequency-info</span><br><span class="line"></span><br><span class="line">analyzing CPU 0:</span><br><span class="line">  driver: acpi-cpufreq</span><br><span class="line">  CPUs <span class="built_in">which</span> run at the same hardware frequency: 0</span><br><span class="line">  CPUs <span class="built_in">which</span> need to have their frequency coordinated by software: 0</span><br><span class="line">  maximum transition latency: 10.0 us</span><br><span class="line">  hardware limits: 800 MHz - 2.10 GHz</span><br><span class="line">  available frequency steps:  2.10 GHz, 2.10 GHz, 2.00 GHz, 1.90 GHz, 1.80 GHz, 1.70 GHz, 1.60 GHz, 1.50 GHz, 1.40 GHz, 1.30 GHz, 1.20 GHz, 1.10 GHz, 1000 MHz, 900 MHz, 800 MHz</span><br><span class="line">  available cpufreq governors: conservative userspace powersave ondemand performance</span><br><span class="line">  current policy: frequency should be within 800 MHz and 2.10 GHz.</span><br><span class="line">                  The governor <span class="string">"performance"</span> may decide <span class="built_in">which</span> speed to use</span><br><span class="line">                  within this range.</span><br><span class="line">  current CPU frequency: Unable to call hardware</span><br><span class="line">  current CPU frequency: 2.10 GHz (asserted by call to kernel)</span><br><span class="line">  boost state support:</span><br><span class="line">    Supported: yes</span><br><span class="line">    Active: yes</span><br></pre></td></tr></table></figure><ol><li>performance: 顾名思义只注重效率，将 CPU 频率固定工作在其支持的最高运行频率上，而不动态调节。</li><li>Userspace: 最早的 cpufreq 子系统通过 userspace governor 为用户提供了这种灵活性。系统将变频策略的决策权交给了用户态应用程序，并提供了相应的接口供用户态应用程序调节 CPU 运行频率使用。也就是长期以来都在用的那个模式。可以通过手动编辑配置文件进行配置</li><li>powersave: 将 CPU 频率设置为最低的所谓 “省电” 模式，CPU 会固定工作在其支持的最低运行频率上。因此这两种 governors 都属于静态 governor，即在使用它们时 CPU 的运行频率不会根据系统运行时负载的变化动态作出调整。这两种 governors 对应的是两种极端的应用场景，使用 performance governor 是对系统高性能的最大追求，而使用 powersave governor 则是对系统低功耗的最大追求。</li><li>ondemand: 按需快速动态调整 CPU 频率， 一有 cpu 计算量的任务，就会立即达到最大频率运行，等执行完毕就立即回到最低频率；ondemand：userspace 是内核态的检测，用户态调整，效率低。而 ondemand 正是人们长期以来希望看到的一个完全在内核态下工作并且能够以更加细粒度的时间间隔对系统负载情况进行采样分析的 governor。 在 ondemand governor 监测到系统负载超过 up_threshold 所设定的百分比时，说明用户当前需要 CPU 提供更强大的处理能力，因此 ondemand governor 会将 CPU 设置在最高频率上运行。但是当 ondemand governor 监测到系统负载下降，可以降低 CPU 的运行频率时，到底应该降低到哪个频率呢？ ondemand governor 的最初实现是在可选的频率范围内调低至下一个可用频率，例如 CPU 支持三个可选频率，分别为 1.67GHz、1.33GHz 和 1GHz ，如果 CPU 运行在 1.67GHz 时 ondemand governor 发现可以降低运行频率，那么 1.33GHz 将被选作降频的目标频率。</li><li>conservative: 与 ondemand 不同，平滑地调整 CPU 频率，频率的升降是渐变式的, 会自动在频率上下限调整，和 ondemand 的区别在于它会按需分配频率，而不是一味追求最高频率；</li></ol><h2 id="cpupower-设置-performance"><a href="#cpupower-设置-performance" class="headerlink" title="cpupower 设置 performance"></a>cpupower 设置 performance</h2><blockquote><p>从 conservative 或者 powersave 切换到 performance 的效果还是杠杠的</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS 安装 kernel-tools</span></span><br><span class="line">yum install kernel-tools</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu 安装 CPU 模式无图形化切换器</span></span><br><span class="line">apt install cpufrequtils</span><br><span class="line"></span><br><span class="line"><span class="comment"># cpupower 设置 performance</span></span><br><span class="line">cpupower frequency-set -g performance</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前的调节器</span></span><br><span class="line">cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor</span><br><span class="line">performance</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 cpupower 配置文件</span></span><br><span class="line">cat &lt;&lt; EOF | sudo tee /etc/sysconfig/cpupower</span><br><span class="line"><span class="comment"># See 'cpupower help' and cpupower(1) for more info</span></span><br><span class="line">CPUPOWER_START_OPTS=<span class="string">"frequency-set -g performance"</span></span><br><span class="line">CPUPOWER_STOP_OPTS=<span class="string">"frequency-set -g ondemand"</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建自启动服务</span></span><br><span class="line">cat &lt;&lt; EOF | sudo tee /usr/lib/systemd/system/cpupower.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Configure CPU power related settings</span><br><span class="line">After=syslog.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=oneshot</span><br><span class="line">RemainAfterExit=yes</span><br><span class="line">EnvironmentFile=/etc/sysconfig/cpupower</span><br><span class="line">ExecStart=/usr/bin/cpupower <span class="variable">$CPUPOWER_START_OPTS</span></span><br><span class="line">ExecStop=/usr/bin/cpupower <span class="variable">$CPUPOWER_STOP_OPTS</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新 system 服务</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> cpupower.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># systemd.service — Service unit configuration</span></span><br><span class="line">https://www.freedesktop.org/software/systemd/man/systemd.service.html</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190702190945.png" alt=""></p><h2 id="无法使用-cpupower-调整-performance"><a href="#无法使用-cpupower-调整-performance" class="headerlink" title="无法使用 cpupower 调整 performance"></a>无法使用 cpupower 调整 performance</h2><blockquote><p>比如我们遇到相同类型 CPU 硬件和操作系统版本，但不同厂商会出现无法使用 cpupower 调整 performance 的情况</p></blockquote><p>Dell R440 CPU: Intel(R) Xeon(R) Silver 4116 CPU @ 2.10GHz <code>Failed</code></p><p>Dell R430 CPU: Intel(R) Xeon(R) CPU E5-2640 v4 @ 2.40GHz <code>Success</code></p><p>Huawei 1288H V5 CPU: Intel(R) Xeon(R) Silver 4116 CPU @ 2.10GHz <code>Success</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果遇到以下报错请确认硬件厂商是否做了限制，只能通过 BIOS 调节</span></span><br><span class="line">[root@sg-gop-10-71-14-91 wangao]<span class="comment"># cpupower frequency-set -g performance</span></span><br><span class="line">Setting cpu: 0</span><br><span class="line">Error setting new values. Common errors:</span><br><span class="line">- Do you have proper administration rights? (super-user?)</span><br><span class="line">- Is the governor you requested available and modprobed?</span><br><span class="line">- Trying to <span class="built_in">set</span> an invalid policy?</span><br><span class="line">- Trying to <span class="built_in">set</span> a specific frequency, but userspace governor is not available,</span><br><span class="line">   <span class="keyword">for</span> example because of hardware <span class="built_in">which</span> cannot be <span class="built_in">set</span> to a specific frequency</span><br><span class="line">   or because the userspace governor isn<span class="string">'t loaded?</span></span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.kernel.org/doc/Documentation/cpu-freq/governors.txt" target="_blank" rel="noopener">CPU frequency and voltage scaling code in the Linux(TM) kernel</a><br><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/power_management_guide/index" target="_blank" rel="noopener">POWER MANAGEMENT GUIDE</a></p>]]></content>
    
    <summary type="html">
    
      CPU优化建议使用cpupower设置CPU Performance模式
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
</feed>
