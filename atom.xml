<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HelloDog</title>
  
  <subtitle>Keep Calm and Carry On</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wsgzao.github.io/"/>
  <updated>2019-11-13T11:00:28.776Z</updated>
  <id>https://wsgzao.github.io/</id>
  
  <author>
    <name>wsgzao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nginx 基础知识从小白到入门</title>
    <link href="https://wsgzao.github.io/post/nginx/"/>
    <id>https://wsgzao.github.io/post/nginx/</id>
    <published>2019-11-12T06:59:49.000Z</published>
    <updated>2019-11-13T11:00:28.776Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Nginx 现在几乎是众多大型网站的必用技术，大家应该都知道 <a href="https://www.nginx.com/blog/nginx-joins-f5/" target="_blank" rel="noopener">Nginx 被 F5 收购</a> 的大事件，章亦春也在专心维护 OpenResty 项目构建和谐家园，无论你选择 Nginx 还是 OpenResty，都需要对 Nginx 有一个比较全面的了解，日后才能做到事半功倍。本文以开发者必备的 Nginx 基础知识为主，在参考文章中罗列了目前比较优秀的 Nginx 和 OpenResty 参考教程，希望对大家有帮助。</p><blockquote><p>Nginx 基础知识从小白到入门</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 11 月 12 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/nginx/">https://wsgzao.github.io/post/nginx/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://nginx.org/" target="_blank" rel="noopener">nginx.org</a></p><p><a href="https://www.nginx.com/" target="_blank" rel="noopener">NGINX Plus</a></p><p><a href="https://openresty.org/" target="_blank" rel="noopener">OpenResty</a></p><hr><h2 id="Nginx-基础知识"><a href="#Nginx-基础知识" class="headerlink" title="Nginx 基础知识"></a>Nginx 基础知识</h2><blockquote><p>Nginx 是什么？</p></blockquote><p>Nginx 是一个 web 服务器，主要处理客户端和服务器的请求分发。</p><blockquote><p>特点和优势</p></blockquote><ol><li>高并发</li><li>热部署</li><li>快</li><li>低功耗</li><li>热部署</li></ol><blockquote><p>使用和扩展</p></blockquote><p>开源免费的 Nginx 与商业版 Nginx Plus，与之对应的是免费 OpenResty 与商业版 OpenResty</p><ul><li>开源版 <a href="https://nginx.org/" target="_blank" rel="noopener">nginx.org</a></li><li>商业版 <a href="https://www.nginx.com/" target="_blank" rel="noopener">NGINX Plus</a></li><li>阿里巴巴 <a href="https://tengine.taobao.org/" target="_blank" rel="noopener">Tengine</a></li><li>开源版 <a href="https://openresty.org/" target="_blank" rel="noopener">OpenResty</a></li><li>商业版 <a href="https://openresty.com/" target="_blank" rel="noopener">OpenResty</a></li></ul><blockquote><p>陶辉《深入理解 Nginx》作者在极客时间上的讲义 PDF 已经介绍的非常详细了，如果觉得课程不错可以选择购买尽量少走弯路</p></blockquote><p><a href="https://github.com/russelltao/geektime-nginx" target="_blank" rel="noopener">极客时间：nginx 核心知识 100 讲配置文件与代码分享</a></p><h2 id="nginx-正向代理与反向代理"><a href="#nginx-正向代理与反向代理" class="headerlink" title="nginx 正向代理与反向代理"></a>nginx 正向代理与反向代理</h2><blockquote><p>为了便于理解，首先先来了解一下一些基础知识，nginx 是一个高性能的反向代理服务器那么什么是反向代理呢？</p></blockquote><p>代理是在服务器和客户端之间假设的一层服务器，代理将接收客户端的请求并将它转发给服务器，然后将服务端的响应转发给客户端。</p><p>不管是正向代理还是反向代理，实现的都是上面的功能。</p><p>如果你对 <a href="https://wsgzao.github.io/post/osi/">OSI 七层模型与 TCP/IP 四层模型</a> 不是很熟悉可以再回顾下</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191113180648.png" alt=""></p><blockquote><p>正向代理</p></blockquote><p>正向代理（forward）意思是一个位于客户端和原始服务器 (origin server) 之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标 (原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。</p><p>正向代理是为我们服务的，即为客户端服务的，客户端可以根据正向代理访问到它本身无法访问到的服务器资源。</p><p>正向代理对我们是透明的，对服务端是非透明的，即服务端并不知道自己收到的是来自代理的访问还是来自真实客户端的访问。</p><blockquote><p>反向代理</p></blockquote><p>反向代理（Reverse Proxy）方式是指以代理服务器来接受 internet 上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 internet 上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。</p><p>反向代理是为服务端服务的，反向代理可以帮助服务器接收来自客户端的请求，帮助服务器做请求转发，负载均衡等。</p><p>反向代理对服务端是透明的，对我们是非透明的，即我们并不知道自己访问的是代理服务器，而服务器知道反向代理在为他服务。</p><h2 id="nginx-基本配置"><a href="#nginx-基本配置" class="headerlink" title="nginx 基本配置"></a>nginx 基本配置</h2><p>安装 nginx 时通常需要编译自己需要的模块，可以<a href="https://wsgzao.github.io/post/rpmbuild/">使用 rpmbuild 制作 Nginx 的 RPM 包</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">main                                # 全局配置</span><br><span class="line"></span><br><span class="line">events &#123;                            # nginx 工作模式配置</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;                                # http 设置</span><br><span class="line">    ....</span><br><span class="line"></span><br><span class="line">    server &#123;                        # 服务器主机配置</span><br><span class="line">        ....</span><br><span class="line">        location &#123;                    # 路由配置</span><br><span class="line">            ....</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location path &#123;</span><br><span class="line">            ....</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location otherpath &#123;</span><br><span class="line">            ....</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        ....</span><br><span class="line"></span><br><span class="line">        location &#123;</span><br><span class="line">            ....</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    upstream name &#123;                    # 负载均衡配置</span><br><span class="line">        ....</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果想要生成 nginx 规范配置，可以参考<a href="https://nginxconfig.io/" target="_blank" rel="noopener">nginxconfig.io</a></p><p>下面是 <code>nginx</code> 一些配置中常用的内置全局变量，你可以在配置的任何位置使用它们。</p><table><thead><tr><th>变量名</th><th>功能</th></tr></thead><tbody><tr><td><code>$host</code></td><td>请求信息中的 <code>Host</code>，如果请求中没有 <code>Host</code> 行，则等于设置的服务器名</td></tr><tr><td><code>$request_method</code></td><td>客户端请求类型，如 <code>GET</code>、<code>POST</code></td></tr><tr><td><code>$remote_addr</code></td><td>客户端的 <code>IP</code> 地址</td></tr><tr><td><code>$args</code></td><td>请求中的参数</td></tr><tr><td><code>$content_length</code></td><td>请求头中的 <code>Content-length</code> 字段</td></tr><tr><td><code>$http_user_agent</code></td><td>客户端 agent 信息</td></tr><tr><td><code>$http_cookie</code></td><td>客户端 cookie 信息</td></tr><tr><td><code>$remote_addr</code></td><td>客户端的 IP 地址</td></tr><tr><td><code>$remote_port</code></td><td>客户端的端口</td></tr><tr><td><code>$server_protocol</code></td><td>请求使用的协议，如 <code>HTTP/1.0</code>、<code>HTTP/1.1\</code></td></tr><tr><td><code>$server_addr</code></td><td>服务器地址</td></tr><tr><td><code>$server_name</code></td><td>服务器名称</td></tr><tr><td><code>$server_port</code></td><td>服务器的端口号</td></tr></tbody></table><h2 id="nginx-负载均衡"><a href="#nginx-负载均衡" class="headerlink" title="nginx 负载均衡"></a>nginx 负载均衡</h2><p>Upstream 指定后端服务器地址列表，在 server 中拦截响应请求，并将请求转发到 Upstream 中配置的服务器列表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">upstream balanceServer &#123;</span><br><span class="line">    server 10.1.22.33:12345;</span><br><span class="line">    server 10.1.22.34:12345;</span><br><span class="line">    server 10.1.22.35:12345;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    server_name  fe.server.com;</span><br><span class="line">    listen 80;</span><br><span class="line">    location /api &#123;</span><br><span class="line">        proxy_pass http://balanceServer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的配置只是指定了 nginx 需要转发的服务端列表，并没有指定分配策略。</p><p>默认情况下采用的是轮询策略，将所有客户端请求轮询分配给服务端。这种策略是可以正常工作的，但是如果其中某一台服务器压力太大，出现延迟，会影响所有分配在这台服务器下的用户。</p><h2 id="nginx-常用命令"><a href="#nginx-常用命令" class="headerlink" title="nginx 常用命令"></a>nginx 常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 快速关闭 Nginx，可能不保存相关信息，并迅速终止 web 服务</span></span><br><span class="line">nginx -s stop</span><br><span class="line"><span class="comment"># 平稳关闭 Nginx，保存相关信息，有安排的结束 web 服务</span></span><br><span class="line">nginx -s quit</span><br><span class="line"><span class="comment"># 因改变了 Nginx 相关配置，需要重新加载配置而重载</span></span><br><span class="line">nginx -s reload</span><br><span class="line"><span class="comment"># 重新打开日志文件</span></span><br><span class="line">nginx -s reopen</span><br><span class="line"><span class="comment"># 为 Nginx 指定一个配置文件，来代替缺省的</span></span><br><span class="line">nginx -c filename</span><br><span class="line"><span class="comment"># 不运行，而仅仅测试配置文件。nginx 将检查配置文件的语法的正确性，并尝试打开配置文件中所引用到的文件</span></span><br><span class="line">nginx -t</span><br><span class="line"><span class="comment">#  显示 nginx 的版本</span></span><br><span class="line">nginx -v</span><br><span class="line"><span class="comment"># 显示 nginx 的版本，编译器版本和配置参数</span></span><br><span class="line">nginx -V</span><br><span class="line"><span class="comment"># 格式换显示 nginx 配置参数</span></span><br><span class="line">2&gt;&amp;1 nginx -V | xargs -n1</span><br><span class="line">2&gt;&amp;1 nginx -V | xargs -n1 | grep lua</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><blockquote><p>以上内容只是 nginx 的冰山一角，我个人推荐大家跟着官方文档或者类似极客时间的教程学习，可以少走很多弯路</p></blockquote><p><a href="https://nginx.org/en/docs/" target="_blank" rel="noopener">nginx documentation</a></p><p><a href="http://www.conardli.top/blog/article/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E5%A4%87%E7%9A%84nginx%E7%9F%A5%E8%AF%86.html" target="_blank" rel="noopener">前端开发者必备的 nginx 知识</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzA4Nzg5Nzc5OA==&amp;mid=2651674303&amp;idx=1&amp;sn=b34cbf009aac5f901ce81a65df06359f&amp;chksm=8bcb9516bcbc1c006ff36cd7a8a83d40c7b24143d0c76fc15f61bbb2c210355615125aa95d94&amp;mpshare=1&amp;scene=1&amp;srcid=1031DJIgeaaQj5fafJbAc3mg#rd" target="_blank" rel="noopener">百万并发下 Nginx 的优化之道</a></p><p><a href="http://openresty.org/download/agentzh-nginx-tutorials-zhcn.html" target="_blank" rel="noopener">agentzh 的 Nginx 教程</a></p><p><a href="https://moonbingbing.gitbooks.io/openresty-best-practices/content/index.html" target="_blank" rel="noopener">OpenResty 最佳实践</a></p><blockquote><p>以下为极客时间专栏</p></blockquote><p><a href="https://time.geekbang.org/course/intro/138" target="_blank" rel="noopener">Nginx 核心知识 100 讲</a></p><p><a href="https://github.com/russelltao/geektime-nginx" target="_blank" rel="noopener">极客时间：nginx 核心知识 100 讲配置文件与代码分享</a></p><p><a href="https://time.geekbang.org/column/intro/186" target="_blank" rel="noopener">OpenResty 从入门到实战</a></p>]]></content>
    
    <summary type="html">
    
      Nginx基础知识从小白到入门
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 日志切割神器 logrotate 原理介绍和配置详解</title>
    <link href="https://wsgzao.github.io/post/logrotate/"/>
    <id>https://wsgzao.github.io/post/logrotate/</id>
    <published>2019-11-05T06:59:49.000Z</published>
    <updated>2019-11-07T03:28:49.545Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在 Linux 环境中能够帮助我们分析问题蛛丝马迹的有效办法之一便是日志，常见的如操作系统 syslog 日志 <code>/var/log/messages</code>，应用程序 Nginx 日志 <code>/var/log/nginx/*.log</code>。但如果服务器数量较多，日志文件大小增长较快，不断消耗磁盘空间就会触发告警，如果需要人为定期按照各种维度去手动清理日志就显得十分棘手。为了节省空间和方便整理，可以将日志文件按时间或大小分成多份，删除时间久远的日志文件，这就是通常说的日志滚动 <a href="https://en.wikipedia.org/wiki/Log_rotation" target="_blank" rel="noopener">(log rotation)</a>。logrotate<a href="https://github.com/logrotate/logrotate" target="_blank" rel="noopener">(GitHub 地址)</a> 诞生于 1996/11/19 是一个 Linux 系统日志的管理工具，本文会详细介绍 Linux 日志切割神器 logrotate 的原理和配置。</p><blockquote><p>Linux 日志切割神器 logrotate 原理介绍和配置详解</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 11 月 05 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/logrotate/">https://wsgzao.github.io/post/logrotate/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://linux.die.net/man/8/logrotate" target="_blank" rel="noopener">man logrotate</a></p><hr><h2 id="logrotate-简介"><a href="#logrotate-简介" class="headerlink" title="logrotate 简介"></a>logrotate 简介</h2><blockquote><p>logrotate ‐ rotates, compresses, and mails system logs</p></blockquote><p>logrotate is designed to ease administration of systems that generate large numbers of log files. It allows automatic rotation, compression, removal, and mailing of log files. Each log file may be handled daily, weekly, monthly, or when it grows too large.</p><p>Normally, logrotate is run as a daily cron job. It will not modify a log more than once in one day unless the criterion for that log is based on the log’s size and logrotate is being run more than once each day, or unless the -f or –force option is used.</p><p>Any number of config files may be given on the command line. Later config files may override the options given in earlier files, so the order in which the logrotate config files are listed is important. Normally, a single config file which includes any other config files which are needed should be used. See below for more information on how to<br>use the include directive to accomplish this. If a directory is given on the command line, every file in that directory is used as a config file.</p><p>If no command line arguments are given, logrotate will print version and copyright information, along with a short usage summary. If any errors occur while rotating logs, logrotate will exit with non-zero status.</p><p>logrotate 是一个 linux 系统日志的管理工具。可以对单个日志文件或者某个目录下的文件按时间 / 大小进行切割，压缩操作；指定日志保存数量；还可以在切割之后运行自定义命令。</p><p>logrotate 是基于 crontab 运行的，所以这个时间点是由 crontab 控制的，具体可以查询 crontab 的配置文件 /etc/anacrontab。 系统会按照计划的频率运行 logrotate，通常是每天。在大多数的 Linux 发行版本上，计划每天运行的脚本位于  /etc/cron.daily/logrotate。</p><p>主流 Linux 发行版上都默认安装有 logrotate 包，如果你的 linux 系统中找不到 logrotate, 可以使用 apt-get 或 yum 命令来安装。</p><h2 id="logrotate-运行机制"><a href="#logrotate-运行机制" class="headerlink" title="logrotate 运行机制"></a>logrotate 运行机制</h2><p>logrotate 在很多 Linux 发行版上都是默认安装的。系统会定时运行 logrotate，一般是每天一次。系统是这么实现按天执行的。crontab 会每天定时执行 /etc/cron.daily 目录下的脚本，而这个目录下有个文件叫 logrotate。在 centos 上脚本内容是这样的：</p><p>系统自带 cron task：<code>/etc/cron.daily/logrotate</code>，每天运行一次。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@gop-sg-192-168-56-103 logrotate.d]<span class="comment"># cat /etc/cron.daily/logrotate</span></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">/usr/sbin/logrotate -s /var/lib/logrotate/logrotate.status /etc/logrotate.conf</span><br><span class="line">EXITVALUE=$?</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$EXITVALUE</span> != 0 ]; <span class="keyword">then</span></span><br><span class="line">    /usr/bin/logger -t logrotate <span class="string">"ALERT exited abnormally with [<span class="variable">$EXITVALUE</span>]"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>可以看到这个脚本主要做的事就是以 <code>/etc/logrotate.conf</code> 为配置文件执行了 logrotate。就是这样实现了每天执行一次 logrotate。</p><p>因为我的系统执行 <code>/etc/cron.daily</code> 目录下的脚本不是我想滚动日志的时间，所以我把 <code>/etc/cron.daily/logrotate</code> 拷了出来，改了一下 logrotate 配置文件的路径，然后在 crontab 里加上一条指定时间执行这个脚本的记录，自定义周期滚动日志就大功告成了。这种自定义的方式有两点要注意：</p><ol><li>配置文件里一定要配置 <code>rotate 文件数目</code> 这个参数。如果不配置默认是 0 个，也就是只允许存在一份日志，刚切分出来的日志会马上被删除。多么痛的领悟，说多了都是泪。</li><li>执行 logrotate 命令最好加 <code>-f</code> 参数，不然有时候配置文件修改的内容不生效。</li></ol><p>很多程序的会用到 logrotate 滚动日志，比如 nginx。它们安装后，会在 <code>/etc/logrotate.d</code> 这个目录下增加自己的 logrotate 的配置文件。logrotate 什么时候执行 <code>/etc/logrotate.d</code> 下的配置呢？看到 <code>/etc/logrotate.conf</code> 里这行，一切就不言而喻了。</p><pre><code>include /etc/logrotate.d</code></pre><h2 id="logrotate-原理"><a href="#logrotate-原理" class="headerlink" title="logrotate 原理"></a>logrotate 原理</h2><p>logrotate 是怎么做到滚动日志时不影响程序正常的日志输出呢？logrotate 提供了两种解决方案。</p><ol><li>create</li><li>copytruncate</li></ol><h3 id="Linux-文件操作机制"><a href="#Linux-文件操作机制" class="headerlink" title="Linux 文件操作机制"></a>Linux 文件操作机制</h3><p>介绍一下相关的 Linux 下的文件操作机制。</p><p>Linux 文件系统里文件和文件名的关系如下图。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191106155554.png" alt=""></p><p>目录也是文件，文件里存着文件名和对应的 inode 编号。通过这个 inode 编号可以查到文件的元数据和文件内容。文件的元数据有引用计数、操作权限、拥有者 ID、创建时间、最后修改时间等等。文件件名并不在元数据里而是在目录文件中。因此文件改名、移动，都不会修改文件，而是修改目录文件。</p><p>借《UNIX 环境高级编程》里的图说一下进程打开文件的机制。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191106155617.png" alt=""></p><p>进程每新打开一个文件，系统会分配一个新的文件描述符给这个文件。文件描述符对应着一个文件表。表里面存着文件的状态信息（<code>O_APPEND</code>/<code>O_CREAT</code>/<code>O_DIRECT</code>…）、当前文件位置和文件的 inode 信息。系统会为每个进程创建独立的文件描述符和文件表，不同进程是不会共用同一个文件表。正因为如此，不同进程可以同时用不同的状态操作同一个文件的不同位置。文件表中存的是 inode 信息而不是文件路径，所以文件路径发生改变不会影响文件操作。</p><h3 id="create"><a href="#create" class="headerlink" title="create"></a>create</h3><p>这也就是默认的方案，可以通过 create 命令配置文件的权限和属组设置；这个方案的思路是重命名原日志文件，创建新的日志文件。详细步骤如下：</p><ol><li>重命名正在输出日志文件，因为重命名只修改目录以及文件的名称，而进程操作文件使用的是 inode，所以并不影响原程序继续输出日志。</li><li>创建新的日志文件，文件名和原日志文件一样，注意，此时只是文件名称一样，而 inode 编号不同，原程序输出的日志还是往原日志文件输出。</li><li>最后通过某些方式通知程序，重新打开日志文件；由于重新打开日志文件会用到文件路径而非 inode 编号，所以打开的是新的日志文件。</li></ol><p>如上也就是 logrotate 的默认操作方式，也就是 mv+create 执行完之后，通知应用重新在新文件写入即可。mv+create 成本都比较低，几乎是原子操作，如果应用支持重新打开日志文件，如 syslog, nginx, mysql 等，那么这是最好的方式。</p><p>不过，有些程序并不支持这种方式，压根没有提供重新打开日志的接口；而如果重启应用程序，必然会降低可用性，为此引入了如下方式。</p><h3 id="copytruncate"><a href="#copytruncate" class="headerlink" title="copytruncate"></a>copytruncate</h3><p>该方案是把正在输出的日志拷 (copy) 一份出来，再清空 (trucate) 原来的日志；详细步骤如下：</p><ol><li>将当前正在输出的日志文件复制为目标文件，此时程序仍然将日志输出到原来文件中，此时，原文件名也没有变。</li><li>清空日志文件，原程序仍然还是输出到预案日志文件中，因为清空文件只把文件的内容删除了，而 inode 并没改变，后续日志的输出仍然写入该文件中。</li></ol><p>如上所述，对于 copytruncate 也就是先复制一份文件，然后清空原有文件。</p><p>通常来说，清空操作比较快，但是如果日志文件太大，那么复制就会比较耗时，从而可能导致部分日志丢失。不过这种方式不需要应用程序的支持即可。</p><h2 id="配置-logrotate"><a href="#配置-logrotate" class="headerlink" title="配置 logrotate"></a>配置 logrotate</h2><p>执行文件： <code>/usr/sbin/logrotate</code><br>主配置文件: <code>/etc/logrotate.conf</code><br>自定义配置文件: <code>/etc/logrotate.d/*.conf</code></p><p>修改配置文件后，并不需要重启服务。<br>由于 logrotate 实际上只是一个可执行文件，不是以 daemon 运行。</p><p><code>/etc/logrotate.conf</code> - 顶层主配置文件，通过 include 指令，会引入 <code>/etc/logrotate.d</code> 下的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@gop-sg-192-168-56-103 wangao]<span class="comment"># cat /etc/logrotate.conf</span></span><br><span class="line"><span class="comment"># see "man logrotate" for details</span></span><br><span class="line"><span class="comment"># rotate log files weekly</span></span><br><span class="line">weekly</span><br><span class="line"></span><br><span class="line"><span class="comment"># keep 4 weeks worth of backlogs</span></span><br><span class="line">rotate 4</span><br><span class="line"></span><br><span class="line"><span class="comment"># create new (empty) log files after rotating old ones</span></span><br><span class="line">create</span><br><span class="line"></span><br><span class="line"><span class="comment"># use date as a suffix of the rotated file</span></span><br><span class="line">dateext</span><br><span class="line"></span><br><span class="line"><span class="comment"># uncomment this if you want your log files compressed</span></span><br><span class="line"><span class="comment">#compress</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># RPM packages drop log rotation information into this directory</span></span><br><span class="line">include /etc/logrotate.d</span><br><span class="line"></span><br><span class="line"><span class="comment"># no packages own wtmp and btmp -- we'll rotate them here</span></span><br><span class="line">/var/<span class="built_in">log</span>/wtmp &#123;</span><br><span class="line">    monthly</span><br><span class="line">    create 0664 root utmp</span><br><span class="line">minsize 1M</span><br><span class="line">    rotate 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/var/<span class="built_in">log</span>/btmp &#123;</span><br><span class="line">    missingok</span><br><span class="line">    monthly</span><br><span class="line">    create 0600 root utmp</span><br><span class="line">    rotate 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># system-specific logs may be also be configured here.</span></span><br></pre></td></tr></table></figure><p><code>/etc/logrotate.d/</code> 通常一些第三方软件包，会把自己私有的配置文件，也放到这个目录下。 如 yum，zabbix-agent，syslog，nginx 等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@gop-sg-192-168-56-103 logrotate.d]<span class="comment"># cat yum</span></span><br><span class="line">/var/<span class="built_in">log</span>/yum.log &#123;</span><br><span class="line">    missingok</span><br><span class="line">    notifempty</span><br><span class="line">    size 30k</span><br><span class="line">    yearly</span><br><span class="line">    create 0600 root root</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行-logrotate"><a href="#运行-logrotate" class="headerlink" title="运行 logrotate"></a>运行 logrotate</h2><p>具体 logrotate 命令格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">logrotate [OPTION...] &lt;configfile&gt;</span><br><span class="line">-d, --debug ：debug 模式，测试配置文件是否有错误。</span><br><span class="line">-f, --force ：强制转储文件。</span><br><span class="line">-m, --mail=command ：压缩日志后，发送日志到指定邮箱。</span><br><span class="line">-s, --state=statefile ：使用指定的状态文件。</span><br><span class="line">-v, --verbose ：显示转储过程。</span><br></pre></td></tr></table></figure><blockquote><p>crontab 定时</p></blockquote><p>通常惯用的做法是配合 crontab 来定时调用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">*/30 * * * * /usr/sbin/logrotate /etc/logrotate.d/rsyslog &gt; /dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><blockquote><p>手动运行</p></blockquote><p>debug 模式：指定 <code>[-d|--debug]</code></p><pre><code>logrotate -d &lt;configfile&gt;</code></pre><p>并不会真正进行 rotate 或者 compress 操作，但是会打印出整个执行的流程，和调用的脚本等详细信息。</p><p>verbose 模式： 指定 <code>[-v|--verbose]</code></p><pre><code>logrotate -v &lt;configfile&gt;</code></pre><p>会真正执行操作，打印出详细信息（debug 模式，默认是开启 verbose）</p><h3 id="logrotate-参数"><a href="#logrotate-参数" class="headerlink" title="logrotate 参数"></a>logrotate 参数</h3><p>详细介绍请自行 <code>man logrotate</code>， 或者 <a href="https://linux.die.net/man/8/logrotate" target="_blank" rel="noopener">在线 man page</a>。</p><p>主要介绍下完成常用需求会用到的一些参数。</p><p>一个典型的配置文件如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/logrotate.d/log_file </span><br><span class="line"></span><br><span class="line">/var/log/log_file &#123;</span><br><span class="line"></span><br><span class="line">    monthly</span><br><span class="line">    rotate 5</span><br><span class="line">    compress</span><br><span class="line">    delaycompress</span><br><span class="line">    missingok</span><br><span class="line">    notifempty</span><br><span class="line">    create 644 root root</span><br><span class="line">    postrotate</span><br><span class="line">        /usr/bin/killall -HUP rsyslogd</span><br><span class="line">    endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>monthly: 日志文件将按月轮循。其它可用值为 <code>daily</code>，<code>weekly</code> 或者 <code>yearly</code>。</li><li>rotate 5: 一次将存储 5 个归档日志。对于第六个归档，时间最久的归档将被删除。</li><li>compress: 在轮循任务完成后，已轮循的归档将使用 gzip 进行压缩。</li><li>delaycompress: 总是与 compress 选项一起用，delaycompress 选项指示 logrotate 不要将最近的归档压缩，压缩 将在下一次轮循周期进行。这在你或任何软件仍然需要读取最新归档时很有用。</li><li>missingok: 在日志轮循期间，任何错误将被忽略，例如 “文件无法找到” 之类的错误。</li><li>notifempty: 如果日志文件为空，轮循不会进行。</li><li>create 644 root root: 以指定的权限创建全新的日志文件，同时 logrotate 也会重命名原始日志文件。</li><li>postrotate/endscript: 在所有其它指令完成后，postrotate 和 endscript 里面指定的命令将被执行。在这种情况下，rsyslogd 进程将立即再次读取其配置并继续运行。</li></ul><p>上面的模板是通用的，而配置参数则根据你的需求进行调整，不是所有的参数都是必要的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/var/log/log_file &#123;</span><br><span class="line">    size=50M</span><br><span class="line">    rotate 5</span><br><span class="line">    dateext</span><br><span class="line">    create 644 root root</span><br><span class="line">    postrotate</span><br><span class="line">        /usr/bin/killall -HUP rsyslogd</span><br><span class="line">    endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的配置文件中，我们只想要轮询一个日志文件，size=50M 指定日志文件大小可以增长到 50MB,dateext 指<br>示让旧日志文件以创建日期命名。</p><blockquote><p>常见配置参数</p></blockquote><ul><li>daily ：指定转储周期为每天</li><li>weekly ：指定转储周期为每周</li><li>monthly ：指定转储周期为每月</li><li>rotate count ：指定日志文件删除之前转储的次数，0 指没有备份，5 指保留 5 个备份</li><li>tabooext [+] list：让 logrotate 不转储指定扩展名的文件，缺省的扩展名是：.rpm-orig, .rpmsave, v, 和～</li><li>missingok：在日志轮循期间，任何错误将被忽略，例如 “文件无法找到” 之类的错误。</li><li>size size：当日志文件到达指定的大小时才转储，bytes (缺省) 及 KB (sizek) 或 MB (sizem)</li><li>compress： 通过 gzip 压缩转储以后的日志</li><li>nocompress： 不压缩</li><li>copytruncate：用于还在打开中的日志文件，把当前日志备份并截断</li><li>nocopytruncate： 备份日志文件但是不截断</li><li>create mode owner group ： 转储文件，使用指定的文件模式创建新的日志文件</li><li>nocreate： 不建立新的日志文件</li><li>delaycompress： 和 compress 一起使用时，转储的日志文件到下一次转储时才压缩</li><li>nodelaycompress： 覆盖 delaycompress 选项，转储同时压缩。</li><li>errors address ： 专储时的错误信息发送到指定的 Email 地址</li><li>ifempty ：即使是空文件也转储，这个是 logrotate 的缺省选项。</li><li>notifempty ：如果是空文件的话，不转储</li><li>mail address ： 把转储的日志文件发送到指定的 E-mail 地址</li><li>nomail ： 转储时不发送日志文件</li><li>olddir directory：储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统</li><li>noolddir： 转储后的日志文件和当前日志文件放在同一个目录下</li><li>prerotate/endscript： 在转储以前需要执行的命令可以放入这个对，这两个关键字必须单独成行</li></ul><p>更多信息请参考 man logrotate 帮助文档</p><h3 id="手动运行-logrotate-演练"><a href="#手动运行-logrotate-演练" class="headerlink" title="手动运行 logrotate 演练"></a>手动运行 logrotate 演练</h3><p>logrotate 可以在任何时候从命令行手动调用。<br>调用 /etc/lograte.d/ 下配置的所有日志：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# logrotate /etc/logrotate.conf</span><br></pre></td></tr></table></figure><p>要为某个特定的配置调用 logrotate：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# logrotate /etc/logrotate.d/log_file</span><br></pre></td></tr></table></figure><p>排障过程中的最佳选择是使用 <code>-d</code> 选项以预演方式运行 logrotate。要进行验证，不用实际轮循任何日志文件，<br>可以模拟演练日志轮循并显示其输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># logrotate -d /etc/logrotate.d/log_file</span></span><br><span class="line"></span><br><span class="line">reading config file /etc/logrotate.d/log_file</span><br><span class="line">reading config info <span class="keyword">for</span> /var/<span class="built_in">log</span>/log_file </span><br><span class="line"></span><br><span class="line">Handling 1 logs</span><br><span class="line"></span><br><span class="line">rotating pattern: /var/<span class="built_in">log</span>/log_file  monthly (5 rotations)</span><br><span class="line">empty <span class="built_in">log</span> files are not rotated, old logs are removed</span><br><span class="line">considering <span class="built_in">log</span> /var/<span class="built_in">log</span>/log_file</span><br><span class="line">  <span class="built_in">log</span> does not need rotating</span><br><span class="line">not running postrotate script, since no logs were rotated</span><br></pre></td></tr></table></figure><p>正如我们从上面的输出结果可以看到的，logrotate 判断该轮循是不必要的。如果文件的时间小于一天，这就会发生了。</p><p>强制轮循即使轮循条件没有满足，我们也可以通过使用 <code>-f</code> 选项来强制 logrotate 轮循日志文件，<code>-v</code> 参数提供了详细的输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># logrotate -vf /etc/logrotate.d/log_file </span></span><br><span class="line"></span><br><span class="line">reading config file /etc/logrotate.d/log_file</span><br><span class="line">reading config info <span class="keyword">for</span> /var/<span class="built_in">log</span>/log_file </span><br><span class="line"></span><br><span class="line">Handling 1 logs</span><br><span class="line"></span><br><span class="line">rotating pattern: /var/<span class="built_in">log</span>/log_file  forced from <span class="built_in">command</span> line (5 rotations)</span><br><span class="line">empty <span class="built_in">log</span> files are not rotated, old logs are removed</span><br><span class="line">considering <span class="built_in">log</span> /var/<span class="built_in">log</span>/log_file</span><br><span class="line">  <span class="built_in">log</span> needs rotating</span><br><span class="line">rotating <span class="built_in">log</span> /var/<span class="built_in">log</span>/log_file, <span class="built_in">log</span>-&gt;rotateCount is 5</span><br><span class="line">dateext suffix <span class="string">'-20180503'</span></span><br><span class="line">glob pattern <span class="string">'-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'</span></span><br><span class="line">previous <span class="built_in">log</span> /var/<span class="built_in">log</span>/log_file.1 does not exist</span><br><span class="line">renaming /var/<span class="built_in">log</span>/log_file.5.gz to /var/<span class="built_in">log</span>/log_file.6.gz (rotatecount 5, logstart 1, i 5), </span><br><span class="line">old <span class="built_in">log</span> /var/<span class="built_in">log</span>/log_file.5.gz does not exist</span><br><span class="line">renaming /var/<span class="built_in">log</span>/log_file.4.gz to /var/<span class="built_in">log</span>/log_file.5.gz (rotatecount 5, logstart 1, i 4), </span><br><span class="line">old <span class="built_in">log</span> /var/<span class="built_in">log</span>/log_file.4.gz does not exist</span><br><span class="line">renaming /var/<span class="built_in">log</span>/log_file.3.gz to /var/<span class="built_in">log</span>/log_file.4.gz (rotatecount 5, logstart 1, i 3), </span><br><span class="line">old <span class="built_in">log</span> /var/<span class="built_in">log</span>/log_file.3.gz does not exist</span><br><span class="line">renaming /var/<span class="built_in">log</span>/log_file.2.gz to /var/<span class="built_in">log</span>/log_file.3.gz (rotatecount 5, logstart 1, i 2), </span><br><span class="line">old <span class="built_in">log</span> /var/<span class="built_in">log</span>/log_file.2.gz does not exist</span><br><span class="line">renaming /var/<span class="built_in">log</span>/log_file.1.gz to /var/<span class="built_in">log</span>/log_file.2.gz (rotatecount 5, logstart 1, i 1), </span><br><span class="line">old <span class="built_in">log</span> /var/<span class="built_in">log</span>/log_file.1.gz does not exist</span><br><span class="line">renaming /var/<span class="built_in">log</span>/log_file.0.gz to /var/<span class="built_in">log</span>/log_file.1.gz (rotatecount 5, logstart 1, i 0), </span><br><span class="line">old <span class="built_in">log</span> /var/<span class="built_in">log</span>/log_file.0.gz does not exist</span><br><span class="line"><span class="built_in">log</span> /var/<span class="built_in">log</span>/log_file.6.gz doesn<span class="string">'t exist -- won'</span>t try to dispose of it</span><br><span class="line">fscreate context <span class="built_in">set</span> to unconfined_u:object_r:var_log_t:s0</span><br><span class="line">renaming /var/<span class="built_in">log</span>/log_file to /var/<span class="built_in">log</span>/log_file.1</span><br><span class="line">creating new /var/<span class="built_in">log</span>/log_file mode = 0644 uid = 0 gid = 0</span><br><span class="line">running postrotate script</span><br><span class="line"><span class="built_in">set</span> default create context</span><br></pre></td></tr></table></figure><h2 id="logrotate-配置文件实例"><a href="#logrotate-配置文件实例" class="headerlink" title="logrotate 配置文件实例"></a>logrotate 配置文件实例</h2><blockquote><p>syslog</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@gop-sg-192-168-56-103 logrotate.d]# cat syslog</span><br><span class="line">/var/log/cron</span><br><span class="line">/var/log/maillog</span><br><span class="line">/var/log/messages</span><br><span class="line">/var/log/secure</span><br><span class="line">/var/log/spooler</span><br><span class="line">&#123;</span><br><span class="line">    missingok</span><br><span class="line">    sharedscripts</span><br><span class="line">    postrotate</span><br><span class="line">/bin/kill -HUP `cat /var/run/syslogd.pid 2&gt; /dev/null` 2&gt; /dev/null || true</span><br><span class="line">    endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>zabbix-agent</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@gop-sg-192-168-56-103 logrotate.d]# cat zabbix-agent</span><br><span class="line">/var/log/zabbix/zabbix_agentd.log &#123;</span><br><span class="line">weekly</span><br><span class="line">rotate 12</span><br><span class="line">compress</span><br><span class="line">delaycompress</span><br><span class="line">missingok</span><br><span class="line">notifempty</span><br><span class="line">create 0664 zabbix zabbix</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>nginx</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@gop-sg-192-168-56-103 logrotate.d]# cat nginx</span><br><span class="line">/var/log/nginx/*.log /var/log/nginx/*/*.log&#123;</span><br><span class="line">daily</span><br><span class="line">missingok</span><br><span class="line">rotate 14</span><br><span class="line">compress</span><br><span class="line">delaycompress</span><br><span class="line">notifempty</span><br><span class="line">create 640 root adm</span><br><span class="line">sharedscripts</span><br><span class="line">postrotate</span><br><span class="line">[ ! -f /var/run/nginx.pid ] || kill -USR1 `cat /var/run/nginx.pid`</span><br><span class="line">endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>influxdb</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@gop-sg-192-168-56-103 logrotate.d]# cat influxdb</span><br><span class="line">/var/log/influxdb/influxd.log &#123;</span><br><span class="line">    daily</span><br><span class="line">    rotate 7</span><br><span class="line">    missingok</span><br><span class="line">    dateext</span><br><span class="line">    copytruncate</span><br><span class="line">    compress</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关于-USR1-信号解释"><a href="#关于-USR1-信号解释" class="headerlink" title="关于 USR1 信号解释"></a>关于 USR1 信号解释</h2><p>USR1 亦通常被用来告知应用程序重载配置文件；例如，向 Apache HTTP 服务器发送一个 USR1 信号将导致以下步骤的发生：停止接受新的连接，等待当前连接停止，重新载入配置文件，重新打开日志文件，重启服务器，从而实现相对平滑的不关机的更改。</p><p>对于 USR1 和 2 都可以用户自定义的，在 POSIX 兼容的平台上，SIGUSR1 和 SIGUSR2 是发送给一个进程的信号，它表示了用户定义的情况。它们的符号常量在头文件 signal.h 中定义。在不同的平台上，信号的编号可能发生变化，因此需要使用符号名称。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kill -HUP pid</span><br><span class="line">killall -HUP pName</span><br></pre></td></tr></table></figure><p>其中 pid 是进程标识，pName 是进程的名称。</p><p>如果想要更改配置而不需停止并重新启动服务，可以使用上面两个命令。在对配置文件作必要的更改后，发出该命令以动态更新服务配置。根据约定，当你发送一个挂起信号 (信号 1 或 HUP) 时，大多数服务器进程 (所有常用的进程) 都会进行复位操作并重新加载它们的配置文件。</p><h2 id="logrotate-日志切割轮询"><a href="#logrotate-日志切割轮询" class="headerlink" title="logrotate 日志切割轮询"></a>logrotate 日志切割轮询</h2><p>由于 logrotate 是基于 cron 运行的，所以这个日志轮转的时间是由 cron 控制的，具体可以查询 cron 的配置文件 /etc/anacrontab，过往的老版本的文件为（/etc/crontab）</p><p>查看轮转文件：/etc/anacrontab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@gop-sg-192-168-56-103 logrotate.d]<span class="comment"># cat /etc/anacrontab</span></span><br><span class="line"><span class="comment"># /etc/anacrontab: configuration file for anacron</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># See anacron(8) and anacrontab(5) for details.</span></span><br><span class="line"></span><br><span class="line">SHELL=/bin/sh</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line"><span class="comment"># the maximal random delay added to the base delay of the jobs</span></span><br><span class="line">RANDOM_DELAY=45</span><br><span class="line"><span class="comment"># the jobs will be started during the following hours only</span></span><br><span class="line">START_HOURS_RANGE=3-22</span><br><span class="line"></span><br><span class="line"><span class="comment">#period in days   delay in minutes   job-identifier   command</span></span><br><span class="line">15cron.dailynice run-parts /etc/cron.daily</span><br><span class="line">725cron.weeklynice run-parts /etc/cron.weekly</span><br><span class="line">@monthly 45cron.monthlynice run-parts /etc/cron.monthly</span><br></pre></td></tr></table></figure><p>使用 anacrontab 轮转的配置文件，日志切割的生效时间是在凌晨 3 点到 22 点之间，而且随机延迟时间是 45 分钟，但是这样配置无法满足我们在现实中的应用</p><p>现在的需求是将切割时间调整到每天的晚上 12 点，即每天切割的日志是前一天的 0-24 点之间的内容，操作如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/anacrontab /etc/anacrontab.bak          // 取消日志自动轮转的设置 </span><br></pre></td></tr></table></figure><p>使用 crontab 来作为日志轮转的触发容器来修改 logrotate 默认执行时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@gop-sg-192-168-56-103 logrotate.d]<span class="comment"># vim /etc/crontab</span></span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line">HOME=/</span><br><span class="line"></span><br><span class="line"><span class="comment"># run-parts</span></span><br><span class="line">01 * * * * root run-parts /etc/cron.hourly</span><br><span class="line">59 23 * * * root run-parts /etc/cron.daily</span><br><span class="line">22 4 * * 0 root run-parts /etc/cron.weekly</span><br><span class="line">42 4 1 * * root run-parts /etc/cron.monthly</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.digitalocean.com/community/tutorials/how-to-manage-logfiles-with-logrotate-on-ubuntu-16-04" target="_blank" rel="noopener">How To Manage Logfiles with Logrotate on Ubuntu 16.04</a><br><a href="https://www.linode.com/docs/uptime/logs/use-logrotate-to-manage-log-files/" target="_blank" rel="noopener">How to Use logrotate to Manage Log Files</a><br><a href="https://linux.cn/article-4126-1.html" target="_blank" rel="noopener">Linux 日志文件总管 ——logrotate</a><br><a href="http://www.lightxue.com/how-logrotate-works" target="_blank" rel="noopener">logrotate 机制和原理</a><br><a href="https://blog.51cto.com/luweiv998/2354160" target="_blank" rel="noopener">Linux 自带 Logrotate 日志切割工具配置详解</a></p>]]></content>
    
    <summary type="html">
    
      Linux日志切割神器logrotate原理介绍和配置详解
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 rpmbuild 制作 Nginx 的 RPM 包</title>
    <link href="https://wsgzao.github.io/post/rpmbuild/"/>
    <id>https://wsgzao.github.io/post/rpmbuild/</id>
    <published>2019-11-04T06:59:49.000Z</published>
    <updated>2019-11-05T09:16:10.301Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191104154723.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>题图为 RPM 包制作原理图，有时候为了方便源码包的安装，和我们自己订制软件包的需求，我们会把一些源码包按照我们的需求来做成 rpm 包，当有了源码包就可以直接编译得到二进制安装包和其他任意包。spec file 是制作 rpm 包最核心的部分，rpm 包的制作就是根据 spec file 来实现的。在制作自定义 rpm 包的时候最好不要使用管理员进行, 因为管理员权限过大，如果一个命令写错了，结果可能是灾难性的，而制件一个 rpm 包普通用户完全可以实现。本文主要介绍使用 rpmbuild 制作 Nginx 的 RPM 包，大部分步骤已经使用 Bash Shell 自动化完成了，大家可以基于此重新定义。</p><blockquote><p>使用 rpmbuild 制作 Nginx 的 RPM 包</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 11 月 04 日 - 更新 openresty/lua-nginx-module<br>2019 年 01 月 16 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/rpmbuild/">https://wsgzao.github.io/post/rpmbuild/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://openresty.org/" target="_blank" rel="noopener">OpenResty</a><br>Creating RPM packages - <a href="https://docs.fedoraproject.org/en-US/quick-docs/creating-rpm-packages/index.html" target="_blank" rel="noopener">https://docs.fedoraproject.org/en-US/quick-docs/creating-rpm-packages/index.html</a><br>How to create a GNU Hello RPM - <a href="https://fedoraproject.org/wiki/How_to_create_a_GNU_Hello_RPM_package/zh-cn" target="_blank" rel="noopener">https://fedoraproject.org/wiki/How_to_create_a_GNU_Hello_RPM_package/zh-cn</a><br>使用 rpm-build 制作 nginx 的 rpm 包 - <a href="http://blog.51cto.com/nmshuishui/1583117" target="_blank" rel="noopener">http://blog.51cto.com/nmshuishui/1583117</a></p><hr><h2 id="什么是-RPM"><a href="#什么是-RPM" class="headerlink" title="什么是 RPM"></a>什么是 RPM</h2><p>An RPM package is simply a file containing other files and information about them needed by the system. Specifically, an RPM package consists of the cpio archive, which contains the files, and the RPM header, which contains metadata about the package. The rpm package manager uses this metadata to determine dependencies, where to install files, and other information.</p><p>There are two types of RPM packages:</p><ul><li>source RPM (SRPM)</li><li>binary RPM</li></ul><p>SRPMs and binary RPMs share the file format and tooling, but have different contents and serve different purposes. An SRPM contains source code, optionally patches to it, and a SPEC file, which describes how to build the source code into a binary RPM. A binary RPM contains the binaries built from the sources and patches.</p><p>RPM 有五种基本的操作功能：安装、卸载、升级、查询和验证。</p><p>Linux 软件包分为两大类：</p><ol><li>二进制类包，包括 rpm 安装包（一般分为 i386 和 x86 等几种）</li><li>源码类包，源码包和开发包应该归位此类（.src.rpm）</li></ol><p>在 Redhat 下，rpm 包的默认制作路径在 /usr/src/redhat 下，这其中包含了 6 个目录（要求全部大写）。但 Centos 并没有该目录，因此我们不得不自定义工作车间，即使在 Redhat 下有该目录，一般也是自定义到普通用户的家目录下的</p><table><thead><tr><th>Directory</th><th>Usage</th></tr></thead><tbody><tr><td>BUILD</td><td>源代码解压以后放的位置，只需提供 BUILD 目录，具体里面放什么，不用我们管，所以真正的制作车间是 BUILD 目录</td></tr><tr><td>RPMS</td><td>制作完成后的 rpm 包存放目录，为特定平台指定子目录（i386,i686,ppc）</td></tr><tr><td>SOURCES</td><td>收集的源文件，源材料，补丁文件等存放位置    </td></tr><tr><td>SPECS</td><td>存放 spec 文件，作为制作 rpm 包的领岗文件，以 rpm 名. spec</td></tr><tr><td>SRPMS</td><td>src 格式的 rpm 包位置 ，既然是 src 格式的包，就没有平台的概念了           </td></tr><tr><td>BuiltRoot</td><td>假根，使用 install 临时安装到这个目录，把这个目录当作根来用的，所以在这个目录下的目录文件，才是真正的目录文件。当打包完成后，在清理阶段，这个目录将被删除</td></tr></tbody></table><p>更详细的介绍可以参考 <code>RPM Packaging Guide</code></p><p><a href="https://rpm-packaging-guide.github.io/" target="_blank" rel="noopener">https://rpm-packaging-guide.github.io/</a></p><h2 id="制作-rpm-包"><a href="#制作-rpm-包" class="headerlink" title="制作 rpm 包"></a>制作 rpm 包</h2><blockquote><p>如果你只关心如何使用可以直接跳过看下文，这里主要展示代码和配置文件</p></blockquote><h3 id="build-shell"><a href="#build-shell" class="headerlink" title="build shell"></a>build shell</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># luajit.sh</span></span><br><span class="line">LUAVER=2.0.5</span><br><span class="line">WKDIR=<span class="string">"/root/rpmbuild/SOURCES"</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">wget http://luajit.org/download/LuaJIT-<span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line">tar zxf LuaJIT-<span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line">rm LuaJIT-<span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line"><span class="built_in">cd</span> LuaJIT-<span class="variable">$LUAVER</span></span><br><span class="line">make BUILDMODE=static</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">export</span> LUAJIT_LIB=/usr/<span class="built_in">local</span>/lib</span><br><span class="line"><span class="built_in">export</span> LUAJIT_INC=/usr/<span class="built_in">local</span>/include/luajit-2.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># build.sh</span></span><br><span class="line">NGX_VER=1.14.2</span><br><span class="line">WKDIR=<span class="string">"/root/rpmbuild/SOURCES"</span></span><br><span class="line">CURRENTDIR=`dirname $(readlink -f <span class="string">"<span class="variable">$0</span>"</span>)`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$CURRENTDIR</span></span><br><span class="line"><span class="built_in">export</span> LUAJIT_LIB=/usr/<span class="built_in">local</span>/lib</span><br><span class="line"><span class="built_in">export</span> LUAJIT_INC=/usr/<span class="built_in">local</span>/include/luajit-2.0</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">wget http://nginx.org/download/nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">tar xzf nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">rm nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">mv nginx-<span class="variable">$NGX_VER</span> nginx-garena-<span class="variable">$NGX_VER</span></span><br><span class="line"><span class="built_in">cd</span> nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line"></span><br><span class="line">mkdir -p contrib</span><br><span class="line"><span class="built_in">cd</span> contrib/</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/bigplum/Nginx-limit-traffic-rate-module.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/agentzh/headers-more-nginx-module.git</span><br><span class="line"><span class="comment">#git clone git://github.com/gnosek/nginx-upstream-fair.git</span></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/agentzh/<span class="built_in">echo</span>-nginx-module.git</span><br><span class="line"><span class="comment">#git clone git://github.com/arut/nginx-dav-ext-module.git</span></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/r10r/ngx_http_auth_pam_module.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/FRiCKLE/ngx_cache_purge.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/simpl/ngx_devel_kit.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/openresty/lua-nginx-module.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/nbs-system/naxsi.git</span><br><span class="line">rm -rf */.git</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line">cp -r <span class="variable">$CURRENTDIR</span>/nginx-template/* <span class="variable">$WKDIR</span>/nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line">cp <span class="variable">$CURRENTDIR</span>/nginx-spec /root/rpmbuild/SPECS/</span><br><span class="line"><span class="comment">#cp /root/rules $WKDIR/nginx-garena-$NGX_VER/debian/</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">tar zcf nginx-garena-<span class="variable">$NGX_VER</span>.tar.gz nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line"><span class="built_in">cd</span> /root/rpmbuild/SPECS/</span><br><span class="line">rpmbuild -ba nginx-spec</span><br><span class="line"><span class="built_in">cd</span> /root/rpmbuild/RPMS/noarch</span><br></pre></td></tr></table></figure><h3 id="nginx-spec"><a href="#nginx-spec" class="headerlink" title="nginx-spec"></a>nginx-spec</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.The introduction section </span></span><br><span class="line">Name: nginx-garena                                      <span class="comment"># 软件包名称 </span></span><br><span class="line">Version: 1.14.2                                         <span class="comment"># 版本号 </span></span><br><span class="line">Release: 0                                              <span class="comment"># release 号 </span></span><br><span class="line">Summary: nginx garena rpm                               <span class="comment"># 简要描述信息 </span></span><br><span class="line">Source0: nginx-garena-1.14.1.tar.gz                     <span class="comment"># source 主要是引用一下自己定义好的脚本，配置文件之类的内容 </span></span><br><span class="line">License: GPL                                            <span class="comment"># 一定带上（最好是对方源码包的 License）BSD，GPL，GPLv2</span></span><br><span class="line">Group: Rahul                                            <span class="comment"># 要全用这里面的一个组：less /usr/share/doc/rpm-version/GROUPS</span></span><br><span class="line">BuildArch: noarch               </span><br><span class="line">BuildRoot: %&#123;_tmppath&#125;/%&#123;name&#125;-buildroot                </span><br><span class="line">%description                                            <span class="comment"># 软件包详述 </span></span><br><span class="line">Garena self-build Nginx.</span><br><span class="line">%define _binaries_in_noarch_packages_terminate_build   0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.The Prep section 准备阶段, 主要就是把源码包解压到 build 目录下，设置一下环境变量，并 cd 进去 </span></span><br><span class="line">%prep</span><br><span class="line">%setup -q %&#123;name&#125;-%&#123;version&#125;                            <span class="comment"># 这个宏的作用静默模式解压并 cd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.The Build Section 编译制作阶段，这一节主要用于编译源码 </span></span><br><span class="line">%build</span><br><span class="line">CFLAGS=<span class="string">"<span class="variable">$RPM_OPT_FLAGS</span>"</span> ./configure --prefix=/usr/share/nginx/ \</span><br><span class="line">                    --sbin-path=/usr/sbin/nginx \</span><br><span class="line">                    --conf-path=/etc/nginx/nginx.conf \</span><br><span class="line">                    --error-log-path=/var/<span class="built_in">log</span>/nginx/error.log \</span><br><span class="line">                    --http-log-path=/var/<span class="built_in">log</span>/nginx/access.log \</span><br><span class="line">                    --pid-path=/var/run/nginx.pid \</span><br><span class="line">                    --lock-path=/var/lock/nginx.lock \</span><br><span class="line">                    --http-client-body-temp-path=/var/lib/nginx/body \</span><br><span class="line">                    --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \</span><br><span class="line">                    --http-proxy-temp-path=/var/lib/nginx/proxy \</span><br><span class="line">                    --http-scgi-temp-path=/var/lib/nginx/scgi \</span><br><span class="line">                    --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \</span><br><span class="line">                    --with-pcre-jit \</span><br><span class="line">                    --with-http_flv_module \</span><br><span class="line">                    --with-http_mp4_module \</span><br><span class="line">                    --with-file-aio \</span><br><span class="line">                    --with-http_v2_module \</span><br><span class="line">                    --with-stream \</span><br><span class="line">                    --with-stream_ssl_module \</span><br><span class="line">                    --with-http_auth_request_module \</span><br><span class="line">                    --with-http_slice_module \</span><br><span class="line">                    --with-threads \</span><br><span class="line">                    --with-http_gunzip_module \</span><br><span class="line">                    --with-http_random_index_module \</span><br><span class="line">                    --with-http_secure_link_module \</span><br><span class="line">                    --with-http_geoip_module \</span><br><span class="line">                    --with-http_ssl_module \</span><br><span class="line">                    --with-openssl=/usr/<span class="built_in">local</span>/src/openssl-1.0.2p \</span><br><span class="line">                    --with-http_addition_module \</span><br><span class="line">                    --with-http_geoip_module \</span><br><span class="line">                    --with-http_gzip_static_module \</span><br><span class="line">                    --with-http_realip_module \</span><br><span class="line">                    --with-ipv6 \</span><br><span class="line">                    --without-mail_pop3_module \</span><br><span class="line">                    --without-mail_imap_module \</span><br><span class="line">                    --without-mail_smtp_module \</span><br><span class="line">                    --add-module=contrib/Nginx-limit-traffic-rate-module \</span><br><span class="line">                    --add-module=contrib/headers-more-nginx-module \</span><br><span class="line">                    --add-module=contrib/<span class="built_in">echo</span>-nginx-module \</span><br><span class="line">                    --add-module=contrib/ngx_http_auth_pam_module \</span><br><span class="line">                    --add-module=contrib/ngx_cache_purge \</span><br><span class="line">                    --add-module=contrib/ngx_devel_kit \</span><br><span class="line">                    --add-module=contrib/lua-nginx-module \</span><br><span class="line">                    --add-module=contrib/naxsi/naxsi_src</span><br><span class="line">make -j8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.Install section  这一节主要用于完成实际安装软件必须执行的命令，可包含 4 种类型脚本 </span></span><br><span class="line">%install</span><br><span class="line">[ <span class="string">"<span class="variable">$RPM_BUILD_ROOT</span>"</span> != <span class="string">"/"</span> ] &amp;&amp; rm -rf <span class="variable">$RPM_BUILD_ROOT</span></span><br><span class="line">make DESTDIR=<span class="variable">$RPM_BUILD_ROOT</span> install</span><br><span class="line">install -m 0755 -d <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/sites-enabled</span><br><span class="line">install -m 0755 -d <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/sites-available</span><br><span class="line">install -m 0755 -d <span class="variable">$RPM_BUILD_ROOT</span>/var/<span class="built_in">log</span>/nginx</span><br><span class="line">install -m 0755 -d <span class="variable">$RPM_BUILD_ROOT</span>/var/lib/nginx</span><br><span class="line">install -D -m 644 conf/sites-available/000_stub_status <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/sites-available/000_stub_status</span><br><span class="line">install -D -m 644 conf/django_fastcgi_params <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/django_fastcgi_params</span><br><span class="line">install -D -m 644 conf/naxsi_core.rules <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/naxsi_core.rules</span><br><span class="line">install -D -m 644 conf/sites-available/000_stub_status <span class="variable">$RPM_BUILD_ROOT</span>/etc/nginx/sites-enabled/000_stub_status</span><br><span class="line">install -D -m 644 logrotate.d/nginx <span class="variable">$RPM_BUILD_ROOT</span>/etc/logrotate.d/nginx</span><br><span class="line">install -D -m 644 nginx.service <span class="variable">$RPM_BUILD_ROOT</span>/usr/lib/systemd/system/nginx.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.clean section 清理段，clean 的主要作用就是删除 BUILD</span></span><br><span class="line">%clean</span><br><span class="line">[ <span class="string">"<span class="variable">$RPM_BUILD_ROOT</span>"</span> != <span class="string">"/"</span> ] &amp;&amp; rm -rf <span class="variable">$RPM_BUILD_ROOT</span></span><br><span class="line">%post</span><br><span class="line">useradd -s /sbin/nologin -d /var/www www-data</span><br><span class="line">chown -R www-data.www-data /var/<span class="built_in">log</span>/nginx /var/lib/nginx</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br><span class="line"><span class="built_in">echo</span> %&#123;name&#125;-%&#123;version&#125; is successfully installed.</span><br><span class="line">systemctl start nginx</span><br><span class="line"><span class="comment"># 6.file section 文件列表段，这个阶段是把前面已经编译好的内容要打包了 </span></span><br><span class="line">%files</span><br><span class="line">%defattr(-,root,root)</span><br><span class="line">%dir /etc/nginx</span><br><span class="line">/etc/nginx/*</span><br><span class="line">%dir /usr/src/debug/nginx-garena-1.14.1</span><br><span class="line">/usr/src/debug/nginx-garena-1.14.1/*</span><br><span class="line">/usr/sbin/nginx</span><br><span class="line">%dir /usr/share/nginx</span><br><span class="line">/usr/share/nginx/*</span><br><span class="line">/etc/logrotate.d/nginx</span><br><span class="line">/usr/lib/systemd/system/nginx.service</span><br><span class="line">/usr/lib/debug/*</span><br><span class="line">/usr/lib/debug/.build-id/*</span><br><span class="line">%dir /var/<span class="built_in">log</span>/nginx</span><br><span class="line">%dir /var/lib/nginx</span><br><span class="line">%config(noreplace) /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><h3 id="nginx-template"><a href="#nginx-template" class="headerlink" title="nginx-template"></a>nginx-template</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line">nginx-template</span><br><span class="line">    ├── conf</span><br><span class="line">    │   ├── django_fastcgi_params</span><br><span class="line">    │   ├── naxsi_core.rules</span><br><span class="line">    │   └── sites-available</span><br><span class="line">    │       └── 000_stub_status</span><br><span class="line">    ├── logrotate.d</span><br><span class="line">    │   └── nginx</span><br><span class="line">    ├── nginx.conf</span><br><span class="line">    └── nginx.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/conf/django_fastcgi_params</span></span><br><span class="line">fastcgi_param  QUERY_STRING       <span class="variable">$query_string</span>;</span><br><span class="line">fastcgi_param  REQUEST_METHOD     <span class="variable">$request_method</span>;</span><br><span class="line">fastcgi_param  CONTENT_TYPE       <span class="variable">$content_type</span>;</span><br><span class="line">fastcgi_param  CONTENT_LENGTH     <span class="variable">$content_length</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_param  PATH_INFO          <span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">fastcgi_param  REQUEST_URI        <span class="variable">$request_uri</span>;</span><br><span class="line">fastcgi_param  DOCUMENT_URI       <span class="variable">$document_uri</span>;</span><br><span class="line">fastcgi_param  DOCUMENT_ROOT      <span class="variable">$document_root</span>;</span><br><span class="line">fastcgi_param  SERVER_PROTOCOL    <span class="variable">$server_protocol</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;</span><br><span class="line">fastcgi_param  SERVER_SOFTWARE    nginx/<span class="variable">$nginx_version</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_param  REMOTE_ADDR        <span class="variable">$remote_addr</span>;</span><br><span class="line">fastcgi_param  REMOTE_PORT        <span class="variable">$remote_port</span>;</span><br><span class="line">fastcgi_param  SERVER_ADDR        <span class="variable">$server_addr</span>;</span><br><span class="line">fastcgi_param  SERVER_PORT        <span class="variable">$server_port</span>;</span><br><span class="line">fastcgi_param  SERVER_NAME        <span class="variable">$server_name</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_param  HTTP_X_FORWARDED_PROTOCOL        <span class="variable">$scheme</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_pass_header Authorization;</span><br><span class="line">fastcgi_intercept_errors off;</span><br><span class="line">fastcgi_keep_conn on;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/conf/naxsi_core.rules</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment">## INTERNAL RULES IDS:1-999     ##</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment">#@MainRule "msg:weird request, unable to parse" id:1;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:request too big, stored on disk and not parsed" id:2;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid hex encoding, null bytes" id:10;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:unknown content-type" id:11;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid formatted url" id:12;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid POST format" id:13;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid POST boundary" id:14;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:invalid JSON" id:15;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:empty POST" id:16;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:libinjection_sql" id:17;</span></span><br><span class="line"><span class="comment">#@MainRule "msg:libinjection_xss" id:18;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line"><span class="comment">## SQL Injections IDs:1000-1099 ##</span></span><br><span class="line"><span class="comment">##################################</span></span><br><span class="line">MainRule <span class="string">"rx:select|union|update|delete|insert|table|from|ascii|hex|unhex|drop"</span> <span class="string">"msg:sql keywords"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1000;</span><br><span class="line">MainRule <span class="string">"str:\""</span> <span class="string">"msg:double quote"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8,<span class="variable">$XSS</span>:8"</span> id:1001;</span><br><span class="line">MainRule <span class="string">"str:0x"</span> <span class="string">"msg:0x, possible hex encoding"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:2"</span> id:1002;</span><br><span class="line"><span class="comment">## Hardcore rules</span></span><br><span class="line">MainRule <span class="string">"str:/*"</span> <span class="string">"msg:mysql comment (/*)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8"</span> id:1003;</span><br><span class="line">MainRule <span class="string">"str:*/"</span> <span class="string">"msg:mysql comment (*/)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8"</span> id:1004;</span><br><span class="line">MainRule <span class="string">"str:|"</span> <span class="string">"msg:mysql keyword (|)"</span>  <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8"</span> id:1005;</span><br><span class="line">MainRule <span class="string">"str:&amp;&amp;"</span> <span class="string">"msg:mysql keyword (&amp;&amp;)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:8"</span> id:1006;</span><br><span class="line"><span class="comment">## end of hardcore rules</span></span><br><span class="line">MainRule <span class="string">"str:--"</span> <span class="string">"msg:mysql comment (--)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1007;</span><br><span class="line">MainRule <span class="string">"str:;"</span> <span class="string">"msg:semicolon"</span> <span class="string">"mz:BODY|URL|ARGS"</span> <span class="string">"s:<span class="variable">$SQL</span>:4,<span class="variable">$XSS</span>:8"</span> id:1008;</span><br><span class="line">MainRule <span class="string">"str:="</span> <span class="string">"msg:equal sign in var, probable sql/xss"</span> <span class="string">"mz:ARGS|BODY"</span> <span class="string">"s:<span class="variable">$SQL</span>:2"</span> id:1009;</span><br><span class="line">MainRule <span class="string">"str:("</span> <span class="string">"msg:open parenthesis, probable sql/xss"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4,<span class="variable">$XSS</span>:8"</span> id:1010;</span><br><span class="line">MainRule <span class="string">"str:)"</span> <span class="string">"msg:close parenthesis, probable sql/xss"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4,<span class="variable">$XSS</span>:8"</span> id:1011;</span><br><span class="line">MainRule <span class="string">"str:'"</span> <span class="string">"msg:simple quote"</span> <span class="string">"mz:ARGS|BODY|URL|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4,<span class="variable">$XSS</span>:8"</span> id:1013;</span><br><span class="line">MainRule <span class="string">"str:,"</span> <span class="string">"msg:comma"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1015;</span><br><span class="line">MainRule <span class="string">"str:#"</span> <span class="string">"msg:mysql comment (#)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1016;</span><br><span class="line">MainRule <span class="string">"str:@@"</span> <span class="string">"msg:double arobase (@@)"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$SQL</span>:4"</span> id:1017;</span><br><span class="line"></span><br><span class="line"><span class="comment">###############################</span></span><br><span class="line"><span class="comment">## OBVIOUS RFI IDs:1100-1199 ##</span></span><br><span class="line"><span class="comment">###############################</span></span><br><span class="line">MainRule <span class="string">"str:http://"</span> <span class="string">"msg:http:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1100;</span><br><span class="line">MainRule <span class="string">"str:https://"</span> <span class="string">"msg:https:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1101;</span><br><span class="line">MainRule <span class="string">"str:ftp://"</span> <span class="string">"msg:ftp:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1102;</span><br><span class="line">MainRule <span class="string">"str:php://"</span> <span class="string">"msg:php:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1103;</span><br><span class="line">MainRule <span class="string">"str:sftp://"</span> <span class="string">"msg:sftp:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1104;</span><br><span class="line">MainRule <span class="string">"str:zlib://"</span> <span class="string">"msg:zlib:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1105;</span><br><span class="line">MainRule <span class="string">"str:data://"</span> <span class="string">"msg:data:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1106;</span><br><span class="line">MainRule <span class="string">"str:glob://"</span> <span class="string">"msg:glob:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1107;</span><br><span class="line">MainRule <span class="string">"str:phar://"</span> <span class="string">"msg:phar:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1108;</span><br><span class="line">MainRule <span class="string">"str:file://"</span> <span class="string">"msg:file:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1109;</span><br><span class="line">MainRule <span class="string">"str:gopher://"</span> <span class="string">"msg:gopher:// scheme"</span> <span class="string">"mz:ARGS|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$RFI</span>:8"</span> id:1110;</span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment">## Directory traversal IDs:1200-1299 ##</span></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line">MainRule <span class="string">"str:.."</span> <span class="string">"msg:double dot"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1200;</span><br><span class="line">MainRule <span class="string">"str:/etc/passwd"</span> <span class="string">"msg:obvious probe"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1202;</span><br><span class="line">MainRule <span class="string">"str:c:\\"</span> <span class="string">"msg:obvious windows path"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1203;</span><br><span class="line">MainRule <span class="string">"str:cmd.exe"</span> <span class="string">"msg:obvious probe"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1204;</span><br><span class="line">MainRule <span class="string">"str:\\"</span> <span class="string">"msg:backslash"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$TRAVERSAL</span>:4"</span> id:1205;</span><br><span class="line"><span class="comment">#MainRule "str:/" "msg:slash in args" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:2" id:1206;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########################################</span></span><br><span class="line"><span class="comment">## Cross Site Scripting IDs:1300-1399 ##</span></span><br><span class="line"><span class="comment">########################################</span></span><br><span class="line">MainRule <span class="string">"str:&lt;"</span> <span class="string">"msg:html open tag"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:8"</span> id:1302;</span><br><span class="line">MainRule <span class="string">"str:&gt;"</span> <span class="string">"msg:html close tag"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:8"</span> id:1303;</span><br><span class="line">MainRule <span class="string">"str:["</span> <span class="string">"msg:open square backet ([), possible js"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:4"</span> id:1310;</span><br><span class="line">MainRule <span class="string">"str:]"</span> <span class="string">"msg:close square bracket (]), possible js"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:4"</span> id:1311;</span><br><span class="line">MainRule <span class="string">"str:~"</span> <span class="string">"msg:tilde (~) character"</span> <span class="string">"mz:BODY|URL|ARGS|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:4"</span> id:1312;</span><br><span class="line">MainRule <span class="string">"str:`"</span>  <span class="string">"msg:grave accent (`)"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:8"</span> id:1314;</span><br><span class="line">MainRule <span class="string">"rx:%[2|3]."</span>  <span class="string">"msg:double encoding"</span> <span class="string">"mz:ARGS|URL|BODY|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$XSS</span>:8"</span> id:1315;</span><br><span class="line"></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line"><span class="comment">## Evading tricks IDs: 1400-1500 ##</span></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line">MainRule <span class="string">"str:&amp;#"</span> <span class="string">"msg:utf7/8 encoding"</span> <span class="string">"mz:ARGS|BODY|URL|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$EVADE</span>:4"</span> id:1400;</span><br><span class="line">MainRule <span class="string">"str:%U"</span> <span class="string">"msg:M$ encoding"</span> <span class="string">"mz:ARGS|BODY|URL|<span class="variable">$HEADERS_VAR</span>:Cookie"</span> <span class="string">"s:<span class="variable">$EVADE</span>:4"</span> id:1401;</span><br><span class="line"></span><br><span class="line"><span class="comment">#############################</span></span><br><span class="line"><span class="comment">## File uploads: 1500-1600 ##</span></span><br><span class="line"><span class="comment">#############################</span></span><br><span class="line">MainRule <span class="string">"rx:\.ph|\.asp|\.ht"</span> <span class="string">"msg:asp/php file upload"</span> <span class="string">"mz:FILE_EXT"</span> <span class="string">"s:<span class="variable">$UPLOAD</span>:8"</span> id:1500;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/logrotate.d/nginx</span></span><br><span class="line">/var/<span class="built_in">log</span>/nginx/*.<span class="built_in">log</span> /var/<span class="built_in">log</span>/nginx/*/*.<span class="built_in">log</span>&#123;</span><br><span class="line">daily</span><br><span class="line">missingok</span><br><span class="line">rotate 14</span><br><span class="line">compress</span><br><span class="line">delaycompress</span><br><span class="line">notifempty</span><br><span class="line">create 640 root adm</span><br><span class="line">sharedscripts</span><br><span class="line">postrotate</span><br><span class="line">[ ! -f /var/run/nginx.pid ] || <span class="built_in">kill</span> -USR1 `cat /var/run/nginx.pid`</span><br><span class="line">endscript</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/nginx.conf</span></span><br><span class="line">user www-data;</span><br><span class="line">worker_processes auto;</span><br><span class="line"></span><br><span class="line"><span class="comment">#worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;</span></span><br><span class="line">worker_rlimit_nofile 655650;</span><br><span class="line"></span><br><span class="line">error_log  /var/<span class="built_in">log</span>/nginx/error.log;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">        worker_connections  10240;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line"><span class="comment">#       include       /etc/nginx/naxsi_core.rules;</span></span><br><span class="line">        include       mime.types;</span><br><span class="line">        default_type  application/octet-stream;</span><br><span class="line">log_format garena <span class="string">'$remote_addr - $remote_user [$time_iso8601]"$request"$status $body_bytes_sent'</span></span><br><span class="line">                <span class="string">'"$http_referer" "$http_user_agent" $request_time $upstream_response_time "$http_x_forwarded_for" "$geoip_country_code" "$host"'</span>;</span><br><span class="line">        log_format garena_post <span class="string">'$remote_addr - $remote_user [$time_iso8601]"$request"$status $body_bytes_sent'</span></span><br><span class="line">                <span class="string">'"$http_referer" "$http_user_agent" $request_time $upstream_response_time "$http_x_forwarded_for" "$geoip_country_code" "$host" "$request_body"'</span>;</span><br><span class="line">log_format compact <span class="string">'$time_iso8601|$remote_addr|$geoip_country_code|$http_x_forwarded_for|$status|$request_time|$upstream_response_time|$request_length|$body_bytes_sent|$host|$request|$http_referer|$http_user_agent'</span>;</span><br><span class="line">log_format compact_post <span class="string">'$time_iso8601|$remote_addr|$geoip_country_code|$http_x_forwarded_for|$status|$request_time|$upstream_response_time|$request_length|$body_bytes_sent|$host|$request|$http_referer|$http_user_agent|$request_body'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#       access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">        sendfile        on;</span><br><span class="line"><span class="comment">#       tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">        keepalive_timeout  30;</span><br><span class="line">        fastcgi_keep_conn on;</span><br><span class="line">        tcp_nodelay        on;</span><br><span class="line"></span><br><span class="line">        gzip  on;</span><br><span class="line">        gzip_disable <span class="string">"MSIE [1-6]\.(?!.*SV1)"</span>;</span><br><span class="line">        gzip_proxied any;</span><br><span class="line">        gzip_buffers 16 8k;</span><br><span class="line">        gzip_types    text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json;</span><br><span class="line">        gzip_vary on;</span><br><span class="line">        include /etc/nginx/sites-enabled/*;</span><br><span class="line"></span><br><span class="line">set_real_ip_from 10.0.0.0/8;</span><br><span class="line">real_ip_header    X-Forwarded-For;</span><br><span class="line"><span class="comment">#real_ip_recursive on;</span></span><br><span class="line"><span class="comment">#geoip_country /usr/share/GeoIP/GeoIP.dat;</span></span><br><span class="line"></span><br><span class="line">        server_tokens off;         <span class="comment"># returns "Server: nginx"</span></span><br><span class="line">more_clear_headers Server; <span class="comment"># doesn't return"Server: "header at all</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-rpmbuild-centos7/nginx-template/nginx.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=The nginx HTTP and reverse proxy server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/run/nginx.pid</span><br><span class="line">ExecStartPre=/usr/sbin/nginx -t</span><br><span class="line">ExecStart=/usr/sbin/nginx</span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -s HUP <span class="variable">$MAINPID</span></span><br><span class="line">KillMode=process</span><br><span class="line">KillSignal=SIGQUIT</span><br><span class="line">TimeoutStopSec=5</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="Initialize-rpmbuild-env"><a href="#Initialize-rpmbuild-env" class="headerlink" title="Initialize rpmbuild env"></a>Initialize rpmbuild env</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check current os version and kernel</span></span><br><span class="line">cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.5.1804 (Core)</span><br><span class="line">uname -r</span><br><span class="line">3.10.0-862.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># install lua</span></span><br><span class="line">sh luajit.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum install dependencies</span></span><br><span class="line">yum install -y gcc pam-devel git rpm-build pcre-devel openssl openssl-devel geoip-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir</span></span><br><span class="line">mkdir -p /root/rpmbuild/SOURCES/</span><br><span class="line">mkdir -p /root/rpmbuild/SPECS/</span><br><span class="line">mkdir -p /root/rpmbuild/RPMS/noarch</span><br><span class="line"></span><br><span class="line"><span class="comment"># download openssl</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">wget https://github.com/openssl/openssl/archive/OpenSSL_1_0_2p.tar.gz</span><br><span class="line">tar xf OpenSSL_1_0_2p.tar.gz</span><br><span class="line">mv openssl-OpenSSL_1_0_2p/ openssl-1.0.2p</span><br><span class="line"></span><br><span class="line"><span class="comment"># confirm these files are correct</span></span><br><span class="line">[root@localhost ~]<span class="comment"># tree nginx-rpmbuild-centos7/</span></span><br><span class="line">nginx-rpmbuild-centos7/</span><br><span class="line">├── build.sh</span><br><span class="line">├── conf_buid</span><br><span class="line">│   ├── conf</span><br><span class="line">│   │   ├── django_fastcgi_params</span><br><span class="line">│   │   ├── fastcgi.conf</span><br><span class="line">│   │   ├── fastcgi_params</span><br><span class="line">│   │   ├── koi-utf</span><br><span class="line">│   │   ├── koi-win</span><br><span class="line">│   │   ├── mime.types</span><br><span class="line">│   │   ├── naxsi_core.rules</span><br><span class="line">│   │   ├── nginx.conf</span><br><span class="line">│   │   ├── scgi_params</span><br><span class="line">│   │   ├── sites-available</span><br><span class="line">│   │   │   └── 000_stub_status</span><br><span class="line">│   │   ├── uwsgi_params</span><br><span class="line">│   │   └── win-utf</span><br><span class="line">│   ├── logrotate.d</span><br><span class="line">│   │   └── nginx</span><br><span class="line">│   ├── nginx.conf</span><br><span class="line">│   └── nginx.service</span><br><span class="line">├── luajit.sh</span><br><span class="line">├── nginx-spec</span><br><span class="line">└── nginx-template</span><br><span class="line">    ├── conf</span><br><span class="line">    │   ├── django_fastcgi_params</span><br><span class="line">    │   ├── naxsi_core.rules</span><br><span class="line">    │   └── sites-available</span><br><span class="line">    │       └── 000_stub_status</span><br><span class="line">    ├── logrotate.d</span><br><span class="line">    │   └── nginx</span><br><span class="line">    ├── nginx.conf</span><br><span class="line">    └── nginx.service</span><br><span class="line"></span><br><span class="line">8 directories, 24 files</span><br></pre></td></tr></table></figure><h2 id="How-to-build-Nginx-RPM"><a href="#How-to-build-Nginx-RPM" class="headerlink" title="How to build Nginx RPM"></a>How to build Nginx RPM</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check nginx stable version from official website</span></span><br><span class="line">http://nginx.org/en/download.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># check configuration</span></span><br><span class="line">vim build.sh</span><br><span class="line"></span><br><span class="line">NGX_VER=1.14.2</span><br><span class="line">WKDIR=<span class="string">"/root/rpmbuild/SOURCES"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check nginx version</span></span><br><span class="line">vim nginx-spec</span><br><span class="line"></span><br><span class="line"><span class="comment"># run build.sh</span></span><br><span class="line">./build.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># RPM package</span></span><br><span class="line">Processing files: nginx-garena-1.14.2-0.noarch</span><br><span class="line">warning: File listed twice: /etc/nginx/nginx.conf</span><br><span class="line">Provides: config(nginx-garena) = 1.14.2-0 nginx-garena = 1.14.2-0</span><br><span class="line">Requires(interp): /bin/sh</span><br><span class="line">Requires(rpmlib): rpmlib(CompressedFileNames) &lt;= 3.0.4-1 rpmlib(FileDigests) &lt;= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) &lt;= 4.0-1</span><br><span class="line">Requires(post): /bin/sh</span><br><span class="line">Requires: libGeoIP.so.1()(64bit) libc.so.6()(64bit) libc.so.6(GLIBC_2.10)(64bit) libc.so.6(GLIBC_2.11)(64bit) libc.so.6(GLIBC_2.14)(64bit) libc.so.6(GLIBC_2.17)(64bit) libc.so.6(GLIBC_2.2.5)(64bit) libc.so.6(GLIBC_2.3)(64bit) libc.so.6(GLIBC_2.3.2)(64bit) libc.so.6(GLIBC_2.3.4)(64bit) libc.so.6(GLIBC_2.4)(64bit) libc.so.6(GLIBC_2.7)(64bit) libcrypt.so.1()(64bit) libcrypt.so.1(GLIBC_2.2.5)(64bit) libdl.so.2()(64bit) libdl.so.2(GLIBC_2.2.5)(64bit) libgcc_s.so.1()(64bit) libgcc_s.so.1(GCC_3.0)(64bit) libgcc_s.so.1(GCC_3.3)(64bit) libm.so.6()(64bit) libm.so.6(GLIBC_2.2.5)(64bit) libpam.so.0()(64bit) libpam.so.0(LIBPAM_1.0)(64bit) libpcre.so.1()(64bit) libpthread.so.0()(64bit) libpthread.so.0(GLIBC_2.2.5)(64bit) libpthread.so.0(GLIBC_2.3.2)(64bit) libz.so.1()(64bit) rtld(GNU_HASH)</span><br><span class="line">warning: Arch dependent binaries <span class="keyword">in</span> noarch package</span><br><span class="line">Checking <span class="keyword">for</span> unpackaged file(s): /usr/lib/rpm/check-files /root/rpmbuild/BUILDROOT/nginx-garena-1.14.2-0.x86_64</span><br><span class="line">Wrote: /root/rpmbuild/SRPMS/nginx-garena-1.14.2-0.src.rpm</span><br><span class="line">Wrote: /root/rpmbuild/RPMS/noarch/nginx-garena-1.14.2-0.noarch.rpm</span><br><span class="line">Executing(%clean): /bin/sh -e /var/tmp/rpm-tmp.iR5dLd</span><br><span class="line">+ <span class="built_in">umask</span> 022</span><br><span class="line">+ <span class="built_in">cd</span> /root/rpmbuild/BUILD</span><br><span class="line">+ <span class="built_in">cd</span> nginx-garena-1.14.2</span><br><span class="line">+ <span class="string">'['</span> /root/rpmbuild/BUILDROOT/nginx-garena-1.14.2-0.x86_64 <span class="string">'!='</span> / <span class="string">']'</span></span><br><span class="line">+ rm -rf /root/rpmbuild/BUILDROOT/nginx-garena-1.14.2-0.x86_64</span><br><span class="line">+ <span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><h2 id="基于-openresty-制作-nginx-rpm-安装包"><a href="#基于-openresty-制作-nginx-rpm-安装包" class="headerlink" title="基于 openresty 制作 nginx rpm 安装包"></a>基于 openresty 制作 nginx rpm 安装包</h2><blockquote><p>推荐大家向 openresty 转型，我在编译过程中主要遇到以下 4 个小问题</p></blockquote><ol><li>问题 1 沿用官方的 luajit v2.0.5 编译新版本 lua-nginx-module 应该会提示建议切换至 openresty 的 luajit v2.1 分支</li><li>问题 2 的解决方案是使用低版本 lua-nginx-module v0.10.14，使用最新版发现会触发该问题，等待官方修复</li><li>问题 3 的原因是因为 nginx 启动需要一点点时间，而 systemd 在 nginx 完成启动前就去读取 pid file 造成读取 pid 失败</li><li>问题 4 的 libluajit-5.1.so.2 问题跟着我的步骤执行应该不会出现，不需要执行 ln 软链接等操作</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@gop-sg-192-168-56-103 wangao]<span class="comment"># tailf /var/log/nginx/error.log</span></span><br><span class="line"><span class="comment"># 问题 1</span></span><br><span class="line">2019/11/04 11:59:56 [alert] 2749<span class="comment">#2749: detected a LuaJIT version which is not OpenResty's; many optimizations will be disabled and performance will be compromised (see https://github.com/openresty/luajit2 for OpenResty's LuaJIT or, even better, consider using the OpenResty releases from https://openresty.org/en/download.html)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题 2</span></span><br><span class="line">2019/11/04 11:59:56 [alert] 2749<span class="comment">#2749: failed to load the 'resty.core' module (https://github.com/openresty/lua-resty-core); ensure you are using an OpenResty release from https://openresty.org/en/download.html (reason: module 'resty.core' not found:</span></span><br><span class="line">no field package.preload[<span class="string">'resty.core'</span>]</span><br><span class="line">no file <span class="string">'./resty/core.lua'</span></span><br><span class="line">no file <span class="string">'/usr/local/share/luajit-2.0.5/resty/core.lua'</span></span><br><span class="line">no file <span class="string">'/usr/local/share/lua/5.1/resty/core.lua'</span></span><br><span class="line">no file <span class="string">'/usr/local/share/lua/5.1/resty/core/init.lua'</span></span><br><span class="line">no file <span class="string">'./resty/core.so'</span></span><br><span class="line">no file <span class="string">'/usr/local/lib/lua/5.1/resty/core.so'</span></span><br><span class="line">no file <span class="string">'/usr/local/lib/lua/5.1/loadall.so'</span></span><br><span class="line">no file <span class="string">'./resty.so'</span></span><br><span class="line">no file <span class="string">'/usr/local/lib/lua/5.1/resty.so'</span></span><br><span class="line">no file <span class="string">'/usr/local/lib/lua/5.1/loadall.so'</span>) <span class="keyword">in</span> /etc/nginx/nginx.conf:117</span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题 3</span></span><br><span class="line">[root@gop-sg-192-168-56-103 wangao]<span class="comment"># systemctl status nginx</span></span><br><span class="line">● nginx.service - The NGINX HTTP and reverse proxy server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Mon 2019-08-19 01:36:46 +08; 2 months 17 days ago</span><br><span class="line">  Process: 1105 ExecStart=/usr/sbin/nginx (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 1071 ExecStartPre=/usr/sbin/nginx -t (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 1111 (nginx)</span><br><span class="line">    Tasks: 2</span><br><span class="line">   CGroup: /system.slice/nginx.service</span><br><span class="line">           ├─1111 nginx: master process /usr/sbin/nginx</span><br><span class="line">           └─1112 nginx: worker process</span><br><span class="line"></span><br><span class="line">Aug 19 01:36:46 gop-sg-192-168-56-103 systemd[1]: Starting The NGINX HTTP and reverse proxy server...</span><br><span class="line">Aug 19 01:36:46 gop-sg-192-168-56-103 nginx[1071]: nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">Aug 19 01:36:46 gop-sg-192-168-56-103 nginx[1071]: nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">Aug 19 01:36:46 gop-sg-192-168-56-103 systemd[1]: Failed to <span class="built_in">read</span> PID from file /run/nginx.pid: Invalid argument</span><br><span class="line">Aug 19 01:36:46 gop-sg-192-168-56-103 systemd[1]: Started The NGINX HTTP and reverse proxy server.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 问题 4</span></span><br><span class="line">nginx: error <span class="keyword">while</span> loading shared libraries: libluajit-5.1.so.2: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><h3 id="环境初始化"><a href="#环境初始化" class="headerlink" title="环境初始化"></a>环境初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check current os version and kernel</span></span><br><span class="line">cat /etc/redhat-release</span><br><span class="line">CentOS Linux release 7.5.1804 (Core)</span><br><span class="line">uname -r</span><br><span class="line">3.10.0-862.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum</span></span><br><span class="line">yum install -y gcc pam-devel git rpm-build pcre-devel openssl openssl-devel geoip-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir</span></span><br><span class="line">mkdir -p /root/rpmbuild/SOURCES/</span><br><span class="line">mkdir -p /root/rpmbuild/SPECS/</span><br><span class="line">mkdir -p /root/rpmbuild/RPMS/noarch</span><br><span class="line"></span><br><span class="line"><span class="comment"># download openssl</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src</span><br><span class="line">wget https://github.com/openssl/openssl/archive/OpenSSL_1_0_2t.tar.gz</span><br><span class="line">tar xf OpenSSL_1_0_2t.tar.gz</span><br><span class="line">mv openssl-OpenSSL_1_0_2t/ openssl-1_0_2t</span><br><span class="line"></span><br><span class="line"><span class="comment"># install lua</span></span><br><span class="line">sh luajit2.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># confirm these files are correct</span></span><br><span class="line">[root@gop-sg-192-168-56-103 ~]<span class="comment"># tree nginx-rpmbuild-centos7/</span></span><br><span class="line">nginx-rpmbuild-centos7/</span><br><span class="line">├── build.sh</span><br><span class="line">├── conf_build</span><br><span class="line">│   ├── conf</span><br><span class="line">│   │   ├── django_fastcgi_params</span><br><span class="line">│   │   ├── fastcgi.conf</span><br><span class="line">│   │   ├── fastcgi_params</span><br><span class="line">│   │   ├── koi-utf</span><br><span class="line">│   │   ├── koi-win</span><br><span class="line">│   │   ├── mime.types</span><br><span class="line">│   │   ├── naxsi_core.rules</span><br><span class="line">│   │   ├── nginx.conf</span><br><span class="line">│   │   ├── scgi_params</span><br><span class="line">│   │   ├── sites-available</span><br><span class="line">│   │   │   └── 000_stub_status</span><br><span class="line">│   │   ├── uwsgi_params</span><br><span class="line">│   │   └── win-utf</span><br><span class="line">│   ├── logrotate.d</span><br><span class="line">│   │   └── nginx</span><br><span class="line">│   ├── nginx.conf</span><br><span class="line">│   └── nginx.service</span><br><span class="line">├── luajit2.sh</span><br><span class="line">├── luajit.sh</span><br><span class="line">├── nginx-spec</span><br><span class="line">└── nginx-template</span><br><span class="line">    ├── conf</span><br><span class="line">    │   ├── django_fastcgi_params</span><br><span class="line">    │   ├── naxsi_core.rules</span><br><span class="line">    │   ├── nginx.conf</span><br><span class="line">    │   └── sites-available</span><br><span class="line">    │       └── 000_stub_status</span><br><span class="line">    ├── logrotate.d</span><br><span class="line">    │   └── nginx</span><br><span class="line">    ├── nginx.conf</span><br><span class="line">    └── nginx.service</span><br><span class="line"></span><br><span class="line">8 directories, 26 files</span><br></pre></td></tr></table></figure><blockquote><p>luajit2.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/openresty/luajit2/releases</span></span><br><span class="line">LUAVER=<span class="string">"v2.1-20190912"</span></span><br><span class="line">WKDIR=<span class="string">"/root/rpmbuild/SOURCES"</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">wget https://github.com/openresty/luajit2/archive/<span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line">tar zxf <span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line">rm -f <span class="variable">$LUAVER</span>.tar.gz</span><br><span class="line"><span class="built_in">cd</span> luajit2*</span><br><span class="line">make BUILDMODE=static</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">export</span> LUAJIT_LIB=/usr/<span class="built_in">local</span>/lib</span><br><span class="line"><span class="built_in">export</span> LUAJIT_INC=/usr/<span class="built_in">local</span>/include/luajit-2.1</span><br><span class="line"><span class="comment"># ln -s /usr/local/lib/libluajit-5.1.so.2 /lib64/libluajit-5.1.so.2</span></span><br><span class="line"><span class="comment"># https://github.com/openresty/lua-nginx-module/issues/8</span></span><br></pre></td></tr></table></figure><blockquote><p>build.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">NGX_VER=1.16.1</span><br><span class="line">BDDIR=<span class="string">"/root/rpmbuild/BUILD"</span></span><br><span class="line">WKDIR=<span class="string">"/root/rpmbuild/SOURCES"</span></span><br><span class="line">CURRENTDIR=`dirname $(readlink -f <span class="string">"<span class="variable">$0</span>"</span>)`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$CURRENTDIR</span></span><br><span class="line"><span class="built_in">export</span> LUAJIT_LIB=/usr/<span class="built_in">local</span>/lib</span><br><span class="line"><span class="comment"># export LUAJIT_INC=/usr/local/include/luajit-2.0</span></span><br><span class="line"><span class="built_in">export</span> LUAJIT_INC=/usr/<span class="built_in">local</span>/include/luajit-2.1</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$BDDIR</span></span><br><span class="line">rm -rf *</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">rm -rf *</span><br><span class="line">wget http://nginx.org/download/nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">tar xzf nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">rm -f nginx-<span class="variable">$NGX_VER</span>.tar.gz</span><br><span class="line">mv nginx-<span class="variable">$NGX_VER</span> nginx-garena-<span class="variable">$NGX_VER</span></span><br><span class="line"><span class="built_in">cd</span> nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line"></span><br><span class="line">mkdir -p contrib</span><br><span class="line"><span class="built_in">cd</span> contrib/</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/openresty/headers-more-nginx-module.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/openresty/<span class="built_in">echo</span>-nginx-module.git</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/simplresty/ngx_devel_kit.git</span><br><span class="line"><span class="comment"># git clone git://github.com/openresty/lua-nginx-module</span></span><br><span class="line">wget https://github.com/openresty/lua-nginx-module/archive/v0.10.14.tar.gz</span><br><span class="line">tar xf v0.10.14.tar.gz</span><br><span class="line">mv lua-nginx-module-0.10.14 lua-nginx-module</span><br><span class="line">git <span class="built_in">clone</span> git://github.com/nbs-system/naxsi.git</span><br><span class="line">rm -rf */.git</span><br><span class="line">rm -rf *.tar*</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line">cp -r <span class="variable">$CURRENTDIR</span>/nginx-template/* <span class="variable">$WKDIR</span>/nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line">cp <span class="variable">$CURRENTDIR</span>/nginx-spec /root/rpmbuild/SPECS/</span><br><span class="line"><span class="comment"># cp /root/rules $WKDIR/nginx-garena-$NGX_VER/debian/</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$WKDIR</span></span><br><span class="line">tar zcf nginx-garena-<span class="variable">$NGX_VER</span>.tar.gz nginx-garena-<span class="variable">$NGX_VER</span>/</span><br><span class="line"><span class="built_in">cd</span> /root/rpmbuild/SPECS/</span><br><span class="line">rpmbuild -ba nginx-spec</span><br><span class="line"><span class="built_in">cd</span> /root/rpmbuild/RPMS/noarch</span><br></pre></td></tr></table></figure><blockquote><p>nginx-spec</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Name: nginx-garena</span><br><span class="line">Version: 1.16.1</span><br><span class="line">Release: 0</span><br><span class="line">Summary: nginx garena rpm</span><br><span class="line">Source0: nginx-garena-%&#123;version&#125;.tar.gz</span><br><span class="line">License: GPL</span><br><span class="line">Group: Rahul</span><br><span class="line">BuildArch: noarch</span><br><span class="line">BuildRoot: %&#123;_tmppath&#125;/%&#123;name&#125;-buildroot</span><br><span class="line">%description</span><br><span class="line">Garena self-build Nginx.</span><br><span class="line">%define _binaries_in_noarch_packages_terminate_build   0</span><br><span class="line">%prep</span><br><span class="line">%setup -q %&#123;name&#125;-%&#123;version&#125;</span><br><span class="line">%build</span><br><span class="line">CFLAGS=&quot;$RPM_OPT_FLAGS&quot; ./configure --prefix=/usr/share/nginx/ \</span><br><span class="line">                    --with-ld-opt=&quot;-Wl,-rpath,/usr/local/lib&quot; \</span><br><span class="line">                    --sbin-path=/usr/sbin/nginx \</span><br><span class="line">                    --conf-path=/etc/nginx/nginx.conf \</span><br><span class="line">                    --error-log-path=/var/log/nginx/error.log \</span><br><span class="line">                    --http-log-path=/var/log/nginx/access.log \</span><br><span class="line">                    --pid-path=/var/run/nginx.pid \</span><br><span class="line">                    --lock-path=/var/lock/nginx.lock \</span><br><span class="line">                    --http-client-body-temp-path=/var/lib/nginx/body \</span><br><span class="line">                    --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \</span><br><span class="line">                    --http-proxy-temp-path=/var/lib/nginx/proxy \</span><br><span class="line">                    --http-scgi-temp-path=/var/lib/nginx/scgi \</span><br><span class="line">                    --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \</span><br><span class="line">                    --with-pcre-jit \</span><br><span class="line">                    --with-http_flv_module \</span><br><span class="line">                    --with-http_mp4_module \</span><br><span class="line">                    --with-file-aio \</span><br><span class="line">                    --with-http_v2_module \</span><br><span class="line">                    --with-stream \</span><br><span class="line">                    --with-stream_ssl_module \</span><br><span class="line">                    --with-http_auth_request_module \</span><br><span class="line">                    --with-http_slice_module \</span><br><span class="line">                    --with-threads \</span><br><span class="line">                    --with-http_gunzip_module \</span><br><span class="line">                    --with-http_random_index_module \</span><br><span class="line">                    --with-http_secure_link_module \</span><br><span class="line">                    --with-http_geoip_module \</span><br><span class="line">                    --with-http_ssl_module \</span><br><span class="line">                    --with-openssl=/usr/local/src/openssl-1_0_2t \</span><br><span class="line">                    --with-http_addition_module \</span><br><span class="line">                    --with-http_geoip_module \</span><br><span class="line">                    --with-http_gzip_static_module \</span><br><span class="line">                    --with-http_realip_module \</span><br><span class="line">                    --with-ipv6 \</span><br><span class="line">                    --without-mail_pop3_module \</span><br><span class="line">                    --without-mail_imap_module \</span><br><span class="line">                    --without-mail_smtp_module \</span><br><span class="line">                    --add-module=contrib/headers-more-nginx-module \</span><br><span class="line">                    --add-module=contrib/echo-nginx-module \</span><br><span class="line">                    --add-module=contrib/ngx_devel_kit \</span><br><span class="line">                    --add-module=contrib/lua-nginx-module \</span><br><span class="line">                    --add-module=contrib/naxsi/naxsi_src</span><br><span class="line">make -j8</span><br><span class="line"></span><br><span class="line">%install</span><br><span class="line">[ &quot;$RPM_BUILD_ROOT&quot; != &quot;/&quot; ] &amp;&amp; rm -rf $RPM_BUILD_ROOT</span><br><span class="line">make DESTDIR=$RPM_BUILD_ROOT install</span><br><span class="line">install -m 0755 -d $RPM_BUILD_ROOT/etc/nginx/sites-enabled</span><br><span class="line">install -m 0755 -d $RPM_BUILD_ROOT/etc/nginx/sites-available</span><br><span class="line">install -m 0755 -d $RPM_BUILD_ROOT/var/log/nginx</span><br><span class="line">install -m 0755 -d $RPM_BUILD_ROOT/var/lib/nginx</span><br><span class="line">install -D -m 644 conf/sites-available/000_stub_status $RPM_BUILD_ROOT/etc/nginx/sites-available/000_stub_status</span><br><span class="line">install -D -m 644 conf/django_fastcgi_params $RPM_BUILD_ROOT/etc/nginx/django_fastcgi_params</span><br><span class="line">install -D -m 644 conf/naxsi_core.rules $RPM_BUILD_ROOT/etc/nginx/naxsi_core.rules</span><br><span class="line">install -D -m 644 conf/sites-available/000_stub_status $RPM_BUILD_ROOT/etc/nginx/sites-enabled/000_stub_status</span><br><span class="line">install -D -m 644 logrotate.d/nginx $RPM_BUILD_ROOT/etc/logrotate.d/nginx</span><br><span class="line">install -D -m 644 nginx.service $RPM_BUILD_ROOT/usr/lib/systemd/system/nginx.service</span><br><span class="line">%clean</span><br><span class="line">[ &quot;$RPM_BUILD_ROOT&quot; != &quot;/&quot; ] &amp;&amp; rm -rf $RPM_BUILD_ROOT</span><br><span class="line">%post</span><br><span class="line">useradd -s /sbin/nologin -d /var/www www-data</span><br><span class="line">chown -R www-data.www-data /var/log/nginx /var/lib/nginx</span><br><span class="line">systemctl enable nginx</span><br><span class="line">echo %&#123;name&#125;-%&#123;version&#125; is successfully installed.</span><br><span class="line">systemctl start nginx</span><br><span class="line">%files</span><br><span class="line">%defattr(-,root,root)</span><br><span class="line">%dir /etc/nginx</span><br><span class="line">/etc/nginx/*</span><br><span class="line">%dir /usr/src/debug/nginx-garena-%&#123;version&#125;</span><br><span class="line">/usr/src/debug/nginx-garena-%&#123;version&#125;/*</span><br><span class="line">/usr/sbin/nginx</span><br><span class="line">%dir /usr/share/nginx</span><br><span class="line">/usr/share/nginx/*</span><br><span class="line">/etc/logrotate.d/nginx</span><br><span class="line">/usr/lib/systemd/system/nginx.service</span><br><span class="line">/usr/lib/debug/*</span><br><span class="line">/usr/lib/debug/.build-id/*</span><br><span class="line">%dir /var/log/nginx</span><br><span class="line">%dir /var/lib/nginx</span><br><span class="line">%config(noreplace) /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><blockquote><p>logrotate.d/nginx</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/var/log/nginx/*.log /var/log/nginx/*/*.log&#123;</span><br><span class="line">daily</span><br><span class="line">missingok</span><br><span class="line">rotate 14</span><br><span class="line">compress</span><br><span class="line">delaycompress</span><br><span class="line">notifempty</span><br><span class="line">create 640 root adm</span><br><span class="line">sharedscripts</span><br><span class="line">postrotate</span><br><span class="line">[ ! -f /var/run/nginx.pid ] || kill -USR1 `cat /var/run/nginx.pid`</span><br><span class="line">endscript</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>nginx.conf</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">user www-data;</span><br><span class="line">worker_processes auto;</span><br><span class="line"></span><br><span class="line">#worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;</span><br><span class="line">worker_rlimit_nofile 655650;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">        worker_connections  10240;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">#       include       /etc/nginx/naxsi_core.rules;</span><br><span class="line">        include       mime.types;</span><br><span class="line">        default_type  application/octet-stream;</span><br><span class="line">log_format garena &apos;$remote_addr - $remote_user [$time_iso8601] &quot;$request&quot; $status $body_bytes_sent &apos;</span><br><span class="line">                &apos;&quot;$http_referer&quot; &quot;$http_user_agent&quot; $request_time $upstream_response_time &quot;$http_x_forwarded_for&quot; &quot;$geoip_country_code&quot; &quot;$host&quot;&apos;;</span><br><span class="line">        log_format garena_post &apos;$remote_addr - $remote_user [$time_iso8601] &quot;$request&quot; $status $body_bytes_sent &apos;</span><br><span class="line">                &apos;&quot;$http_referer&quot; &quot;$http_user_agent&quot; $request_time $upstream_response_time &quot;$http_x_forwarded_for&quot; &quot;$geoip_country_code&quot; &quot;$host&quot; &quot;$request_body&quot;&apos;;</span><br><span class="line">log_format compact &apos;$time_iso8601|$remote_addr|$geoip_country_code|$http_x_forwarded_for|$status|$request_time|$upstream_response_time|$request_length|$body_bytes_sent|$host|$request|$http_referer|$http_user_agent&apos;;</span><br><span class="line">log_format compact_post &apos;$time_iso8601|$remote_addr|$geoip_country_code|$http_x_forwarded_for|$status|$request_time|$upstream_response_time|$request_length|$body_bytes_sent|$host|$request|$http_referer|$http_user_agent|$request_body&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#       access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">        sendfile        on;</span><br><span class="line">#       tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">        keepalive_timeout  30;</span><br><span class="line">        fastcgi_keep_conn on;</span><br><span class="line">        tcp_nodelay        on;</span><br><span class="line"></span><br><span class="line">        gzip  on;</span><br><span class="line">        gzip_disable &quot;MSIE [1-6]\.(?!.*SV1)&quot;;</span><br><span class="line">        gzip_proxied any;</span><br><span class="line">        gzip_buffers 16 8k;</span><br><span class="line">        gzip_types    text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json;</span><br><span class="line">        gzip_vary on;</span><br><span class="line">        include /etc/nginx/sites-enabled/*;</span><br><span class="line"></span><br><span class="line">set_real_ip_from 10.0.0.0/8;</span><br><span class="line">real_ip_header    X-Forwarded-For;</span><br><span class="line">#real_ip_recursive on;</span><br><span class="line">#geoip_country /usr/share/GeoIP/GeoIP.dat;</span><br><span class="line"></span><br><span class="line">        server_tokens off;         # returns &quot;Server: nginx&quot;</span><br><span class="line">more_clear_headers Server; # doesn&apos;t return &quot;Server: &quot; header at all</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>nginx.service</p></blockquote><p><a href="https://www.nginx.com/resources/wiki/start/topics/examples/initscripts/" target="_blank" rel="noopener">https://www.nginx.com/resources/wiki/start/topics/examples/initscripts/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=The nginx HTTP and reverse proxy server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/run/nginx.pid</span><br><span class="line">ExecStartPre=/usr/sbin/nginx -t</span><br><span class="line">ExecStart=/usr/sbin/nginx</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">KillMode=process</span><br><span class="line">KillSignal=SIGQUIT</span><br><span class="line">TimeoutStopSec=5</span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h3 id="编译生成-nginx-rpm"><a href="#编译生成-nginx-rpm" class="headerlink" title="编译生成 nginx rpm"></a>编译生成 nginx rpm</h3><ol><li>编辑 build.sh 和 nginx-spec 定义 NGX_VER=1.16.1</li><li>如果需要改变 contrib 的 module 也是修改上述两处位置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">sh build.sh</span><br><span class="line"></span><br><span class="line">extracting debug info from /root/rpmbuild/BUILDROOT/nginx-garena-1.16.1-0.x86_64/usr/sbin/nginx</span><br><span class="line">dwz: Too few files <span class="keyword">for</span> multifile optimization</span><br><span class="line">/usr/lib/rpm/sepdebugcrcfix: Updated 1 CRC32s, 0 CRC32s did match.</span><br><span class="line">12776 blocks</span><br><span class="line">+ /usr/lib/rpm/check-buildroot</span><br><span class="line">+ /usr/lib/rpm/redhat/brp-compress</span><br><span class="line">+ /usr/lib/rpm/redhat/brp-strip-static-archive /usr/bin/strip</span><br><span class="line">+ /usr/lib/rpm/brp-python-bytecompile /usr/bin/python 1</span><br><span class="line">+ /usr/lib/rpm/redhat/brp-python-hardlink</span><br><span class="line">+ /usr/lib/rpm/redhat/brp-java-repack-jars</span><br><span class="line">Processing files: nginx-garena-1.16.1-0.noarch</span><br><span class="line">warning: File listed twice: /etc/nginx/nginx.conf</span><br><span class="line">Provides: config(nginx-garena) = 1.16.1-0 nginx-garena = 1.16.1-0</span><br><span class="line">Requires(interp): /bin/sh</span><br><span class="line">Requires(rpmlib): rpmlib(CompressedFileNames) &lt;= 3.0.4-1 rpmlib(FileDigests) &lt;= 4.6.0-1 rpmlib(PayloadFilesHavePrefix) &lt;= 4.0-1</span><br><span class="line">Requires(post): /bin/sh</span><br><span class="line">Requires: libGeoIP.so.1()(64bit) libc.so.6()(64bit) libc.so.6(GLIBC_2.10)(64bit) libc.so.6(GLIBC_2.11)(64bit) libc.so.6(GLIBC_2.14)(64bit) libc.so.6(GLIBC_2.17)(64bit) libc.so.6(GLIBC_2.2.5)(64bit) libc.so.6(GLIBC_2.3)(64bit) libc.so.6(GLIBC_2.3.2)(64bit) libc.so.6(GLIBC_2.3.4)(64bit) libc.so.6(GLIBC_2.4)(64bit) libc.so.6(GLIBC_2.7)(64bit) libcrypt.so.1()(64bit) libcrypt.so.1(GLIBC_2.2.5)(64bit) libdl.so.2()(64bit) libdl.so.2(GLIBC_2.2.5)(64bit) libgcc_s.so.1()(64bit) libgcc_s.so.1(GCC_3.0)(64bit) libgcc_s.so.1(GCC_3.3)(64bit) libm.so.6()(64bit) libm.so.6(GLIBC_2.2.5)(64bit) libpcre.so.1()(64bit) libpthread.so.0()(64bit) libpthread.so.0(GLIBC_2.2.5)(64bit) libpthread.so.0(GLIBC_2.3.2)(64bit) libz.so.1()(64bit) rtld(GNU_HASH)</span><br><span class="line">warning: Arch dependent binaries <span class="keyword">in</span> noarch package</span><br><span class="line">Checking <span class="keyword">for</span> unpackaged file(s): /usr/lib/rpm/check-files /root/rpmbuild/BUILDROOT/nginx-garena-1.16.1-0.x86_64</span><br><span class="line">Wrote: /root/rpmbuild/SRPMS/nginx-garena-1.16.1-0.src.rpm</span><br><span class="line">Wrote: /root/rpmbuild/RPMS/noarch/nginx-garena-1.16.1-0.noarch.rpm</span><br><span class="line">Executing(%clean): /bin/sh -e /var/tmp/rpm-tmp.Qc7JbE</span><br><span class="line">+ <span class="built_in">umask</span> 022</span><br><span class="line">+ <span class="built_in">cd</span> /root/rpmbuild/BUILD</span><br><span class="line">+ <span class="built_in">cd</span> nginx-garena-1.16.1</span><br><span class="line">+ <span class="string">'['</span> /root/rpmbuild/BUILDROOT/nginx-garena-1.16.1-0.x86_64 <span class="string">'!='</span> / <span class="string">']'</span></span><br><span class="line">+ rm -rf /root/rpmbuild/BUILDROOT/nginx-garena-1.16.1-0.x86_64</span><br><span class="line">+ <span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-71-49-5 wangao]<span class="comment"># nginx -V</span></span><br><span class="line">nginx version: nginx/1.16.1</span><br><span class="line">built with OpenSSL 1.0.2t  10 Sep 2019</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/usr/share/nginx/ --with-ld-opt=-Wl,-rpath,/usr/<span class="built_in">local</span>/lib --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/<span class="built_in">log</span>/nginx/error.log --http-log-path=/var/<span class="built_in">log</span>/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/lock/nginx.lock --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --with-pcre-jit --with-http_flv_module --with-http_mp4_module --with-file-aio --with-http_v2_module --with-stream --with-stream_ssl_module --with-http_auth_request_module --with-http_slice_module --with-threads --with-http_gunzip_module --with-http_random_index_module --with-http_secure_link_module --with-http_geoip_module --with-http_ssl_module --with-openssl=/usr/<span class="built_in">local</span>/src/openssl-1_0_2t --with-http_addition_module --with-http_geoip_module --with-http_gzip_static_module --with-http_realip_module --with-ipv6 --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module --add-module=contrib/headers-more-nginx-module --add-module=contrib/<span class="built_in">echo</span>-nginx-module --add-module=contrib/ngx_devel_kit --add-module=contrib/lua-nginx-module --add-module=contrib/naxsi/naxsi_src</span><br><span class="line"></span><br><span class="line"><span class="comment"># Prettier</span></span><br><span class="line">https://serverfault.com/questions/223509/how-can-i-see-which-flags-nginx-was-compiled-with</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-49-5 wangao]<span class="comment"># 2&gt;&amp;1 nginx -V | xargs -n1</span></span><br><span class="line">nginx</span><br><span class="line">version:</span><br><span class="line">nginx/1.16.1</span><br><span class="line">built</span><br><span class="line">with</span><br><span class="line">OpenSSL</span><br><span class="line">1.0.2t</span><br><span class="line">10</span><br><span class="line">Sep</span><br><span class="line">2019</span><br><span class="line">TLS</span><br><span class="line">SNI</span><br><span class="line">support</span><br><span class="line">enabled</span><br><span class="line">configure</span><br><span class="line">arguments:</span><br><span class="line">--prefix=/usr/share/nginx/</span><br><span class="line">--with-ld-opt=-Wl,-rpath,/usr/<span class="built_in">local</span>/lib</span><br><span class="line">--sbin-path=/usr/sbin/nginx</span><br><span class="line">--conf-path=/etc/nginx/nginx.conf</span><br><span class="line">--error-log-path=/var/<span class="built_in">log</span>/nginx/error.log</span><br><span class="line">--http-log-path=/var/<span class="built_in">log</span>/nginx/access.log</span><br><span class="line">--pid-path=/var/run/nginx.pid</span><br><span class="line">--lock-path=/var/lock/nginx.lock</span><br><span class="line">--http-client-body-temp-path=/var/lib/nginx/body</span><br><span class="line">--http-fastcgi-temp-path=/var/lib/nginx/fastcgi</span><br><span class="line">--http-proxy-temp-path=/var/lib/nginx/proxy</span><br><span class="line">--http-scgi-temp-path=/var/lib/nginx/scgi</span><br><span class="line">--http-uwsgi-temp-path=/var/lib/nginx/uwsgi</span><br><span class="line">--with-pcre-jit</span><br><span class="line">--with-http_flv_module</span><br><span class="line">--with-http_mp4_module</span><br><span class="line">--with-file-aio</span><br><span class="line">--with-http_v2_module</span><br><span class="line">--with-stream</span><br><span class="line">--with-stream_ssl_module</span><br><span class="line">--with-http_auth_request_module</span><br><span class="line">--with-http_slice_module</span><br><span class="line">--with-threads</span><br><span class="line">--with-http_gunzip_module</span><br><span class="line">--with-http_random_index_module</span><br><span class="line">--with-http_secure_link_module</span><br><span class="line">--with-http_geoip_module</span><br><span class="line">--with-http_ssl_module</span><br><span class="line">--with-openssl=/usr/<span class="built_in">local</span>/src/openssl-1_0_2t</span><br><span class="line">--with-http_addition_module</span><br><span class="line">--with-http_geoip_module</span><br><span class="line">--with-http_gzip_static_module</span><br><span class="line">--with-http_realip_module</span><br><span class="line">--with-ipv6</span><br><span class="line">--without-mail_pop3_module</span><br><span class="line">--without-mail_imap_module</span><br><span class="line">--without-mail_smtp_module</span><br><span class="line">--add-module=contrib/headers-more-nginx-module</span><br><span class="line">--add-module=contrib/<span class="built_in">echo</span>-nginx-module</span><br><span class="line">--add-module=contrib/ngx_devel_kit</span><br><span class="line">--add-module=contrib/lua-nginx-module</span><br><span class="line">--add-module=contrib/naxsi/naxsi_src</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-49-5 wangao]<span class="comment"># 2&gt;&amp;1 nginx -V | xargs -n1 | grep ssl</span></span><br><span class="line">--with-stream_ssl_module</span><br><span class="line">--with-http_ssl_module</span><br><span class="line">--with-openssl=/usr/<span class="built_in">local</span>/src/openssl-1_0_2t</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-49-5 wangao]<span class="comment"># 2&gt;&amp;1 nginx -V | xargs -n1 | grep lua</span></span><br><span class="line">--add-module=contrib/lua-nginx-module</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      使用rpmbuild制作Nginx的RPM包
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Bash 命令语法和 Bash Cheat Sheet 中文速查表</title>
    <link href="https://wsgzao.github.io/post/bash/"/>
    <id>https://wsgzao.github.io/post/bash/</id>
    <published>2019-10-28T06:59:49.000Z</published>
    <updated>2019-10-29T07:13:55.367Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Bash Shell 作为 Linux 的指定合作伙伴我们已经再熟悉不过了，使用 Bash 可以快速编写简单的脚本方便我们的日常比如善用 <code>vim</code>，<code>awk</code> 和 <code>sed</code> 三剑客，也可以创建十分复杂的逻辑，当然我更愿意推荐你使用 Python 代替，之前一直没有刻意去整理因为平时常用的就这么几个，有些经验和技巧都是在实战中形成和记录，需要使用的时候知道大概用什么，查下相关语法和案例即可。</p><blockquote><p>Bash 命令语法和 Bash Cheat Sheet 中文速查表</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 10 月 29 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/bash/">https://wsgzao.github.io/post/bash/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://github.com/skywind3000/awesome-cheatsheets/blob/master/languages/bash.sh" target="_blank" rel="noopener">Bash awesome-cheatsheets</a></p><p><a href="https://github.com/OMGZui/bash-step-to-step" target="_blank" rel="noopener">bash-step-to-step</a></p><p><a href="http://sayhiai.com/15614525129972.html" target="_blank" rel="noopener">Linux 上，最常用的一批命令解析（10 年精选）</a></p><hr><h2 id="bash-sh"><a href="#bash-sh" class="headerlink" title="bash.sh"></a>bash.sh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># BASH CHEATSHEET (中文速查表)  -  by skywind (created on 2018/02/14)</span></span><br><span class="line"><span class="comment"># Version: 47, Last Modified: 2019/09/24 17:58</span></span><br><span class="line"><span class="comment"># https://github.com/skywind3000/awesome-cheatsheets</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 常用快捷键（默认使用 Emacs 键位）</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">CTRL+A              <span class="comment"># 移动到行首，同 &lt;Home&gt;</span></span><br><span class="line">CTRL+B              <span class="comment"># 向后移动，同 &lt;Left&gt;</span></span><br><span class="line">CTRL+C              <span class="comment"># 结束当前命令 </span></span><br><span class="line">CTRL+D              <span class="comment"># 删除光标前的字符，同 &lt;Delete&gt; ，或者没有内容时，退出会话 </span></span><br><span class="line">CTRL+E              <span class="comment"># 移动到行末，同 &lt;End&gt;</span></span><br><span class="line">CTRL+F              <span class="comment"># 向前移动，同 &lt;Right&gt;</span></span><br><span class="line">CTRL+G              <span class="comment"># 退出当前编辑（比如正在 CTRL+R 搜索历史时）</span></span><br><span class="line">CTRL+H              <span class="comment"># 删除光标左边的字符，同 &lt;Backspace&gt;</span></span><br><span class="line">CTRL+K              <span class="comment"># 删除光标位置到行末的内容 </span></span><br><span class="line">CTRL+L              <span class="comment"># 清屏并重新显示 </span></span><br><span class="line">CTRL+N              <span class="comment"># 移动到命令历史的下一行，同 &lt;Down&gt;</span></span><br><span class="line">CTRL+O              <span class="comment"># 类似回车，但是会显示下一行历史 </span></span><br><span class="line">CTRL+P              <span class="comment"># 移动到命令历史的上一行，同 &lt;Up&gt;</span></span><br><span class="line">CTRL+R              <span class="comment"># 历史命令反向搜索，使用 CTRL+G 退出搜索 </span></span><br><span class="line">CTRL+S              <span class="comment"># 历史命令正向搜索，使用 CTRL+G 退出搜索 </span></span><br><span class="line">CTRL+T              <span class="comment"># 交换前后两个字符 </span></span><br><span class="line">CTRL+U              <span class="comment"># 删除字符到行首 </span></span><br><span class="line">CTRL+V              <span class="comment"># 输入字符字面量，先按 CTRL+V 再按任意键 </span></span><br><span class="line">CTRL+W              <span class="comment"># 删除光标左边的一个单词 </span></span><br><span class="line">CTRL+X              <span class="comment"># 列出可能的补全 </span></span><br><span class="line">CTRL+Y              <span class="comment"># 粘贴前面 CTRL+u/k/w 删除过的内容 </span></span><br><span class="line">CTRL+Z              <span class="comment"># 暂停前台进程返回 bash，需要时可用 fg 将其切换回前台 </span></span><br><span class="line">CTRL+_              <span class="comment"># 撤销（undo），有的终端将 CTRL+_ 映射为 CTRL+/ 或 CTRL+7</span></span><br><span class="line"></span><br><span class="line">ALT+b               <span class="comment"># 向后（左边）移动一个单词 </span></span><br><span class="line">ALT+d               <span class="comment"># 删除光标后（右边）一个单词 </span></span><br><span class="line">ALT+f               <span class="comment"># 向前（右边）移动一个单词 </span></span><br><span class="line">ALT+t               <span class="comment"># 交换字符 </span></span><br><span class="line">ALT+BACKSPACE       <span class="comment"># 删除光标前面一个单词，类似 CTRL+W，但不影响剪贴板 </span></span><br><span class="line"></span><br><span class="line">CTRL+X CTRL+X       <span class="comment"># 连续按两次 CTRL+X，光标在当前位置和行首来回跳转 </span></span><br><span class="line">CTRL+X CTRL+E       <span class="comment"># 用你指定的编辑器，编辑当前命令 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># BASH 基本操作 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span>                <span class="comment"># 退出当前登陆 </span></span><br><span class="line">env                 <span class="comment"># 显示环境变量 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$SHELL</span>         <span class="comment"># 显示你在使用什么 SHELL</span></span><br><span class="line"></span><br><span class="line">bash                <span class="comment"># 使用 bash，用 exit 返回 </span></span><br><span class="line"><span class="built_in">which</span> bash          <span class="comment"># 搜索 $PATH，查找哪个程序对应命令 bash</span></span><br><span class="line">whereis bash        <span class="comment"># 搜索可执行，头文件和帮助信息的位置，使用系统内建数据库 </span></span><br><span class="line">whatis bash         <span class="comment"># 查看某个命令的解释，一句话告诉你这是干什么的 </span></span><br><span class="line"></span><br><span class="line">clear               <span class="comment"># 清初屏幕内容 </span></span><br><span class="line">reset               <span class="comment"># 重置终端（当你不小心 cat 了一个二进制，终端状态乱掉时使用）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 目录操作 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span>                  <span class="comment"># 返回自己 $HOME 目录 </span></span><br><span class="line"><span class="built_in">cd</span> &#123;dirname&#125;        <span class="comment"># 进入目录 </span></span><br><span class="line"><span class="built_in">pwd</span>                 <span class="comment"># 显示当前所在目录 </span></span><br><span class="line">mkdir &#123;dirname&#125;     <span class="comment"># 创建目录 </span></span><br><span class="line">mkdir -p &#123;dirname&#125;  <span class="comment"># 递归创建目录 </span></span><br><span class="line"><span class="built_in">pushd</span> &#123;dirname&#125;     <span class="comment"># 目录压栈并进入新目录 </span></span><br><span class="line"><span class="built_in">popd</span>                <span class="comment"># 弹出并进入栈顶的目录 </span></span><br><span class="line"><span class="built_in">dirs</span> -v             <span class="comment"># 列出当前目录栈 </span></span><br><span class="line"><span class="built_in">cd</span> -                <span class="comment"># 回到之前的目录 </span></span><br><span class="line"><span class="built_in">cd</span> -&#123;N&#125;             <span class="comment"># 切换到目录栈中的第 N 个目录，比如 cd -2 将切换到第二个 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 文件操作 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">ls                  <span class="comment"># 显示当前目录内容，后面可接目录名：ls &#123;dir&#125; 显示指定目录 </span></span><br><span class="line">ls -l               <span class="comment"># 列表方式显示目录内容，包括文件日期，大小，权限等信息 </span></span><br><span class="line">ls -1               <span class="comment"># 列表方式显示目录内容，只显示文件名称，减号后面是数字 1</span></span><br><span class="line">ls -a               <span class="comment"># 显示所有文件和目录，包括隐藏文件（. 开头的文件 / 目录名）</span></span><br><span class="line">ln -s &#123;fn&#125; &#123;link&#125;   <span class="comment"># 给指定文件创建一个软链接 </span></span><br><span class="line">cp &#123;src&#125; &#123;dest&#125;     <span class="comment"># 拷贝文件，cp -r dir1 dir2 可以递归拷贝（目录）</span></span><br><span class="line">rm &#123;fn&#125;             <span class="comment"># 删除文件，rm -r 递归删除目录，rm -f 强制删除 </span></span><br><span class="line">mv &#123;src&#125; &#123;dest&#125;     <span class="comment"># 移动文件，如果 dest 是目录，则移动，是文件名则覆盖 </span></span><br><span class="line">touch &#123;fn&#125;          <span class="comment"># 创建或者更新一下制定文件 </span></span><br><span class="line">cat &#123;fn&#125;            <span class="comment"># 输出文件原始内容 </span></span><br><span class="line">any_cmd &gt; &#123;fn&#125;      <span class="comment"># 执行任意命令并将标准输出重定向到指定文件 </span></span><br><span class="line">more &#123;fn&#125;           <span class="comment"># 逐屏显示某文件内容，空格翻页，q 退出 </span></span><br><span class="line">less &#123;fn&#125;           <span class="comment"># 更高级点的 more，更多操作，q 退出 </span></span><br><span class="line">head &#123;fn&#125;           <span class="comment"># 显示文件头部数行，可用 head -3 abc.txt 显示头三行 </span></span><br><span class="line">tail &#123;fn&#125;           <span class="comment"># 显示文件尾部数行，可用 tail -3 abc.txt 显示尾部三行 </span></span><br><span class="line">tail -f &#123;fn&#125;        <span class="comment"># 持续显示文件尾部数据，可用于监控日志 </span></span><br><span class="line">nano &#123;fn&#125;           <span class="comment"># 使用 nano 编辑器编辑文件 </span></span><br><span class="line">vim &#123;fn&#125;            <span class="comment"># 使用 vim 编辑文件 </span></span><br><span class="line">diff &#123;f1&#125; &#123;f2&#125;      <span class="comment"># 比较两个文件的内容 </span></span><br><span class="line">wc &#123;fn&#125;             <span class="comment"># 统计文件有多少行，多少个单词 </span></span><br><span class="line">chmod 644 &#123;fn&#125;      <span class="comment"># 修改文件权限为 644，可以接 -R 对目录循环改权限 </span></span><br><span class="line">chgrp group &#123;fn&#125;    <span class="comment"># 修改文件所属的用户组 </span></span><br><span class="line">chown user1 &#123;fn&#125;    <span class="comment"># 修改文件所有人为 user1, chown user1:group1 fn 可以修改组 </span></span><br><span class="line">file &#123;fn&#125;           <span class="comment"># 检测文件的类型和编码 </span></span><br><span class="line">basename &#123;fn&#125;       <span class="comment"># 查看文件的名字（不包括路径）</span></span><br><span class="line">dirname &#123;fn&#125;        <span class="comment"># 查看文件的路径（不包括名字）</span></span><br><span class="line">grep &#123;pat&#125; &#123;fn&#125;     <span class="comment"># 在文件中查找出现过 pat 的内容 </span></span><br><span class="line">grep -r &#123;pat&#125; .     <span class="comment"># 在当前目录下递归查找所有出现过 pat 的文件内容 </span></span><br><span class="line"><span class="built_in">stat</span> &#123;fn&#125;           <span class="comment"># 显示文件的详细信息 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 用户管理 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">whoami              <span class="comment"># 显示我的用户名 </span></span><br><span class="line">who                 <span class="comment"># 显示已登陆用户信息，w / who / users 内容略有不同 </span></span><br><span class="line">w                   <span class="comment"># 显示已登陆用户信息，w / who / users 内容略有不同 </span></span><br><span class="line">users               <span class="comment"># 显示已登陆用户信息，w / who / users 内容略有不同 </span></span><br><span class="line">passwd              <span class="comment"># 修改密码，passwd &#123;user&#125; 可以用于 root 修改别人密码 </span></span><br><span class="line">finger &#123;user&#125;       <span class="comment"># 显示某用户信息，包括 id, 名字, 登陆状态等 </span></span><br><span class="line">adduser &#123;user&#125;      <span class="comment"># 添加用户 </span></span><br><span class="line">deluser &#123;user&#125;      <span class="comment"># 删除用户 </span></span><br><span class="line">w                   <span class="comment"># 查看谁在线 </span></span><br><span class="line">su                  <span class="comment"># 切换到 root 用户 </span></span><br><span class="line">su -                <span class="comment"># 切换到 root 用户并登陆（执行登陆脚本）</span></span><br><span class="line">su &#123;user&#125;           <span class="comment"># 切换到某用户 </span></span><br><span class="line">su -&#123;user&#125;          <span class="comment"># 切换到某用户并登陆（执行登陆脚本）</span></span><br><span class="line">id &#123;user&#125;           <span class="comment"># 查看用户的 uid，gid 以及所属其他用户组 </span></span><br><span class="line">id -u &#123;user&#125;        <span class="comment"># 打印用户 uid</span></span><br><span class="line">id -g &#123;user&#125;        <span class="comment"># 打印用户 gid</span></span><br><span class="line">write &#123;user&#125;        <span class="comment"># 向某用户发送一句消息 </span></span><br><span class="line">last                <span class="comment"># 显示最近用户登陆列表 </span></span><br><span class="line">last &#123;user&#125;         <span class="comment"># 显示登陆记录 </span></span><br><span class="line">lastb               <span class="comment"># 显示失败登陆记录 </span></span><br><span class="line">lastlog             <span class="comment"># 显示所有用户的最近登陆记录 </span></span><br><span class="line">sudo &#123;<span class="built_in">command</span>&#125;      <span class="comment"># 以 root 权限执行某命令 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 进程管理 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">ps                        <span class="comment"># 查看当前会话进程 </span></span><br><span class="line">ps ax                     <span class="comment"># 查看所有进程，类似 ps -e</span></span><br><span class="line">ps aux                    <span class="comment"># 查看所有进程详细信息，类似 ps -ef</span></span><br><span class="line">ps auxww                  <span class="comment"># 查看所有进程，并且显示进程的完整启动命令 </span></span><br><span class="line">ps -u &#123;user&#125;              <span class="comment"># 查看某用户进程 </span></span><br><span class="line">ps axjf                   <span class="comment"># 列出进程树 </span></span><br><span class="line">ps xjf -u &#123;user&#125;          <span class="comment"># 列出某用户的进程树 </span></span><br><span class="line">ps -eo pid,user,<span class="built_in">command</span>   <span class="comment"># 按用户指定的格式查看进程 </span></span><br><span class="line">ps aux | grep httpd       <span class="comment"># 查看名为 httpd 的所有进程 </span></span><br><span class="line">ps --ppid &#123;pid&#125;           <span class="comment"># 查看父进程为 pid 的所有进程 </span></span><br><span class="line">pstree                    <span class="comment"># 树形列出所有进程，pstree 默认一般不带，需安装 </span></span><br><span class="line">pstree &#123;user&#125;             <span class="comment"># 进程树列出某用户的进程 </span></span><br><span class="line">pstree -u                 <span class="comment"># 树形列出所有进程以及所属用户 </span></span><br><span class="line">pgrep &#123;procname&#125;          <span class="comment"># 搜索名字匹配的进程的 pid，比如 pgrep apache2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> &#123;pid&#125;                <span class="comment"># 结束进程 </span></span><br><span class="line"><span class="built_in">kill</span> -9 &#123;pid&#125;             <span class="comment"># 强制结束进程，9/SIGKILL 是强制不可捕获结束信号 </span></span><br><span class="line"><span class="built_in">kill</span> -KILL &#123;pid&#125;          <span class="comment"># 强制执行进程，kill -9 的另外一种写法 </span></span><br><span class="line"><span class="built_in">kill</span> -l                   <span class="comment"># 查看所有信号 </span></span><br><span class="line"><span class="built_in">kill</span> -l TERM              <span class="comment"># 查看 TERM 信号的编号 </span></span><br><span class="line">killall &#123;procname&#125;        <span class="comment"># 按名称结束所有进程 </span></span><br><span class="line">pkill &#123;procname&#125;          <span class="comment"># 按名称结束进程，除名称外还可以有其他参数 </span></span><br><span class="line"></span><br><span class="line">top                       <span class="comment"># 查看最活跃的进程 </span></span><br><span class="line">top -u &#123;user&#125;             <span class="comment"># 查看某用户最活跃的进程 </span></span><br><span class="line"></span><br><span class="line">any_command &amp;             <span class="comment"># 在后台运行某命令，也可用 CTRL+Z 将当前进程挂到后台 </span></span><br><span class="line"><span class="built_in">jobs</span>                      <span class="comment"># 查看所有后台进程（jobs）</span></span><br><span class="line"><span class="built_in">bg</span>                        <span class="comment"># 查看后台进程，并切换过去 </span></span><br><span class="line"><span class="built_in">fg</span>                        <span class="comment"># 切换后台进程到前台 </span></span><br><span class="line"><span class="built_in">fg</span> &#123;job&#125;                  <span class="comment"># 切换特定后台进程到前台 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">trap</span> cmd sig1 sig2        <span class="comment"># 在脚本中设置信号处理命令 </span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">""</span> sig1 sig2         <span class="comment"># 在脚本中屏蔽某信号 </span></span><br><span class="line"><span class="built_in">trap</span> - sig1 sig2          <span class="comment"># 恢复默认信号处理行为 </span></span><br><span class="line"></span><br><span class="line">nohup &#123;<span class="built_in">command</span>&#125;           <span class="comment"># 长期运行某程序，在你退出登陆都保持它运行 </span></span><br><span class="line">nohup &#123;<span class="built_in">command</span>&#125; &amp;         <span class="comment"># 在后台长期运行某程序 </span></span><br><span class="line"><span class="built_in">disown</span> &#123;PID|JID&#125;          <span class="comment"># 将进程从后台任务列表（jobs）移除 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">wait</span>                      <span class="comment"># 等待所有后台进程任务结束 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 常用命令：SSH / 系统信息 / 网络 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">ssh user@host             <span class="comment"># 以用户 user 登陆到远程主机 host</span></span><br><span class="line">ssh -p &#123;port&#125; user@host   <span class="comment"># 指定端口登陆主机 </span></span><br><span class="line">ssh-copy-id user@host     <span class="comment"># 拷贝你的 ssh key 到远程主机，避免重复输入密码 </span></span><br><span class="line">scp &#123;fn&#125; user@host:path   <span class="comment"># 拷贝文件到远程主机 </span></span><br><span class="line">scp user@host:path dest   <span class="comment"># 从远程主机拷贝文件回来 </span></span><br><span class="line">scp -P &#123;port&#125; ...         <span class="comment"># 指定端口远程拷贝文件 </span></span><br><span class="line"></span><br><span class="line">uname -a                  <span class="comment"># 查看内核版本等信息 </span></span><br><span class="line">man &#123;<span class="built_in">help</span>&#125;                <span class="comment"># 查看帮助 </span></span><br><span class="line">man -k &#123;keyword&#125;          <span class="comment"># 查看哪些帮助文档里包含了该关键字 </span></span><br><span class="line">info &#123;<span class="built_in">help</span>&#125;               <span class="comment"># 查看 info pages，比 man 更强的帮助系统 </span></span><br><span class="line">uptime                    <span class="comment"># 查看系统启动时间 </span></span><br><span class="line">date                      <span class="comment"># 显示日期 </span></span><br><span class="line">cal                       <span class="comment"># 显示日历 </span></span><br><span class="line">vmstat                    <span class="comment"># 显示内存和 CPU 使用情况 </span></span><br><span class="line">vmstat 10                 <span class="comment"># 每 10 秒打印一行内存和 CPU 情况，CTRL+C 退出 </span></span><br><span class="line">free                      <span class="comment"># 显示内存和交换区使用情况 </span></span><br><span class="line">df                        <span class="comment"># 显示磁盘使用情况 </span></span><br><span class="line">du                        <span class="comment"># 显示当前目录占用，du . --max-depth=2 可以指定深度 </span></span><br><span class="line">uname                     <span class="comment"># 显示系统版本号 </span></span><br><span class="line">hostname                  <span class="comment"># 显示主机名称 </span></span><br><span class="line">showkey -a                <span class="comment"># 查看终端发送的按键编码 </span></span><br><span class="line"></span><br><span class="line">ping &#123;host&#125;               <span class="comment"># ping 远程主机并显示结果，CTRL+C 退出 </span></span><br><span class="line">ping -c N &#123;host&#125;          <span class="comment"># ping 远程主机 N 次 </span></span><br><span class="line">traceroute &#123;host&#125;         <span class="comment"># 侦测路由连通情况 </span></span><br><span class="line">mtr &#123;host&#125;                <span class="comment"># 高级版本 traceroute</span></span><br><span class="line">host &#123;domain&#125;             <span class="comment"># DNS 查询，&#123;domain&#125; 前面可加 -a 查看详细信息 </span></span><br><span class="line">whois &#123;domain&#125;            <span class="comment"># 取得域名 whois 信息 </span></span><br><span class="line">dig &#123;domain&#125;              <span class="comment"># 取得域名 dns 信息 </span></span><br><span class="line">route -n                  <span class="comment"># 查看路由表 </span></span><br><span class="line">netstat -a                <span class="comment"># 列出所有端口 </span></span><br><span class="line">netstat -an               <span class="comment"># 查看所有连接信息，不解析域名 </span></span><br><span class="line">netstat -anp              <span class="comment"># 查看所有连接信息，包含进程信息（需要 sudo）</span></span><br><span class="line">netstat -l                <span class="comment"># 查看所有监听的端口 </span></span><br><span class="line">netstat -t                <span class="comment"># 查看所有 TCP 链接 </span></span><br><span class="line">netstat -lntu             <span class="comment"># 显示所有正在监听的 TCP 和 UDP 信息 </span></span><br><span class="line">netstat -lntup            <span class="comment"># 显示所有正在监听的 socket 及进程信息 </span></span><br><span class="line">netstat -i                <span class="comment"># 显示网卡信息 </span></span><br><span class="line">netstat -rn               <span class="comment"># 显示当前系统路由表，同 route -n</span></span><br><span class="line">ss -an                    <span class="comment"># 比 netstat -an 更快速更详细 </span></span><br><span class="line">ss -s                     <span class="comment"># 统计 TCP 的 established, wait 等 </span></span><br><span class="line"></span><br><span class="line">wget &#123;url&#125;                <span class="comment"># 下载文件，可加 --no-check-certificate 忽略 ssl 验证 </span></span><br><span class="line">wget -qO- &#123;url&#125;           <span class="comment"># 下载文件并输出到标准输出（不保存）</span></span><br><span class="line">curl -sL &#123;url&#125;            <span class="comment"># 同 wget -qO- &#123;url&#125; 没有 wget 的时候使用 </span></span><br><span class="line"></span><br><span class="line">sz &#123;file&#125;                 <span class="comment"># 发送文件到终端，zmodem 协议 </span></span><br><span class="line">rz                        <span class="comment"># 接收终端发送过来的文件 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 变量操作 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">varname=value             <span class="comment"># 定义变量 </span></span><br><span class="line">varname=value <span class="built_in">command</span>     <span class="comment"># 定义子进程变量并执行子进程 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$varname</span>             <span class="comment"># 查看变量内容 </span></span><br><span class="line"><span class="built_in">echo</span> $$                   <span class="comment"># 查看当前 shell 的进程号 </span></span><br><span class="line"><span class="built_in">echo</span> $!                   <span class="comment"># 查看最近调用的后台任务进程号 </span></span><br><span class="line"><span class="built_in">echo</span> $?                   <span class="comment"># 查看最近一条命令的返回码 </span></span><br><span class="line"><span class="built_in">export</span> VARNAME=value      <span class="comment"># 设置环境变量（将会影响到子进程）</span></span><br><span class="line"></span><br><span class="line">array[0]=valA             <span class="comment"># 定义数组 </span></span><br><span class="line">array[1]=valB</span><br><span class="line">array[2]=valC</span><br><span class="line">array=([0]=valA [1]=valB [2]=valC)   <span class="comment"># 另一种方式 </span></span><br><span class="line">array=(valA valB valC)               <span class="comment"># 另一种方式 </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;array[i]&#125;</span>               <span class="comment"># 取得数组中的元素 </span></span><br><span class="line"><span class="variable">$&#123;#array[@]&#125;</span>              <span class="comment"># 取得数组的长度 </span></span><br><span class="line"><span class="variable">$&#123;#array[i]&#125;</span>              <span class="comment"># 取得数组中某个变量的长度 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">declare</span> -a                <span class="comment"># 查看所有数组 </span></span><br><span class="line"><span class="built_in">declare</span> -f                <span class="comment"># 查看所有函数 </span></span><br><span class="line"><span class="built_in">declare</span> -F                <span class="comment"># 查看所有函数，仅显示函数名 </span></span><br><span class="line"><span class="built_in">declare</span> -i                <span class="comment"># 查看所有整数 </span></span><br><span class="line"><span class="built_in">declare</span> -r                <span class="comment"># 查看所有只读变量 </span></span><br><span class="line"><span class="built_in">declare</span> -x                <span class="comment"># 查看所有被导出成环境变量的东西 </span></span><br><span class="line"><span class="built_in">declare</span> -p varname        <span class="comment"># 输出变量是怎么定义的（类型 + 值）</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;varname:-word&#125;</span>          <span class="comment"># 如果变量不为空则返回变量，否则返回 word</span></span><br><span class="line"><span class="variable">$&#123;varname:=word&#125;</span>          <span class="comment"># 如果变量不为空则返回变量，否则赋值成 word 并返回 </span></span><br><span class="line"><span class="variable">$&#123;varname:?message&#125;</span>       <span class="comment"># 如果变量不为空则返回变量，否则打印错误信息并退出 </span></span><br><span class="line"><span class="variable">$&#123;varname:+word&#125;</span>          <span class="comment"># 如果变量不为空则返回 word，否则返回 null</span></span><br><span class="line"><span class="variable">$&#123;varname:offset:len&#125;</span>     <span class="comment"># 取得字符串的子字符串 </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;variable#pattern&#125;</span>       <span class="comment"># 如果变量头部匹配 pattern，则删除最小匹配部分返回剩下的 </span></span><br><span class="line"><span class="variable">$&#123;variable##pattern&#125;</span>      <span class="comment"># 如果变量头部匹配 pattern，则删除最大匹配部分返回剩下的 </span></span><br><span class="line"><span class="variable">$&#123;variable%pattern&#125;</span>       <span class="comment"># 如果变量尾部匹配 pattern，则删除最小匹配部分返回剩下的 </span></span><br><span class="line"><span class="variable">$&#123;variable%%pattern&#125;</span>      <span class="comment"># 如果变量尾部匹配 pattern，则删除最大匹配部分返回剩下的 </span></span><br><span class="line"><span class="variable">$&#123;variable/pattern/str&#125;</span>   <span class="comment"># 将变量中第一个匹配 pattern 的替换成 str，并返回 </span></span><br><span class="line"><span class="variable">$&#123;variable//pattern/str&#125;</span>  <span class="comment"># 将变量中所有匹配 pattern 的地方替换成 str 并返回 </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$&#123;#varname&#125;</span>               <span class="comment"># 返回字符串长度 </span></span><br><span class="line"></span><br><span class="line">*(patternlist)            <span class="comment"># 零次或者多次匹配 </span></span><br><span class="line">+(patternlist)            <span class="comment"># 一次或者多次匹配 </span></span><br><span class="line">?(patternlist)            <span class="comment"># 零次或者一次匹配 </span></span><br><span class="line">@(patternlist)            <span class="comment"># 单词匹配 </span></span><br><span class="line">!(patternlist)            <span class="comment"># 不匹配 </span></span><br><span class="line"></span><br><span class="line">array=(<span class="variable">$text</span>)             <span class="comment"># 按空格分隔 text 成数组，并赋值给变量 </span></span><br><span class="line">IFS=<span class="string">"/"</span> array=(<span class="variable">$text</span>)     <span class="comment"># 按斜杆分隔字符串 text 成数组，并赋值给变量 </span></span><br><span class="line">text=<span class="string">"<span class="variable">$&#123;array[*]&#125;</span>"</span>        <span class="comment"># 用空格链接数组并赋值给变量 </span></span><br><span class="line">text=$(IFS=/; <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;array[*]&#125;</span>"</span>)  <span class="comment"># 用斜杠链接数组并赋值给变量 </span></span><br><span class="line"></span><br><span class="line">A=( foo bar <span class="string">"a  b c"</span> 42 ) <span class="comment"># 数组定义 </span></span><br><span class="line">B=(<span class="string">"<span class="variable">$&#123;A[@]:1:2&#125;</span>"</span>)         <span class="comment"># 数组切片：B=( bar"a  b c")</span></span><br><span class="line">C=(<span class="string">"<span class="variable">$&#123;A[@]:1&#125;</span>"</span>)           <span class="comment"># 数组切片：C=( bar"a  b c"42 )</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;B[@]&#125;</span>"</span>            <span class="comment"># bar a  b c</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;B[1]&#125;</span>"</span>            <span class="comment"># a  b c</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;C[@]&#125;</span>"</span>            <span class="comment"># bar a  b c 42</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;C[@]: -2:2&#125;</span>"</span>      <span class="comment"># a  b c 42  减号前的空格是必须的 </span></span><br><span class="line"></span><br><span class="line">$(UNIX <span class="built_in">command</span>)           <span class="comment"># 运行命令，并将标准输出内容捕获并返回 </span></span><br><span class="line">varname=$(id -u user)     <span class="comment"># 将用户名为 user 的 uid 赋值给 varname 变量 </span></span><br><span class="line"></span><br><span class="line">num=$(expr 1 + 2)         <span class="comment"># 兼容 posix sh 的计算，使用 expr 命令计算结果 </span></span><br><span class="line">num=$(expr <span class="variable">$num</span> + 1)      <span class="comment"># 数字自增 </span></span><br><span class="line">expr 2 \* \( 2 + 3 \)     <span class="comment"># 兼容 posix sh 的复杂计算，输出 10</span></span><br><span class="line"></span><br><span class="line">num=$((1 + 2))            <span class="comment"># 计算 1+2 赋值给 num，使用 bash 独有的 $((..)) 计算 </span></span><br><span class="line">num=$((<span class="variable">$num</span> + 1))         <span class="comment"># 变量递增 </span></span><br><span class="line">num=$((num + 1))          <span class="comment"># 变量递增，双括号内的 $ 可以省略 </span></span><br><span class="line">num=$((1 + (2 + 3) * 2))  <span class="comment"># 复杂计算 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 事件指示符 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">!!                  <span class="comment"># 上一条命令 </span></span><br><span class="line">!^                  <span class="comment"># 上一条命令的第一个单词 </span></span><br><span class="line">!$                  <span class="comment"># 上一条命令的最后一个单词 </span></span><br><span class="line">!string             <span class="comment"># 最近一条包含 string 的命令 </span></span><br><span class="line">!^string1^string2   <span class="comment"># 最近一条包含 string1 的命令, 快速替换 string1 为 string2</span></span><br><span class="line">!<span class="comment">#                  # 本条命令之前所有的输入内容 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 函数 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个新函数 </span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">myfunc</span></span>() &#123;</span><br><span class="line">    <span class="comment"># $1 代表第一个参数，$N 代表第 N 个参数 </span></span><br><span class="line">    <span class="comment"># $# 代表参数个数 </span></span><br><span class="line">    <span class="comment"># $0 代表被调用者自身的名字 </span></span><br><span class="line">    <span class="comment"># $@ 代表所有参数，类型是个数组，想传递所有参数给其他命令用 cmd"$@"</span></span><br><span class="line">    <span class="comment"># $* 空格链接起来的所有参数，类型是字符串 </span></span><br><span class="line">    &#123;shell commands ...&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">myfunc                    <span class="comment"># 调用函数 myfunc </span></span><br><span class="line">myfunc arg1 arg2 arg3     <span class="comment"># 带参数的函数调用 </span></span><br><span class="line">myfunc <span class="string">"<span class="variable">$@</span>"</span>               <span class="comment"># 将所有参数传递给函数 </span></span><br><span class="line">myfunc <span class="string">"<span class="variable">$&#123;array[@]&#125;</span>"</span>      <span class="comment"># 将一个数组当作多个参数传递给函数 </span></span><br><span class="line"><span class="built_in">shift</span>                     <span class="comment"># 参数左移 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> -f myfunc           <span class="comment"># 删除函数 </span></span><br><span class="line"><span class="built_in">declare</span> -f                <span class="comment"># 列出函数定义 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 条件判断（兼容 posix sh 的条件判断）：man test</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">statement1 &amp;&amp; statement2  <span class="comment"># and 操作符 </span></span><br><span class="line">statement1 || statement2  <span class="comment"># or 操作符 </span></span><br><span class="line"></span><br><span class="line">exp1 -a exp2              <span class="comment"># exp1 和 exp2 同时为真时返回真（POSIX XSI 扩展）</span></span><br><span class="line">exp1 -o exp2              <span class="comment"># exp1 和 exp2 有一个为真就返回真（POSIX XSI 扩展）</span></span><br><span class="line">( expression )            <span class="comment"># 如果 expression 为真时返回真，输入注意括号前反斜杆 </span></span><br><span class="line">! expression              <span class="comment"># 如果 expression 为假那返回真 </span></span><br><span class="line"></span><br><span class="line">str1 = str2               <span class="comment"># 判断字符串相等，如 ["$x"="$y"] &amp;&amp; echo yes</span></span><br><span class="line">str1 != str2              <span class="comment"># 判断字符串不等，如 ["$x"!="$y"] &amp;&amp; echo yes</span></span><br><span class="line">str1 &lt; str2               <span class="comment"># 字符串小于，如 ["$x"\&lt;"$y"] &amp;&amp; echo yes</span></span><br><span class="line">str2 &gt; str2               <span class="comment"># 字符串大于，注意 &lt; 或 &gt; 是字面量，输入时要加反斜杆 </span></span><br><span class="line">-n str1                   <span class="comment"># 判断字符串不为空（长度大于零）</span></span><br><span class="line">-z str1                   <span class="comment"># 判断字符串为空（长度等于零）</span></span><br><span class="line"></span><br><span class="line">-a file                   <span class="comment"># 判断文件存在，如 [ -a /tmp/abc ] &amp;&amp; echo"exists"</span></span><br><span class="line">-d file                   <span class="comment"># 判断文件存在，且该文件是一个目录 </span></span><br><span class="line">-e file                   <span class="comment"># 判断文件存在，和 -a 等价 </span></span><br><span class="line">-f file                   <span class="comment"># 判断文件存在，且该文件是一个普通文件（非目录等）</span></span><br><span class="line">-r file                   <span class="comment"># 判断文件存在，且可读 </span></span><br><span class="line">-s file                   <span class="comment"># 判断文件存在，且尺寸大于 0</span></span><br><span class="line">-w file                   <span class="comment"># 判断文件存在，且可写 </span></span><br><span class="line">-x file                   <span class="comment"># 判断文件存在，且执行 </span></span><br><span class="line">-N file                   <span class="comment"># 文件上次修改过后还没有读取过 </span></span><br><span class="line">-O file                   <span class="comment"># 文件存在且属于当前用户 </span></span><br><span class="line">-G file                   <span class="comment"># 文件存在且匹配你的用户组 </span></span><br><span class="line">file1 -nt file2           <span class="comment"># 文件 1 比 文件 2 新 </span></span><br><span class="line">file1 -ot file2           <span class="comment"># 文件 1 比 文件 2 旧 </span></span><br><span class="line"></span><br><span class="line">num1 -eq num2             <span class="comment"># 数字判断：num1 == num2</span></span><br><span class="line">num1 -ne num2             <span class="comment"># 数字判断：num1 != num2</span></span><br><span class="line">num1 -lt num2             <span class="comment"># 数字判断：num1 &lt; num2</span></span><br><span class="line">num1 -le num2             <span class="comment"># 数字判断：num1 &lt;= num2</span></span><br><span class="line">num1 -gt num2             <span class="comment"># 数字判断：num1 &gt; num2</span></span><br><span class="line">num1 -ge num2             <span class="comment"># 数字判断：num1 &gt;= num2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 分支控制：if 和经典 test，兼容 posix sh 的条件判断语句 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> &#123;expression&#125;         <span class="comment"># 判断条件为真的话 test 程序返回 0 否则非零 </span></span><br><span class="line">[ expression ]            <span class="comment"># 判断条件为真的话返回 0 否则非零 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> <span class="string">"abc"</span> = <span class="string">"def"</span>        <span class="comment"># 查看返回值 echo $? 显示 1，因为条件为假 </span></span><br><span class="line"><span class="built_in">test</span> <span class="string">"abc"</span> != <span class="string">"def"</span>       <span class="comment"># 查看返回值 echo $? 显示 0，因为条件为真 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> -a /tmp; <span class="built_in">echo</span> $?     <span class="comment"># 调用 test 判断 /tmp 是否存在，并打印 test 的返回值 </span></span><br><span class="line">[ -a /tmp ]; <span class="built_in">echo</span> $?      <span class="comment"># 和上面完全等价，/tmp 肯定是存在的，所以输出是 0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> cond &amp;&amp; cmd1         <span class="comment"># 判断条件为真时执行 cmd1</span></span><br><span class="line">[ cond ] &amp;&amp; cmd1          <span class="comment"># 和上面完全等价 </span></span><br><span class="line">[ cond ] &amp;&amp; cmd1 || cmd2  <span class="comment"># 条件为真执行 cmd1 否则执行 cmd2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断 /etc/passwd 文件是否存在 </span></span><br><span class="line"><span class="comment"># 经典的 if 语句就是判断后面的命令返回值为 0 的话，认为条件为真，否则为假 </span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -e /etc/passwd; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"alright it exists ... "</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"it doesn't exist ..."</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 和上面完全等价，[ 是个和 test 一样的可执行程序，但最后一个参数必须为 ]</span></span><br><span class="line"><span class="comment"># 这个名字为 "[" 的可执行程序一般就在 /bin 或 /usr/bin 下面，比 test 优雅些 </span></span><br><span class="line"><span class="keyword">if</span> [ -e /etc/passwd ]; <span class="keyword">then</span>   </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"alright it exists ..."</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"it doesn't exist ... "</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 和上面两个完全等价，其实到 bash 时代 [ 已经是内部命令了，用 enable 可以看到 </span></span><br><span class="line">[ -e /etc/passwd ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"alright it exists"</span> || <span class="built_in">echo</span> <span class="string">"it doesn't exist"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断变量的值 </span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$varname</span>"</span> = <span class="string">"foo"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"this is foo"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$varname</span>"</span> = <span class="string">"bar"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"this is bar"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"neither"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复杂条件判断，注意 || 和 &amp;&amp; 是完全兼容 POSIX 的推荐写法 </span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$x</span> -gt 10 ] &amp;&amp; [ <span class="variable">$x</span> -lt 20 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"yes, between 10 and 20"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以用 &amp;&amp; 命令连接符来做和上面完全等价的事情 </span></span><br><span class="line">[ <span class="variable">$x</span> -gt 10 ] &amp;&amp; [ <span class="variable">$x</span> -lt 20 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"yes, between 10 and 20"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 小括号和 -a -o 是 POSIX XSI 扩展写法，小括号是字面量，输入时前面要加反斜杆 </span></span><br><span class="line"><span class="keyword">if</span> [ \( <span class="variable">$x</span> -gt 10 \) -a \( <span class="variable">$x</span> -lt 20 \) ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"yes, between 10 and 20"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同样可以用 &amp;&amp; 命令连接符来做和上面完全等价的事情 </span></span><br><span class="line">[ \( <span class="variable">$x</span> -gt 10 \) -a \( <span class="variable">$x</span> -lt 20 \) ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"yes, between 10 and 20"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断程序存在的话就执行 </span></span><br><span class="line">[ -x /bin/ls ] &amp;&amp; /bin/ls -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果不考虑兼容 posix sh 和 dash 这些的话，可用 bash 独有的 ((..)) 和 [[..]]:</span></span><br><span class="line">https://www.ibm.com/developerworks/library/l-bash-test/index.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 流程控制：while / for / case / until </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># while 循环 </span></span><br><span class="line"><span class="keyword">while</span> condition; <span class="keyword">do</span></span><br><span class="line">    statements</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">i=1</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -le 10 ]; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span>; </span><br><span class="line">    i=$(expr <span class="variable">$i</span> + 1)</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for 循环：上面的 while 语句等价 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..10&#125;; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name [<span class="keyword">in</span> list]; <span class="keyword">do</span></span><br><span class="line">    statements</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for 列举某目录下面的所有文件 </span></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> /home/*; <span class="keyword">do</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$f</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># bash 独有的 (( .. )) 语句，更接近 C 语言，但是不兼容 posix sh</span></span><br><span class="line"><span class="keyword">for</span> (( initialisation ; ending condition ; update )); <span class="keyword">do</span></span><br><span class="line">    statements</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 和上面的写法等价 </span></span><br><span class="line"><span class="keyword">for</span> ((i = 0; i &lt; 10; i++)); <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span>; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># case 判断 </span></span><br><span class="line"><span class="keyword">case</span> expression <span class="keyword">in</span> </span><br><span class="line">    pattern1 )</span><br><span class="line">        statements ;;</span><br><span class="line">    pattern2 )</span><br><span class="line">        statements ;;</span><br><span class="line">    * )</span><br><span class="line">        otherwise ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># until 语句 </span></span><br><span class="line">until condition; <span class="keyword">do</span></span><br><span class="line">    statements</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># select 语句 </span></span><br><span class="line">select name [<span class="keyword">in</span> list]; <span class="keyword">do</span></span><br><span class="line">  statements that can use <span class="variable">$name</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 命令处理 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">command</span> ls                         <span class="comment"># 忽略 alias 直接执行程序或者内建命令 ls</span></span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">cd</span>                         <span class="comment"># 忽略 alias 直接运行内建的 cd 命令 </span></span><br><span class="line"><span class="built_in">enable</span>                             <span class="comment"># 列出所有 bash 内置命令，或禁止某命令 </span></span><br><span class="line"><span class="built_in">help</span> &#123;builtin_command&#125;             <span class="comment"># 查看内置命令的帮助（仅限 bash 内置命令）</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">eval</span> <span class="variable">$script</span>                       <span class="comment"># 对 script 变量中的字符串求值（执行）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 输出 / 输入 重定向 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">cmd1 | cmd2                        <span class="comment"># 管道，cmd1 的标准输出接到 cmd2 的标准输入 </span></span><br><span class="line">&lt; file                             <span class="comment"># 将文件内容重定向为命令的标准输入 </span></span><br><span class="line">&gt; file                             <span class="comment"># 将命令的标准输出重定向到文件，会覆盖文件 </span></span><br><span class="line">&gt;&gt; file                            <span class="comment"># 将命令的标准输出重定向到文件，追加不覆盖 </span></span><br><span class="line">&gt;| file                            <span class="comment"># 强制输出到文件，即便设置过：set -o noclobber</span></span><br><span class="line">n&gt;| file                           <span class="comment"># 强制将文件描述符 n 的输出重定向到文件 </span></span><br><span class="line">&lt;&gt; file                            <span class="comment"># 同时使用该文件作为标准输入和标准输出 </span></span><br><span class="line">n&lt;&gt; file                           <span class="comment"># 同时使用文件作为文件描述符 n 的输出和输入 </span></span><br><span class="line">n&gt; file                            <span class="comment"># 重定向文件描述符 n 的输出到文件 </span></span><br><span class="line">n&lt; file                            <span class="comment"># 重定向文件描述符 n 的输入为文件内容 </span></span><br><span class="line">n&gt;&amp;                                <span class="comment"># 将标准输出 dup / 合并 到文件描述符 n</span></span><br><span class="line">n&lt;&amp;                                <span class="comment"># 将标准输入 dump / 合并 定向为描述符 n</span></span><br><span class="line">n&gt;&amp;m                               <span class="comment"># 文件描述符 n 被作为描述符 m 的副本，输出用 </span></span><br><span class="line">n&lt;&amp;m                               <span class="comment"># 文件描述符 n 被作为描述符 m 的副本，输入用 </span></span><br><span class="line">&amp;&gt;file                             <span class="comment"># 将标准输出和标准错误重定向到文件 </span></span><br><span class="line">&lt;&amp;-                                <span class="comment"># 关闭标准输入 </span></span><br><span class="line">&gt;&amp;-                                <span class="comment"># 关闭标准输出 </span></span><br><span class="line">n&gt;&amp;-                               <span class="comment"># 关闭作为输出的文件描述符 n</span></span><br><span class="line">n&lt;&amp;-                               <span class="comment"># 关闭作为输入的文件描述符 n</span></span><br><span class="line">diff &lt;(cmd1) &lt;(cmd2)               <span class="comment"># 比较两个命令的输出 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 文本处理 - cut</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">cut -c 1-16                        <span class="comment"># 截取每行头 16 个字符 </span></span><br><span class="line">cut -c 1-16 file                   <span class="comment"># 截取指定文件中每行头 16 个字符 </span></span><br><span class="line">cut -c3-                           <span class="comment"># 截取每行从第三个字符开始到行末的内容 </span></span><br><span class="line">cut -d<span class="string">':'</span> -f5                      <span class="comment"># 截取用冒号分隔的第五列内容 </span></span><br><span class="line">cut -d<span class="string">';'</span> -f2,10                   <span class="comment"># 截取用分号分隔的第二和第十列内容 </span></span><br><span class="line">cut -d<span class="string">''</span> -f3-7                    <span class="comment"># 截取空格分隔的三到七列 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"hello"</span> | cut -c1-3           <span class="comment"># 显示 hel</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"hello sir"</span> | cut -d<span class="string">' '</span> -f2   <span class="comment"># 显示 sir</span></span><br><span class="line">ps | tr -s <span class="string">" "</span> | cut -d <span class="string">" "</span> -f 2,3,4  <span class="comment"># cut 搭配 tr 压缩字符 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 文本处理 - awk / sed </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">awk <span class="string">'&#123;print $5&#125;'</span> file              <span class="comment"># 打印文件中以空格分隔的第五列 </span></span><br><span class="line">awk -F <span class="string">','</span> <span class="string">'&#123;print $5&#125;'</span> file       <span class="comment"># 打印文件中以逗号分隔的第五列 </span></span><br><span class="line">awk <span class="string">'/str/ &#123;print $2&#125;'</span> file        <span class="comment"># 打印文件中包含 str 的所有行的第二列 </span></span><br><span class="line">awk -F <span class="string">','</span> <span class="string">'&#123;print $NF&#125;'</span> file      <span class="comment"># 打印逗号分隔的文件中的每行最后一列 </span></span><br><span class="line">awk <span class="string">'&#123;s+=$1&#125; END &#123;print s&#125;'</span> file   <span class="comment"># 计算所有第一列的合 </span></span><br><span class="line">awk <span class="string">'NR%3==1'</span> file                 <span class="comment"># 从第一行开始，每隔三行打印一行 </span></span><br><span class="line"></span><br><span class="line">sed <span class="string">'s/find/replace/'</span> file         <span class="comment"># 替换文件中首次出现的字符串并输出结果 </span></span><br><span class="line">sed <span class="string">'10s/find/replace/'</span> file       <span class="comment"># 替换文件第 10 行内容 </span></span><br><span class="line">sed <span class="string">'10,20s/find/replace/'</span> file    <span class="comment"># 替换文件中 10-20 行内容 </span></span><br><span class="line">sed -r <span class="string">'s/regex/replace/g'</span> file    <span class="comment"># 替换文件中所有出现的字符串 </span></span><br><span class="line">sed -i <span class="string">'s/find/replace/g'</span> file     <span class="comment"># 替换文件中所有出现的字符并且覆盖文件 </span></span><br><span class="line">sed -i <span class="string">'/find/i\newline'</span> file      <span class="comment"># 在文件的匹配文本前插入行 </span></span><br><span class="line">sed -i <span class="string">'/find/a\newline'</span> file      <span class="comment"># 在文件的匹配文本后插入行 </span></span><br><span class="line">sed <span class="string">'/line/s/find/replace/'</span> file   <span class="comment"># 先搜索行特征再执行替换 </span></span><br><span class="line">sed -e <span class="string">'s/f/r/'</span> -e <span class="string">'s/f/r'</span> file    <span class="comment"># 执行多次替换 </span></span><br><span class="line">sed <span class="string">'s#find#replace#'</span> file         <span class="comment"># 使用 # 替换 / 来避免 pattern 中有斜杆 </span></span><br><span class="line">sed -i -r <span class="string">'s/^\s+//g'</span> file         <span class="comment"># 删除文件每行头部空格 </span></span><br><span class="line">sed <span class="string">'/^$/d'</span> file                   <span class="comment"># 删除文件空行并打印 </span></span><br><span class="line">sed -i <span class="string">'s/\s\+$//'</span> file            <span class="comment"># 删除文件每行末尾多余空格 </span></span><br><span class="line">sed -n <span class="string">'2p'</span> file                   <span class="comment"># 打印文件第二行 </span></span><br><span class="line">sed -n <span class="string">'2,5p'</span> file                 <span class="comment"># 打印文件第二到第五行 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 排序 - sort</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">sort file                          <span class="comment"># 排序文件 </span></span><br><span class="line">sort -r file                       <span class="comment"># 反向排序（降序）</span></span><br><span class="line">sort -n file                       <span class="comment"># 使用数字而不是字符串进行比较 </span></span><br><span class="line">sort -t: -k 3n /etc/passwd         <span class="comment"># 按 passwd 文件的第三列进行排序 </span></span><br><span class="line">sort -u file                       <span class="comment"># 去重排序 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 快速跳转 - https://github.com/rupa/z</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /path/to/z.sh               <span class="comment"># .bashrc 中初始化 z.sh</span></span><br><span class="line">z                                  <span class="comment"># 列出所有历史路径以及他们的权重 </span></span><br><span class="line">z foo                              <span class="comment"># 跳到历史路径中匹配 foo 的权重最大的目录 </span></span><br><span class="line">z foo bar                          <span class="comment"># 跳到历史路径中匹配 foo 和 bar 权重最大的目录 </span></span><br><span class="line">z -l foo                           <span class="comment"># 列出所有历史路径中匹配 foo 的目录及权重 </span></span><br><span class="line">z -r foo                           <span class="comment"># 按照最高访问次数优先进行匹配跳转 </span></span><br><span class="line">z -t foo                           <span class="comment"># 按照最近访问优先进行匹配跳转 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 键盘绑定 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\eh":"\C-b"'</span>                <span class="comment"># 绑定 ALT+h 为光标左移，同 CTRL+b / &lt;Left&gt;</span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\el":"\C-f"'</span>                <span class="comment"># 绑定 ALT+l 为光标右移，同 CTRL+f / &lt;Right&gt;</span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\ej":"\C-n"'</span>                <span class="comment"># 绑定 ALT+j 为下条历史，同 CTRL+n / &lt;Down&gt;</span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\ek":"\C-p"'</span>                <span class="comment"># 绑定 ALT+k 为上条历史，同 CTRL+p / &lt;Up&gt;</span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\eH":"\eb"'</span>                 <span class="comment"># 绑定 ALT+H 为光标左移一个单词，同 ALT-b </span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\eL":"\ef"'</span>                 <span class="comment"># 绑定 ALT+L 为光标右移一个单词，同 ALT-f </span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\eJ":"\C-a"'</span>                <span class="comment"># 绑定 ALT+J 为移动到行首，同 CTRL+a / &lt;Home&gt;</span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\eK":"\C-e"'</span>                <span class="comment"># 绑定 ALT+K 为移动到行末，同 CTRL+e / &lt;End&gt;</span></span><br><span class="line"><span class="built_in">bind</span> <span class="string">'"\e;":"ls -l\n"'</span>             <span class="comment"># 绑定 ALT+; 为执行 ls -l 命令 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 网络管理：ip / ifconfig / nmap ...</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">ip a                               <span class="comment"># 显示所有网络地址，同 ip address</span></span><br><span class="line">ip a show eth1                     <span class="comment"># 显示网卡 IP 地址 </span></span><br><span class="line">ip a add 172.16.1.23/24 dev eth1   <span class="comment"># 添加网卡 IP 地址 </span></span><br><span class="line">ip a del 172.16.1.23/24 dev eth1   <span class="comment"># 删除网卡 IP 地址 </span></span><br><span class="line">ip link show dev eth0              <span class="comment"># 显示网卡设备属性 </span></span><br><span class="line">ip link <span class="built_in">set</span> eth1 up                <span class="comment"># 激活网卡 </span></span><br><span class="line">ip link <span class="built_in">set</span> eth1 down              <span class="comment"># 关闭网卡 </span></span><br><span class="line">ip link <span class="built_in">set</span> eth1 address &#123;mac&#125;     <span class="comment"># 修改 MAC 地址 </span></span><br><span class="line">ip neighbour                       <span class="comment"># 查看 ARP 缓存 </span></span><br><span class="line">ip route                           <span class="comment"># 查看路由表 </span></span><br><span class="line">ip route add 10.1.0.0/24 via 10.0.0.253 dev eth0    <span class="comment"># 添加静态路由 </span></span><br><span class="line">ip route del 10.1.0.0/24           <span class="comment"># 删除静态路由 </span></span><br><span class="line"></span><br><span class="line">ifconfig                           <span class="comment"># 显示所有网卡和接口信息 </span></span><br><span class="line">ifconfig -a                        <span class="comment"># 显示所有网卡（包括开机没启动的）信息 </span></span><br><span class="line">ifconfig eth0                      <span class="comment"># 指定设备显示信息 </span></span><br><span class="line">ifconfig eth0 up                   <span class="comment"># 激活网卡 </span></span><br><span class="line">ifconfig eth0 down                 <span class="comment"># 关闭网卡 </span></span><br><span class="line">ifconfig eth0 192.168.120.56       <span class="comment"># 给网卡配置 IP 地址 </span></span><br><span class="line">ifconfig eth0 10.0.0.8 netmask 255.255.255.0 up     <span class="comment"># 配置 IP 并启动 </span></span><br><span class="line">ifconfig eth0 hw ether 00:aa:bb:cc:dd:ee            <span class="comment"># 修改 MAC 地址 </span></span><br><span class="line"></span><br><span class="line">nmap 10.0.0.12                     <span class="comment"># 扫描主机 1-1000 端口 </span></span><br><span class="line">nmap -p 1024-65535 10.0.0.12       <span class="comment"># 扫描给定端口 </span></span><br><span class="line">nmap 10.0.0.0/24                   <span class="comment"># 给定网段扫描局域网内所有主机 </span></span><br><span class="line">nmap -O -sV 10.0.0.12              <span class="comment"># 探测主机服务和操作系统版本 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 有趣的命令 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">man hier                           <span class="comment"># 查看文件系统的结构和含义 </span></span><br><span class="line">man <span class="built_in">test</span>                           <span class="comment"># 查看 posix sh 的条件判断帮助 </span></span><br><span class="line">man ascii                          <span class="comment"># 显示 ascii 表 </span></span><br><span class="line">getconf LONG_BIT                   <span class="comment"># 查看系统是 32 位还是 64 位 </span></span><br><span class="line"><span class="built_in">bind</span> -P                            <span class="comment"># 列出所有 bash 的快捷键 </span></span><br><span class="line">mount | column -t                  <span class="comment"># 漂亮的列出当前加载的文件系统 </span></span><br><span class="line">curl ip.cn                         <span class="comment"># 取得外网 ip 地址和服务商信息 </span></span><br><span class="line"><span class="built_in">disown</span> -a &amp;&amp; <span class="built_in">exit</span>                  <span class="comment"># 关闭所有后台任务并退出 </span></span><br><span class="line">cat /etc/issue                     <span class="comment"># 查看 Linux 发行版信息 </span></span><br><span class="line">lsof -i port:80                    <span class="comment"># 哪个程序在使用 80 端口？</span></span><br><span class="line">showkey -a                         <span class="comment"># 取得按键的 ASCII 码 </span></span><br><span class="line">svn diff | view -                  <span class="comment"># 使用 Vim 来显示带色彩的 diff 输出 </span></span><br><span class="line">mv filename.&#123;old,new&#125;              <span class="comment"># 快速文件改名 </span></span><br><span class="line">time <span class="built_in">read</span>                          <span class="comment"># 使用 CTRL-D 停止，最简单的计时功能 </span></span><br><span class="line">cp file.txt&#123;,.bak&#125;                 <span class="comment"># 快速备份文件 </span></span><br><span class="line">sudo touch /forcefsck              <span class="comment"># 强制在下次重启时扫描磁盘 </span></span><br><span class="line">find ~ -mmin 60 -<span class="built_in">type</span> f            <span class="comment"># 查找 $HOME 目录中，60 分钟内修改过的文件 </span></span><br><span class="line">curl wttr.in/~beijing              <span class="comment"># 查看北京的天气预报 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;SSH_CLIENT%% *&#125;</span>             <span class="comment"># 取得你是从什么 IP 链接到当前主机上的 </span></span><br><span class="line"><span class="built_in">echo</span> $[RANDOM%X+1]                 <span class="comment"># 取得 1 到 X 之间的随机数 </span></span><br><span class="line"><span class="built_in">bind</span> -x <span class="string">'"\C-l":ls -l'</span>             <span class="comment"># 设置 CTRL+l 为执行 ls -l 命令 </span></span><br><span class="line">find / -<span class="built_in">type</span> f -size +5M           <span class="comment"># 查找大于 5M 的文件 </span></span><br><span class="line">chmod --reference f1 f2            <span class="comment"># 将 f2 的权限设置成 f1 一模一样的 </span></span><br><span class="line">curl -L cheat.sh                   <span class="comment"># 速查表大全 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 常用技巧 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出最常使用的命令 </span></span><br><span class="line"><span class="built_in">history</span> | awk <span class="string">'&#123;a[$2]++&#125;END&#123;for(i in a)&#123;print a[i]" "i&#125;&#125;'</span> | sort -rn | head</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有网络状态：ESTABLISHED / TIME_WAIT / FIN_WAIT1 / FIN_WAIT2 </span></span><br><span class="line">netstat -n | awk <span class="string">'/^tcp/ &#123;++tt[$NF]&#125; END &#123;for (a in tt) print a, tt[a]&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过 SSH 来 mount 文件系统 </span></span><br><span class="line">sshfs name@server:/path/to/folder /path/to/mount/point</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示前十个运行的进程并按内存使用量排序 </span></span><br><span class="line">ps aux | sort -nk +4 | tail</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在右上角显示时钟 </span></span><br><span class="line"><span class="keyword">while</span> sleep 1;<span class="keyword">do</span> tput sc;tput cup 0 $(($(tput cols)-29));date;tput rc;<span class="keyword">done</span>&amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从网络上的压缩文件中解出一个文件来，并避免保存中间文件 </span></span><br><span class="line">wget -qO - <span class="string">"http://www.tarball.com/tarball.gz"</span> | tar zxvf -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 性能测试：测试处理器性能 </span></span><br><span class="line">python -c <span class="string">"import test.pystone;print(test.pystone.pystones())"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 性能测试：测试内存带宽 </span></span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/dev/null bs=1M count=32768</span><br><span class="line"></span><br><span class="line"><span class="comment"># Linux 下挂载一个 iso 文件 </span></span><br><span class="line">mount /path/to/file.iso /mnt/cdrom -oloop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过主机 A 直接 ssh 到主机 B</span></span><br><span class="line">ssh -t hostA ssh hostB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载一个网站的所有图片 </span></span><br><span class="line">wget -r -l1 --no-parent -nH -nd -P/tmp -A<span class="string">".gif,.jpg"</span> http://example.com/images</span><br><span class="line"></span><br><span class="line"><span class="comment"># 快速创建项目目录 </span></span><br><span class="line">mkdir -p work/&#123;project1,project2&#125;/&#123;src,bin,bak&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按日期范围查找文件 </span></span><br><span class="line">find . -<span class="built_in">type</span> f -newermt <span class="string">"2010-01-01"</span> ! -newermt <span class="string">"2010-06-01"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前正在使用网络的进程 </span></span><br><span class="line">lsof -P -i -n | cut -f 1 -d <span class="string">""</span>| uniq | tail -n +2</span><br><span class="line"></span><br><span class="line"><span class="comment"># Vim 中保存一个没有权限的文件 </span></span><br><span class="line">:w !sudo tee &gt; /dev/null %</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 .bashrc / .bash_profile 中加载另外一个文件（比如你保存在 github 上的配置）</span></span><br><span class="line"><span class="built_in">source</span> ~/github/profiles/my_bash_init.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 反向代理：将外网主机（202.115.8.1）端口（8443）转发到内网主机 192.168.1.2:443</span></span><br><span class="line">ssh -CqTnN -R 0.0.0.0:8443:192.168.1.2:443  user@202.115.8.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正向代理：将本地主机的 8443 端口，通过 192.168.1.3 转发到 192.168.1.2:443 </span></span><br><span class="line">ssh -CqTnN -L 0.0.0.0:8443:192.168.1.2:443  user@192.168.1.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># socks5 代理：把本地 1080 端口的 socks5 的代理请求通过远程主机转发出去 </span></span><br><span class="line">ssh -CqTnN -D localhost:1080  user@202.115.8.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 终端下正确设置 ALT 键和 BackSpace 键 </span></span><br><span class="line">http://www.skywind.me/blog/archives/2021</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 有用的函数 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动解压：判断文件后缀名并调用相应解压命令 </span></span><br><span class="line"><span class="keyword">function</span> q-<span class="function"><span class="title">extract</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [ -f <span class="variable">$1</span> ] ; <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">        *.tar.bz2)   tar -xvjf <span class="variable">$1</span>    ;;</span><br><span class="line">        *.tar.gz)    tar -xvzf <span class="variable">$1</span>    ;;</span><br><span class="line">        *.tar.xz)    tar -xvJf <span class="variable">$1</span>    ;;</span><br><span class="line">        *.bz2)       bunzip2 <span class="variable">$1</span>     ;;</span><br><span class="line">        *.rar)       rar x <span class="variable">$1</span>       ;;</span><br><span class="line">        *.gz)        gunzip <span class="variable">$1</span>      ;;</span><br><span class="line">        *.tar)       tar -xvf <span class="variable">$1</span>     ;;</span><br><span class="line">        *.tbz2)      tar -xvjf <span class="variable">$1</span>    ;;</span><br><span class="line">        *.tgz)       tar -xvzf <span class="variable">$1</span>    ;;</span><br><span class="line">        *.zip)       unzip <span class="variable">$1</span>       ;;</span><br><span class="line">        *.Z)         uncompress <span class="variable">$1</span>  ;;</span><br><span class="line">        *.7z)        7z x <span class="variable">$1</span>        ;;</span><br><span class="line">        *)           <span class="built_in">echo</span> <span class="string">"don't know how to extract'<span class="variable">$1</span>'..."</span> ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"'<span class="variable">$1</span>' is not a valid file!"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自动压缩：判断后缀名并调用相应压缩程序 </span></span><br><span class="line"><span class="keyword">function</span> q-<span class="function"><span class="title">compress</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$1</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">        FILE=<span class="variable">$1</span></span><br><span class="line">        <span class="keyword">case</span> <span class="variable">$FILE</span> <span class="keyword">in</span></span><br><span class="line">        *.tar) <span class="built_in">shift</span> &amp;&amp; tar -cf <span class="variable">$FILE</span> $* ;;</span><br><span class="line">        *.tar.bz2) <span class="built_in">shift</span> &amp;&amp; tar -cjf <span class="variable">$FILE</span> $* ;;</span><br><span class="line">        *.tar.xz) <span class="built_in">shift</span> &amp;&amp; tar -cJf <span class="variable">$FILE</span> $* ;;</span><br><span class="line">        *.tar.gz) <span class="built_in">shift</span> &amp;&amp; tar -czf <span class="variable">$FILE</span> $* ;;</span><br><span class="line">        *.tgz) <span class="built_in">shift</span> &amp;&amp; tar -czf <span class="variable">$FILE</span> $* ;;</span><br><span class="line">        *.zip) <span class="built_in">shift</span> &amp;&amp; zip <span class="variable">$FILE</span> $* ;;</span><br><span class="line">        *.rar) <span class="built_in">shift</span> &amp;&amp; rar <span class="variable">$FILE</span> $* ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"usage: q-compress &lt;foo.tar.gz&gt; ./foo ./bar"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 漂亮的带语法高亮的 color cat ，需要先 pip install pygments</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">ccat</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> style=<span class="string">"monokai"</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$#</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">        pygmentize -P style=<span class="variable">$style</span> -P tabsize=4 -f terminal256 -g</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span> NAME <span class="keyword">in</span> <span class="variable">$@</span>; <span class="keyword">do</span></span><br><span class="line">            pygmentize -P style=<span class="variable">$style</span> -P tabsize=4 -f terminal256 -g <span class="string">"<span class="variable">$NAME</span>"</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># 好玩的配置 </span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 放到你的 ~/.bashrc 配置文件中，给 man 增加漂亮的色彩高亮 </span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_mb=$<span class="string">'\E[1m\E[32m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_mh=$<span class="string">'\E[2m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_mr=$<span class="string">'\E[7m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_md=$<span class="string">'\E[1m\E[36m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_ZW=<span class="string">""</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_us=$<span class="string">'\E[4m\E[1m\E[37m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_me=$<span class="string">'\E(B\E[m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_ue=$<span class="string">'\E[24m\E(B\E[m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_ZO=<span class="string">""</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_ZN=<span class="string">""</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_se=$<span class="string">'\E[27m\E(B\E[m'</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_ZV=<span class="string">""</span></span><br><span class="line"><span class="built_in">export</span> LESS_TERMCAP_so=$<span class="string">'\E[1m\E[33m\E[44m'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ALT+hjkl/HJKL 快速移动光标，将下面内容添加到 ~/.inputrc 中可作用所有工具，</span></span><br><span class="line"><span class="comment"># 包括 bash/zsh/python/lua 等使用 readline 的工具，帮助见：info rluserman</span></span><br><span class="line"><span class="string">"\eh"</span>: backward-char</span><br><span class="line"><span class="string">"\el"</span>: forward-char</span><br><span class="line"><span class="string">"\ej"</span>: next-history</span><br><span class="line"><span class="string">"\ek"</span>: previous-history</span><br><span class="line"><span class="string">"\eH"</span>: backward-word</span><br><span class="line"><span class="string">"\eL"</span>: forward-word</span><br><span class="line"><span class="string">"\eJ"</span>: beginning-of-line</span><br><span class="line"><span class="string">"\eK"</span>: end-of-line</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"><span class="comment"># References</span></span><br><span class="line"><span class="comment">##############################################################################</span></span><br><span class="line"></span><br><span class="line">https://github.com/Idnan/bash-guide</span><br><span class="line">http://www.linuxstall.com/linux-command-line-tips-that-every-linux-user-should-know/</span><br><span class="line">https://ss64.com/bash/syntax-keyboard.html</span><br><span class="line">http://wiki.bash-hackers.org/commands/classictest</span><br><span class="line">https://www.ibm.com/developerworks/library/l-bash-test/index.html</span><br><span class="line">https://www.cyberciti.biz/faq/bash-loop-over-file/</span><br><span class="line">https://linuxconfig.org/bash-scripting-tutorial</span><br><span class="line">https://github.com/LeCoupa/awesome-cheatsheets/blob/master/languages/bash.sh</span><br><span class="line">https://devhints.io/bash</span><br><span class="line">https://github.com/jlevy/the-art-of-command-line</span><br><span class="line">https://yq.aliyun.com/articles/68541</span><br><span class="line"></span><br><span class="line"><span class="comment"># vim: set ts=4 sw=4 tw=0 et :</span></span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://github.com/skywind3000/awesome-cheatsheets/blob/master/languages/bash.sh" target="_blank" rel="noopener">Bash awesome-cheatsheets</a></p><p><a href="https://github.com/OMGZui/bash-step-to-step" target="_blank" rel="noopener">bash-step-to-step</a></p><p><a href="http://sayhiai.com/15614525129972.html" target="_blank" rel="noopener">Linux 上，最常用的一批命令解析（10 年精选）</a></p>]]></content>
    
    <summary type="html">
    
      Bash命令语法和Bash Cheat Sheet中文速查表
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>基于 Keepalived 搭建 Zabbix Server HA 双机高可用</title>
    <link href="https://wsgzao.github.io/post/zabbix-ha/"/>
    <id>https://wsgzao.github.io/post/zabbix-ha/</id>
    <published>2019-10-24T06:59:49.000Z</published>
    <updated>2019-10-30T06:23:54.317Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前使用 Zabbix 被动模式存在单点风险，借助这次 Zabbix 4.0 LTS 主动模式改造的机会，使用 Keepalived 搭建 Zabbix Server HA 双击高可用架构，简单记录下做 HA 的过程以备参考。</p><blockquote><p>基于 Keepalived 搭建 Zabbix Server HA 双机高可用</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 10 月 24 日 - 更新 Zabbix 本地数据库迁移至远程数据库集群的调整步骤<br>2019 年 03 月 02 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/zabbix-ha/">https://wsgzao.github.io/post/zabbix-ha/</a></p><p><strong> 扩展阅读 </strong></p><p>Zabbix - <a href="https://www.zabbix.com/" target="_blank" rel="noopener">https://www.zabbix.com/</a></p><hr><h2 id="Zabbix-高可用设计目标"><a href="#Zabbix-高可用设计目标" class="headerlink" title="Zabbix 高可用设计目标"></a>Zabbix 高可用设计目标</h2><p>keepalived 服务优先级选择切换机制：对于 zabbix 服务器来说，只要 zabbix 存活和 mysql 存活，就能够正常记录数据，不会丢失数据，php 和 httpd 只是 web 页面的访问而已，所以我在这里定义 mysql 和 zabbix 为主要服务，php 和 httpd 为次要服务，为了实现主要服务存在，次要服务挂了；次要服务器存在，主要服务器挂了，keepalived 会优先选择主要服务存在的一方作为 master，让 keepalived 切换更为更合理。</p><p>数据库主主同步：不管切到哪一边都需要保持数据一致性，不可出现丢数据或者数据重复，保证数据库的高可用。</p><p>文件双向同步：        </p><ol><li>web 文件同步：任何做 web 文件得配置和修改，保证两边一致，确保切换不会发生任何变化。        </li><li>zabbix 服务文件同步：对 zabbix_servr 的配置文件做的任何修改，和脚本的修改进行同步，也是为了保证两边的服务一致性，没有落后情况，达到无需人工干预自动切换服务可正常时候。        </li><li>到此完成了 zabbix 得无缝切换，无故障时间！</li></ol><h2 id="Zabbix-Server"><a href="#Zabbix-Server" class="headerlink" title="Zabbix Server"></a>Zabbix Server</h2><blockquote><p>基于官方的 LAMP 架构，按照最简单的原生方式来部署 Zabbix 4.0 LTS，不做任何多余优化</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装必要依赖包 </span></span><br><span class="line">yum install -y httpd mariadb-server mariadb php php-mysql php-gd libjpeg* php-ldap php-odbc php-pear php-xml php-xmlrpc php-mhash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 apache 配置 </span></span><br><span class="line">vim /etc/httpd/conf/httpd.conf</span><br><span class="line">ServerName 192.168.56.103</span><br><span class="line">DirectoryIndex index.html index.php</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 php 时区 </span></span><br><span class="line">vim /etc/php.ini</span><br><span class="line">date.timezone = Asia/Singapore</span><br><span class="line">memory_limit = 512M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 优化 php 参数 (可选，建议 memory_limit 根据内存值调高)</span></span><br><span class="line">sed -i <span class="string">'s/post_max_size = 8M/post_max_size = 32M/g'</span> /etc/php.ini</span><br><span class="line">sed -i <span class="string">'s/upload_max_filesize = 2M/upload_max_filesize = 50M/g'</span> /etc/php.ini</span><br><span class="line">sed -i <span class="string">'s/\;date.timezone =/date.timezone = Asia\/Singapore/'</span> /etc/php.ini</span><br><span class="line">sed -i <span class="string">'s/max_execution_time = 30/max_execution_time = 600/g'</span> /etc/php.ini</span><br><span class="line">sed -i <span class="string">'s/max_input_time = 60/max_input_time = 600/g'</span> /etc/php.ini</span><br><span class="line">sed -i <span class="string">'s/memory_limit = 128M/memory_limit = 512M/g'</span> /etc/php.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 httpd 服务 </span></span><br><span class="line">systemctl start httpd.service</span><br><span class="line"><span class="comment"># 启动 mariadb 服务 </span></span><br><span class="line">systemctl start mariadb.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化 mysql 数据库，并配置 root 用户密码 </span></span><br><span class="line">mysql_secure_installation</span><br><span class="line"></span><br><span class="line"><span class="comment"># 万一新版本忘记随机密码可以通过日志获取 </span></span><br><span class="line">grep <span class="string">'temporary password'</span> /var/<span class="built_in">log</span>/mysqld.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个测试页，测试 LAMP 是否搭建成功 </span></span><br><span class="line">cat &gt; /var/www/html/index.php &lt;&lt; EOF</span><br><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 zabbix 数据库 </span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">mysql&gt; create database zabbix character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">mysql&gt; grant all privileges on zabbix.* to zabbix@localhost identified by <span class="string">'zabbix'</span>;</span><br><span class="line">mysql&gt; quit;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署 zabbix</span></span><br><span class="line">rpm -Uvh https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-2.el7.noarch.rpm</span><br><span class="line">yum clean all</span><br><span class="line">yum -y install zabbix-server-mysql zabbix-web-mysql zabbix-agent</span><br><span class="line">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p zabbix</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置数据库用户及密码 </span></span><br><span class="line">vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">DBPassword=zabbix</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改时区和参数优化 </span></span><br><span class="line">vim /etc/httpd/conf.d/zabbix.conf</span><br><span class="line">php_value date.timezone Asia/Singapore</span><br><span class="line">php_value memory_limit 512M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 zabbix 并设置自启动服务 </span></span><br><span class="line">systemctl restart zabbix-server zabbix-agent httpd</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-server zabbix-agent httpd mariadb</span><br><span class="line"></span><br><span class="line">http://localhost/zabbix</span><br><span class="line">Admin/zabbix</span><br></pre></td></tr></table></figure><h2 id="Zabbix-配置优化"><a href="#Zabbix-配置优化" class="headerlink" title="Zabbix 配置优化"></a>Zabbix 配置优化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Zabbix 默认原始配置 </span></span><br><span class="line">grep -Ev <span class="string">'^$|#'</span> /etc/zabbix/zabbix_server.conf</span><br><span class="line">LogFile=/var/<span class="built_in">log</span>/zabbix/zabbix_server.log</span><br><span class="line">LogFileSize=0</span><br><span class="line">PidFile=/var/run/zabbix/zabbix_server.pid</span><br><span class="line">SocketDir=/var/run/zabbix</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br><span class="line">SNMPTrapperFile=/var/<span class="built_in">log</span>/snmptrap/snmptrap.log</span><br><span class="line">Timeout=4</span><br><span class="line">AlertScriptsPath=/usr/lib/zabbix/alertscripts</span><br><span class="line">ExternalScripts=/usr/lib/zabbix/externalscripts</span><br><span class="line">LogSlowQueries=3000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 zabbix_server.conf，通常可以追加在末尾 </span></span><br><span class="line">CacheSize=8G</span><br><span class="line">TrendCacheSize=2G</span><br><span class="line">Timeout=30</span><br><span class="line">StartPollers=500</span><br><span class="line">StartPollersUnreachable=100</span><br><span class="line">StartPingers=50</span><br><span class="line">HousekeepingFrequency=0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果服务器性能很好可以继续向上调整参数 </span></span><br><span class="line">LogFile=/var/<span class="built_in">log</span>/zabbix/zabbix_server.log</span><br><span class="line">LogFileSize=0</span><br><span class="line">PidFile=/var/run/zabbix/zabbix_server.pid</span><br><span class="line">SocketDir=/var/run/zabbix</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br><span class="line">StartPollers=700</span><br><span class="line">StartPreprocessors=100</span><br><span class="line">StartPollersUnreachable=500</span><br><span class="line">StartTrappers=200</span><br><span class="line">StartPingers=500</span><br><span class="line">StartDiscoverers=100</span><br><span class="line">SNMPTrapperFile=/var/<span class="built_in">log</span>/snmptrap/snmptrap.log</span><br><span class="line">CacheSize=8G</span><br><span class="line">StartDBSyncers=64</span><br><span class="line">HistoryCacheSize=2G</span><br><span class="line">HistoryIndexCacheSize=2G</span><br><span class="line">TrendCacheSize=2G</span><br><span class="line">ValueCacheSize=2G</span><br><span class="line">Timeout=30</span><br><span class="line">AlertScriptsPath=/usr/lib/zabbix/alertscripts</span><br><span class="line">ExternalScripts=/usr/lib/zabbix/externalscripts</span><br><span class="line">LogSlowQueries=3000</span><br></pre></td></tr></table></figure><h2 id="数据库配置优化"><a href="#数据库配置优化" class="headerlink" title="数据库配置优化"></a>数据库配置优化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">grep -Ev <span class="string">'^$|#'</span> /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line">symbolic-links=0</span><br><span class="line">max_connections=1000</span><br><span class="line">[mysqld_safe]</span><br><span class="line"><span class="built_in">log</span>-error=/var/<span class="built_in">log</span>/mariadb/mariadb.log</span><br><span class="line">pid-file=/var/run/mariadb/mariadb.pid</span><br><span class="line">!includedir /etc/my.cnf.d</span><br></pre></td></tr></table></figure><h2 id="Zabbix-Partition-分区表优化"><a href="#Zabbix-Partition-分区表优化" class="headerlink" title="Zabbix Partition 分区表优化"></a>Zabbix Partition 分区表优化</h2><blockquote><p>Zabbix &gt;= 3.2, history 30, Trends 120,(‘history’, 30, 24, 14), 最多保存 30 天的数据，每隔 24 小时生成一个分区，每次生成 14 个分区</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> <span class="string">`partition_create`</span>(SCHEMANAME <span class="built_in">varchar</span>(<span class="number">64</span>), TABLENAME <span class="built_in">varchar</span>(<span class="number">64</span>), PARTITIONNAME <span class="built_in">varchar</span>(<span class="number">64</span>), CLOCK <span class="built_in">int</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           SCHEMANAME = The DB schema in which to make changes</span></span><br><span class="line"><span class="comment">           TABLENAME = The table with partitions to potentially delete</span></span><br><span class="line"><span class="comment">           PARTITIONNAME = The name of the partition to create</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Verify that the partition does not already exist</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">DECLARE</span> RETROWS <span class="built_in">INT</span>;</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">INTO</span> RETROWS</span><br><span class="line">        <span class="keyword">FROM</span> information_schema.partitions</span><br><span class="line">        <span class="keyword">WHERE</span> table_schema = SCHEMANAME <span class="keyword">AND</span> table_name = TABLENAME <span class="keyword">AND</span> partition_description &gt;= CLOCK;</span><br><span class="line"></span><br><span class="line">        IF RETROWS = 0 THEN</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                   1. Print a message indicating that a partition was created.</span></span><br><span class="line"><span class="comment">                   2. Create the SQL to create the partition.</span></span><br><span class="line"><span class="comment">                   3. Execute the SQL from #2.</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>( <span class="string">"partition_create("</span>, SCHEMANAME, <span class="string">","</span>, TABLENAME, <span class="string">","</span>, PARTITIONNAME, <span class="string">","</span>, CLOCK, <span class="string">")"</span> ) <span class="keyword">AS</span> msg;</span><br><span class="line">                <span class="keyword">SET</span> @<span class="keyword">sql</span> = <span class="keyword">CONCAT</span>( <span class="string">'ALTER TABLE'</span>, SCHEMANAME, <span class="string">'.'</span>, TABLENAME, <span class="string">'ADD PARTITION (PARTITION'</span>, PARTITIONNAME, <span class="string">'VALUES LESS THAN ('</span>, CLOCK, <span class="string">'));'</span> );</span><br><span class="line">                <span class="keyword">PREPARE</span> STMT <span class="keyword">FROM</span> @<span class="keyword">sql</span>;</span><br><span class="line">                <span class="keyword">EXECUTE</span> STMT;</span><br><span class="line">                <span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> STMT;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> <span class="string">`partition_drop`</span>(SCHEMANAME <span class="built_in">VARCHAR</span>(<span class="number">64</span>), TABLENAME <span class="built_in">VARCHAR</span>(<span class="number">64</span>), DELETE_BELOW_PARTITION_DATE <span class="built_in">BIGINT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           SCHEMANAME = The DB schema in which to make changes</span></span><br><span class="line"><span class="comment">           TABLENAME = The table with partitions to potentially delete</span></span><br><span class="line"><span class="comment">           DELETE_BELOW_PARTITION_DATE = Delete any partitions with names that are dates older than this one (yyyy-mm-dd)</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">DECLARE</span> done <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">DECLARE</span> drop_part_name <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Get a list of all the partitions that are older than the date</span></span><br><span class="line"><span class="comment">           in DELETE_BELOW_PARTITION_DATE.  All partitions are prefixed with</span></span><br><span class="line"><span class="comment">           a "p", so use SUBSTRING TO get rid of that character.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">DECLARE</span> myCursor <span class="keyword">CURSOR</span> <span class="keyword">FOR</span></span><br><span class="line">                <span class="keyword">SELECT</span> partition_name</span><br><span class="line">                <span class="keyword">FROM</span> information_schema.partitions</span><br><span class="line">                <span class="keyword">WHERE</span> table_schema = SCHEMANAME <span class="keyword">AND</span> table_name = TABLENAME <span class="keyword">AND</span> <span class="keyword">CAST</span>(<span class="keyword">SUBSTRING</span>(partition_name <span class="keyword">FROM</span> <span class="number">2</span>) <span class="keyword">AS</span> <span class="keyword">UNSIGNED</span>) &lt; DELETE_BELOW_PARTITION_DATE;</span><br><span class="line">        <span class="keyword">DECLARE</span> CONTINUE <span class="keyword">HANDLER</span> <span class="keyword">FOR</span> <span class="keyword">NOT</span> <span class="keyword">FOUND</span> <span class="keyword">SET</span> done = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Create the basics for when we need to drop the partition.  Also, create</span></span><br><span class="line"><span class="comment">           @drop_partitions to hold a comma-delimited list of all partitions that</span></span><br><span class="line"><span class="comment">           should be deleted.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">SET</span> @alter_header = <span class="keyword">CONCAT</span>(<span class="string">"ALTER TABLE"</span>, SCHEMANAME, <span class="string">"."</span>, TABLENAME, <span class="string">"DROP PARTITION"</span>);</span><br><span class="line">        <span class="keyword">SET</span> @drop_partitions = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           Start looping through all the partitions that are too old.</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        OPEN myCursor;</span><br><span class="line">        read_loop: LOOP</span><br><span class="line">                FETCH myCursor INTO drop_part_name;</span><br><span class="line">                IF done THEN</span><br><span class="line">                        LEAVE read_loop;</span><br><span class="line">                <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">                <span class="keyword">SET</span> @drop_partitions = <span class="keyword">IF</span>(@drop_partitions = <span class="string">""</span>, drop_part_name, <span class="keyword">CONCAT</span>(@drop_partitions, <span class="string">","</span>, drop_part_name));</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">LOOP</span>;</span><br><span class="line">        IF @drop_partitions != ""THEN</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                   1. Build the SQL to drop all the necessary partitions.</span></span><br><span class="line"><span class="comment">                   2. Run the SQL to drop the partitions.</span></span><br><span class="line"><span class="comment">                   3. Print out the table partitions that were deleted.</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="keyword">SET</span> @full_sql = <span class="keyword">CONCAT</span>(@alter_header, @drop_partitions, <span class="string">";"</span>);</span><br><span class="line">                <span class="keyword">PREPARE</span> STMT <span class="keyword">FROM</span> @full_sql;</span><br><span class="line">                <span class="keyword">EXECUTE</span> STMT;</span><br><span class="line">                <span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> STMT;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(SCHEMANAME, <span class="string">"."</span>, TABLENAME) <span class="keyword">AS</span> <span class="string">`table`</span>, @drop_partitions <span class="keyword">AS</span> <span class="string">`partitions_deleted`</span>;</span><br><span class="line">        ELSE</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                   No partitions are being deleted, so print out"N/A"(Not applicable) to indicate</span></span><br><span class="line"><span class="comment">                   that no changes were made.</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">                <span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(SCHEMANAME, <span class="string">"."</span>, TABLENAME) <span class="keyword">AS</span> <span class="string">`table`</span>, <span class="string">"N/A"</span> <span class="keyword">AS</span> <span class="string">`partitions_deleted`</span>;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> <span class="string">`partition_maintenance`</span>(SCHEMA_NAME <span class="built_in">VARCHAR</span>(<span class="number">32</span>), TABLE_NAME <span class="built_in">VARCHAR</span>(<span class="number">32</span>), KEEP_DATA_DAYS <span class="built_in">INT</span>, HOURLY_INTERVAL <span class="built_in">INT</span>, CREATE_NEXT_INTERVALS <span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">DECLARE</span> OLDER_THAN_PARTITION_DATE <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> PARTITION_NAME <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> OLD_PARTITION_NAME <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> LESS_THAN_TIMESTAMP <span class="built_in">INT</span>;</span><br><span class="line">        <span class="keyword">DECLARE</span> CUR_TIME <span class="built_in">INT</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">CALL</span> partition_verify(SCHEMA_NAME, TABLE_NAME, HOURLY_INTERVAL);</span><br><span class="line">        <span class="keyword">SET</span> CUR_TIME = <span class="keyword">UNIX_TIMESTAMP</span>(<span class="keyword">DATE_FORMAT</span>(<span class="keyword">NOW</span>(), <span class="string">'%Y-%m-%d 00:00:00'</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">SET</span> @__interval = <span class="number">1</span>;</span><br><span class="line">        create_loop: LOOP</span><br><span class="line">                IF @__interval &gt; CREATE_NEXT_INTERVALS THEN</span><br><span class="line">                        LEAVE create_loop;</span><br><span class="line">                <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">SET</span> LESS_THAN_TIMESTAMP = CUR_TIME + (HOURLY_INTERVAL * @__interval * <span class="number">3600</span>);</span><br><span class="line">                <span class="keyword">SET</span> PARTITION_NAME = FROM_UNIXTIME(CUR_TIME + HOURLY_INTERVAL * (@__interval - <span class="number">1</span>) * <span class="number">3600</span>, <span class="string">'p%Y%m%d%H00'</span>);</span><br><span class="line">                IF(PARTITION_NAME != OLD_PARTITION_NAME) THEN</span><br><span class="line">                        <span class="keyword">CALL</span> partition_create(SCHEMA_NAME, TABLE_NAME, PARTITION_NAME, LESS_THAN_TIMESTAMP);</span><br><span class="line">                <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line">                <span class="keyword">SET</span> @__interval=@__interval+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">SET</span> OLD_PARTITION_NAME = PARTITION_NAME;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">LOOP</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">SET</span> OLDER_THAN_PARTITION_DATE=<span class="keyword">DATE_FORMAT</span>(<span class="keyword">DATE_SUB</span>(<span class="keyword">NOW</span>(), <span class="built_in">INTERVAL</span> KEEP_DATA_DAYS <span class="keyword">DAY</span>), <span class="string">'%Y%m%d0000'</span>);</span><br><span class="line">        <span class="keyword">CALL</span> partition_drop(SCHEMA_NAME, TABLE_NAME, OLDER_THAN_PARTITION_DATE);</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> <span class="string">`partition_verify`</span>(SCHEMANAME <span class="built_in">VARCHAR</span>(<span class="number">64</span>), TABLENAME <span class="built_in">VARCHAR</span>(<span class="number">64</span>), HOURLYINTERVAL <span class="built_in">INT</span>(<span class="number">11</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">        <span class="keyword">DECLARE</span> PARTITION_NAME <span class="built_in">VARCHAR</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> RETROWS <span class="built_in">INT</span>(<span class="number">11</span>);</span><br><span class="line">        <span class="keyword">DECLARE</span> FUTURE_TIMESTAMP <span class="keyword">TIMESTAMP</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * Check if any partitions exist for the given SCHEMANAME.TABLENAME.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">INTO</span> RETROWS</span><br><span class="line">        <span class="keyword">FROM</span> information_schema.partitions</span><br><span class="line">        <span class="keyword">WHERE</span> table_schema = SCHEMANAME <span class="keyword">AND</span> table_name = TABLENAME <span class="keyword">AND</span> partition_name <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * If partitions do not exist, go ahead and partition the table</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        IF RETROWS = 1 THEN</span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                 * Take the current date at 00:00:00 and add HOURLYINTERVAL to it.  This is the timestamp below which we will store values.</span></span><br><span class="line"><span class="comment">                 * We begin partitioning based on the beginning of a day.  This is because we don't want to generate a random partition</span></span><br><span class="line"><span class="comment">                 * that won't necessarily fall in line with the desired partition naming (ie: if the hour interval is 24 hours, we could</span></span><br><span class="line"><span class="comment">                 * end up creating a partition now named"p201403270600"when all other partitions will be like"p201403280000").</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="keyword">SET</span> FUTURE_TIMESTAMP = <span class="keyword">TIMESTAMPADD</span>(<span class="keyword">HOUR</span>, HOURLYINTERVAL, <span class="keyword">CONCAT</span>(<span class="keyword">CURDATE</span>(), <span class="string">" "</span>, <span class="string">'00:00:00'</span>));</span><br><span class="line">                <span class="keyword">SET</span> PARTITION_NAME = <span class="keyword">DATE_FORMAT</span>(<span class="keyword">CURDATE</span>(), <span class="string">'p%Y%m%d%H00'</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">-- Create the partitioning query</span></span><br><span class="line">                <span class="keyword">SET</span> @__PARTITION_SQL = <span class="keyword">CONCAT</span>(<span class="string">"ALTER TABLE "</span>, SCHEMANAME, <span class="string">"."</span>, TABLENAME, <span class="string">" PARTITION BY RANGE(`clock`)"</span>);</span><br><span class="line">                <span class="keyword">SET</span> @__PARTITION_SQL = <span class="keyword">CONCAT</span>(@__PARTITION_SQL, <span class="string">"(PARTITION "</span>, PARTITION_NAME, <span class="string">" VALUES LESS THAN ("</span>, <span class="keyword">UNIX_TIMESTAMP</span>(FUTURE_TIMESTAMP), <span class="string">"));"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">-- Run the partitioning query</span></span><br><span class="line">                <span class="keyword">PREPARE</span> STMT <span class="keyword">FROM</span> @__PARTITION_SQL;</span><br><span class="line">                <span class="keyword">EXECUTE</span> STMT;</span><br><span class="line">                <span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> STMT;</span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span><span class="string">`partition_maintenance_all`</span>(SCHEMA_NAME <span class="built_in">VARCHAR</span>(<span class="number">32</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history_log'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history_str'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history_text'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'history_uint'</span>, <span class="number">30</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'trends'</span>, <span class="number">120</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line">               <span class="keyword">CALL</span> partition_maintenance(SCHEMA_NAME, <span class="string">'trends_uint'</span>, <span class="number">120</span>, <span class="number">24</span>, <span class="number">14</span>);</span><br><span class="line"><span class="keyword">END</span>$$</span><br><span class="line">DELIMITER ;%</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入 partition.sql</span></span><br><span class="line">mysql -u<span class="string">'zabbix'</span> -p<span class="string">'zabbix'</span> zabbix  &lt; partition.sql</span><br><span class="line"><span class="comment"># 手动后台单次执行 </span></span><br><span class="line">nohup mysql -u<span class="string">'zabbix'</span> -p<span class="string">'zabbix'</span> <span class="string">'zabbix'</span> -e <span class="string">"CALL partition_maintenance_all('zabbix');"</span> &amp;&gt; /root/partition.log&amp;</span><br><span class="line">tail -f /root/partition.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看过程逻辑 </span></span><br><span class="line">show create procedure partition_maintenance_all \G;</span><br><span class="line"><span class="comment"># 删除存储过程 </span></span><br><span class="line">drop procedure <span class="keyword">if</span> exists partition_maintenance_all; </span><br><span class="line"><span class="comment"># 查看存储过程 </span></span><br><span class="line">show procedure status like <span class="string">'partition_maintenance%'</span> \G;</span><br><span class="line"><span class="comment"># 查看 </span></span><br><span class="line">show create table <span class="built_in">history</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建定时任务脚本 </span></span><br><span class="line">[root@sg-gop-10-65-200-90 wangao]<span class="comment"># cat /opt/sa_scripts/zabbix_partitioning.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">user=<span class="string">'zabbix'</span></span><br><span class="line">password=<span class="string">'zabbix'</span></span><br><span class="line">database=<span class="string">'zabbix'</span></span><br><span class="line"></span><br><span class="line">mysql -u<span class="variable">$&#123;user&#125;</span> -p<span class="variable">$password</span> <span class="variable">$database</span> -e <span class="string">"CALL partition_maintenance_all('zabbix');"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改执行权限 </span></span><br><span class="line">chmod 755 /opt/sa_scripts/zabbix_partitioning.sh</span><br><span class="line"><span class="comment"># 修改 crontab</span></span><br><span class="line">vim /etc/crontab</span><br><span class="line">15 3 * * * root bash /opt/sa_scripts/zabbix_partitioning.sh</span><br></pre></td></tr></table></figure><h2 id="Zabbix-Proxy"><a href="#Zabbix-Proxy" class="headerlink" title="Zabbix Proxy"></a>Zabbix Proxy</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zabbix proxy 的依赖就只有数据库了，用于存储配置信息 </span></span><br><span class="line">yum install -y mariadb-server mariadb</span><br><span class="line"><span class="comment"># 启动 mariadb 服务 </span></span><br><span class="line">systemctl start mariadb.service</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb.service</span><br><span class="line"><span class="comment"># 初始化 mysql 数据库，并配置 root 用户密码 </span></span><br><span class="line">mysql_secure_installation</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 zabbix_proxy 数据库 </span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">mysql&gt; create database zabbix_proxy character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">mysql&gt; grant all privileges on zabbix_proxy.* to zabbix@localhost identified by <span class="string">'zabbix'</span>;</span><br><span class="line">mysql&gt; quit;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署 zabbix_proxy</span></span><br><span class="line">rpm -Uvh https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</span><br><span class="line">yum install -y zabbix-proxy-mysql</span><br><span class="line">zcat /usr/share/doc/zabbix-proxy-mysql*/schema.sql.gz | mysql -uzabbix -p zabbix_proxy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置数据库用户及密码 </span></span><br><span class="line">vim /etc/zabbix/zabbix_proxy.conf</span><br><span class="line">Server=192.168.56.103</span><br><span class="line">Hostname=zabbix_proxy</span><br><span class="line">DBName=zabbix_proxy</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 Zabbix Server Proxy</span></span><br><span class="line">Administration -&gt; Proxies -&gt; Create proxy</span><br><span class="line">Proxy name: zabbix_proxy</span><br><span class="line">Proxy mode: Active</span><br><span class="line">Proxy address: 192.168.56.101</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 zabbix_proxy</span></span><br><span class="line">systemctl restart zabbix-proxy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 zabbix_agent 配置指向 zabbix_proxy</span></span><br><span class="line">vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">Server=192.168.56.101,192.168.56.103</span><br><span class="line">ServerActive=192.168.56.101</span><br><span class="line">Hostname=192.168.56.101</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 zabbix_proxy 服务 </span></span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-proxy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 zabbix_server 中添加代理主机 </span></span><br><span class="line">Configuration -&gt; Hosts -&gt; Create host</span><br><span class="line">Monitored by proxy: zabbix_proxy</span><br></pre></td></tr></table></figure><h2 id="Zabbix-Database-迁移"><a href="#Zabbix-Database-迁移" class="headerlink" title="Zabbix Database 迁移"></a>Zabbix Database 迁移</h2><h3 id="本地迁移"><a href="#本地迁移" class="headerlink" title="本地迁移"></a>本地迁移</h3><ol><li>依次关闭 zabbix-server 和 mariadb 数据库</li><li>复制数据库至新的位置</li><li>修改 my.cnf 配置文件</li><li>修改 zabbix 相关配置文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建数据库新的 path</span></span><br><span class="line">mkdir /data</span><br><span class="line">service zabbix-server stop</span><br><span class="line">systemctl stop mariadb.service</span><br><span class="line">cp -r /var/lib/mysql/　/data/</span><br><span class="line">chown -R mysql:mysql /data/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 my.cnf 配置或者使用软链接 ln 方式一步简化 </span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment">#datadir=/var/lib/mysql</span></span><br><span class="line"><span class="comment">#socket=/var/lib/mysql/mysql.sock</span></span><br><span class="line">datadir=/data/mysql</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 zabbix_server.conf 配置 </span></span><br><span class="line">DBSocket=/data/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 php.ini 配置 </span></span><br><span class="line">vim /etc/php.ini</span><br><span class="line">pdo_mysql.default_socket=/data/mysql/mysql.sock</span><br><span class="line">mysql.default_socket = /data/mysql/mysql.sock</span><br><span class="line">mysqli.default_socket = /data/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启服务观察日志 </span></span><br><span class="line">systemctl start mariadb.service</span><br><span class="line">service zabbix-server start</span><br><span class="line">tailf /var/<span class="built_in">log</span>/zabbix/zabbix_server.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确认数据库前移位置 </span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; select @@datadir;</span><br><span class="line">+--------------+</span><br><span class="line">| @@datadir    |</span><br><span class="line">+--------------+</span><br><span class="line">| /data/mysql/ |</span><br><span class="line">+--------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参考文章 </span></span><br><span class="line">https://www.zabbix.com/forum/zabbix-help/52032-move-var-lib-mysql-and-update-my-cnf-zabbix-gui-reports-error?p=363471<span class="comment">#post363471</span></span><br><span class="line"></span><br><span class="line">1) /etc/my.cnf configuration file has two sections <span class="built_in">where</span> I edited directory name <span class="keyword">for</span> mysql.sock:</span><br><span class="line">- section [mysqld]</span><br><span class="line">socket=/home/mysql/mysql.sock</span><br><span class="line">- section [client]</span><br><span class="line">socket=/home/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line">2) /etc/php.ini also has more than one line <span class="keyword">for</span> mysql.sock:</span><br><span class="line"><span class="comment">#grep "mysql.sock" /etc/php.ini</span></span><br><span class="line">pdo_mysql.default_socket=/home/mysql/mysql.sock</span><br><span class="line">mysql.default_socket = /home/mysql/mysql.sock</span><br><span class="line">mysqli.default_socket = /home/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line">3) And zabbix_server.conf also must be edited</span><br><span class="line"><span class="comment"># grep "mysql.sock" /etc/zabbix/zabbix_server.conf</span></span><br><span class="line"><span class="comment"># DBSocket=/tmp/mysql.sock</span></span><br><span class="line">DBSocket=/home/mysql/mysql.sock</span><br></pre></td></tr></table></figure><h3 id="本地迁移至远程"><a href="#本地迁移至远程" class="headerlink" title="本地迁移至远程"></a>本地迁移至远程</h3><blockquote><p>从本地数据库 localhost 迁移至远程的 DB Cluster 集群</p></blockquote><ol><li>数据量即使很大一般都会设定保留周期，比如 30 天</li><li>最简单的方案当然是整个库全部迁移过去，丢失迁移时间段内的数据是可以接受的</li><li>简单分享下 Zabbix Server 需要修改的地方</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改 zabbix_server.conf</span></span><br><span class="line">vim /etc/zabbix/zabbix_server.conf</span><br><span class="line"></span><br><span class="line">DBHost=xxx</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br><span class="line">DBPort=3306</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 zabbix web 前端 </span></span><br><span class="line">vim /etc/zabbix/web/zabbix.conf.php</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">// Zabbix GUI configuration file.</span><br><span class="line">global <span class="variable">$DB</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$DB</span>[<span class="string">'TYPE'</span>]     = <span class="string">'MYSQL'</span>;</span><br><span class="line"><span class="variable">$DB</span>[<span class="string">'SERVER'</span>]   = <span class="string">'xxx'</span>;</span><br><span class="line"><span class="variable">$DB</span>[<span class="string">'PORT'</span>]     = <span class="string">'3306'</span>;</span><br><span class="line"><span class="variable">$DB</span>[<span class="string">'DATABASE'</span>] = <span class="string">'zabbix'</span>;</span><br><span class="line"><span class="variable">$DB</span>[<span class="string">'USER'</span>]     = <span class="string">'zabbix'</span>;</span><br><span class="line"><span class="variable">$DB</span>[<span class="string">'PASSWORD'</span>] = <span class="string">'zabbix'</span>;</span><br><span class="line"></span><br><span class="line">// Schema name. Used <span class="keyword">for</span> IBM DB2 and PostgreSQL.</span><br><span class="line"><span class="variable">$DB</span>[<span class="string">'SCHEMA'</span>] = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ZBX_SERVER</span>      = <span class="string">'localhost'</span>;</span><br><span class="line"><span class="variable">$ZBX_SERVER_PORT</span> = <span class="string">'10051'</span>;</span><br><span class="line"><span class="variable">$ZBX_SERVER_NAME</span> = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$IMAGE_FORMAT_DEFAULT</span> = IMAGE_FORMAT_PNG;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 zabbix-server 和 httpd</span></span><br><span class="line">service zabbix-server restart</span><br><span class="line">service httpd restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 zabbix_server 日志 </span></span><br><span class="line">tail -f /var/<span class="built_in">log</span>/zabbix/zabbix_server.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 crontab 定时任务脚本 </span></span><br><span class="line">vim /etc/crontab</span><br><span class="line">15 3 * * * root bash /opt/sa_scripts/zabbix_partitioning.sh</span><br><span class="line"></span><br><span class="line">vim /opt/sa_scripts/zabbix_partitioning.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">host=<span class="string">'xxx'</span></span><br><span class="line">user=<span class="string">'zabbix'</span></span><br><span class="line">password=<span class="string">'zabbix'</span></span><br><span class="line">database=<span class="string">'zabbix'</span></span><br><span class="line">port=<span class="string">'3306'</span></span><br><span class="line"></span><br><span class="line">mysql -h<span class="variable">$&#123;host&#125;</span> -u<span class="variable">$&#123;user&#125;</span> -p<span class="variable">$&#123;password&#125;</span> -P<span class="variable">$&#123;port&#125;</span> <span class="variable">$database</span> -e <span class="string">"CALL partition_maintenance_all('zabbix');"</span></span><br></pre></td></tr></table></figure><h2 id="Zabbix-HA-高可用"><a href="#Zabbix-HA-高可用" class="headerlink" title="Zabbix HA 高可用"></a>Zabbix HA 高可用</h2><blockquote><p>基于 Keepalived 搭建 Zabbix HA 高可用</p></blockquote><p>【zabbix HA】zabbixHA 高可用的实现<br><a href="https://www.jianshu.com/p/eecb5e8d1a96" target="_blank" rel="noopener">https://www.jianshu.com/p/eecb5e8d1a96</a></p>]]></content>
    
    <summary type="html">
    
      基于keepalived搭建zabbix server HA双机高可用
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>如何使用 MTR 诊断网络问题</title>
    <link href="https://wsgzao.github.io/post/mtr/"/>
    <id>https://wsgzao.github.io/post/mtr/</id>
    <published>2019-10-22T06:59:49.000Z</published>
    <updated>2019-10-23T09:18:09.056Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>MTR 是一款强大的网络诊断工具，网络管理员使用 MTR 可以诊断和隔离网络问题，并且为上游 ISP 提供有用的网络状态报告。MTR 是传统 traceroute 命令的进化版，并且可以提供强大的数据样本，因为他集合了 traceroute 和 ping 这两个命令的精华。本文带您深入了解 MTR ，从数据如何生成，到如果正确理解报告样本并得出相应的结论。</p><blockquote><p>使用 MTR 诊断网络问题</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 10 月 23 日 - 增加 iOS 和 Android 客户端的 MTR APP<br>2019 年 01 月 22 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/mtr/">https://wsgzao.github.io/post/mtr/</a></p><p><strong> 扩展阅读 </strong></p><p>MTR - <a href="http://www.bitwizard.nl/mtr/" target="_blank" rel="noopener">http://www.bitwizard.nl/mtr/</a><br>Diagnosing Network Issues with MTR - <a href="https://www.linode.com/docs/networking/diagnostics/diagnosing-network-issues-with-mtr/" target="_blank" rel="noopener">https://www.linode.com/docs/networking/diagnostics/diagnosing-network-issues-with-mtr/</a></p><hr><h2 id="网络诊断相关的背景知识"><a href="#网络诊断相关的背景知识" class="headerlink" title="网络诊断相关的背景知识"></a>网络诊断相关的背景知识</h2><p>Networking diagnostic tools including ping, traceroute, and mtr use Internet Control Message Protocol (ICMP) packets to test contention and traffic between two points on the Internet. When a user pings a host on the Internet, a series of ICMP packets are sent to the host, which responds by sending packets in return. The user’s client is then able to compute the round trip time between two points on the Internet.</p><p>In contrast, tools such as traceroute and MTR send ICMP packets with incrementally increasing TTLs in order to view the route or series of hops that the packet makes between the origin and its destination. The TTL, or time to live, controls how many hops a packet will make before “dying” and returning to the host. By sending a series of packets and causing them to return after one hop, then two, then three, MTR is able to assemble the route that traffic takes between hosts on the Internet.</p><p>Rather than provide a simple outline of the route that traffic takes across the Internet, MTR collects additional information regarding the state, connection, and responsiveness of the intermediate hosts. Because of this additional information, MTR can provide a complete overview of the connection between two hosts on the Internet. The following sections outline how to install the MTR software and how to interpret the results provided by this tool.</p><p>网络诊断工具 例如 ping traceroute mtr 都使用的 “ICMP” 包来测试 Internet 两点之间的网络连接状况。当用户使用 ping 命令 ping 网络上的主机后， ICMP 包将会发送到目的主机，然后在目的主机返回响应。这样，就可以得知本机到目的主机 ICMP 包传输所使用的往返时间。</p><p>相对于其他命令仅仅收集传输路径或响应时间，MTR 工具会收集更多的信息，比如 连接状态，连接可用性，以及传输路径中主机的响应性。由于这些额外的信息，我们建议您尽可能完整的展现 Internet 两个主机之间的网络连接信息。接下来我们讲述如何安装 MTR 软件，以及如何看懂这款软件的输出结果。</p><p>Diagnostics and Testing - <a href="https://www.linode.com/docs/networking/diagnostics/" target="_blank" rel="noopener">https://www.linode.com/docs/networking/diagnostics/</a></p><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><p>ICMP(Internet Control Message Protocol)<br>IP 协议族的一员，主要用于网络设备间发送错误指示信息, 一般不用于传输数据，常见部署在用户端网络程序中，诸如 traceroute 或 ping 等程序</p><p>TTL(Time To Live)<br>此处的 Time 表示的是次数，而不是时间，表达的是一个包在结束之前还能经过的跳数</p><p>Hop<br>跳数: 网络中两个端路径上的节点，路由器的数目</p><p>ISP(Internet Service Provider)<br>互联网服务提供商</p><h2 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h2><p>ping send ICMP ECHO_REQUEST to network hosts</p><p>ICMP 是（Internet Control Message Protocol）Internet 控制报文协议。它是 TCP/IP 协议族的一个子协议，用于在 IP 主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否可达、路由是否可用等网络本身的消息。这些控制消息虽然并不传输用户数据，但是对于用户数据的传递起着重要的作用。</p><p>使用 ping 检查连通性有六个步骤：</p><ol><li>使用 ifconfig 观察本地网络设置是否正确；</li><li>ping 127.0.0.1，127.0.0.1 回送地址 Ping 回送地址是为了检查本地的 TCP/IP 协议有没有设置好；</li><li>ping 本机 IP 地址，这样是为了检查本机的 IP 地址是否设置有误；</li><li>ping 本网网关或本网 IP 地址，这样的是为了检查硬件设备是否有问题，也可以检查本机与本地网络连接是否正常；(在非局域网中这一步骤可以忽略)</li><li>ping 本地 DNS 地址，这样做是为了检查 DNS 是否能够将 IP 正确解析。注: /etc/resolv.conf 文件，”nameserver 8.8.8.8” 指定了 dns 服务器的地址，如果启用了 NetworkManager 要注意网卡重启或服务器重启配置被覆盖的问题；</li><li>ping 远程 IP 地址，这主要是检查本网或本机与外部的连接是否正常。</li></ol><h2 id="安装-MTR"><a href="#安装-MTR" class="headerlink" title="安装 MTR"></a>安装 MTR</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install mtr</span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install mtr</span><br><span class="line"><span class="comment"># macOS</span></span><br><span class="line">brew install mtr</span><br><span class="line"><span class="comment"># Windows</span></span><br><span class="line">BestTrace - https://www.ipip.net/product/client.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line"> mtr [options] hostname</span><br><span class="line"></span><br><span class="line"> -F, --filename FILE        <span class="built_in">read</span> hostname(s) from a file</span><br><span class="line"> -4                         use IPv4 only</span><br><span class="line"> -6                         use IPv6 only</span><br><span class="line"> -u, --udp                  use UDP instead of ICMP <span class="built_in">echo</span></span><br><span class="line"> -T, --tcp                  use TCP instead of ICMP <span class="built_in">echo</span></span><br><span class="line"> -a, --address ADDRESS      <span class="built_in">bind</span> the outgoing socket to ADDRESS</span><br><span class="line"> -f, --first-ttl NUMBER     <span class="built_in">set</span> what TTL to start</span><br><span class="line"> -m, --max-ttl NUMBER       maximum number of hops</span><br><span class="line"> -U, --max-unknown NUMBER   maximum unknown host</span><br><span class="line"> -P, --port PORT            target port number <span class="keyword">for</span> TCP, SCTP, or UDP</span><br><span class="line"> -L, --localport LOCALPORT  <span class="built_in">source</span> port number <span class="keyword">for</span> UDP</span><br><span class="line"> -s, --psize PACKETSIZE     <span class="built_in">set</span> the packet size used <span class="keyword">for</span> probing</span><br><span class="line"> -B, --bitpattern NUMBER    <span class="built_in">set</span> bit pattern to use <span class="keyword">in</span> payload</span><br><span class="line"> -i, --interval SECONDS     ICMP <span class="built_in">echo</span> request interval</span><br><span class="line"> -G, --gracetime SECONDS    number of seconds to <span class="built_in">wait</span> <span class="keyword">for</span> responses</span><br><span class="line"> -Q, --tos NUMBER           <span class="built_in">type</span> of service field <span class="keyword">in</span> IP header</span><br><span class="line"> -e, --mpls                 display information from ICMP extensions</span><br><span class="line"> -Z, --timeout SECONDS      seconds to keep probe sockets open</span><br><span class="line"> -r, --report               output using report mode</span><br><span class="line"> -w, --report-wide          output wide report</span><br><span class="line"> -c, --report-cycles COUNT  <span class="built_in">set</span> the number of pings sent</span><br><span class="line"> -j, --json                 output json</span><br><span class="line"> -x, --xml                  output xml</span><br><span class="line"> -C, --csv                  output comma separated values</span><br><span class="line"> -l, --raw                  output raw format</span><br><span class="line"> -p, --split                split output</span><br><span class="line"> -t, --curses               use curses terminal interface</span><br><span class="line">     --displaymode MODE     select initial display mode</span><br><span class="line"> -n, --no-dns               <span class="keyword">do</span> not resove host names</span><br><span class="line"> -b, --show-ips             show IP numbers and host names</span><br><span class="line"> -o, --order FIELDS         select output fields</span><br><span class="line"> -y, --ipinfo NUMBER        select IP information <span class="keyword">in</span> output</span><br><span class="line"> -z, --aslookup             display AS number</span><br><span class="line"> -h, --<span class="built_in">help</span>                 display this <span class="built_in">help</span> and <span class="built_in">exit</span></span><br><span class="line"> -v, --version              output version information and <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h2 id="如何读懂-MTR-报告"><a href="#如何读懂-MTR-报告" class="headerlink" title="如何读懂 MTR 报告"></a>如何读懂 MTR 报告</h2><p>因为 MTR 报告包括了丰富的信息，新手第一次阅读有点困难。下面是我本地到 google.com 的测试报告</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-65-200-186 wangao]<span class="comment"># mtr -r google.com</span></span><br><span class="line">Start: Wed Jan 23 16:00:30 2019</span><br><span class="line">HOST: sg-gop-10-65-200-186        Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1.|-- 10.65.200.20               0.0%    10    0.3   0.3   0.3   0.5   0.0</span><br><span class="line">  2.|-- ns9.webhostsg.com          0.0%    10    1.0   0.9   0.9   1.0   0.0</span><br><span class="line">  3.|-- 192.168.3.33               0.0%    10    0.9   0.9   0.8   0.9   0.0</span><br><span class="line">  4.|-- vlan242-s4rsm.starhub.net  0.0%    10    1.6   1.8   1.6   1.9   0.0</span><br><span class="line">  5.|-- ancoretl02.starhub.net.sg  0.0%    10    2.0   2.0   1.9   2.1   0.0</span><br><span class="line">  6.|-- anutli12.starhub.net.sg    0.0%    10    1.9   2.1   1.9   3.1   0.3</span><br><span class="line">  7.|-- 72.14.194.0                0.0%    10    2.5   2.7   2.4   4.3   0.5</span><br><span class="line">  8.|-- 74.125.242.35              0.0%    10    2.5   2.5   2.4   2.7   0.0</span><br><span class="line">  9.|-- 216.239.49.74              0.0%    10    3.4   4.4   3.3  12.0   2.6</span><br><span class="line"> 10.|-- 74.125.252.254             0.0%    10    3.7   3.7   3.5   3.9   0.0</span><br><span class="line"> 11.|-- 108.170.233.49             0.0%    10    4.4   4.2   4.0   4.7   0.0</span><br><span class="line"> 12.|-- ???                       100.0    10    0.0   0.0   0.0   0.0   0.0</span><br></pre></td></tr></table></figure><p>返回结果各列数据说明：</p><p>第一列: 显示的是 IP 地址或本机域名，这点和 traceroute 很像</p><p>第二列: Loss% 到达此节点的数据包丢包率，显示的每个对应 IP 的丢包率。</p><p>第三列: Snt:100 设置发送数据包的数量，默认值是 10 通过参数 -c 来自定义数量。</p><p>第四列: Last 显示的最近一次的返回时延</p><p>第五列: Avg 平均值这个应该是发送 ping 包的平均时延</p><p>第六列: Best 最好或者说时延最低的</p><p>第七列: Wrst 最差或者说时延最大的</p><p>第八列: StDev 是标准偏差</p><p>使用 mtr –report google.com 命令来输出这篇报告。使用 report 选项可以给 google.com 主机发送 10 个 ICMP 包，然后输出报告。如果我们不使用 –report 参数， mtr 会不断的动态运行。在动态模式下， mtr 的输出结果表述每个主机的往返时间。大多数情况下，使用 –report 参数就可以提供足够的数据了。</p><p>在命令下面，就是 MTR 产生的输出报告 。在通常情况下， MTR 需要几秒钟的时间来输出报告，但是偶尔可能需要更长的时间。MTR 报告是由一系列跳数组成的（在上述例子中是 12 跳）。“跳” 意味着节点，或路由器，数据包通过它们才能到达目的主机。在上面例子中，数据包经过本地网络的 “内层” 和 “外层”，然后再到一系列的域名主机。主机的域名是通过反向 DNS 查找确定的。如果您想忽略 DNS 查找，您可以使用 –no-dns 参数，使用 –no-dns 参数后，报告结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-65-200-186 wangao]<span class="comment"># mtr -rn google.com</span></span><br><span class="line">Start: Wed Jan 23 16:01:02 2019</span><br><span class="line">HOST: sg-gop-10-65-200-186        Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1.|-- 10.65.200.20               0.0%    10    0.2   0.3   0.2   0.3   0.0</span><br><span class="line">  2.|-- 203.117.178.28             0.0%    10    0.8   0.9   0.8   1.1   0.0</span><br><span class="line">  3.|-- 192.168.3.33               0.0%    10    0.8   0.8   0.7   0.9   0.0</span><br><span class="line">  4.|-- 203.117.6.21               0.0%    10    1.8   1.8   1.6   1.9   0.0</span><br><span class="line">  5.|-- 203.118.15.177             0.0%    10    1.8   1.9   1.8   2.1   0.0</span><br><span class="line">  6.|-- 203.118.12.10              0.0%    10    1.9   1.9   1.8   2.1   0.0</span><br><span class="line">  7.|-- 72.14.194.0                0.0%    10    2.4   2.5   2.4   2.7   0.0</span><br><span class="line">  8.|-- 74.125.242.35              0.0%    10    2.6   4.7   2.5  12.6   3.8</span><br><span class="line">  9.|-- 216.239.49.74              0.0%    10    3.5   3.5   3.3   4.0   0.0</span><br><span class="line"> 10.|-- 74.125.252.254             0.0%    10    3.7   4.1   3.7   6.6   0.8</span><br><span class="line"> 11.|-- 108.170.233.49             0.0%    10    4.3   4.4   4.2   4.7   0.0</span><br><span class="line"> 12.|-- ???                       100.0    10    0.0   0.0   0.0   0.0   0.0</span><br></pre></td></tr></table></figure><p>当我们研究 MTR 报告时候，最好找出每一跳的任何问题。除了可以查看两个服务器之间的路径之外，MTR 在它的七列数据中提供了很多有价值的数据统计报告。 Loss% 列展示了数据包在每一跳的丢失率。 Snt 列记录的多少个数据包被送出。 使用 –report 参数默认会送出 10 个数据包。如果使用 –report-cycles=[number-of-packets] 选项，MTR 就会按照 [number-of-packets] 指定的数量发出 ICMP 数据包。</p><p>Last, Avg, Best 和 Wrst 列都标识数据包往返的时间，使用的是毫秒（ ms ）单位表示。 Last 表示最后一个数据包所用的时间， Avg 表示评价时间， Best 和 Wrst 表示最小和最大时间。在大多数情况下，平均时间（ Avg）列需要我们特别注意。</p><p>最后一列 StDev 提供了数据包在每个主机的标准偏差。如果标准偏差越高，说明数据包在这个节点的延时越不相同。标准偏差会让您了解到平均延时是否是真的延时时间的中心点，或者测量数据受到某些问题的干扰。</p><p>例如，如果标准偏差很大，说明数据包的延迟是不确定的。一些数据包延迟很小（例如：25ms），另一些数据包延迟很大（例如：350ms）。当 10 个数据包全部发出后，得到的平均延迟可能是正常的，但是平均延迟是不能很好的反应实际情况的。如果标准偏差很高，使用最好和最坏的延迟来确定平均延迟是一个较好的方案。</p><p>在大多数情况下，您可以把 MTR 的输出分成三大块。根据配置，第二或第三跳一般都是您的本地 ISP，倒数第二或第三跳一般为您目的主机的 ISP。中间的节点是数据包经过的路由器。</p><h2 id="分析-MTR-报告"><a href="#分析-MTR-报告" class="headerlink" title="分析 MTR 报告"></a>分析 MTR 报告</h2><p>核心的两个参数:</p><ul><li>loss 丢包率</li><li>latency 延迟</li></ul><h3 id="确定丢包率"><a href="#确定丢包率" class="headerlink" title="确定丢包率"></a>确定丢包率</h3><p>当分析 MTR 的输出时，您需要注意两点： loss 和 latency。首先，让我们讨论一下 loss。如果您在任何一跳上看到 loss 的百分比，这就说明这一跳上可能有问题了。当然，很多服务提供商人为限制 ICMP 发送的速率，这也会导致此问题。那么如何才能指定是人为的限制 ICMP 传输还是确定有丢包的现象？我们需要查看下一跳。如果下一跳没有丢包现象，说明上一条是人为限制的。如下示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: example               Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">2. 63.247.64.157                50.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">4. aix.pr1.atl.google.com        0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">5. 72.14.233.56                  0.0%    10    7.2   8.3   7.1  16.4   2.9</span><br><span class="line">6. 209.85.254.247                0.0%    10   39.1  39.4  39.1  39.7   0.2</span><br><span class="line">7. 64.233.174.46                 0.0%    10   39.6  40.4  39.4  46.9   2.3</span><br><span class="line">8. gw-in-f147.1e100.net          0.0%    10   39.6  40.5  39.5  46.7   2.2</span><br></pre></td></tr></table></figure><p>在此例中，第二跳发生了丢包现象，但是接下来几条都没任何丢包现象，说明第二跳的丢包是人为限制的。如果在接下来的几条中都有丢包，那就可能是第二跳有问题了。请记住，ICMP 包的速率限制和丢失可能会同时发生。如果发生包的丢失情况，我们要用最低百分比来衡量时间情况。为什么这么说呢？请看如下示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">1. 63.247.74.43                   0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">2. 63.247.64.157                  0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">3. 209.51.130.213                60.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">4. aix.pr1.atl.google.com        60.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">5. 72.14.233.56                  50.0%   10    7.2   8.3   7.1  16.4   2.9</span><br><span class="line">6. 209.85.254.247                40.0%   10   39.1  39.4  39.1  39.7   0.2</span><br><span class="line">7. 64.233.174.46                 40.0%   10   39.6  40.4  39.4  46.9   2.3</span><br><span class="line">8. gw-in-f147.1e100.net          40.0%   10   39.6  40.5  39.5  46.7   2.2</span><br></pre></td></tr></table></figure><p>在这个例子中，您可以看打 第 3 跳和第 4 跳都有 60% 的丢包率，从接下来的几跳都有丢包现象，所以不像是人为限制 ICMP 速率的原因。但是最后几跳都是 40% 的丢包率，我们可以猜测到 60% 的丢包率除了网络糟糕的原因之前还有人为限制 ICMP。所以，当我们看到不同的丢包率时，通常要以最后几跳为准。</p><p>还有很多时候问题是在数据包返回途中发生的。数据包可以成功的到达目的主机，但是返回过程中遇到 “困难” 了。所以，当问题发生后，我们通常需要收集反方向的 MTR 报告。</p><p>此外，互联网设施的维护或短暂的网络拥挤可能会带来短暂的丢包率，当出现短暂的 10% 丢包率时候，不必担心，应用层的程序会弥补这点损失。</p><h3 id="读懂网络延迟"><a href="#读懂网络延迟" class="headerlink" title="读懂网络延迟"></a>读懂网络延迟</h3><p>除了可以通过 MTR 报告看到丢包率，我们还可以看到本地到目的主机之间的延时。因为不同的物理位置，延迟通常随着跳数的增加而增加。所以，延迟通常取决于节点之间的物理距离和线路质量。</p><p>例如，在同样的传输距离下，dial-up 连接比 cable modem 连接有更大的延迟。如下示例中显示 MTR 报告：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">2. 63.247.64.157                 0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">4. aix.pr1.atl.google.com        0.0%    10  388.0 360.4 342.1 396.7   0.2</span><br><span class="line">5. 72.14.233.56                  0.0%    10  390.6 360.4 342.1 396.7   0.2</span><br><span class="line">6. 209.85.254.247                0.0%    10  391.6 360.4 342.1 396.7   0.4</span><br><span class="line">7. 64.233.174.46                 0.0%    10  391.8 360.4 342.1 396.7   2.1</span><br><span class="line">8. gw-in-f147.1e100.net          0.0%    10  392.0 360.4 342.1 396.7   1.2</span><br></pre></td></tr></table></figure><p>在这份报告中，从第三跳到第四跳的延迟猛增，直接导致了后面的延迟也很大。这可能是因为第四跳的路由器配置不当，或者线路很拥堵的原因。</p><p>然而，高延迟并不一定意味着当前路由器有问题。这份报告虽然看到第四跳有点问题，但是数据仍然可以正常达到目的主机并且返回给主机。延迟很大的原因也有可能是在返回过程中引发的。我这份报告我们看不到返回的路径，返回的路径可能是完全不同的线路，所以我们一般要进行双向测试了。</p><p>ICMP 速率限制也可能会增加延迟，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">  2. 63.247.64.157                 0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">  3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">  4. aix.pr1.atl.google.com        0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">  5. 72.14.233.56                  0.0%    10  254.2 250.3 230.1 263.4   2.9</span><br><span class="line">  6. 209.85.254.247                0.0%    10   39.1  39.4  39.1  39.7   0.2</span><br><span class="line">  7. 64.233.174.46                 0.0%    10   39.6  40.4  39.4  46.9   2.3</span><br><span class="line">  8. gw-in-f147.1e100.net          0.0%    10   39.6  40.5  39.5  46.7   2.2</span><br></pre></td></tr></table></figure><p>乍一看，第 4 跳和第 5 跳直接的延迟很大。但是第 5 跳之后，延迟又恢复正常了。最后的延迟差不多为 40ms。像这种情况，是不影响实际情况的。因为可能仅仅是第 5 跳设备限制了 ICMP 传输速率的原因。所以我们一般要用最后一跳的实际延迟为准。</p><h2 id="常见的-MTR-报告类型"><a href="#常见的-MTR-报告类型" class="headerlink" title="常见的 MTR 报告类型"></a>常见的 MTR 报告类型</h2><p>很多网络问题十分麻烦，并且需要上级网络提供商来帮助。然而，这里有很多常见的 MTR 报告所描述的网络问题。如果您正在经历一些网络问题，并且想诊断出原因，可以参考如下示例：</p><h3 id="目的主机网络配置不当"><a href="#目的主机网络配置不当" class="headerlink" title="目的主机网络配置不当"></a>目的主机网络配置不当</h3><p>在下面这个例子中，数据包在目的地出现了 100% 的丢包。乍一看是数据包没有到达，其实未必，很有可能是路由器或主机配置不当。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@meiriyitie.com:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">  2. 63.247.64.157                 0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">  3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">  4. aix.pr1.atl.google.com        0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">  5. 72.14.233.56                  0.0%    10    7.2   8.3   7.1  16.4   2.9</span><br><span class="line">  6. 209.85.254.247                0.0%    10   39.1  39.4  39.1  39.7   0.2</span><br><span class="line">  7. 64.233.174.46                 0.0%    10   39.6  40.4  39.4  46.9   2.3</span><br><span class="line">  8. gw-in-f147.1e100.net         100.0    10    0.0   0.0   0.0   0.0   0.0</span><br></pre></td></tr></table></figure><p>MTR 报告数据包没有到达目的主机是因为目的主机没有发送任何应答。这可能是目的主机防火墙的原因，例如： iptables 配置丢掉 ICMP 包所致。</p><h3 id="家庭或办公室路由器的原因"><a href="#家庭或办公室路由器的原因" class="headerlink" title="家庭或办公室路由器的原因"></a>家庭或办公室路由器的原因</h3><p>有时候家庭路由器的原因导致 MTR 报告看起来有点误导。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">% mtr --no-dns --report google.com</span><br><span class="line">HOST: deleuze                     Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1. 192.168.1.1                   0.0%    10    2.2   2.2   2.0   2.7   0.2</span><br><span class="line">  2. ???                          100.0    10    8.6  11.0   8.4  17.8   3.0</span><br><span class="line">  3. 68.86.210.126                 0.0%    10    9.1  12.1   8.5  24.3   5.2</span><br><span class="line">  4. 68.86.208.22                  0.0%    10   12.2  15.1  11.7  23.4   4.4</span><br><span class="line">  5. 68.85.192.86                  0.0%    10   17.2  14.8  13.2  17.2   1.3</span><br><span class="line">  6. 68.86.90.25                   0.0%    10   14.2  16.4  14.2  20.3   1.9</span><br><span class="line">  7. 68.86.86.194                  0.0%    10   17.6  16.8  15.5  18.1   0.9</span><br><span class="line">  8. 75.149.230.194                0.0%    10   15.0  20.1  15.0  33.8   5.6</span><br><span class="line">  9. 72.14.238.232                 0.0%    10   15.6  18.7  14.1  32.8   5.9</span><br><span class="line"> 10. 209.85.241.148                0.0%    10   16.3  16.9  14.7  21.2   2.2</span><br><span class="line"> 11. 66.249.91.104                 0.0%    10   22.2  18.6  14.2  36.0   6.5</span><br></pre></td></tr></table></figure><p>不要为 100% 的丢包率所吓到，这并不表明这里有问题。你可以看打在接下来几跳是没有任何丢包的。</p><h3 id="运营商的路由器没有正确配置"><a href="#运营商的路由器没有正确配置" class="headerlink" title="运营商的路由器没有正确配置"></a>运营商的路由器没有正确配置</h3><p>有时候您的运营商的路由器配置原因，导致 ICMP 包永远不能到达目的地，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@meiriyitie.com:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">  2. 63.247.64.157                 0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">  3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">  4. aix.pr1.atl.google.com        0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">  5. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  6. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  7. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  8. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  9. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line"> 10. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br></pre></td></tr></table></figure><p>当没有额外的路由信息时，将会显示问号（???），下面例子也一样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@meiriyitie.com:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">   1. 63.247.74.43                 0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">   2. 63.247.64.157                0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">   3. 209.51.130.213               0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">   4. aix.pr1.atl.google.com       0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">   5. 172.16.29.45                 0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">   6. ???                          0.0%    10    0.0   0.0   0.0   0.0   0.0 </span><br><span class="line">   7. ???                          0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">   8. ???                          0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">   9. ???                          0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  10. ???                          0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br></pre></td></tr></table></figure><p>有时候，一个错误配置的路由器，将会在一个环路中不断发送数据包，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@meiriyitie.com:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">  2. 63.247.64.157                 0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">  3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">  4. aix.pr1.atl.google.com        0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">  5. 12.34.56.79                   0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  6. 12.34.56.78                   0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  7. 12.34.56.79                   0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  8. 12.34.56.78                   0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line">  9. 12.34.56.79                   0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line"> 10. 12.34.56.78                   0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line"> 11. 12.34.56.79                   0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line"> 12. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line"> 13. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br><span class="line"> 14. ???                           0.0%    10    0.0   0.0   0.0   0.0   0.0</span><br></pre></td></tr></table></figure><p>通过报告可以看打第 4 跳的路由器没有正确配置。如果这种状况发生了，您可以连接当地的网络管理员或 ISP 解决问题。</p><h3 id="ICMP-速率限制"><a href="#ICMP-速率限制" class="headerlink" title="ICMP 速率限制"></a>ICMP 速率限制</h3><p>ICMP 速率限制可引起数据包的丢失。如果数据包在这一跳有丢失，但是下面几条都正常，我们可以判断是 ICMP 速率限制的原因。如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@meiriyitie.com:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line"> HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">   1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">   2. 63.247.64.157                 0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">   3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">   4. aix.pr1.atl.google.com        0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">   5. 72.14.233.56                 60.0%    10   27.2  25.3  23.1  26.4   2.9</span><br><span class="line">   6. 209.85.254.247                0.0%    10   39.1  39.4  39.1  39.7   0.2</span><br><span class="line">   7. 64.233.174.46                 0.0%    10   39.6  40.4  39.4  46.9   2.3</span><br><span class="line">   8. gw-in-f147.1e100.net          0.0%    10   39.6  40.5  39.5  46.7   2.2</span><br></pre></td></tr></table></figure><p>这种状况是没关系的。ICMP 速率限制是一种常见的手段，这样可以减少网络数据的负载，让更重要的流量先通过。</p><h3 id="超时"><a href="#超时" class="headerlink" title="超时"></a>超时</h3><p>在很多种情况下会发生超时现象。例如：很多路由器可能会直接丢弃 ICMP 包，这时就会导致超时（???）。另外，也有可能在数据返回的路上出现了问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@meiriyitie.com:~<span class="comment"># mtr --report www.google.com</span></span><br><span class="line">HOST: localhost                   Loss%   Snt   Last   Avg  Best  Wrst StDev</span><br><span class="line">  1. 63.247.74.43                  0.0%    10    0.3   0.6   0.3   1.2   0.3</span><br><span class="line">  2. 63.247.64.157                 0.0%    10    0.4   1.0   0.4   6.1   1.8</span><br><span class="line">  3. 209.51.130.213                0.0%    10    0.8   2.7   0.8  19.0   5.7</span><br><span class="line">  4. aix.pr1.atl.google.com        0.0%    10    6.7   6.8   6.7   6.9   0.1</span><br><span class="line">  5. ???                           0.0%    10    7.2   8.3   7.1  16.4   2.9</span><br><span class="line">  6. ???                           0.0%    10   39.1  39.4  39.1  39.7   0.2</span><br><span class="line">  7. 64.233.174.46                 0.0%    10   39.6  40.4  39.4  46.9   2.3</span><br><span class="line">  8. gw-in-f147.1e100.net          0.0%    10   39.6  40.5  39.5  46.7   2.2</span><br></pre></td></tr></table></figure><p>超时不一定是数据包被丢失。如上例，数据包还是安全的到达目的地并且返回。中间节点的超时可能是路由器配置丢弃 ICMP 包，或者 QoS 设置引起的原因，这个是没关系的。</p><h2 id="MTR-客户端"><a href="#MTR-客户端" class="headerlink" title="MTR 客户端"></a>MTR 客户端</h2><p>Windows，macOS，Linux 基本都可以很方便的下载执行 mtr 命令，但 Android 和 iOS 需要安装独立的 APP</p><ul><li>Android: <a href="https://play.google.com/store/apps/details?id=com.inflim.trp" target="_blank" rel="noopener">TracePing</a></li><li>iOS: <a href="https://apps.apple.com/sg/app/beenettools/id1160138136?ign-mpt=uo%3D4" target="_blank" rel="noopener">BeeNetTools</a></li></ul><h2 id="MTR-使用小结"><a href="#MTR-使用小结" class="headerlink" title="MTR 使用小结"></a>MTR 使用小结</h2><ol><li>mtr 的功能是检查在目的地址有丢包的情况下，查出具体在哪一跳丢包，然后反馈给机房，机房再反馈给运营商；</li><li>看 mtr 的截图，先看最后的目的地址是否有丢包，若最后一跳没有丢包，说明线路 ok，若最后一跳有丢包，往下看；</li><li>再看在路由情况，第一次丢包发生在哪一跳，对应的查这一跳的丢包情况即可；</li><li>如果有条件建议双向测试抓取 mtr 返回结果，对比路由是否对等；</li><li>整理邮件发送机房联系本地网络服务商 ISP 或者云主机服务商请求技术支持。</li></ol>]]></content>
    
    <summary type="html">
    
      使用 MTR 诊断网络问题
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>飞猪 F3 会员特价入住成都东大明宇豪雅饭店免费升级行政套房的体验报告</title>
    <link href="https://wsgzao.github.io/post/fliggy/"/>
    <id>https://wsgzao.github.io/post/fliggy/</id>
    <published>2019-10-18T08:40:53.000Z</published>
    <updated>2019-10-23T02:49:37.565Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>2019 年 10 月请了 10 天年假凑了 2 周时间陪老婆从新加坡回四川，再也买不到去年 800 元人民币从新加坡往返成都的 Bug 机票了。标题中出现了 2 个关键词 <code>飞猪 F3 会员</code> 和 <code>成都东大明宇豪雅饭店</code>，我很少会把会员权益单独拎出来写比如从 2017 年使用至今的浦发银行美国运通白金卡 (简称浦发 AE 白)，当时很热门号称神卡就随手网申没想到很幸运地一次通过，目前使用频率最高的也只有机场贵宾厅和接送机服务，20w 积分按年抵扣应该还可以撑 7 年吧，各位对玩信用卡感兴趣可以搜索 DS 三白，浦发 AE 白，招行经典白，交行白麒麟，等花呗权益增强后估计也可以注销信用卡了。飞猪 F3 会员权益隐藏的太深导致我差点入了成都华尔道夫酒店的坑，而使用飞猪 F3 权益可以匹配明宇酒店钻石卡并享受到成都东大明宇豪雅饭店免费升级行政套房，真实入住后的服务体验也远远超出了我的预期，如果我每年都来成都耍那一定会再次选择成都东大明宇豪雅饭店。鉴于国内 OTA 综合性旅游出行服务平台已经被携程垄断，负面新闻时而刷屏但竞争者基本都被收购了，既然我入了飞猪的坑那就借这个机会和大家简单唠叨唠叨吧。</p><blockquote><p>飞猪 F3 会员特价入住成都东大明宇豪雅饭店免费升级行政套房的体验报告</p></blockquote><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2019 年 10 月 18 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/fliggy/">https://wsgzao.github.io/post/fliggy/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://www.fliggy.com/" target="_blank" rel="noopener">飞猪</a><br><a href="http://www.minyounhotels.com/" target="_blank" rel="noopener">明宇酒店</a></p><h2 id="出行记录简述"><a href="#出行记录简述" class="headerlink" title="出行记录简述"></a>出行记录简述</h2><ol><li>计划前往九寨沟 3 天 2 晚未果，无奈转战黄龙。据说高铁 2020 年贯通从成都直达九寨沟只要 2 小时。</li><li>机票和高铁不相关（跳过）</li><li>在成都停留了 3 个晚上，成功打卡 1 家黑珍珠，3 家必吃榜，还有若干建设路小吃</li></ol><h2 id="飞猪-F3-会员权益"><a href="#飞猪-F3-会员权益" class="headerlink" title="飞猪 F3 会员权益"></a>飞猪 F3 会员权益</h2><p>飞猪背靠阿里，目前已经打通了多家航司和酒店的会员体系，如果各位需要比价参考直接选择携程或者 Booking，机票通常是航空公司官网直销比较便宜。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191016190044.png" alt=""></p><p>我个人目前使用过的 F3 权益:</p><ol><li>酒店特权价，记住每周四和每月 28 日购买最划算，一定要点击图片中正确的入口才能享受</li><li>新航 KrisFlyer 精英金卡，一年有效期但体验很好</li><li>明宇酒店钻石卡，以后只要来成都玩我一定会再次入住成都东大明宇豪雅饭店</li><li>龙腾贵宾厅，如果没有银行信用卡加持可以选择飞猪里程兑换</li></ol><p>大量其它权益可以点击下面的链接查看，我就不再赘述了。</p><p><a href="https://www.douban.com/note/726673818/" target="_blank" rel="noopener">你一定要看的飞猪 F3 撸羊毛攻略</a></p><p>更便宜的渠道一定是客观存在的，你也可以上闲鱼或转转碰碰运气。</p><h2 id="成都东大明宇豪雅饭店"><a href="#成都东大明宇豪雅饭店" class="headerlink" title="成都东大明宇豪雅饭店"></a>成都东大明宇豪雅饭店</h2><blockquote><p>大众点评成都必住榜之一</p></blockquote><p>中文: 成都东大明宇豪雅饭店 - 璞富腾会员酒店<br>英文: Minyoun Chengdu Dongda Hotel - Member of Preferred Hotels &amp; Resorts</p><p>成都东大明宇豪雅饭店地址：<br>四川省・成都・锦江区・成都市锦江区东大街紫东楼段 39 号 (一环路与东大街交汇处，东门大桥地铁站旁，临近太古里)</p><p>购买的原始房型和升级后的房型：</p><ul><li>经典客房大床吸烟，395¥</li><li>豪雅套房，72㎡（和行政套房的差异除了价格，主要是内饰主题比如 HelloKitty、小黄人等，推荐带小朋友的家庭入住）</li></ul><p>我选择主动发邮件和酒店提前 1 个月沟通自己的需求，<a href="mailto:myclub@minyounhotels.com" target="_blank" rel="noopener">myclub@minyounhotels.com</a></p><ol><li>是否可以升级至套房，长这么大还没体验过</li><li>早上 7 点前离开酒店是否可以提前准备早餐或者打包早餐</li></ol><p>其他相关需求也可以咨询，比如:</p><ol><li>是否携带小孩家属</li><li>是否吸烟</li><li>是否需要高层</li><li>是否远离电梯</li></ol><p>关于反馈和沟通</p><ol><li>可爱的 Lucy Yang 小姐姐在我发送邮件后当天晚上直接添加微信告知一切已经打点妥当，非常的效率，点赞加鸡腿</li><li>在准备入住的前一天酒店还会再次电话确认具体的到达时间，是否有新的需求，比心</li></ol><h2 id="酒店细节图片展示"><a href="#酒店细节图片展示" class="headerlink" title="酒店细节图片展示"></a>酒店细节图片展示</h2><h3 id="地理位置"><a href="#地理位置" class="headerlink" title="地理位置"></a>地理位置</h3><ol><li>乘坐地铁选择东门大桥或者牛王庙站下，步行 5 分钟左右就到了</li><li>离成都太古里地铁 1 站，步行 15-20 分钟，很方便的</li></ol><h3 id="酒店细节"><a href="#酒店细节" class="headerlink" title="酒店细节"></a>酒店细节</h3><ol><li>酒店从明宇金融广场背后进入，酒店大堂在 33F，空间大且没有嘈杂的人群</li><li>如果你也和我一样升级行政客房级别以上，可以享受免费下午茶和夜床服务，洗漱用品配备了欧舒丹</li></ol><h3 id="早餐和下午茶"><a href="#早餐和下午茶" class="headerlink" title="早餐和下午茶"></a>早餐和下午茶</h3><ol><li>早餐很丰盛，红油抄手、钟水饺、赖汤圆之类的成都小吃以及常见的中餐和西餐都可以满足你</li><li>下午茶比较简单，我主要点了咖啡和无酒精鸡尾酒，还提供可口的小吃、水果和冷串串</li></ol><p><a href="http://www.flyertea.com/thread-3229227-1-1.html" target="_blank" rel="noopener">http://www.flyertea.com/thread-3229227-1-1.html</a></p><p><a href="https://post.smzdm.com/p/a25g59q2/" target="_blank" rel="noopener">https://post.smzdm.com/p/a25g59q2/</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>飞猪 F3 会员有很多福利，我也只是按自己所需列举冰山一角，如何快速升级和查看更多权益，飞猪 APP 和微信公众号都列举的比较清晰了</li><li>成都东大明宇豪雅饭店的入住体验超出自己期望，钻石卡会籍除了和飞猪 F3 匹配以外还支持京东钻石会员以及部分航空公司会员，放弃了 899 购买成都华尔道夫我认为是划得来的，而酒店的钻石卡有效期居然是到 2049 年，假如每年来成都耍都能以如此优惠的价格享受高品质的服务是我的荣幸。</li><li>写真实客观的旅游文章码字和传图片都不容易，如果文章对你有帮助欢迎留言交流，点赞和转发支持，谢谢啦。</li></ol>]]></content>
    
    <summary type="html">
    
      飞猪F3会员特价入住成都东大明宇豪雅饭店免费升级行政套房的体验报告
    
    </summary>
    
      <category term="生活 | Life" scheme="https://wsgzao.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
  </entry>
  
  <entry>
    <title>从国内跳槽至新加坡工作的经验分享</title>
    <link href="https://wsgzao.github.io/post/singapore/"/>
    <id>https://wsgzao.github.io/post/singapore/</id>
    <published>2019-10-16T06:59:49.000Z</published>
    <updated>2019-10-17T07:48:42.841Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191007154135.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>为什么会写这样一篇长文记录和分享自己在新加坡的工作生活，主要是我在 2018 年 6 月 9 日前需要了解新加坡的时候网上的参考信息屈指可数，出于这个原因我决定顺手记录来新加坡的经历方便自己回顾也方便他人参考。非常感谢在 2019 年出现的<a href="https://996.icu" target="_blank" rel="noopener">996.icu</a>，让更多人看到了一个不一样的世界，里面也有很多朋友分享了新加坡的生活经历。不管你现在的生活是 996 还是 669，我都希望大家可以从电视剧《都挺好》里发现那个最真实的自己。如果你只想了解我是如何来到新加坡的可以直接跳到最后一章。</p><blockquote><p>为帮助大家玩转新加坡，快速适应当地生活</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 10 月 16 日 - 更新 EP 申请 PR 材料细节，增加新加坡婚礼红包份子钱的礼仪<br>2019 年 06 月 09 日 - 更新新加坡一周年经历<br>2019 年 02 月 14 日 - 更新半年的经历以及 PR 申请流程<br>2018 年 09 月 09 日 - 增加新加坡 3 个月工作生活感受<br>2018 年 08 月 01 日 - 更新个人经验<br>2018 年 05 月 15 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/singapore/">https://wsgzao.github.io/post/singapore/</a></p><p><strong> 扩展阅读 </strong></p><p>逃离 996 - <a href="https://github.com/623637646/996.Leave" target="_blank" rel="noopener">https://github.com/623637646/996.Leave</a></p><hr><h2 id="认识狮城"><a href="#认识狮城" class="headerlink" title="认识狮城"></a>认识狮城</h2><p>姓名：新加坡</p><p>年龄：53 岁（成立于 1965 年，国庆日为每年的 8 月 9 日）</p><p>家庭住址：北半球赤道地区，位于马来半岛最南端 （北纬 1°22′，东经 103°48′）</p><p>住房面积：新加坡国土面积 710.3 平方公里 （新加坡面积是上海的 1/9，北京的 1/23）</p><p>家庭成员：人口约 520 万，密度达到每平方公里 7700 多人（排在世界前列）</p><p>相貌特征：新加坡多元种族和文化的相互融合是其极具魅力的原因之一，由华族（占全国人口约四分之三）、欧亚族、印度族、马来族、土生华人构成。</p><p>性格特征：新加坡以实行严格的法律和制度著称，无论是居民还是游客，都需要予以足够重视，否则可能会被课以重罚。当然，如果您遵循当地法律规章，也不必过分担心。</p><blockquote><p>所获荣誉：或许这些荣誉只属于过去，我们更需要关心的是现在和未来会怎样</p></blockquote><p>让人最想移民的国家全球排名第一<br>全球最具竞争力国家排名第一<br>最适应亚洲人士居住的地方全球排名第一<br>城市基础设施建设全球排名第一<br>全球化程度最高的城市排名第一</p><p>其他方面：<a href="http://www.visitsingapore.com.cn/travel-guide-tips/about-singapore/" target="_blank" rel="noopener">http://www.visitsingapore.com.cn/travel-guide-tips/about-singapore/</a></p><h2 id="旅游出入境"><a href="#旅游出入境" class="headerlink" title="旅游出入境"></a>旅游出入境</h2><blockquote><p>签证</p></blockquote><p>中国公民去新加坡须提前申请有效签证，不可以落地签。</p><p>中国公民申请的新加坡旅游 / 商务签证为电子签证（e-Visa），在获得签证后，建议上网打印多份有效签证以防遗失。签证费为每人 SG$30。</p><p>新加坡签证可多次入境，有效期分别有 35 天 / 62 天 / 2 年，由签证官根据申请人资料而定。逗留时间则由入境官决定，通常为 14-30 天。从 2015 年 6 月 1 日起新加坡将给予符合条件的中国公民有效期长达 10 年的多次入境签证。</p><p><a href="http://www.visitsingapore.com.cn/travel-guide-tips/travelling-to-singapore/" target="_blank" rel="noopener">http://www.visitsingapore.com.cn/travel-guide-tips/travelling-to-singapore/</a></p><blockquote><p>申请途径 How to Apply</p></blockquote><p>2014 年 12 月 8 日起大使馆及各领事馆停止接收签证申请，可登录新加坡外交部官网，查询中国国内官方指定的签证机构，办理新加坡签证。</p><blockquote><p>所需资料 Required Information</p></blockquote><ol><li>个人信息表（登录新加坡外交部官网下载表格，链接：<a href="http://www.mfa.gov.sg）" target="_blank" rel="noopener">www.mfa.gov.sg）</a></li><li>户口本（原件或扫描电子版，户主 + 个人页复印件）</li><li>身份证（原件或正反面扫描电子版，正反面复印件）</li><li>护照（原件或个人页扫描电子版，个人页复印件，有效期 6 个月以上）</li><li>2 张 2 寸白底免冠照片</li><li>在职证明原件或相关职业证书</li></ol><blockquote><p>出入境</p></blockquote><p>从 2018 年 10 月 4 日起，新加坡纸质入境卡（人称 “白卡”）即将走入历史！取而代之的是电子化入境卡。</p><p>访客可通过移民关卡局官方网站 <a href="https://www.ica.gov.sg/" target="_blank" rel="noopener">https://www.ica.gov.sg/</a> 或下载手机应用程序填写资料。通过手机填写资料还有自动储存功能，以方便下一次入境时使用。而与家人或小组团体同游新加坡的人，能够以团体方式提交入境资料。</p><p>离境前别忘了退税，在附有 “退税” 标志的场所消费满 100 新币以上，即可退回 7% 的商品及服务税，退税时需出示购物发票或收据。具体的退税要求，可咨询工作人员。</p><blockquote><p>其它注意事项</p></blockquote><p>电源插座：新加坡使用的标准电流是 220-240 伏特交流电（50 赫兹），在这里，您可以使用三眼电源插座。</p><p><a href="http://www.visitsingapore.com.cn/travel-guide-tips/" target="_blank" rel="noopener">http://www.visitsingapore.com.cn/travel-guide-tips/</a></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802161219.png" alt=""></p><h2 id="新加坡工作准证"><a href="#新加坡工作准证" class="headerlink" title="新加坡工作准证"></a>新加坡工作准证</h2><blockquote><p>关于工作准证的最新信息请以新加坡人力部 (MOM) 发布的为准</p></blockquote><p><a href="https://www.mom.gov.sg/" target="_blank" rel="noopener">https://www.mom.gov.sg/</a></p><p>在新加坡工作，新加坡人力部 Ministry Of Manpower (MOM) 是最常打交道的政府部门，工作准证不仅是由人力部批准和颁发所有文件提交最终也是到达人力部</p><p>注意：所有提交给 MOM 的资料原件，都需要在入境的时候随身携带。以便在去人力部办卡的时候，让长官核实和查阅。</p><ol><li>新版卡片上将不再印刷准证的到期日期，新版卡片会印上二维码（QR Code），下载 SGWorkPass 的手机 APP 后，可以扫码查看持卡人的职务、证件是否有效等信息</li><li>如果过海关或签合约等需要核对卡片截止日期时，不再可以只看卡面信息，还需要扫码或在线上核对截止日期等，建议保存 SGWorkPass 截图至手机中以防万一</li></ol><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802161307.png" alt=""></p><p><a href="https://docs.qq.com/sheet/DeVh5ZEhKWnhCTldK" target="_blank" rel="noopener">如果发现表有错误请点击链接申请编辑更新，谢谢</a></p><h3 id="Work-Permit-WP"><a href="#Work-Permit-WP" class="headerlink" title="Work Permit (WP)"></a>Work Permit (WP)</h3><p>WP 是人力部设置的给外国低水准员工提供的工作准证。</p><p>对申请者的要求：薪水和学历：无要求<br>年龄：马来西亚人（18-58 周岁），非马来西亚人（18-50 周岁）；<br>对公司的要求：需要为其购买保额至少 15000 新币的保险；缴纳 5000 新币担保金<br>注意事项：<br>公司需要先为雇员申请好 WP 并办理保险，才可以持 WP 准证进入新加坡。在申请的状态中，本人不可以进入新加坡。</p><h3 id="S-PASS-SP"><a href="#S-PASS-SP" class="headerlink" title="S PASS (SP)"></a>S PASS (SP)</h3><p>SP 是人力部设置的给外国中级技术水准雇员提供的工作准证。</p><p>对申请者的要求：学历：大专，本科，或者技术资质认证（需要至少一年全职学习获得的技术认证）；<br>工作年限：虽然没有明文规定最少需要多少年的工作经验，但工作经验会作为一个审核标准；<br>对公司的要求：所付起薪 2200 新币；</p><p>注意事项：<br>也有公司人头配额限制：服务行业 SP 人数不可超过总员工的 15%，其它行业是 20%。<br>你在申请之前需要确保学历在 Dataflow，学信网及中国学位与研究生教育信息网上可以查到。另外，针对不同的行业，也有可能需要提交相关的专业证明。</p><h3 id="Employment-Pass（EP）"><a href="#Employment-Pass（EP）" class="headerlink" title="Employment Pass（EP）"></a>Employment Pass（EP）</h3><p>EP 是人力部设置的给外国专业人员（管理层，主管或专业职位）提供的工作准证. 是工作准证中级别最高的。</p><p>对申请者的要求：<br>年轻的申请者需拥有优秀院校的毕业证书，且达到 3600 的雇佣薪水以及拥有相关专业经验才可以申请。<br>至于年长的申请人，则必须拥有更高的薪水以及相应工作经验和工作质量。</p><p>对雇主的要求：<br>所付起薪 3600 新币</p><p>注意事项：<br>和申请 SP 一样，在申请之前需要确保学历在 Dataflow，学信网及中国学位与研究生教育信息网上可以查到。另外，针对不同的行业，也有可能需要提交相关的专业证明。<br>根据对应的准证类型，提交人力部 (MOM) 所要求的材料</p><ul><li>有效的护照信息</li><li>必要的技能证书</li><li>有效的毕业证</li></ul><p>2018 年 1 月 1 日起两件重要变化</p><ul><li>EP 准证持有人月薪至少 6000 新币以上可以给配偶和孩子申请相关准证(DP)</li><li>EP 准证持有人月薪至少 12000 新币以上可以申请父母长期探访准证（LTVP)</li></ul><h2 id="家庭成员准证"><a href="#家庭成员准证" class="headerlink" title="家庭成员准证"></a>家庭成员准证</h2><h3 id="Dependant‘s-Pass-家属准证（DP）"><a href="#Dependant‘s-Pass-家属准证（DP）" class="headerlink" title="Dependant‘s Pass 家属准证（DP）"></a>Dependant‘s Pass 家属准证（DP）</h3><p>家属准证，在新加坡工作或经商，并持有 EP SP 或 Enptrpass 的人士，可为自己的配偶及 21 岁以下小孩申请的一种准证。持家属准证的小孩，可直接入学新加坡政府中小学。</p><p>薪水：担保人固定月薪薪水需达到 5,000 新币以上。（2018 年 1 月 1 日起至少达到 6000 新币以上）。</p><p>工作：EP 或创业准证家属，可通过公司向人力部申请新加坡工作的凭证 LOC（Letter of consent），批准后，可直接工作（不占用公司配额）。SP 家属准证，需申请工作准证后才能工作。家属准证（DP）持有人申请到工作准证（EP 或 SP）后需取消 DP，SP 家属取得的工作准证有效期与 SP 持有人准证有效期相关。</p><h3 id="Long-Term-Visit-Pass-长期探访准证（LTVP）"><a href="#Long-Term-Visit-Pass-长期探访准证（LTVP）" class="headerlink" title="Long Term Visit Pass 长期探访准证（LTVP）"></a>Long Term Visit Pass 长期探访准证（LTVP）</h3><p>长期探访准证，是新加坡政府颁发的一种可以在新加坡长期居住的准证，期限从半年到十年不等。其中新加坡公民的配偶又可以申请获得 LTVP+。目前的审批部门有两个，一个是 ICA 移民厅，一个是 MOM 人力部。</p><p>需要去移民厅申请的：</p><ol><li>新加坡公民的配偶<br>2.PR 的配偶</li><li>新加坡公民 / PR 未满 21 周岁的小孩</li><li>新加坡公民 / 21 周岁以上 PR 的父母</li><li>寻求在新加坡工作的有关高校毕业生</li><li>小孩 / 孙辈在新加坡持学生准证读书的母亲或外祖母</li><li>寻求准许在新加坡分娩者</li></ol><p>新加坡移民局网址<br><a href="https://www.ica.gov.sg/" target="_blank" rel="noopener">https://www.ica.gov.sg/</a></p><p>需要去人力部申请的：</p><ol><li>EP/SP 准证持有者的配偶（2018 年 1 月 1 日起至少 6000 新币）</li><li>EP/SP 准证持有者未满 21 周岁的未婚残疾子女（2018 年 1 月 1 日起至少 6000 新币）</li><li>EP/SP 准证持有者未满 21 周岁的未婚继子女（2018 年 1 月 1 日起至少 6000 新币）</li><li>EP/SP 准证持有者的父母（2018 年 1 月 1 日起至少 12000 新币）</li><li>Entrepass（创业准证）的父母</li></ol><p>新加坡人力部网址：<br><a href="https://www.mom.gov.sg/" target="_blank" rel="noopener">https://www.mom.gov.sg/</a></p><h2 id="新加坡通讯指南"><a href="#新加坡通讯指南" class="headerlink" title="新加坡通讯指南"></a>新加坡通讯指南</h2><p>国内的手机大部分都可以在新加坡直接换卡使用，除非你的手机是中国移动 4G 定制版本，由于网络制式的区别，无法使用新加坡 4G 网络，新加坡目前 2G 网络停止服务。</p><blockquote><p>小贴士：建议使用全网通手机，去国外任何地方都可以直接换卡使用。</p></blockquote><p>运营商：新电信（Singtel）、星河（Starhub）和 M1（Mobile One）</p><p>在新加坡机场、邮局、7-11 便利店和代理商都可以购买和充值电话卡，记得一定要带上护照，新加坡的手机卡采用实名制。推荐大家下载所用运营商的 App，查询和购买话费、流量等。</p><blockquote><p>Zero1: Get Ready For Unlimited Data | Plans</p></blockquote><p>我自己办理的是 Zero1 的 9.9 新币 / 月无限流量套餐</p><p>详情请参考官网：<a href="https://zero1.sg/" target="_blank" rel="noopener">https://zero1.sg/</a></p><h2 id="新加坡交通指南"><a href="#新加坡交通指南" class="headerlink" title="新加坡交通指南"></a>新加坡交通指南</h2><p>新加坡主要交通出行方式：地铁（MRT）、轻轨（LRT）、巴士（Bus）和德士（Taxi）。</p><p>其中地铁（MRT）是新加坡最便捷的交通工具，也是日常最佳的出行方式。根据官方 2017 年 1 月份提供的最新信息显示，全岛共设有 142 个车站，目前主要的运营线中，南北运营线以 “NS” 红线标明，东西运营线以 “EW” 绿线标明，东北运营线以 “NE” 紫线标明，环线以 “CC” 黄线标明，市区运营线以 “DT” 蓝线。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802161743.png" alt=""></p><p>新加坡地铁图</p><p><a href="https://www.lta.gov.sg/content/ltaweb/en/public-transport/mrt-and-lrt-trains/train-system-map.html" target="_blank" rel="noopener">https://www.lta.gov.sg/content/ltaweb/en/public-transport/mrt-and-lrt-trains/train-system-map.html</a><br><a href="https://exploresg.com/ditie/" target="_blank" rel="noopener">https://exploresg.com/ditie/</a></p><p>新加坡地铁和巴士车 (站) 内规定</p><ol><li>不可吃喝、吸烟、携带榴莲、大声喧哗和带宠物 </li><li>Bus 不报站、上下车需要刷卡</li></ol><p>温馨提示</p><ol><li>地铁和巴士上冷气很足，建议携带薄外套</li><li>在 20 分钟内，地铁和巴士之间转换，车资有优惠</li><li>在地铁或者商场等使用扶梯时，左侧是站立侧，右侧是快速通道</li></ol><h2 id="新加坡房屋指南"><a href="#新加坡房屋指南" class="headerlink" title="新加坡房屋指南"></a>新加坡房屋指南</h2><blockquote><p>组屋(HDB)</p></blockquote><p>新加坡的“组屋”，全称为组合房屋。由新加坡建屋发展局（HDB）不以盈利为目的承担建筑的楼房，为大部分新加坡人（80%）的住所。</p><p>组屋一般分为三房式、四房式和五房式。三房式指一厅两房，使用面积约 60 平方米；四房式是一厅三房，使用面积约 90 平方米；五房式是两厅三房，使用面积大致在 110 平方米。</p><p>组屋的区分都是按照地区名 + 数字，例如：PasirRis Block 186（巴西立大牌 186）、YishunBlock 210（义顺大牌 210）等。</p><p>屋内客厅，厨房，卫生间都是公用设施，一般会配备冰箱，洗衣机，空调或者风扇。</p><p>租房费用（一般情况下）：</p><p>新型组屋 (近 10 年内建成的) 相对条件会好很多 (平均价格 S$1000-1200 / 间)<br>单人单间：500-1000 新币<br>二人间：350-550 新币 / 人<br>四人间：270-350 新币 / 人</p><p><strong> 小贴士 </strong></p><ol><li>新加坡政府规定租住的房子必须要能在建屋局上注册。正常情况下，注册要求至少住 6 个月。如果不能注册，就是不合法的房屋。</li><li>如果退租，一定要提前一月声明，以防押金不退。</li><li>仔细看合同，仔细看合同，仔细看合同。</li></ol><blockquote><p>私人公寓(Condo)</p></blockquote><p>公寓，常见两房式或三房式，相当于国内的高档成熟社区，内有免费游泳池、健身房，BBQ 等公共设施，住宿环境相对较好，价格也相对高一些；大部分的 condo 房间都有主人房与非主人房之分，主人房有自己独立的洗手间和相对宽敞的卧室，当然价格也比非主人房高 200-300 / 月(非主人房平均价格<br>S$1,000-1,500 / 间 / 月)</p><blockquote><p>排屋(Terrace)</p></blockquote><p>独门不独栋的联排别墅，此类出租房源相对较少，住宿环境、价格与房子位置、条件有相当大的关系。</p><blockquote><p>独栋别墅(Landedproperty)</p></blockquote><p>少见于房间出租。</p><h2 id="租房"><a href="#租房" class="headerlink" title="租房"></a>租房</h2><blockquote><p>如果英语不是太差，不推荐狮城 BBS 或者微博租房，如果你有认识的新加坡房产中介自然是最佳选择</p></blockquote><p>Property Guru - <a href="http://www.propertyguru.com.sg/" target="_blank" rel="noopener">http://www.propertyguru.com.sg/</a></p><p>新加坡本地发布平台，房源多。使用下来感觉 Property Guru 信息发布是最多的，信息筛选条件多，容易搜索到希望的房源。多为中介发布，有中介费。</p><p>Nestia - <a href="https://www.nestia.com/" target="_blank" rel="noopener">https://www.nestia.com/</a></p><p>新加坡本地发布平台，功能强。Nestia 上的房源也比较多，但感觉不如 Property Guru。不过 Nestia 可以以某一建筑（公司地址）为中心从远及近的搜索房源。找步行距离的房源就很合适了。另外自带的导航也不错。所以我是 Property Guru 和 Nestia 结合使用。</p><p>99.co - <a href="https://www.99.co/" target="_blank" rel="noopener">https://www.99.co/</a></p><p>新加坡本地发布平台，平台新。和上面两个相比算是一个比较新的平台，数据没有 Property Guru 多但是针对房屋本身的介绍更加详细，房源信息相对真实。</p><p>在新加坡租房，有哪些经验可以分享？<br><a href="https://www.zhihu.com/question/22430961" target="_blank" rel="noopener">https://www.zhihu.com/question/22430961</a></p><h2 id="在新加坡买房与中国有何不同？"><a href="#在新加坡买房与中国有何不同？" class="headerlink" title="在新加坡买房与中国有何不同？"></a>在新加坡买房与中国有何不同？</h2><blockquote><p>无论在中国还是新加坡买房前后都记得关注下政策上的变化，新加坡买房的流程很简单，首付 = 房屋价格 + 税 + 中介费 - 贷款额度。</p></blockquote><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802162119.png" alt=""></p><p>① 面积</p><p>说到面积，首先让中国买家摸不着头脑的，就是面积单位的换算。中国买家习惯用平方米（也称平方公尺）计算面积，来新加坡选购房子时听到的都是平方英尺，往往脑子得转一圈才知道个大概。1 平方米约等于 10.8 平方英尺。100 平方米就是 1080 平方英尺。</p><p>除了计算单位不同，“面积”一词在两地公寓市场上的定义也不一样。在中国，面积指的是建筑面积；新加坡算的是实用面积。建筑面积的算法比较繁琐。简单来讲，是根据各套房屋的套内建筑面积，求得各套房屋分摊所得的共有建筑分摊面积，比如门口的面积、楼梯等，都按比例算进每一个单位的建筑面积。</p><p>所以，同一个公寓单位，其建筑面积一定会大于实用面积，通常后者比前者少 20％左右。在中国买一个 “100 平方米” 的单位，和在新加坡买一个“1080 平方英尺”（相当于 100 平方米）相比，后者明显感觉宽敞一点，就是这个道理。</p><p>② 地契</p><p>中国的房产地契通常是 70 年左右，而新加坡的则有 99 年、999 年和永久地契之分。新加坡的房产因为地契年限长，颇受外籍人士青睐。其中，永久地契的房产一般要比 99 年地契的贵 20％。尽管如此，永久地契一直很抢手，也深受中国买家欢迎，因为买家看准这块市场的保值与增值。</p><p>这其中很大程度上因为新加坡的地皮比较少，想要建新楼必须拆掉现有的建筑。不像中国地皮比较多，还有可开发的地段。新加坡永久地契的地段价值比较高，所以如果进行集体出售、或是被政府征用的话，永久地契房地产的房主会可得到较高的补偿。</p><p>物以稀为贵，永久地契房产越是少见，也就越炙手可热。此外，永久地契对中国买家还有另一大吸引力，那就是永久地契满足了 “总觉得要给后代留下点什么” 的传统华人心愿。所以说，新加坡房产能如此吸引外国买家，与地契久脱不了关系。</p><p>③ 贷款</p><p>在新加坡首次购房的买家，可向金融机构贷款的房贷比率顶限为 80％，外籍人士一般则最高 70％。在中国，外国人一般不能向本土中国银行贷款，只能通过外资银行或中国银行境外支行。</p><p>原本新加坡和中国在房贷比率顶限方面有很大差别。不过两国都不断调整房贷比率顶限，因此两国的房贷比率顶限差别已缩小。</p><p>④ 税收</p><p>在新加坡，如果在一定期限里卖掉公寓，卖家需要上缴印花税。在 2011 年 1 月 14 日过后买房的购屋者，只要在四年内卖房屋都需要支付卖方印花税，第一、二、三和四年卖掉房产的税率分别是 16％、12％、8％和 4％。此后就不必上缴卖家印花税。</p><p>在中国，除了印花税外，还需要上缴增值税。为了给中国房地产市场降温，中国政府在 2013 年实施 20％的房地产买卖增值税。所谓增值税，就是对卖家卖房所得的利润征收的税。譬如，150 万人民币买的房子在几年后以 200 万人民币卖掉，卖家所赚得的 50 万就将需要以一定的比率交税。</p><p>⑤ 车位</p><p>在中国购买中高档住宅，需要另外购买车位。而在新加坡，买家不需要另付车位费，发展商一般会为每个新单位赠送一个车位。可不能小瞧这个车位费。近年来，车位费在中国节节攀升，动辄十几、二十万人民币，是一笔不小的开销。</p><p>新加坡私人公寓不收车位费，而是将停车场的修建和维护等费用，包括在每月的项目管理费之中。管理费除了车库，还包括游泳池、健身房等设施，每月一般是几百元新元。如果每月的管理费是 300 元新元（约 1400 元人民币），一年就是 1 万 7000 元人民币，15 年刚好是 25 万 5000 元人民币。总体来讲，这要比中国的车位 “划算” 得多。</p><h2 id="新加坡医疗指南"><a href="#新加坡医疗指南" class="headerlink" title="新加坡医疗指南"></a>新加坡医疗指南</h2><p>新加坡是一个热带国家，从国内刚过去有可能因水土不服引起的伤风、感冒、皮肤敏感或蚊虫叮咬等。出行之前可以带一些三九胃泰、牛黄解毒等日常药品之类的药品，防范于未然是最好的。</p><p>看医生：在新加坡持有工作签证，所在的公司会按照新加坡劳工部规定给每位员工会购买医疗保险或者费用报销。</p><p>医疗保险：一般是三种模式</p><ol><li>直接去合作门诊，提供公司信息，看病不用自己拿钱。</li><li>直接去合作门诊，提供公司信息，看病前给门诊 5 新币（每个公司不一样），其它的费用不用自己拿。</li><li>直接去合作门诊，自己先付产生的费用，然后去公司报销。意外伤害险等（视公司合同规定）。</li></ol><h2 id="公立和私立医疗服务"><a href="#公立和私立医疗服务" class="headerlink" title="公立和私立医疗服务"></a>公立和私立医疗服务</h2><blockquote><p>中国人在新加坡看病就好比外国人在中国看病一样不是很方便，价格不便宜，小病也有可能看成大病</p></blockquote><p>新加坡的医疗服务体系以优质高效著称，选择面广, 综合医院，专科医院，私人诊所遍布全国, 随处可见；不仅为全新加坡的公民，永久居民，外籍工作人士提供服务，同时周边国家的高端人群, 包括东南亚、亚洲、欧洲、中东阿拉伯等国家的病患都会将新加坡的国际医疗服务作为他们的首选。</p><p>新加坡的公立医疗机构和私立医疗机构在整个医疗系统中扮演着不同的角色。基础医疗门诊 80% 由私立医疗机构 / 家庭医生诊所提供，另外 20% 则是由政府综合诊疗所提供；而综合医疗，包括各类科室的住院，专科和 24 小时急诊主要由公立医疗机构提供，占 80% 的比例，剩下的 20% 由私立医疗机构提供。由于政府的有效规划和管控，公立医院和私立医院相辅相成, 缺一不可。</p><p>在公立医疗机构就诊一般都需要提前预约, 候诊时间较长, 也不能自由选择医生。由于那里的医生要面对更多的患者, 为每个患者服务的时间相对较短；而私立医疗机构由于患者相对较少, 不需要预约, 候诊时间较短，还可以自己选择医生，医生也能与患者作更多的交流, 提供更细致的服务，收费就相应高一些。</p><p>一些新加坡的公立医院也为自费病人提供高端医疗服务, 设有针对性的部门和项目, 如体检，会诊，专科治疗等。基础的检查和服务, 公立医院比私立医院收费较低；对于外籍人士和高端的服务项目, 公立和私立医院的收费差异不大。</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzIwMTQxODUxNw==&amp;mid=2650871863&amp;idx=3&amp;sn=b9536c73a1b6a0e0ed02019598d75c35&amp;chksm=8d1b8a4dba6c035b898a133fdf30ec613eb6826a0f4a66d5befe6364a04e24fb6bde9a981ce7&amp;scene=21" target="_blank" rel="noopener">8 家新加坡著名的公立和私立医院</a></p><h2 id="货币兑换和汇款"><a href="#货币兑换和汇款" class="headerlink" title="货币兑换和汇款"></a>货币兑换和汇款</h2><blockquote><p>如果时间宽裕，推荐走新加坡工商银行渠道</p></blockquote><p>新加坡实行货币开放政策，货币兑换中心随处可见，尤其是在牛车水 (China Town) 附近。如有汇款需求到国内，可以先去牛车水汇款 (珍珠坊二楼)，方便快捷。等周围熟悉后，推荐去淡宾尼(Tampines) 汇款到国内，汇率会比其它地方高一些。具体的地方，在地图搜索 Tampines Money Exchange Center。 </p><p>小贴士：汇款中心一般可以汇到中国邮政、中国农业、中国交通、中国招商和中国银行等。第一次汇钱到国内，当填写汇款单据的时候一定要知道对方银行卡是在 <strong> 省 </strong> 市 ** 银行支行开户的(很重要)。</p><h2 id="法律法规"><a href="#法律法规" class="headerlink" title="法律法规"></a>法律法规</h2><p>新加坡向来是给世人展示优美环境，井然秩序，舒适安全的名片，然而这些美好的展现离不开新加坡法律制度的约束和规范。Singaporeis a“fine”country 完整的诠释了这两方面。所以在新加坡生活，你需要注意以下细节：</p><ol><li>自动排队：公共场合最经常听到的一句话就是 please queue！</li><li>着装：不同场合穿不同衣服, 建议每天换衣服。</li><li>公共习惯：乘坐公共交通或者在公共场合用餐时, 切忌大声喧哗, 不然你一样会被当做异类奥! 而且记得再饿也要撑到下车再用餐。</li><li>言论：新加坡是多文化和宗教融合的国家, 公共场合不要发表敏感政治言论或者宗教话题, 这也体现互相尊重。</li><li>不当行为：竖中指可能会被当做种族歧视处理的</li><li>如厕：来也匆匆, 去也冲冲。如若不然请准备 500 新币吧。</li><li>口香糖：公共场所不允许嚼口香糖, 不可以随意买卖, 允许带少量入境, 正是这个奇葩的规定维护了公共环境的整洁。</li><li>吸烟：新加坡公共场所绝对禁烟。如若吸烟不幸被抓到, 恭喜你一个月的工资 (高达 2000 新币) 为国家做贡献了!</li><li>垃圾：乱丢垃圾初犯者将处高达 1000 新币罚款, 再犯者将罚款额提高至 2000 新币以及在劳改法令下受罚。</li><li>交通规则：闯红灯, 随便乱穿马路这些不多啰嗦。违反的是规则, 伤害的是人身安全, 因为小编也感觉马路上的车如同闪电般行驶。</li><li>不可非法聚会和使用暴力</li></ol><p>以上内容是提醒大家在生活细节方面应遵守的规则, 但有些行为未必就可以罚款结案的, 比如: 签证到期后逾期逗留、抢劫、公共场所涂鸦、纵火、携带毒品等这些可都是在鞭刑的定罪范围内的。</p><p><strong> 最后郑重的提醒各位：</strong> 在机场不要发扬助人为乐精神帮陌生人携带物品, 因为很有可能你同时把生命交给了别人(运输毒品和贩毒同罪)。</p><h2 id="工作准证遗失如何处理"><a href="#工作准证遗失如何处理" class="headerlink" title="工作准证遗失如何处理"></a>工作准证遗失如何处理</h2><ol><li>发现丢失后立即携带护照或者工作准证的复印件到任何一间警察局报案，记得保存报案记录原件。</li><li>通知雇主公司 HR, 让其在 7 天之内在新加坡人力部网上提交补办工作准证的申请。</li><li>费用: 首次补办 100 新币, 第二次是 300 新币(一般在提交申请补办 4 个工作日可去新卡)</li></ol><h2 id="银行卡遗失如何处理"><a href="#银行卡遗失如何处理" class="headerlink" title="银行卡遗失如何处理"></a>银行卡遗失如何处理</h2><ol><li>发现遗失后立即拨打银行客户服务中心热线挂失</li><li>银行客户专员会核对护照和工作准证信息, 然后等待新卡邮寄到住处或者去支行直接领取。</li></ol><p>POSB 用户请拨打 18003396963<br>DBS 用户请拨打 18001111111<br>UOB 用户请拨打 18002222121<br>OCBC 用户请拨打 18003633333</p><h2 id="护照遗失如何处理"><a href="#护照遗失如何处理" class="headerlink" title="护照遗失如何处理"></a>护照遗失如何处理</h2><p>如护照遗失或被盗, 请立即到中国驻新加坡大使馆如实填写《护照遗失陈述表》，提供关于护照遗失或被盗的情况说明, 以及提供报警记录原件及复印件。如护照损毁, 请提交损毁的护照, 以及护照损毁的原因说明。</p><p>具体的更换护照和网上预约等等详细流程请参考大使馆的官网：<a href="http://www.chinaembassy.org.sg/chn/" target="_blank" rel="noopener">http://www.chinaembassy.org.sg/chn/</a></p><p>中国驻新加坡大使馆信息:</p><p>地址: 150 TANGLIN ROAD,SINGAPORE 247969</p><p>领事部：64712117；92971517(仅限紧急领保求助, 不接受证件咨询)</p><p>Email: <a href="mailto:chinaemb_sg@mfa.gov.cn" target="_blank" rel="noopener">chinaemb_sg@mfa.gov.cn</a></p><p>办公时间：周一至周五(节假日除外)</p><p>上午 9:00-11:30</p><h2 id="新加坡日常-App-推荐"><a href="#新加坡日常-App-推荐" class="headerlink" title="新加坡日常 App 推荐"></a>新加坡日常 App 推荐</h2><blockquote><p>如果是 Android 记得安装 Google 框架，如果是 iOS 记得调整更改 Apple ID 国家或地区</p></blockquote><p>交通: Grab(类似国内滴滴)、Google Map(谷歌地图)、SG Buses(公交时刻表)、Mobike（摩拜单车国内账户通用）</p><p>社交: Facebook、WhatsApp、Twitter、Instagram</p><p>购物: Shopee、Lazada、eBay、Amazon、淘宝国际、京东国际、网易考拉、网易严选、小米有品、拼多多</p><p>娱乐: Youtube(视频必备)、 Golden Village(电影院)、CATHAY (电影院)</p><p>快递: <a href="http://www.xiaopodao.com/" target="_blank" rel="noopener">小坡岛集运</a>、淘宝直送 / 集运</p><p>微信公众号: </p><ul><li>新加坡眼</li><li>新加坡狮城椰子</li></ul><p>视频 / 音频播客:</p><ul><li><a href="https://www.youtube.com/channel/UClL3IBde8AhRSqGXioa3FiA?sub_confirmation=1" target="_blank" rel="noopener">AbbieLu 新加坡</a></li><li><a href="https://www.ximalaya.com/toutiao/5218657/" target="_blank" rel="noopener">俊玮谈新</a></li></ul><p>特别推荐: </p><ul><li><a href="https://zero1.sg/" target="_blank" rel="noopener">Zero1</a>: 9.9 每月无限流量手机卡</li><li><a href="https://originallyus.sg/products/" target="_blank" rel="noopener">SG BusLeh</a>: 个人认为是比 SG Buses 更好用的公交时刻表</li><li><a href="http://refer.eatigo.com/eati17aqf-1v9" target="_blank" rel="noopener">eatigo</a>: 开启新加坡美食 5 折之旅</li><li><a href="https://app.shopback.com/sgp?raf=kxg2ZG" target="_blank" rel="noopener">ShopBack</a>: 类似于国内的购物返现平台</li><li><a href="http://www.xiaopodao.com/" target="_blank" rel="noopener">小坡岛集运</a>: 从中国寄送包裹到新加坡空运最低仅需 19RMB/kg, 海运小包 10RMB/kg</li></ul><p>推荐信息聚合平台:</p><ul><li><a href="https://toutiaosg.com/" target="_blank" rel="noopener">新加坡头条</a>: 聚合了主流的新加坡本地中文站点，用来搜索历史记录比较合适</li><li><a href="https://blog.seedly.sg/" target="_blank" rel="noopener">Seedly</a>: 熟悉新加坡本地的银行金融，保险，买房投资规则</li></ul><h2 id="新加坡至其他国家旅游"><a href="#新加坡至其他国家旅游" class="headerlink" title="新加坡至其他国家旅游"></a>新加坡至其他国家旅游</h2><blockquote><p>旅游可以具体向专业旅行社咨询，以政策变化为准</p></blockquote><p><a href="http://cs.mfa.gov.cn/wgrlh/lhqz/cjwdn_660600/t1175681.shtml" target="_blank" rel="noopener">境外中国公民赴香港特区怎么办理？</a></p><ol><li>持中华人民共和国护照，在海外过境香港特区前往中国内地或其他国家（或地区），凭有效护照和联程机票，可免办进入许可并在港停留 7 天。持中华人民共和国护照，自内地经香港特区前往其他国家（或地区），出示联程机票和前往国家或地区的签证，或合法居留证件 (如 “绿卡”) 后，可免办进入许可并在香港特区停留 7 天。 </li><li>如预计在香港特区停留超过 7 天，应事先申请进入许可。中国驻外使领馆可根据申请人情况签发 3 个月一次或两次有效，每次停留不超过 30 天的进入许可。持有外国永久居留证件，并在海外居住不少于 1 年者，可申请两年多次有效进入许可。</li></ol><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjA4NzQzNA==&amp;mid=503621899&amp;idx=1&amp;sn=62d66af2463312f4d66adf0a272e71f8&amp;chksm=004730ee3730b9f8b6a0ece62952493af344cce03f3a9fb8504a3e3a9a15777f6e351d285d26&amp;mpshare=1&amp;scene=23&amp;srcid=08022k223Jxs2MD7XXeHCXxT&amp;sharer_sharetime=1564734537933&amp;sharer_shareid=456ba82bbd1a1c9f32e5725824095308%23rd" target="_blank" rel="noopener">新加坡到各国签证办理条例</a></p><h2 id="新加坡父母签证"><a href="#新加坡父母签证" class="headerlink" title="新加坡父母签证"></a>新加坡父母签证</h2><blockquote><p>网上找到的，忘记出处了，如果有错误描述请及时指正</p></blockquote><p>本人 PR，老婆七月份预产期。打算让父母 6 月中旬来。计划步骤如下:<br>1, 先买往返机票（返程可更改的）。<br>=== 对的。<br>2,5 月份申请父母旅游签证。<br>=== 旅游签证可提前一个月内申请，有效期多数 63 天，也有一年，两年，非固定。有效期内入境即可。<br>3, 父母来新后申请延期至 89 天。<br>=== 对的。<br>4, 同时申请 LTVP。<br>=== 也没错。<br>5, 悲剧后申诉。<br>=== 步骤没错。<br>请指点一下按这样做有什么不拖吗？<br>=== 有什么不妥是吧？没什么不妥的，如果觉得自己条件还可以，就可以早点安排申请 LTVP，如果觉得条件比较牵强，可以晚一点入境，晚一点延期，晚一点申请 ltvp，争取在月子后多待一点时间帮你们带孩子。<br>可以现在就申请旅行签证吗?<br>=== 提前一个月内申请，一个月内，内。<br>旅行签证有效期多久? 一年多次吗？<br>=== 上面已经回答了。<br>申请 LTVP 必须人在新加坡吗？<br>=== 是的。必须入境后申请。</p><p><a href="https://www.ica.gov.sg/" target="_blank" rel="noopener">https://www.ica.gov.sg/</a></p><h2 id="新加坡婚礼红包份子钱"><a href="#新加坡婚礼红包份子钱" class="headerlink" title="新加坡婚礼红包份子钱"></a>新加坡婚礼红包份子钱</h2><blockquote><p>婚礼怎么随份子钱，是个讲究活儿。它不仅是人情的体现，也是婚礼平衡开支的一种方式</p></blockquote><p>切记要分清是 “午宴” 还是 “晚宴”，时间是在工作日还是周末。毕竟在不同时段，价格差异很大。</p><p>想知道新加坡各大酒店在工作日、周末或公共假期时的婚礼餐标，可以查看<a href="http://www.weddingangbao.com" target="_blank" rel="noopener">Wedding Ang Bao</a></p><p>这可以通过知道婚礼举办地每桌的费用来推算出最合适的红包金额。计算方式是，每桌的基本费用处以 10，就能得到最低应给红包金额。比如婚宴每桌需要 1000 新币（包括了消费税 7% 和服务税 10%）。每桌 10 位客人。将 1000 除以 10，平均每人需要送红包 100 新币。</p><p>另外，由于红包的价格通常是整数，最好包一些新加坡人认为是比较吉利的数字。礼金金额切忌有 1，3 或 4，因为它被认为是不吉利的。最常见的礼金金额是 100 新币、120 新币、128 新币、150 新币、160 新币。</p><ul><li>红包的行情，是在餐馆还是酒店举行，午宴或晚宴，平日或周末，都不相同<ul><li>CAPELLA，ST.REGIS 等这种超级高大上的酒店一般要给 200-250 新币 / 人</li><li>金沙，香格里拉等酒店则是 160-200 新币 / 人</li><li>希尔顿，圣淘沙的酒店则是 150-200 新币 / 人</li><li>凯悦，泛太平洋酒店则是 120-150 新币</li><li>非酒店的餐馆，一般 100-120 新币 / 人</li><li>如果是自助餐档次的呢，80-100 新币 / 人</li></ul></li><li>红包的数目其实就是按人头计算，常用的计算方式是每桌的基本费用处以 10</li><li>关系特别好的时候，有些朋友也会在最少红包数额的基础上加 100-200 新币哦</li></ul><h2 id="新加坡公民-永久居民-外国人的区别"><a href="#新加坡公民-永久居民-外国人的区别" class="headerlink" title="新加坡公民 / 永久居民 / 外国人的区别"></a>新加坡公民 / 永久居民 / 外国人的区别</h2><blockquote><p>我们大多数人的起点是外国人，这点与国内的户口制度类似，无论是中国还是新加坡始终绕不开买房和教育这两座大山</p></blockquote><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802162244.png" alt=""></p><p><a href="https://docs.qq.com/sheet/B80RhZ2ZATLC0ge3Bi2bLYpr2iY5PC1nE3031LWRcK1rTcgj0Z2bvD00bDO63Ie3tz2ovOwW4" target="_blank" rel="noopener">如果发现表有错误请点击链接申请编辑更新，谢谢</a></p><h3 id="EP-申请-PR"><a href="#EP-申请-PR" class="headerlink" title="EP 申请 PR"></a>EP 申请 PR</h3><blockquote><p>在新加坡工作满半年即可申请 PR，不过大概率是被拒的，失败后等待半年继续申请挑战吧</p></blockquote><p><a href="https://www.ica.gov.sg/apply/PR/apply_PR_who" target="_blank" rel="noopener">Becoming a Permanent Resident</a></p><blockquote><p>申请步骤均在网上完成，务必提前准备好申请材料，重点检查 4、6、7、9、10</p></blockquote><ol><li>有效的护照个人信息和官方备注页面，原件与复印件</li><li>EP 或 S Pass 准证原件及复印件</li><li>身份证（如有）</li><li>出生证明或者家庭户口（非英文需要公证书翻译）</li><li>更名证明文件（如有）</li><li>标准护照尺寸照片</li><li>最高学历（成绩单，资格证，会员资质等也可提供）(非英文需要公证书翻译)</li><li>以前雇主的推荐信，说明就业的性质，持续时间以及基本工资（如有）</li><li>过去六个月的工资单</li><li>现任雇主的信函，说明就业日期，过去六个月的每月工资，包括加班和津贴，可以找 HR 准备，要在申请前一个月内开具此信件</li><li>IRAS 同意书，表示同意 ICA 获取和核实与此相关的财务信息</li><li>对于自雇人士，需出示有效商业登记证明书并显示合伙人姓名</li><li>对于自雇人士，与工作有关的职业执照（例如小贩执照，营业执照， 物业代理牌照）</li></ol><blockquote><p>已婚人士还需要这些：</p></blockquote><ol><li>结婚证书（非英文需要公证书翻译）</li><li>关于之前婚姻的死亡证明或离婚证明（如有）</li><li>关于以前婚姻的子女的监护文件（如有）</li><li>配偶的最高教育证书（包括大专学历），成绩单，职业资格证等（非英文需要公证书翻译）</li></ol><blockquote><p>如果配偶一同申请：</p></blockquote><ol><li>配偶的有效旅行证件及有效的入境通行证，护照（资料页）</li><li>配偶的出生证明（非英文需要公证书翻译）</li><li>更名文件（如有）</li><li>配偶的身份证（如适用）</li><li>关于配偶以前的婚姻离婚证明以及孩子的监护文件，或者死亡证明（如有）</li></ol><blockquote><p>如果孩子一起申请：</p></blockquote><ol><li>孩子的护照资料页</li><li>孩子的出生证明，显示孩子和父母的姓名（非英文需要公证书翻译）</li><li>儿童收养文件（如适用）</li><li>儿童改名证明（如适用）</li></ol><p>关于其他的申请条件可以访问移民局网站，查询需要提交的资料。</p><h3 id="PR-申请公民"><a href="#PR-申请公民" class="headerlink" title="PR 申请公民"></a>PR 申请公民</h3><blockquote><p>等 PR 满两年后再申请</p></blockquote><p><a href="https://www.ica.gov.sg/application/singapore-citizenship/becoming-a-singapore-citizen" target="_blank" rel="noopener">Becoming a Singapore Citizen</a></p><p><a href="https://toutiaosg.com/%E5%90%90%E8%A1%80%E6%95%B4%E7%90%86%EF%BC%81%E5%A6%82%E4%BD%95%E5%9C%A8%E7%BD%91%E4%B8%8A%E7%94%B3%E8%AF%B7%E6%96%B0%E5%8A%A0%E5%9D%A1pr%E5%92%8C%E5%85%AC%E6%B0%91%E6%9C%80%E5%BC%BA%E6%94%BB%E7%95%A5/" target="_blank" rel="noopener">吐血整理！如何在网上申请新加坡 PR 和公民最强攻略！收藏~</a></p><h2 id="我的新加坡之旅时间轴"><a href="#我的新加坡之旅时间轴" class="headerlink" title="我的新加坡之旅时间轴"></a>我的新加坡之旅时间轴</h2><blockquote><p>时间轴不再描述细节，如果需要了解详细信息可以阅读后面的内容</p></blockquote><p>201804</p><ul><li>LinkedIn 收到 100offer 猎头来自 Sea 的工作邀请机会</li><li>经历 3 轮远程 Skype 视频面试，时间约为 3 周</li><li>提出辞职由 Sea HR 帮忙开始申请 EP，时间约为 3 周</li></ul><p>201805</p><ul><li>完成离职流程，时间约为 1 个月</li><li>收到 EP 的 IPA，由 Sea HR 帮忙开始申请 DP，时间约为 1 周(申请 DP 请提前准备好结婚证公正)</li><li>完成新加坡机票，住宿，货币，各种材料纸质化和电子扫描化的准备(可选为申请 PR 准备国内学历学位公证和出生证公证)</li></ul><blockquote><p>再强调一下出国前的建议</p></blockquote><ol><li>随身携带好护照和相关入境材料，非常重要，非常重要，非常重要</li><li>证件，学历和结婚证公正翻译等材料可以通过扫描全能王 (CamScanner) 录入为电子版，水印是可以很方便去除的，这里就不多说了。如果觉得好用请购买正版服务支持下总部位于上海的合合信息，名片全能王 (CamCard) 也是他们家的产品</li><li>提前规划好到达新加坡后的住宿(新加坡 Airbnb 违法)，交通出行，手机应用，SIM 卡，入职流程</li><li>准备好足够的新币现金建议 4k+，因为银行卡和租房都是大头，有条件至少准备一张以上的 Visa/Mastercard 信用卡</li><li>出国前检查下国内的银行，手机，社保，人事档案是否安排妥当，身份证和护照离过期更换时间是否可控</li><li>如果有条件出国前做下全面的体检至少对自己身体有一个清晰的认识，把牙齿之类的小毛小病尽可能提前扫除隐患</li><li>现在的网络通信都很发达，记得和家人保持联系，减少他们的担心，自己照顾好自己</li></ol><p>201806</p><ul><li>20180609 星期六晚上 20 点第一次来到新加坡</li><li>完成住宿，EZ-Link 交通卡和 Singtel Prepaid 手机卡，时间约为 1 天</li><li>入职一周左右由 HR 协助申请 EP，需要本人预约 MOM 现场办理 EP，收到 EP 实体卡时间约为 1 周内</li><li>收到 EP 实体卡使用 SGWorkPass 扫描获取有效期并保存照片，注册 SingPass，约 1 周左右收到密码信封然后激活</li><li>办理 Zero1.sg 的无合约限制，无限流量的 Postpaid 手机卡，背后运营商为 Singtel 质量靠谱</li><li>携带相关证明办理银行卡，我选择 UOB 但是推荐各位选择 DBS，如需转账回国可以再额外开通工商银行</li></ul><p>201903</p><ul><li>全年在新加坡工作满 183 天以上需要报税，新加坡税率较低平均缴税额度大概年收入 5%-8%，对外国人来说可以理解为税前≈税后或者到手收入</li><li>工作满半年可以开始申请 PR，但一般建议等满 2 年，可以提前准备各种材料，国内学历学位和出生证公证在新加坡本地认证机构都可以代办</li><li>在半年时间中根据自身状况可选办理信用卡，健身卡，意外 + 住院保险，保障自己的身体健康很重要</li><li>基本熟悉新加坡的生活节奏，明白新加坡的优缺点，规划自己下一个阶段目标</li></ul><p><img src="https://cdn-blog.seedly.sg/wp-content/uploads/2018/06/30020702/Personal-finance-guide-01.png" alt=""></p><p>READ ME FIRST: Your Personal Finance Journey Starts With This Article<br><a href="https://blog.seedly.sg/read-me-first-your-personal-finance-journey-starts-with-this-article/" target="_blank" rel="noopener">https://blog.seedly.sg/read-me-first-your-personal-finance-journey-starts-with-this-article/</a></p><h2 id="新加坡-1-个月感想"><a href="#新加坡-1-个月感想" class="headerlink" title="新加坡 1 个月感想"></a>新加坡 1 个月感想</h2><blockquote><p>选择新加坡的理由：给自己多一种选择</p></blockquote><ul><li>MOM: Ministry of Manpower 新加坡人力部</li><li>IPA: In-Principle Approval 批准信</li><li>EP: Employment Pass 人才准证</li><li>DP: Dependant’s Pass 家属准证</li><li>PR: Singapore Permanent Resident 新加坡永久居民</li><li>SC: Singapore Citizen 新加坡公民</li><li>HDB: Housing &amp; Development 政府组屋</li><li>Condo: 私人公寓</li><li>Food Court: 食阁</li><li>CPF: 公积金</li><li>NUS: National University of Singapore 新加坡国立大学</li><li>NTU: Nanyang Technological University 新加坡南洋理工大学</li></ul><ol><li>原始坐标：上海，无留学经验也没有去过新加坡</li><li>猎头推荐新加坡的职位，想想自己那被遗忘的蹩脚英语抱着试一试的心态</li><li>一共 3 轮 Skype 远程视频面试，约 4 周时间到最后确认 offer</li><li>约 1 天时间思考，离职申请，签电子合同</li><li>检查护照有效期，下载学信网英文翻译认证，由 HR 帮助提交申请 EP，约 3 周内收到 IPA</li><li>在上海户口所在区公证处办理结婚证公证翻译，约 3 周时间完成，又慢又麻烦</li><li>完成 EP 后由 HR 帮助提交申请 DP，约 1 周内收到 IPA</li><li>购买机票，打印 IPA，带上护照，打包行李，兑换 4000 新币，确认人事档案存放地址，选择不缴纳每月养老保险和医疗保险约 1500 元人民币(可由父母代缴，中断非连续缴纳暂时不影响回国养老，以政策变化为准)</li><li>飞机上填写好新加坡入境卡，完成入境登记，无需录入指纹，开启华为天际通</li><li>抵达公司提前安排好的住址，熟悉新加坡环境</li><li>办理 EZ-Link 交通卡和 Singtel Prepaid 手机卡(如果没有强需求可以暂时不办理)</li><li>公司 HR 提交 EP 现场办理申请，收到邮件后预约 MOM 办理时间（我没有被要求体检，根据不同公司情况而定）</li><li>约 1 周后收到 EP 绿色实体卡，使用 SGWorkPass 扫描保存照片，注册 SingPass 后约 1 周左右收到密码信封</li><li>公司开具证明办理银行卡，新加坡本地我选择 UOB(保持 1000 新币存款)，另外强烈推荐再办理工商银行卡(持卡 0 门槛，转账回国 0 费用)</li><li>网上申请 Zero1 的无限流量手机卡，约 3 个工作日收到直接使用，弃用 Singtel Prepaid（浪费了 25 新币）</li><li>新加坡日常消费以现金为主，我本人习惯手机支付无奈降级至刷信用卡阶段(持有浦发 AE 白 / Visa/Master)，怀念下国内的支付宝和微信</li></ol><p>我刚来新加坡 1 个多月，不用担心语言不通，大部分人都会说华语。新加坡真的不算大，地铁和公交都很方便，空气质量很好至少我的鼻炎消失了，天气没有国内那么热，居然没有蚊子，没有蚊子，没有蚊子。在这段时间里我幸运了结识了交大和复旦的校友，跟随专业的中介实地考察了新加坡的租房和买房市场，走遍了几个重要的核心区域，顺便吃了几顿亲民的米其林一星。之后我应该还会继续更新自己在新加坡的经历，比如健身、快递、看病等日常生活，希望对大家有所帮助。</p><h3 id="新加坡-3-个月感想"><a href="#新加坡-3-个月感想" class="headerlink" title="新加坡 3 个月感想"></a>新加坡 3 个月感想</h3><blockquote><p>咋们就从最传统的衣食住行说起吧</p></blockquote><p><strong> 衣 </strong></p><p>因为新加坡全年都是夏季，平时的正常温度基本在 30° 上下，对于我来说已经把家里的夏装的家底全部带过来了，所以也没有什么特别需要单独购买，作为男生如果以后缺衣服的话在新加坡线下就是优衣库，线上还是优衣库。</p><p>女生的选择实在太多了，乌节路和 VivoCity 等都可以逛好久，这里就跳过吧</p><p>新加坡本地的 Outlet(奥特莱斯)是 IMM，如果你喜欢跑步运动，那么只卖 80 新币的 adidas Ultraoost X 和 Asics GEL-Kayano 会有一定吸引力</p><p>在新加坡网购，和国内激烈竞争的胜出者相比，还有很长一段路要走，当然也证明东南亚市场是一块巨大的蛋糕等待挖掘</p><p>新加坡室内空调冷气普遍开得比较足，建议怕冷的同学多备件长袖外套在公司，长时间逛商场时注意冷热交替避免生病</p><p>从中国快递至新加坡我通常会选择和同事拼团 小坡岛新加坡集运</p><p><a href="http://www.xiaopodao.com" target="_blank" rel="noopener">http://www.xiaopodao.com</a></p><p><strong> 食 </strong></p><p>新加坡最有特点的饮食文化莫过于食阁(Food Court)，其实有点类似于上海的大食代，但价格亲民而且还有米其林一星的神奇存在，平均一顿的价格区间在 3-7 新币，整体口味偏重。每个食阁上方都会标注 A/B/C 卫生评级，新加坡本地的习惯一般不在家做饭，大家都出去吃所以种类也还算多，不知道吃什么可以认准 Singapore Best Foods 红色标志，和国内相比关键是放心。</p><p>如果平时想吃顿大餐类似国内海底捞、小龙坎那种，平均每人大概 30-50 新币左右，评级更高的餐厅价格自然也水涨船高</p><p>自己在家做饭的成本其实和外面吃也差不了多少，如果居住的房子允许大炒和大煮当然可以选择自己动手丰衣足食</p><p>新加坡的菜市场比较少见可能是我没有刻意去寻找或者需求的缘故吧，买蔬菜和肉类基本都在 Sheng Siong(昇菘)，FairPrice(NTUC)，Cold Storage，喜欢日本食物还可以选择 DON DON DONKI，我个人很喜欢这只萌企鹅的魔性主题曲</p><p><a href="https://www.bilibili.com/video/av32078102" target="_blank" rel="noopener">https://www.bilibili.com/video/av32078102</a></p><p>新加坡的便利店清一色 7-Eleven，部分大一点的屈臣氏 (Watsons) 支持支付宝(Alipay)，上面提到的 Sheng Siong 已经全部支持 Alipay</p><p>外卖大家就不要指望 GrabFood 或 Foodpanda 有饿了么和美团外卖的速度了，老老实实去附近的食阁按时吃饭才是正道</p><p>新增推荐 eatigo，我每个周末都会使用 eatigo 开启 5 折美食之旅</p><p><a href="https://eatigo.com/sg/singapore/en" target="_blank" rel="noopener">https://eatigo.com/sg/singapore/en</a></p><p><strong> 住 </strong></p><p>(1) 租房</p><p>我在租房这个环节基本上算是跳过了，刚来时建议找好房源，这边的酒店居住成本很高的。因为目前是长租在公司提供的组屋 (HDB) 内，毕竟室友都是公司自己人很放心，合同限制不多每月会安排阿姨定期打扫和保养空调等，手机银行转账支付租金也方便。回想当时刚来的 1 个月每周都跟随专业的中介校友出去找房子都十分辛苦，更不要说自己联系中介一家一家看了，说多了都是泪。这边的房产中介需要考证，据说通过率只有 10-15%，每个中介都会展示唯一的证书编号，所以不用太担心被骗，不过每个中介的态度千差万别，找到靠谱的中介能够加快找房的速度。</p><p>由于地理位置和房屋面积质量差异，下面的租房价格仅仅是一个参考区间，数字单位为新币 / 月<br>组屋(HBD)，普通房 600-800，主人房 1000-1200，整租 1000+<br>公寓(Condo)，普通房 800-1500，主人房 1200-2000，整租 1500+</p><p>房源信息可以来自于同事，也可以自己在线挑选，方法我都写在前面了，和同事咨询过新加坡租房的大致流程</p><ol><li>看准自己喜欢的房子</li><li>看清楚合同，看清楚合同，看清楚合同，签约</li><li>签 1 年一般押一付一，签 2 年押二付一</li><li>中介费是根据实际情况由房东或者租客来承担，一般根据合约长短支付 0.5 或 1 个月的房租作为中介费</li></ol><p>(2) 买房</p><p>虽然是否决定买房的话题为时尚早，但经历了魔都十几年房地产的上涨自然也不会错过对新加坡房地产的研究，如果你是冲着 30w 新币的组屋 (HDB) 那么找新加坡本地人结婚是最快的途径。新加坡在 2018 年 07 月 06 日 0 点开始调整了印花税，对于我们普通人来说 2-3 年内拿到永久居民 (PR) 已然不易。新加坡私人公寓 (Condo) 的价格和质量相对国内来说是有优势的，但是 1 室 80w，2 室 100w，3 室 120w 这样的价格加上印花税还是会让我们感到一丢丢肉疼，好在房地产市场涨幅长期平稳且退出机制清晰，租房市场也足够活跃，而且银行可以贷款 7 成 + 2% 左右的低利率还是足以让我们拥有奋力一搏的勇气，不用牺牲 6 个钱包。</p><p><strong> 行 </strong></p><p>现在无论在哪里手机的使用比重都是极高的，我自己来新加坡前把小米 6 替换为华为 P20 Pro，妻子还是用的小米 MIX2，在国内早已习惯电信乐享家 199 元全国无限流量，我们的老卡 1 个是移动，1 个是联通，来到新加坡之后选择了无合约限制价格为 29.99 新币无限流量的虚拟运营商 Zero1.sg，因为背后是 Singtel 所以质量有保障。在新加坡接收国内短信验证码之类不要钱，双卡双待都是没有问题的，不过我妻子还是很期待 iPhone 即将推出的双卡功能，毕竟她在美国时的 iPhone5s 也用了 4 年多，被我硬生生拖入 Android 阵营实属不易。 </p><p>新加坡公共交通发达，Google Map 在手说走就走。我的选择和国内类似，能坐地铁尽量就不会选择公交车，因为坐公交车有几点不爽，如果你不熟悉新加坡或者不会熟练使用 Google Map 建议不要轻易乘坐公交车。</p><blockquote><p>乘坐地铁切记不可吃喝、吸烟、携带榴莲、大声喧哗和带宠物，乘坐公交车的规定与地铁类似但有以下额外注意事项</p></blockquote><ol><li>公交车来之前一定要招手才会停</li><li>在到达下一站前一定要按 Stop 红色停车按钮，不然不会停</li><li>下车时还要再刷一次交通卡确认付款</li></ol><p>除了公交车和国内差异较大以外，平时过马路记得按一下身边的指示灯，你不按或者对面也没人按，那你就不用想着过去了</p><p>这边的公交卡称为 EZ-Link，想刷 NFC 不好意思没有小米和华为，请购买 NFC SIM card。虽然充值很方便支持国内双币信用卡，但我还是很想念上海二维码扫码进闸机。另外新加坡地铁站没有安检，没有安检，没有安检。</p><p>我丢过一次地铁卡，为了挽回里面 25 新币我第一次主动走进新加坡警察局开具丢失证明，他们做事确实负责而高效，不过我因为操作失误导致旧卡数据没有正常转移到新卡，超过 7 天申报时间我也没有办法无力回天，所以再一次怀念下国内的手机刷卡。</p><p>新加坡已经遍布 Mobike 和 ofo，摩拜的国内账户可以在这里直接使用，ofo 需要重新注册。</p><p>新加坡打车市场已经被 Grab 一统江湖，Uber 和滴滴出行都入股 Grab，另外 Grab 打车很安全而且支持支付宝(Alipay)，普通出租车都支持微信和支付宝</p><p>关于机票从上海往返新加坡的航班很多，价格和飞行时间比较透明就不多说了，我这里还是推荐大家体验下新加坡航空 (Singapore Airlines) 的服务，今年航空公司评选又站回全球第一，即使乘坐经济舱也不要忘记品尝一下新加坡司令哈。</p><p>今年国庆节期间我和老婆买了新加坡至四川成都的 5 日往返机票，新加坡航空旗下的胜安航空(SilkAir)，令我感到惊喜的是 2 人机票往返价格总共才 1600 人民币。</p><p>新加坡拥车成本比较高，虽然公共交通发达，但是开车的梦想还是要有的，万一实现了呢？</p><p>新加坡和国内的走位不一样，行走避让和司机开车位置与国内正好相反。</p><blockquote><p>传统的四大金刚扯完了，我们再聊一些逆转未来的话题</p></blockquote><p><strong> 安全 </strong></p><p>新加坡的安全本质上是基于严格的法律加上遍布各地的摄像头，你如果想挑战下不如先了解下鞭刑的酸爽和罚款罚到你肉疼的数字。</p><p>吸烟，喝酒，乱扔垃圾在法律中都有明确要求，虽然不能百分百杜绝抽烟现象，但你走在马路上不会遇到随意吐痰也不需要提防狗屎。穿过十字路口车辆都会早早的自觉停下来等你先过去，新加坡随处可见的就是无障碍设施，地铁沿线基本都设置了棚顶，既可以防晒又可以躲雨，即便每天都能遇到短时暴雨由于出色的排水系统也从来不会看到有积水。</p><p>在国内随时会收到的垃圾短信和房产金融中介等骚扰电话，在新加坡基本是看不到的，不过 Email 和 WhatsApp 这种网络骚扰还是无法消灭的。这边的违法成本比较高只要被投诉就会收到法律的严格制裁，当然注意保护自己的隐私安全始终不能掉以轻心，毕竟再文明的社会偶尔也会遇上小人。</p><p>在新加坡你基本不用担心丢失物品，因为大概率都能找回来，包包也不用刻意放在前面，拉链忘记拉上也没关系，不用担心人口贩子和小孩走丢，更不用担心一个人走夜路会不会不安全，犯罪成本高促成的低犯罪率给你带来的不仅仅是安全感更是幸福感。</p><p>由于新加坡的地理位置极好，无论是过去还是未来基本是不会受到任何灾难气候影响，台风、海啸或者地震是不存在的</p><p>新加坡的人际关系相对简单，与人为善的过程中也不要忘记多留个心眼谨慎一些，在这边和他人发生误会大多数都会听到 Sorry 和 I am fine 而不是争吵，规规矩矩排队而很少有人随意插队，政府办事效率高以廉洁著称也是难能可贵，在新加坡未必有国内这么亲切有人情味，但你能感受到的是相对的公平和简单。</p><p><strong> 健康 </strong></p><p>我在上海的时候就饱受着变态反应性鼻炎的痛苦，每次体检医生都开玩笑要不住到外环去吧，没想到现在离家这么远。至少来新加坡后我的鼻子就彻底舒畅了，我原来对空气质量也不以为然，买个小米净化器放在家里，直到离开上海前看见基因检测报告提醒风险最高的是鼻咽癌，我才明白空气对于每个人的未来都是如此重要。</p><p>新加坡的温度常年保持在 30° 上下，不会像上海夏季烈日炎炎，但新加坡比较像“蓝天白云 晴空万里 突然暴风雨”，有云有风有遮雨棚，身体其实会觉得很舒服.</p><p>之前已经说过新加坡的饮食文化以食阁 (Food Court) 为主，这些小店很多都有几十年的历史，食物未必都符合你的胃口但至少足够安全，不用担心地沟油。合理的饮食搭配以及规律的生活节奏才是根本。</p><p>新加坡本地人都注重健身，如果不想花太多钱在健身房可以考虑在小区附近的体育馆免费跑步或者花费 1.3 新币游泳。私人公寓 (Condo) 一般自带小型游泳池和健身房，虽然小但有总比没有好。如果公司有补贴健身房的价格 (一般 150-200 新币每月) 其实也不算太贵，每月 99 新币可以选择像 Fitness First or Pure Fitness(Pure Yoga)等专业健身房。</p><p>关于看病，因为前段时间工作比较忙抵抗力突然下降导致出现额头皮肤红肿，在国内经历过不注意小病而酿成大病的惨痛教训，<a href="https://wsgzao.github.io/post/wisdom-tooth/">我是如何做到花 8000 元拔智齿的</a>，所以这次特地请 1 天病假去公司合作的 Raffles Medical 私人诊所看病，事后看诊断结果比较准确且看病过程十分高科技 + 高效率，病因是 <code>带状疱疹</code>，总共 99 新币，30 是问诊费其余都是买药钱。只不过第二天我发现未有起色且眼皮红肿都快睁不开了就先让昨天的医生开具的急症介绍信，然后直奔 Raffles Hospital，在了解基本无大碍和每位专科医生复查至少 300 新币起步的情况下果断申请放弃继续治疗赶紧溜回去休养生息，这一趟花了 199 新币，其中 130 为问诊费(节假日看病费用翻翻)。命固然重要，但人只要一生病真的可能失去一切甚至连累家人。</p><p>和同事回顾了他们看病的流程，作为外国人一般也是建议直接去附近的私人医院，价格其实差不多但不用排队。如果选择去政府医院比如 NUH 等可能存在排队现象，这个体验对于国内看病来说大家心里应该很明白有多痛苦，如果各位有足额的医疗保险在国内其实可以选择特需医疗(免排队 + 专家门诊)。关于新加坡医院的更多信息可以参考最上面的介绍。</p><p>印尼 “烧芭” 引发空气污染和马来西亚动不动就拿断水挑事也是新加坡需要持续努力解决的问题之一。</p><p>新加坡的蔬菜和水果算不上贵但也不会像国内一样便宜，除了猫山王榴莲和部分进口水果质量和价格有优势，也没有太多的种类可供选择，我自己会从网易考拉购买 Swisse 作为补充，话说新加坡的营养品真心贵，同样的 Swisse 一小瓶卖 56 新币，其它品牌价格也是高居不下。</p><p><strong> 娱乐消费 </strong></p><p>新加坡本身就很小，加上我和我妻子都倾向于工作，学习和健身。平时的娱乐活动也就停留在节假日出去寻找下亲民美食，慢慢游览新加坡仅有的几个景点，新加坡环球影城，S.E.A. 海洋馆，新加坡动物园，新加坡夜间动物园，滨海湾花园，金沙酒店附近的鱼尾狮和摩天轮，圣淘沙和赌场，其它像植物园，大学校园很多都是免费的，旅游一般 2 天可以快速结束，如果需要细细品味也就再多增加 1-2 天足够了。</p><p>新加坡娱乐设施真的不算很多，看电影还得去现场买票，网上购买需要多花钱。吃喝玩乐想看看附近的活动和评价都没有像美团点评类似的产品，毕竟需求不像国内这么大，但我觉得让国内的美团猫眼或者阿里淘票票来进攻新加坡市场，相信分分钟钟可以拿下。</p><p>新加坡本地目前小额仍然以现金为主，商场一般支持刷卡，而主要的景点和购物中心区域全部覆盖支付宝(Alipay)</p><p><strong> 教育培训 </strong></p><p>虽然现在谈教育太早但是新加坡本地的教育资源始终都是偏向本国公民的，对我们来说永久居民 (PR) 只是万里长征的第一步，要不要买学区房，要不要做义工，也是留给自己的问题。感觉这又有上海户口，学区房，拼父母，何其相似？</p><p>新加坡和中国一样都很注重基础教育，对子女的教育支出都很高，新加坡第三方教育机构或者成人专业类培训机构的市场也很大。最近在微信朋友圈看到英国 BBC 邀请 3 名威尔士的优等生体验韩国鸡血教育的文章，除了深刻感受到教育的重要性，更加理解韩国快速崛起的因素，成熟而完整的教育产业链对孩子很重要，对国家来说更重要。</p><p><strong> 工作生活 </strong></p><p>我目前在一家新加坡互联网公司上班，工作制度是弹性的，没有严格的打卡要求，正常时间为 09:30-19:00，周围以中国同事居多，大部分是在这边读书毕业工作，学校几乎清一色新加坡国立大学 (NUS) 和新加坡南洋理工大学(NTU)，工作语言为英文，核心生产力工具包括 Google Suite，顶配 MacBook Pro，Herman Miller，Dell 2417H，还有无限制的饮料，水果和零食。原以为只能在国内的创业公司和少数尊重技术的优质公司才能看到的办公环境，可能在国外是很常见的事情吧。新加坡互联网公司在 IT 方面的人才非常短缺，也许是因为本地人大都投身于金融行业，所以很多技术人才也是会考虑从中国引进，甚至直接在国内开设分公司。</p><p>因为我以 EP 身份把我老婆也带了过来，目前还是 DP。对她来说在新加坡找一份金融行业的工作真的非常不容易，花了 2 个多月时间扫光了 LinkedIn 在新加坡几乎所有公开招聘，遗憾的是很少有金融行业愿意招聘非新加坡公民 (SZ) 和永久居民 (PR) 以外的人群，得到的回复大多数都是 Sorry，毕竟新加坡政府在很多地方都会优先照顾本国人的利益，这个道理放在中国也很好理解。不过目前经历了 6 轮面试最终拿到了一个还不错的 offer，后续 DP 也要转成 EP，这是一件值得庆幸的事情。</p><p>在没有明显压缩新加坡生活成本，按 1 人每月估算为 1w 人民币，如果是 2 个人差不多是 1.5w 人民币</p><p>新加坡月薪中位数是 4500 新币左右，新加坡人力部公布了 2018 年全国的工资中位数 4437 新币 / 月</p><p>HDB 合租主人房: 1100<br>水电网: 50<br>移动套餐: 9.9<br>饭费: 20x30<br>交通: 2x30<br>健身: 99<br>理发: 12<br>其他: 100</p><p>≈2030.9 新币≈10000 人民币，如果你是单人还可以选择普通房大概 800 每月。不过我相信新加坡贵的部分体现在后期的看病和生娃教育上<br><a href="https://mp.weixin.qq.com/s?__biz=MzIwMTQxODUxNw==&amp;mid=2650896087&amp;idx=1&amp;sn=9eb1be6f3e8ff3a5acc908e2c983cb37&amp;chksm=8d1be4adba6c6dbbb26bb7a8f6e99cff210306f1f1f856297851bc10ed378f532081f08a298b&amp;mpshare=1&amp;scene=23&amp;srcid=0627SV9XjUJihYiNxW383bUB&amp;sharer_sharetime=1564742363597&amp;sharer_shareid=456ba82bbd1a1c9f32e5725824095308%23rd" target="_blank" rel="noopener">扒一扒新加坡的精英制度！月薪 14 万的人到底经历了什么？</a><br>中国 VS 新加坡，生娃养娃究竟要花多少钱？</p><p>中国：</p><ul><li>生娃：3000-1 万人民币</li><li>养娃：65 万元 - 130 万人民币</li><li>总计：约 65 万 - 131 万人民币</li></ul><p>新加坡：</p><ul><li>生娃：1003-18912 新币</li><li>养娃：至少 67 万新币</li><li>总计：约 69 万新币</li></ul><p>推荐下 Grammarly for Chrome，在写邮件和文档时可以快速发现并纠正语法错误，对提升英文书写能力非常有帮助。我自己也是第一次开始深度使用 MacBook，记录一些简单的入门过程在 Blog 中，也可以做下参考。</p><p><a href="https://wsgzao.github.io/post/macbook/">MacBook macOS 从小白到入门</a></p><p><strong> 养老政策 </strong></p><p>新加坡不养闲人，你在新加坡的食阁 (Food Court) 仔细观察过就会发现几乎所有打扫卫生的都是老年人，和中国相比新加坡的养老金 CPF 是交多少退多少，不会被平均，所以更多的本地人会提前了解基金股票保险和投资房地产等方式来为自己养老。新加坡、日本、韩国等国家的老龄化问题已经凸显，我们都可以看到未来国内严重的老龄化趋势，谁又能独善其身呢？</p><p>新加坡政府因为楼市过热而提高印花税的闪电行动，中国也吹响了全球征税的集结号，无论身在哪里我们始终躲不开政治不是吗？</p><h2 id="日用品推荐"><a href="#日用品推荐" class="headerlink" title="日用品推荐"></a>日用品推荐</h2><blockquote><p>回顾来新加坡前后的经历，我希望自己分享的一部分实用建议和商品可以帮助大家更好的适应新加坡生活。如果你不喜欢网易严选和网易考拉可以选择性跳过。</p></blockquote><p>我自己携带并且大家都能买到的产品分享：</p><ol><li>药品：我带的是泰诺和夫西地酸乳膏，这边初期看病成本还是比较高，建议最好带一些板蓝根、急用的抗生素、抗过敏药及自己习惯的常用药，如胃药、哮喘喷剂等等。</li><li>其他综合的日用品，我是分 3 批带过来的，这里按照重要性分成 2 部分来推荐，大部分来自网易严选和网易考拉工厂店，关于原因我也记录了自己的观点。</li></ol><p><a href="https://wsgzao.github.io/post/buy/">我的线上线下购物变迁史</a></p><h3 id="必备推荐"><a href="#必备推荐" class="headerlink" title="必备推荐"></a>必备推荐</h3><blockquote><p>我就只推荐适用于男同胞的产品了，虽然我妻子也是在严选和工厂店买，如果各位有需求我日后可以再补充，她的东西实在是多</p></blockquote><p>[手机 / 耳机 / 智能穿戴无推荐]<br>Follow Your Heart</p><p><a href="http://163.lu/I8OGX1" target="_blank" rel="noopener">28 寸 纯 PC“铝框”（非全铝）拉杆箱</a><br>新秀丽制造商，但是怎么看怎么觉得更像是日默瓦(RIMOWA)，虽然有小米 90 分旅行箱但 20 寸太小，为了追求更大容量就买了这款，使用感受非常可靠，五星推荐</p><p>[双肩包无推荐]<br>我自己背的是一加(OnePlus)1 代和 2 代，她带的是 Longchamp 和 Doughnut，都是多年的老包了</p><p><a href="http://wx.uniir.com/" target="_blank" rel="noopener">独美</a><br>眼镜我和妻子每人配了 2 副做主备, 我们买的都是来自京东众筹的独美，3.3g 镜架加镜片只要 398。小米有品太阳镜带了 1 副，不过来新加坡后我从来没佩戴过</p><p>[晴雨伞没有推荐]<br>新加坡经常短时暴雨，平日基本阳光明媚，建议携带一把晴雨伞，既能遮阳、又能挡雨。我自己带了 1 把天堂和 1 把小米晴雨两用，因为比较懒所以买的都是自动伞。只是可惜了 RealBrella 锐乐 不对称设计长柄伞留在家里吃灰，我好喜欢这款大红色啊。</p><p>[跑鞋无推荐]<br>自己带了 2 双旧鞋过来，严选上买过一双类似 Adidas UltraBoost 的鞋子还不错。我妻子带了 Asics GEL-Kayano 24，无论在网易考拉买还是在新加坡本地买 Asics 都很便宜，而且新加坡 NIKE EPIC REACT 新款居然只要 130 + 新币，这也是让我觉得很神奇</p><p><a href="http://163.lu/050tb0" target="_blank" rel="noopener">两带式男女款软木拖鞋 2.0</a><br><a href="http://163.lu/SpQlo1" target="_blank" rel="noopener">两带式男 / 女款拖鞋</a><br>Birkenstock 集团制造商，我特地在国内和新加坡的专卖店对比过，自己穿了 1 代非常舒服然后又买了 2 代，因为在新加坡基本是拖鞋 + 短裤的夏装，如果你的工作要求正装注意带好皮鞋和衣服套装</p><p><a href="http://163.lu/v4KrM2" target="_blank" rel="noopener">软弹速干男 / 女沐浴拖鞋</a><br>Crocs 制造商，浴室必备。本来想分享严选的人字拖，但不知道为什么严选把它下架了，反正我基本是放在室内穿，大家买自己觉得舒服的就好</p><p><a href="http://163.lu/CKQh21" target="_blank" rel="noopener">考拉工厂店 5 双 男士精梳棉防臭休闲袜</a><br>我在新加坡穿袜子的次数就和穿运动鞋的次数保持一致，除了健身和户外活动，几乎都是大拖鞋走起，上次登顶新加坡最高峰武吉知马山也是拖鞋，不过大家还是必要学我穿拖鞋爬山，以免自己给自己挖坑</p><p><a href="http://163.lu/uE5Uz3" target="_blank" rel="noopener">网易严选 男式丝滑莫代尔平角内裤</a><br><a href="http://163.lu/7ZOLU2" target="_blank" rel="noopener">考拉工厂店 男士莫代尔零束缚感内裤</a><br>我买过 CK 也买过网易严选和小米有品的纯棉内裤，但真正可以打动我的材质还是莫代尔，网易严选和网易考拉工厂店的两款我都买了，质感各有特色。严选上还有一款空气内裤，勇于尝鲜的同学要不试试？</p><p><a href="http://163.lu/aXBps0" target="_blank" rel="noopener">考拉工厂店 男式无缝插肩短袖 T 恤</a><br>我买了 3 件来自于严选和考拉工厂店的运动速干衣，但是从品质和舒适度上还是感觉不如自己再 Nike 实体店中购买的 Dri-FIT，考拉工厂店这款已经无限逼近了。小米有品也有很多运动衣，都是可以考虑的。我个人推荐备上 3 套运动衣，因为新加坡常年夏季，出汗是难免的，速干面料可以保持身体的舒适</p><p><a href="http://163.lu/Qxhpq2" target="_blank" rel="noopener">考拉工厂店 男式运动短裤</a><br>这款运动短裤我五星推荐，不仅做工精湛，口袋拉链等细节也非常到位，我自己直接买了 2 条，如果不是因为只有 2 种颜色，我还会继续买。另外还带了一条 Nike Dri-FIT 短裤，不过因为没有拉链所以来新加坡后基本没穿过，在上海的时候也仅仅是健身时穿的，现在因为设计问题算是彻底废了。</p><p><a href="http://163.lu/FPubq0" target="_blank" rel="noopener">考拉工厂店 男式针织轻薄运动裤</a><br>这款运动长裤我五星推荐，空气面料在夏天也依旧舒爽，内口袋拉链细节设计极赞，我索性买了 2 条一模一样的黑色款。新加坡平时上班我基本是穿这款长裤，原因和上面说过的新加坡室内空调温度较低有关，注意保暖。</p><p>[睡衣没有推荐]<br>我就直接把以前优衣库的全棉联名 T 恤全部带过来当睡衣穿了，有时候出门也可以穿哈</p><p>[外套没有推荐]<br>我自己带了 Under Armour 防风防雨衣，小米有品夜跑皮肤衣，小米有品防雨皮肤衣，除了 Under Armour 放在公司偶尔冷的时候会披一下，其它皮肤衣还没穿过。</p><p>[衬衫没有推荐]<br>我把原来公司定制的各种正装带过来了，可惜就入职时穿过一次，后来就是拖鞋加运动套装上班了</p><p><a href="http://163.lu/N7voR2" target="_blank" rel="noopener">成人款 高清时尚电镀泳镜</a><br><a href="http://163.lu/tDJJb2" target="_blank" rel="noopener">黑闪系列 硅胶防水泳帽 （男女通用）</a><br><a href="http://163.lu/Egc5c1" target="_blank" rel="noopener">男式基础泳裤</a><br>严选做了游泳装备也出乎我的意料，关键是和我之前买的 Speedo 相比那叫一个便宜啊，我本身是退休多年的游泳二级运动员，看似很简单的游泳装备严选的质量和价格都把控的不错，希望未来增加带度数的游泳镜。新加坡开放的普通游泳馆使用 EZ-link 刷卡，1.3 新币一次非常便宜，关键还多是训练使用的标准泳池人也少，定时清洁的规范让人放心。</p><p><a href="http://163.lu/rDAkF3" target="_blank" rel="noopener">全球通用转换插座</a><br>全球通用转换插座出国的人都应该明白是必备的，严选居然也做出来了，感觉又要干死一片坑爹厂商</p><p>[移动电源必须小米啊]<br>互联网上一直流传着这样的传说，小米什么产品都可以黑但是谁要是敢黑小米移动电源就被其他人反过来喷死。如果不是小米移动电源的出现干掉一众无良商家，现在市场上还不知道有多少人会受到低劣电池爆炸的影响，小米移动电源是真正用产品说话赢得用户口碑的最佳案例之一。我自己买的是紫米新款，我妻子买了一个超薄款就为了好看，哎</p><p><a href="http://163.lu/4ehYt4" target="_blank" rel="noopener">3 头浮动式电动剃须刀</a><br>科技类产品其实很想支持小米，可惜小米生态链不给力，就先用着严选高性价比的剃须刀好了</p><p><a href="http://163.lu/5cpvU0" target="_blank" rel="noopener">THREE SEVEN/777 进口指甲刀便携 4 件套 指甲剪小套装 三色可选</a><br>被淘宝坑过电动指甲刀和匠技指甲刀，也被严选坑过过于简约的指甲刀，没想到最后还是要选择韩国原装进口的 777 牌 4 件套，我以前不了解斜口指甲刀，后来才发现这货是剪脚指甲的神器啊，我以前剪脚指甲是有多痛苦哇</p><p><a href="http://163.lu/RNu3A1" target="_blank" rel="noopener">8 件装 折叠多功能衣架</a><br><a href="http://163.lu/dtCu31" target="_blank" rel="noopener">18 头多功能晾衣架</a><br>必备推荐，折叠携带很方便，18 头多功能晾衣架晾衣服的时候一个顶百，我都差点可以不用普通衣架了</p><p><a href="http://163.lu/pAmCc4" target="_blank" rel="noopener">旅行分装瓶套装</a><br>洗护用品我建议用分装瓶或者带最小包装的出国，因为这些日常用品本身价值不高但分量重，在当地超市购买就好了，除非你非常在意使用某些品牌</p><p><a href="http://163.wyh5.top/OsArG4" target="_blank" rel="noopener">考拉工厂店 智能清洁电动牙刷</a><br>我给父母买的也是同款，建议再带上 2 个以上刷头。如果你之前从来没有使用过电动牙刷，非常建议你尝试，清洁牙齿更加彻底和方便，爱上之后就无法回到过去手动刷牙啦</p><p><a href="http://163.lu/H03jR2" target="_blank" rel="noopener">电动式硅胶洁面仪</a><br>我还记得我给妻子送的第一个礼物就是 FOREO LUNA MINI2 Plus，这个也是我在网易考拉上买的第一个商品，当时这款网红洁面仪被招商银行垄断，没办法直接购买，逼着自己了解到网易考拉在国内海淘市场的领先地位，也算是缘分吧。现在严选自己也推出类似洁面仪才十分之一的价格，买个给自己吧</p><p><a href="http://163.lu/ZKkRz3" target="_blank" rel="noopener">韩国制造 硅胶洁面刷</a><br><a href="http://163.lu/RJS3r0" target="_blank" rel="noopener">韩国制造 硅胶沐浴按摩手套</a><br><a href="http://163.lu/Rv9KI2" target="_blank" rel="noopener">韩国制造 多功能硅胶清洁刷</a><br>严选从韩国引进来相当专业的硅胶产品制造商，其中这 3 件小东西在洗脸，沐浴，洗碗上极大的提升了我的幸福感，强烈推荐人手一件</p><p><a href="http://163.lu/womXA3" target="_blank" rel="noopener">皇室御用超柔毛巾</a><br>内野制造商，这是网易严选当年备受争议的产品之一，我不知道内野是什么，但我只知道这款毛巾确实舒服</p><p>[床单 / 床笠 / 被套 / 毯子]<br>我从家里带了 2 套旧的，然后又从考拉工厂店买了外国人比较喜欢的床笠，因为晚上睡觉都是关闭空调，没有被子就一层薄薄的毯子，一般租房子房东都会提供床板和床上用品，如果你不习惯或者运气不好，在新加坡本地宜家采购也很方便的</p><p><a href="http://163.lu/VY4v73" target="_blank" rel="noopener">考拉工厂店 100% 桑蚕丝双面美肤枕套</a><br>我和妻子一人一个，带过去非常方便，水洗之后也没有出现质量问题，面料实在丝滑</p><p><a href="http://163.lu/pBhg61" target="_blank" rel="noopener">AQR 创口贴</a><br>在新加坡常年夏装，像脚和皮肤很容易受伤，带上一盒以备不时之需</p><h3 id="可选推荐"><a href="#可选推荐" class="headerlink" title="可选推荐"></a>可选推荐</h3><blockquote><p>分享自己购买过的东西真的好累，没想到不知不觉买了这么多，但是能够对自己派上用场没有浪费也值了</p></blockquote><p><a href="http://163.lu/23D8k4" target="_blank" rel="noopener">泰国制造 天然乳胶枕 护颈优眠 升级抗菌</a><br>我买过记忆枕，空气枕，乳胶枕还有各种酒店的枕头体验。小米 8H 的乳胶枕和网易严选的相比我更推荐严选的升级款，这也属于严选的爆款商品了</p><p><a href="http://163.lu/6iWZ74" target="_blank" rel="noopener">日式多功能颈枕 舒滑款</a><br>第一次看到 MUJI 的微粒子 U 型枕就被深深吸引，现在小米和网易严选都有同样类型的，我自己购买的是光滑面料，毕竟新加坡非常热，原来在国内我还买过一个经典款</p><p><a href="http://163.lu/9iYPC2" target="_blank" rel="noopener">舒眠真丝眼罩</a><br>折叠床是带不过去了，很早之前买过零听眼罩，用过真丝眼罩后才明白丝的舒服，就和上面买真丝枕套的理由一样。如果你对声音也很敏感，除了戴耳机以外，再购置几副耳塞也是不错的选择</p><p>[鼻毛修剪器]<br>没有看到小米和严选有，看了张大妈的评测最后淘宝购入松下 ER-BN50，虽然不知道和国产的飞科相比有多大优势，至少用下来还行吧</p><p>[洗护 / 牙膏 / 洗面奶 / 防晒霜]<br>我推荐带上便携装，其实选择什么不重要，重要的是理解背后的成分，我唯一推荐的就是自己在上海和新加坡都长期使用的<a href="http://163.lu/lWFct2" target="_blank" rel="noopener"> 熊野油脂 无硅弱酸性马油洗发水</a></p><p><a href="http://163.lu/M8IW72" target="_blank" rel="noopener">Swisse 男士复合维生素 120 片 / 瓶</a><br>加上我在上海之前吃的半瓶，一共带了 2.5 瓶过去，现在回头看这个决定是非常明智的，因为新加坡本地蔬菜和水果不算便宜，关键是营养品价格奇高，一小瓶都要五六十新币。营养品不能代替药物，更不能代替你规律的饮食作息和身体锻炼，请记住这只是用来辅助身体营养平衡。我妻子还会购买 Swisse 的女士复合维生素片 + 葡萄籽和 Unichi 玫瑰果 + 葡萄籽</p><p><a href="http://163.lu/PsXds0" target="_blank" rel="noopener">考拉工厂店 便携式手持蒸汽挂烫机</a><br>我妻子要买的，方便小巧，出席正式场合会排上用场</p><p><a href="http://163.lu/WXcRz2" target="_blank" rel="noopener">考拉工厂店 强力除螨吸尘器</a><br>我没同意我妻子买养生壶和破壁料理机，原本这么大个头的除螨仪其实也是拒绝的，但是在阅读过网易浪潮工作室的一篇《中国人为什么爱晒被子》后我认为在美国或者韩国流行的洗衣烘干一体机可能不适合现在的我们，但是我不希望自己身边的人因为痘痘或者皮肤细菌感染而受到伤害，既然网易工厂店降低了除螨仪的购买门槛，为什么不尝试改变下自己的习惯呢？</p><p><a href="http://163.lu/oCJS84" target="_blank" rel="noopener">春风 TryFun 超润滑避孕套</a><br>好孩子就不要点击了，尤其是不要淘气切换到春风 TryFun 系列</p><h2 id="工作招聘"><a href="#工作招聘" class="headerlink" title="工作招聘"></a>工作招聘</h2><p><img src="http://wx1.sinaimg.cn/large/7207510dgy1fv3qi3vd5jj20by0bymyh.jpg" alt=""></p><p><a href="https://docs.qq.com/doc/BqI21X2yZIht1vALQM0Mf73G24se4c4wv0v31gLPCn3U4vsH0IQmKC2Cjyb927Q9Ok0PRkXB3WYpg82K1GXC4" target="_blank" rel="noopener">中金所技术公司最新招聘岗位</a></p><p><a href="https://docs.qq.com/doc/B80RhZ2ZATLC0DsTVf3kFjA01XR7Mg1x8BG42bVOrs1E5zYc01HWAZ0vDTku39xOdU3cS99t2" target="_blank" rel="noopener">Sea Job Openings</a></p><p>这是我第一次创建微信个人公众号，不会向大家推送文章，只是作为信息分享的渠道。我和上家公司以及现在公司的人力关系都还不错，在征得允许的前提下给大家分享上海和新加坡这两家公司目前的内部招聘动态，上海的职位真的的是进去的多出来的少，如果你希望相对稳定那这是很不错的机会。新加坡这边我会跟随公司内部招聘邮件每半个月左右更新，工作语言以英文为主，周围的中国同事还比较多，不用太担心在新加坡的语言关。这两家公司的介绍都可以在互联网上轻松获取，如果你相信自己的能力可以直接投递简历至文章内的联系方式。努力奋斗未必都能达到预想的结果，但至少你做出了自己的选择。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><blockquote><p>如果你无法访问 github.io 的原文可以查看知乎专栏的文章，如果你想了解我前往新加坡的渠道可以看微信公众号的提炼内容</p></blockquote><p>从国内跳槽至新加坡工作的经验分享<br><a href="https://zhuanlan.zhihu.com/p/44280335" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/44280335</a></p><p>从国内跳槽至新加坡的最初半年，我都经历了什么？<br><a href="https://mp.weixin.qq.com/s/gDntToVrvFoQbyfrNf7XqA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/gDntToVrvFoQbyfrNf7XqA</a></p><p>从小到大我都没有离开过父母的保护，感谢你们的理解和支持，也同样感谢老婆的付出和双方家庭的包容。<br>引用领结婚证那天分享在朋友圈的一句话作为结语: I never grow up, but I never stop growing.</p>]]></content>
    
    <summary type="html">
    
      为帮助大家玩转新加坡、快速适应当地生活
    
    </summary>
    
      <category term="生活 | Life" scheme="https://wsgzao.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
  </entry>
  
  <entry>
    <title>在浏览器输入 URL 回车之后发生了什么</title>
    <link href="https://wsgzao.github.io/post/url/"/>
    <id>https://wsgzao.github.io/post/url/</id>
    <published>2019-10-16T05:34:32.000Z</published>
    <updated>2019-10-16T07:15:20.026Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>相信大家作为求职者或者面试官大概率都会遇到一道古老的面试问题：当你在浏览器中输入 google.com 并且按下回车之后发生了什么？这个问题可以考察的面非常广，针对不同岗位侧重点也不一样，更重要的是可以根据对方的回答挖掘知识掌握深度。本文授权转载自 @4Ark 的 Blog，原文虽然偏向前端但作者整理的内容已经非常全面了，如果各位想深入了解可以访问参考文档。</p><blockquote><p>在浏览器输入 URL 回车之后发生了什么</p></blockquote><hr><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 10 月 16 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/url/">https://wsgzao.github.io/post/url/</a></p><p><strong> 授权转载 </strong></p><p><a href="https://4ark.me/post/b6c7c0a2.html" target="_blank" rel="noopener">在浏览器输入 URL 回车之后发生了什么（超详细版）</a></p><hr><h2 id="转载原文前言"><a href="#转载原文前言" class="headerlink" title="转载原文前言"></a>转载原文前言</h2><p>这个问题已经是老生常谈了，更是经常被作为面试的压轴题出现，网上也有很多文章，但最近闲的无聊，然后就自己做了一篇笔记，感觉比之前理解更透彻了。</p><p>这篇笔记是我这两天看了数十篇文章总结出来的，所以相对全面一点，但由于我是做前端的，所以会比较重点分析浏览器渲染页面那一部分，至于其他部分我会罗列出关键词，感兴趣的可以自行查阅，</p><p><strong> 注意：</strong> 本文的步骤是建立在，请求的是一个简单的 HTTP 请求，没有 HTTPS、HTTP2、最简单的 DNS、没有代理、并且服务器没有任何问题的基础上，尽管这是不切实际的。</p><h2 id="大致流程"><a href="#大致流程" class="headerlink" title="大致流程"></a><a href="# 大致流程" title="大致流程"></a>大致流程</h2><ol><li>URL 解析</li><li>DNS 查询</li><li>TCP 连接</li><li>处理请求</li><li>接受响应</li><li>渲染页面</li></ol><h2 id="一、URL-解析"><a href="#一、URL-解析" class="headerlink" title="一、URL 解析"></a><a href="# 一、URL - 解析" title="一、URL 解析"></a>一、URL 解析</h2><p><strong> 地址解析：</strong></p><p>首先判断你输入的是一个合法的 URL 还是一个待搜索的关键词，并且根据你输入的内容进行自动完成、字符编码等操作。</p><p><strong>HSTS</strong></p><p>由于安全隐患，会使用 HSTS 强制客户端使用 HTTPS 访问页面。详见：<a href="https://www.barretlee.com/blog/2015/10/22/hsts-intro/" target="_blank" rel="noopener">你所不知道的 HSTS</a>。</p><p><strong> 其他操作 </strong></p><p>浏览器还会进行一些额外的操作，比如安全检查、访问限制（之前国产浏览器限制 996.icu）。</p><p><strong> 检查缓存 </strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191016150329.png" alt=""></p><h2 id="二、DNS-查询"><a href="#二、DNS-查询" class="headerlink" title="二、DNS 查询"></a><a href="# 二、DNS - 查询" title="二、DNS 查询"></a>二、DNS 查询</h2><p><strong> 基本步骤 </strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191016150347.png" alt=""></p><p><strong>1. 浏览器缓存 </strong></p><p>浏览器会先检查是否在缓存中，没有则调用系统库函数进行查询。</p><p><strong>2. 操作系统缓存 </strong></p><p>操作系统也有自己的 DNS 缓存，但在这之前，会向检查域名是否存在本地的 Hosts 文件里，没有则向 DNS 服务器发送查询请求。</p><p><strong>3. 路由器缓存 </strong></p><p>路由器也有自己的缓存。</p><p><strong>4. ISP DNS 缓存 </strong></p><p>ISP DNS 就是在客户端电脑上设置的首选 DNS 服务器，它们在大多数情况下都会有缓存。</p><p><strong> 根域名服务器查询 </strong></p><p>在前面所有步骤没有缓存的情况下，本地 DNS 服务器会将请求转发到互联网上的根域，下面这个图很好的诠释了整个流程：</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191016150404.png" alt=""></p><blockquote><p>根域名服务器：<a href="https://zh.wikipedia.org/wiki/%E6%A0%B9%E7%B6%B2%E5%9F%9F%E5%90%8D%E7%A8%B1%E4%BC%BA%E6%9C%8D%E5%99%A8" target="_blank" rel="noopener">维基百科</a></p></blockquote><p><strong> 需要注意的点 </strong></p><ol><li>递归方式：一路查下去中间不返回，得到最终结果才返回信息（浏览器到本地 DNS 服务器的过程）</li><li>迭代方式，就是本地 DNS 服务器到根域名服务器查询的方式。</li><li>什么是 DNS 劫持</li><li>前端 dns-prefetch 优化</li></ol><h2 id="三、TCP-连接"><a href="#三、TCP-连接" class="headerlink" title="三、TCP 连接"></a><a href="# 三、TCP - 连接" title="三、TCP 连接"></a>三、TCP 连接</h2><p>TCP/IP 分为四层，在发送数据时，每层都要对数据进行封装：</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191016150420.png" alt=""></p><h3 id="1-应用层：发送-HTTP-请求"><a href="#1-应用层：发送-HTTP-请求" class="headerlink" title="1. 应用层：发送 HTTP 请求 "></a><a href="#1 - 应用层：发送 - HTTP - 请求" title="1. 应用层：发送 HTTP 请求"></a><strong>1. 应用层：发送 HTTP 请求 </strong></h3><p>在前面的步骤我们已经得到服务器的 IP 地址，浏览器会开始构造一个 HTTP 报文，其中包括：</p><ul><li>请求报头（Request Header）：请求方法、目标地址、遵循的协议等等</li><li>请求主体（其他参数）</li></ul><p>其中需要注意的点：</p><ul><li>浏览器只能发送 GET、POST 方法，而打开网页使用的是 GET 方法</li></ul><h3 id="2-传输层：TCP-传输报文"><a href="#2-传输层：TCP-传输报文" class="headerlink" title="2. 传输层：TCP 传输报文 "></a><a href="#2 - 传输层：TCP - 传输报文" title="2. 传输层：TCP 传输报文"></a><strong>2. 传输层：TCP 传输报文 </strong></h3><p>传输层会发起一条到达服务器的 TCP 连接，为了方便传输，会对数据进行分割（以报文段为单位），并标记编号，方便服务器接受时能够准确地还原报文信息。</p><p>在建立连接前，会先进行 TCP 三次握手。</p><blockquote><p>关于 TCP/IP 三次握手，网上已经有很多段子和图片生动地描述了。</p><p>相关知识点：</p><ol><li>SYN 泛洪攻击</li></ol></blockquote><h3 id="3-网络层：IP-协议查询-Mac-地址"><a href="#3-网络层：IP-协议查询-Mac-地址" class="headerlink" title="3. 网络层：IP 协议查询 Mac 地址 "></a><a href="#3 - 网络层：IP 协议查询 Mac 地址" title="3. 网络层：IP 协议查询 Mac 地址"></a><strong>3. 网络层：IP 协议查询 Mac 地址 </strong></h3><p>将数据段打包，并加入源及目标的 IP 地址，并且负责寻找传输路线。</p><p>判断目标地址是否与当前地址处于同一网络中，是的话直接根据 Mac 地址发送，否则使用路由表查找下一跳地址，以及使用 ARP 协议查询它的 Mac 地址。</p><blockquote><p>注意：在 OSI 参考模型中 ARP 协议位于链路层，但在 TCP/IP 中，它位于网络层。</p></blockquote><h3 id="4-链路层：以太网协议"><a href="#4-链路层：以太网协议" class="headerlink" title="4. 链路层：以太网协议 "></a><a href="#4 - 链路层：以太网协议" title="4. 链路层：以太网协议"></a><strong>4. 链路层：以太网协议 </strong></h3><p><strong> 以太网协议 </strong></p><p>根据以太网协议将数据分为以 “帧” 为单位的数据包，每一帧分为两个部分：</p><ul><li>标头：数据包的发送者、接受者、数据类型</li><li>数据：数据包具体内容</li></ul><p><strong>Mac 地址 </strong></p><p>以太网规定了连入网络的所有设备都必须具备 “网卡” 接口，数据包都是从一块网卡传递到另一块网卡，网卡的地址就是 Mac 地址。每一个 Mac 地址都是独一无二的，具备了一对一的能力。</p><p><strong> 广播 </strong></p><p>发送数据的方法很原始，直接把数据通过 ARP 协议，向本网络的所有机器发送，接收方根据标头信息与自身 Mac 地址比较，一致就接受，否则丢弃。</p><p><strong> 注意 </strong>：接收方回应是单播。</p><blockquote><p>相关知识点：</p><ol><li>ARP 攻击</li></ol></blockquote><h4 id="服务器接受请求"><a href="#服务器接受请求" class="headerlink" title=" 服务器接受请求 "></a><a href="# 服务器接受请求" title="服务器接受请求"></a><strong> 服务器接受请求 </strong></h4><p>接受过程就是把以上步骤逆转过来，参见上图。</p><h2 id="四、服务器处理请求"><a href="#四、服务器处理请求" class="headerlink" title="四、服务器处理请求"></a><a href="# 四、服务器处理请求" title="四、服务器处理请求"></a>四、服务器处理请求</h2><p><strong> 大致流程 </strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191016150439.png" alt=""></p><p><strong>HTTPD</strong></p><p>最常见的 HTTPD 有 Linux 上常用的 Apache 和 Nginx，以及 Windows 上的 IIS。</p><p>它会监听得到的请求，然后开启一个子进程去处理这个请求。</p><p><strong> 处理请求 </strong></p><p>接受 TCP 报文后，会对连接进行处理，对 HTTP 协议进行解析（请求方法、域名、路径等），并且进行一些验证：</p><ul><li>验证是否配置虚拟主机</li><li>验证虚拟主机是否接受此方法</li><li>验证该用户可以使用该方法（根据 IP 地址、身份信息等）</li></ul><p><strong> 重定向 </strong></p><p>假如服务器配置了 HTTP 重定向，就会返回一个 <code>301</code> 永久重定向响应，浏览器就会根据响应，重新发送 HTTP 请求（重新执行上面的过程）。</p><blockquote><p>关于更多：<a href="https://www.cnblogs.com/workest/p/3891321.html" target="_blank" rel="noopener">详见这篇文章</a></p></blockquote><p><strong>URL 重写 </strong></p><p>然后会查看 URL 重写规则，如果请求的文件是真实存在的，比如图片、html、css、js 文件等，则会直接把这个文件返回。</p><p>否则服务器会按照规则把请求重写到 一个 REST 风格的 URL 上。</p><p>然后根据动态语言的脚本，来决定调用什么类型的动态文件解释器来处理这个请求。</p><p>以 PHP 语言的 MVC 框架举例，它首先会初始化一些环境的参数，根据 URL 由上到下地去匹配路由，然后让路由所定义的方法去处理请求。</p><h2 id="五、浏览器接受响应"><a href="#五、浏览器接受响应" class="headerlink" title="五、浏览器接受响应"></a><a href="# 五、浏览器接受响应" title="五、浏览器接受响应"></a>五、浏览器接受响应</h2><p>浏览器接收到来自服务器的响应资源后，会对资源进行分析。</p><p>首先查看 Response header，根据不同状态码做不同的事（比如上面提到的重定向）。</p><p>如果响应资源进行了压缩（比如 gzip），还需要进行解压。</p><p>然后，对响应资源做缓存。</p><p>接下来，根据响应资源里的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types" target="_blank" rel="noopener">MIME</a> 类型去解析响应内容（比如 HTML、Image 各有不同的解析方式）。</p><h2 id="六、渲染页面"><a href="#六、渲染页面" class="headerlink" title="六、渲染页面"></a><a href="# 六、渲染页面" title="六、渲染页面"></a>六、渲染页面</h2><p><strong> 浏览器内核 </strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191016150457.png" alt=""></p><p>不同的浏览器内核，渲染过程也不完全相同，但大致流程都差不多。</p><p><strong> 基本流程 </strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191016150513.png" alt=""></p><h3 id="1-HTML-解析"><a href="#1-HTML-解析" class="headerlink" title="1.HTML 解析 "></a><a href="#1-HTML - 解析" title="1.HTML 解析"></a><strong>1.HTML 解析 </strong></h3><p>首先要知道浏览器解析是从上往下一行一行地解析的。</p><p>解析的过程可以分为四个步骤：</p><p><strong>1. 解码（encoding）</strong></p><p>传输回来的其实都是一些二进制字节数据，浏览器需要根据文件指定编码（例如 UTF-8）转换成字符串，也就是 HTML 代码。</p><p><strong>2. 预解析（pre-parsing）</strong></p><p>预解析做的事情是提前加载资源，减少处理时间，它会识别一些会请求资源的属性，比如 <code>img</code> 标签的 <code>src</code> 属性，并将这个请求加到请求队列中。</p><p><strong>3. 符号化（Tokenization）</strong></p><p>符号化是词法分析的过程，将输入解析成符号，HTML 符号包括，开始标签、结束标签、属性名和属性值。</p><p>它通过一个状态机去识别符号的状态，比如遇到 <code>&lt;</code>，<code>&gt;</code> 状态都会产生变化。</p><p><strong>4. 构建树（tree construction）</strong></p><blockquote><p>注意：符号化和构建树是并行操作的，也就是说只要解析到一个开始标签，就会创建一个 DOM 节点。</p></blockquote><p>在上一步符号化中，解析器获得这些标记，然后以合适的方法创建 <code>DOM</code> 对象并把这些符号插入到 <code>DOM</code> 对象中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Web page parsing&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;Web page parsing&lt;/h1&gt;</span><br><span class="line">        &lt;p&gt;This is an example Web page.&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191016150529.png" alt=""></p><p><strong> 浏览器容错进制 </strong></p><p>你从来没有在浏览器看过类似” 语法无效” 的错误，这是因为浏览器去纠正错误的语法，然后继续工作。</p><p><strong> 事件 </strong></p><p>当整个解析的过程完成以后，浏览器会通过 <code>DOMContentLoaded</code> 事件来通知 <code>DOM</code> 解析完成。</p><h3 id="2-CSS-解析"><a href="#2-CSS-解析" class="headerlink" title="2. CSS 解析"></a><a href="#2-CSS - 解析" title="2. CSS 解析"></a>2. CSS 解析</h3><p>一旦浏览器下载了 CSS，CSS 解析器就会处理它遇到的任何 CSS，根据 <a href="https://drafts.csswg.org/css-syntax-3/" target="_blank" rel="noopener">语法规范</a> 解析出所有的 CSS 并进行标记化，然后我们得到一个规则表。</p><p><strong>CSS 匹配规则 </strong></p><p>在匹配一个节点对应的 CSS 规则时，是按照从右到左的顺序的，例如：<code>div p { font-size :14px }</code> 会先寻找所有的 <code>p</code> 标签然后判断它的父元素是否为 <code>div</code>。</p><p>所以我们写 CSS 时，尽量用 id 和 class，千万不要过度层叠。</p><h3 id="3-渲染树"><a href="#3-渲染树" class="headerlink" title="3. 渲染树"></a><a href="#3 - 渲染树" title="3. 渲染树"></a>3. 渲染树</h3><p>其实这就是一个 DOM 树和 CSS 规则树合并的过程。</p><blockquote><p>注意：渲染树会忽略那些不需要渲染的节点，比如设置了 <code>display:none</code> 的节点。</p></blockquote><p><strong> 计算 </strong></p><p>通过计算让任何尺寸值都减少到三个可能之一：<code>auto</code>、百分比、px，比如把 <code>rem</code> 转化为 <code>px</code>。</p><p><strong> 级联 </strong></p><p>浏览器需要一种方法来确定哪些样式才真正需要应用到对应元素，所以它使用一个叫做 <code>specificity</code> 的公式，这个公式会通过：</p><ol><li>标签名、class、id</li><li>是否内联样式</li><li><code>!important</code></li></ol><p>然后得出一个权重值，取最高的那个。</p><p><strong> 渲染阻塞 </strong></p><p>当遇到一个 <code>script</code> 标签时，DOM 构建会被暂停，直至脚本完成执行，然后继续构建 DOM 树。</p><p>但如果 JS 依赖 CSS 样式，而它还没有被下载和构建时，浏览器就会延迟脚本执行，直至 CSS Rules 被构建。</p><p>所有我们知道：</p><ul><li>CSS 会阻塞 JS 执行</li><li>JS 会阻塞后面的 DOM 解析</li></ul><p>为了避免这种情况，应该以下原则：</p><ul><li>CSS 资源排在 JavaScript 资源前面</li><li>JS 放在 HTML 最底部，也就是 <code>&lt;/body&gt;</code> 前</li></ul><p>另外，如果要改变阻塞模式，可以使用 defer 与 async，详见：<a href="https://github.com/xiaoyu2er/blog/issues/8" target="_blank" rel="noopener">这篇文章</a></p><h4 id="4-布局与绘制"><a href="#4-布局与绘制" class="headerlink" title="4. 布局与绘制"></a><a href="#4 - 布局与绘制" title="4. 布局与绘制"></a>4. 布局与绘制</h4><p>确定渲染树种所有节点的几何属性，比如：位置、大小等等，最后输入一个盒子模型，它能精准地捕获到每个元素在屏幕内的准确位置与大小。</p><p>然后遍历渲染树，调用渲染器的 paint () 方法在屏幕上显示其内容。</p><h4 id="5-合并渲染层"><a href="#5-合并渲染层" class="headerlink" title="5. 合并渲染层 "></a><a href="#5 - 合并渲染层" title="5. 合并渲染层"></a><strong>5. 合并渲染层 </strong></h4><p>把以上绘制的所有图片合并，最终输出一张图片。</p><h4 id="6-回流与重绘"><a href="#6-回流与重绘" class="headerlink" title="6. 回流与重绘 "></a><a href="#6 - 回流与重绘" title="6. 回流与重绘"></a><strong>6. 回流与重绘 </strong></h4><p><strong> 回流 (reflow)</strong></p><p>当浏览器发现某个部分发现变化影响了布局时，需要倒回去重新渲染，会从 <code>html</code> 标签开始递归往下，重新计算位置和大小。</p><p>reflow 基本是无法避免的，因为当你滑动一下鼠标、resize 窗口，页面就会产生变化。</p><p><strong> 重绘 (repaint)</strong></p><p>改变了某个元素的背景色、文字颜色等等不会影响周围元素的位置变化时，就会发生重绘。</p><p>每次重绘后，浏览器还需要合并渲染层并输出到屏幕上。</p><p>回流的成本要比重绘高很多，所以我们应该尽量避免产生回流。</p><p>比如：</p><ul><li><code>display:none</code> 会触发回流，而 <code>visibility:hidden</code> 只会触发重绘。</li></ul><h4 id="7-JavaScript-编译执行"><a href="#7-JavaScript-编译执行" class="headerlink" title="7. JavaScript 编译执行"></a><a href="#7-JavaScript - 编译执行" title="7. JavaScript 编译执行"></a>7. JavaScript 编译执行</h4><p><strong> 大致流程 </strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191016150545.png" alt=""></p><p>可以分为三个阶段：</p><h4 id="1-词法分析"><a href="#1-词法分析" class="headerlink" title="1. 词法分析 "></a><a href="#1 - 词法分析" title="1. 词法分析"></a><strong>1. 词法分析 </strong></h4><p>JS 脚本加载完毕后，会首先进入语法分析阶段，它首先会分析代码块的语法是否正确，不正确则抛出 “语法错误”，停止执行。</p><p>几个步骤：</p><ul><li>分词，例如将 <code>var a = 2</code>，，分成 <code>var</code>、<code>a</code>、<code>=</code>、<code>2</code> 这样的词法单元。</li><li>解析，将词法单元转换成抽象语法树（AST）。</li><li>代码生成，将抽象语法树转换成机器指令。</li></ul><h4 id="2-预编译"><a href="#2-预编译" class="headerlink" title="2. 预编译 "></a><a href="#2 - 预编译" title="2. 预编译"></a><strong>2. 预编译 </strong></h4><p>JS 有三种运行环境：</p><ul><li>全局环境</li><li>函数环境</li><li>eval</li></ul><p>每进入一个不同的运行环境都会创建一个对应的执行上下文，根据不同的上下文环境，形成一个函数调用栈，栈底永远是全局执行上下文，栈顶则永远是当前执行上下文。</p><p><strong> 创建执行上下文 </strong></p><p>创建执行上下文的过程中，主要做了以下三件事：</p><ul><li>创建变量对象<ul><li>参数、函数、变量</li></ul></li><li>建立作用域链<ul><li>确认当前执行环境是否能访问变量</li></ul></li><li>确定 This 指向</li></ul><h4 id="3-执行"><a href="#3-执行" class="headerlink" title="3. 执行 "></a><a href="#3 - 执行" title="3. 执行"></a><strong>3. 执行 </strong></h4><p><strong>JS 线程 </strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191016150601.png" alt=""></p><p>虽然 JS 是单线程的，但实际上参与工作的线程一共有四个：</p><blockquote><p>其中三个只是协助，只有 JS 引擎线程是真正执行的</p></blockquote><ul><li>JS 引擎线程：也叫 JS 内核，负责解析执行 JS 脚本程序的主线程，例如 V8 引擎</li><li>事件触发线程：属于浏览器内核线程，主要用于控制事件，例如鼠标、键盘等，当事件被触发时，就会把事件的处理函数推进事件队列，等待 JS 引擎线程执行</li><li>定时器触发线程：主要控制 <code>setInterval</code> 和 <code>setTimeout</code>，用来计时，计时完毕后，则把定时器的处理函数推进事件队列中，等待 JS 引擎线程。</li><li>HTTP 异步请求线程：通过 XMLHttpRequest 连接后，通过浏览器新开的一个线程，监控 readyState 状态变更时，如果设置了该状态的回调函数，则将该状态的处理函数推进事件队列中，等待 JS 引擎线程执行。</li></ul><p><strong> 注：浏览器对同一域名的并发连接数是有限的，通常为 6 个。</strong></p><p><strong> 宏任务 </strong></p><p>分为：</p><ul><li>同步任务：按照顺序执行，只有前一个任务完成后，才能执行后一个任务</li><li>异步任务：不直接执行，只有满足触发条件时，相关的线程将该异步任务推进任务队列中，等待 JS 引擎主线程上的任务执行完毕时才开始执行，例如异步 Ajax、DOM 事件，setTimeout 等。</li></ul><p><strong> 微任务 </strong></p><p>微任务是 ES6 和 Node 环境下的，主要 API 有：<code>Promise</code>，<code>process.nextTick</code>。</p><p>微任务的执行在宏任务的同步任务之后，在异步任务之前。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191016150616.png" alt=""></p><p><strong> 代码例子 </strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">console.log(&apos;1&apos;); // 宏任务 同步</span><br><span class="line"></span><br><span class="line">setTimeout(function() &#123;</span><br><span class="line">    console.log(&apos;2&apos;); // 宏任务 异步</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">new Promise(function(resolve) &#123;</span><br><span class="line">    console.log(&apos;3&apos;); // 宏任务 同步</span><br><span class="line">    resolve();</span><br><span class="line">&#125;).then(function() &#123;</span><br><span class="line">    console.log(&apos;4&apos;) // 微任务</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">console.log(&apos;5&apos;) // 宏任务 同步</span><br></pre></td></tr></table></figure><p>以上代码输出顺序为：1,3,5,4,2</p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a><a href="# 参考文档" title="参考文档"></a>参考文档</h2><ul><li><a href="https://github.com/skyline75489/what-happens-when-zh_CN" target="_blank" rel="noopener">what-happens-when-zh_CN</a></li><li><a href="https://alistapart.com/article/tags-to-dom/" target="_blank" rel="noopener">Tags to DOM</a></li><li><a href="https://heyingye.github.io/2018/04/16/%E5%BD%BB%E5%BA%95%E7%90%86%E8%A7%A3%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/" target="_blank" rel="noopener">彻底理解浏览器的缓存机制</a></li><li><a href="https://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/#The_rendering_engine" target="_blank" rel="noopener">浏览器的工作原理：新式网络浏览器幕后揭秘</a></li><li><a href="https://blog.fundebug.com/2019/01/03/understand-browser-rendering/" target="_blank" rel="noopener">深入浅出浏览器渲染原理</a></li><li><a href="https://heyingye.github.io/2018/03/19/js%E5%BC%95%E6%93%8E%E7%9A%84%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89/#%E9%A2%84%E7%BC%96%E8%AF%91%E9%98%B6%E6%AE%B5" target="_blank" rel="noopener">js 引擎的执行过程（一）</a></li><li>还有一些找不到了。。。。。</li></ul>]]></content>
    
    <summary type="html">
    
      在浏览器输入URL回车之后发生了什么
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Google Chrome 浏览器插件和油猴脚本推荐</title>
    <link href="https://wsgzao.github.io/post/chrome-extensions/"/>
    <id>https://wsgzao.github.io/post/chrome-extensions/</id>
    <published>2019-10-09T03:59:49.000Z</published>
    <updated>2019-10-22T06:34:25.586Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191022143419.jpg" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>到了新加坡再也不用考虑科学上网的问题，加上 macOS 跨平台浏览器做得比较成熟的自然是 Google Chrome 和 Firefox，在 Windows 平台用了十几年的 Maxthon，期间也尝试过无数第三方浏览器，傲游浏览器努力改变着世界却也渐行渐远，有着同样命运的应该还包括我从 M8 用到 MX2 的魅族吧。回到 Google Chrome 浏览器插件和油猴脚本推荐正题，Google Chrome 除了最重要的快以外，更重要的是 Chrome Web Store 上一系列好用插件，我很喜欢 Chrome 简单纯粹的设计和极致的性能。在插件的推荐上分为 <code>通用</code> 和 <code>开发者</code> 两部分来写方便区分，大部分 Chrome 可用的插件 Firefox 也同样适用，如果有遗漏或有更好用的同类型插件和脚本欢迎留言分享。</p><blockquote><p>Google Chrome 浏览器插件和油猴脚本推荐</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 10 月 09 日 - 更新 OneTab、简悦、广告终结者、Copyfish、Awesome screenshot and screen video<br>2019 年 08 月 20 日 - 添加自用部分插件和脚本，增加谷粒 Chrome 插件英雄榜<br>2019 年 08 月 01 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/chrome-extensions/">https://wsgzao.github.io/post/chrome-extensions/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://github.com/zhaoolee/ChromeAppHeroes" target="_blank" rel="noopener">谷粒 Chrome 插件英雄榜</a></p><p><a href="https://www.pcmag.com/article/247971/the-100-best-free-google-chrome-extensions" target="_blank" rel="noopener">The 100 Best Free Google Chrome Extensions</a></p><p><a href="https://www.runningcheese.com/extensions" target="_blank" rel="noopener">Chrome Firefox 双修，2019 年度最喜欢浏览器拓展</a></p><p><a href="https://www.runningcheese.com/userscripts" target="_blank" rel="noopener">脚本里的 “赤兔”，2019 年度最喜欢油猴脚本</a></p><hr><h2 id="Chrome-插件推荐"><a href="#Chrome-插件推荐" class="headerlink" title="Chrome 插件推荐"></a>Chrome 插件推荐</h2><blockquote><p>以下链接大部分都是 Google Chrome Webstore，如果无法访问可以考虑从第三方下载到本地导入</p></blockquote><p><a href="https://chrome.google.com/webstore/category/extensions" target="_blank" rel="noopener">Chrome Web Store</a></p><p><a href="https://www.crx4chrome.com/" target="_blank" rel="noopener">Crx4Chrome</a></p><p><a href="https://chrome-extension-downloader.com/" target="_blank" rel="noopener">Chrome Extension Downloader</a></p><h3 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h3><p><a href="https://chrome.google.com/webstore/detail/simpleextmanager/kniehgiejgnnpgojkdhhjbgbllnfkfdk" target="_blank" rel="noopener">SimpleExtManager</a> - 我个人首推的管理插件小工具，对于插件控们一定灰常有帮助</p><p><a href="https://chrome.google.com/webstore/detail/ie-tab/hehijbfgiekmjfkfjpbkbammjbdenadd" target="_blank" rel="noopener">IE Tab</a> - 为了向下兼容那些没有与时俱进的网站，大多数时候我们只能选择妥协</p><p><a href="https://www.one-tab.com/" target="_blank" rel="noopener">OneTab</a> - 宣称节约 95% 内存的前提是静态网页，类似一个临时书签的记忆功能，习惯保留海量页面的朋友可以试试</p><p><a href="https://chrome.google.com/webstore/detail/undo-closed-tabs-button/ieehkmoiljghfkejgahoheemdjpdinml" target="_blank" rel="noopener">Undo Closed Tabs Button</a> - Google 原生取消了恢复网页的按钮的设计，你可以通过快捷键或者历史记录恢复，但这个小工具确实可以帮到我</p><p><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener">Tampermonkey</a> - 老牌的油猴管理工具，和 Violentmonkey 暴力猴相比哪款用得顺手选择哪个</p><p><a href="https://chrome.google.com/webstore/detail/cdonnmffkdaoajfknoeeecmchibpmkmg?hl=en" target="_blank" rel="noopener">沙拉查词 - 聚合词典划词翻译</a> - 我个人觉得这是目前 Chrome 划词翻译插件中体验最好的</p><p><a href="https://chrome.google.com/webstore/detail/grammarly-for-chrome/kbfnbcaeplbcioakkpcpgfkobkghlhen" target="_blank" rel="noopener">Grammarly for Chrome</a> - 智能检查英文语法拼写错误，在 Web 写邮件和文档时会发现它的重要价值</p><p><a href="https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc" target="_blank" rel="noopener">Evernote Web Clipper</a> - 中文称为印象笔记，平时会把优质的内容保存到 Evernote 中，虽然没有 OneNote 功能强大但胜在简单方便可跨平台同步</p><p><a href="https://chrome.google.com/webstore/detail/simpread-reader-view/ijllcpnolfcooahcekpamkbidhejabll" target="_blank" rel="noopener">简悦 - SimpRead</a> - 沉浸式阅读模式，还支持丰富的导出功能比如 Markdown/PDF 等</p><p><a href="https://chrome.google.com/webstore/detail/enable-right-click/gpeddepmnbmkjfnhifmggnjdggibjjkf" target="_blank" rel="noopener">破解右键锁</a> - 比 Enable Copy 更加强大，不过大众点评的评论好像无解</p><p><a href="https://chrome.google.com/webstore/detail/mbklgpngoohbbagagdfoccaclpdhgihd" target="_blank" rel="noopener">爱搜资源云盘助手</a> - 插件方便是方便，但是可能会涉及用户隐私数据，如果介意需要慎用类似插件</p><p><a href="https://chrome.google.com/webstore/detail/awesome-screenshot-screen/nlipoenfbbikpbjkfpfillcgkoblgpmj" target="_blank" rel="noopener">Awesome screenshot and screen video</a> - 网页截图 + 录屏，代替 FireShot</p><p><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="noopener">Proxy SwitchyOmega</a> - 轻松快捷地管理和切换多个代理设置</p><p><a href="https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm" target="_blank" rel="noopener">uBlock Origin</a> - 类似 Adblock Plus(ABP)，用于代替一款高效的网络请求过滤工具，占用极低的内存和 CPU，推荐额外添加适合自己的规则效果更佳，国内用户可以安装配置更简单的广告终结者</p><h3 id="开发者"><a href="#开发者" class="headerlink" title="开发者"></a>开发者</h3><p><a href="https://github.com/jaywcjlove/oscnews" target="_blank" rel="noopener">oscnews</a> - jaywcjlove 制作的新插件，目前我的主要用途是辅助新建标签页浏览开源中国更新资讯和 GitHub 趋势榜，从作者 TODO 计划来看，Github Start 管理和集成 octotree 部分功能都非常吸引人，加油</p><p><a href="https://github.com/zxlie/FeHelper" target="_blank" rel="noopener">FeHelper</a> - WEB 前端助手，All In One 的一个工具，包含多个独立小应用，比如：Json 工具、代码美化、代码压缩、二维码、Postman、markdown、网页油猴、便签笔记、信息加密与解密、随机密码生成、Crontab 等等</p><p><a href="https://github.com/openstyles/stylus" target="_blank" rel="noopener">Stylus</a> - Stylus 是基于 Stylish 调整网页外观的用户样式管理器</p><p><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc" target="_blank" rel="noopener">Octotree</a> - 在 GitHub 上显示代码树</p><p><a href="http://www.pullywood.com/ImageAssistant/" target="_blank" rel="noopener">ImageAssistant</a> - 国人开发的图片助手 (ImageAssistant) 批量图片下载器</p><p><a href="https://github.com/BlackGlory/copycat" target="_blank" rel="noopener">Copycat</a> - 我主要是为了复制网页直接转化为 markdown</p><p><a href="https://ocr.space/copyfish" target="_blank" rel="noopener">Copyfish</a> - 免费版已经支持中文和英文的 OCR 在线识别，够用且准确</p><p><a href="https://github.com/oppoic/JSONViewer/" target="_blank" rel="noopener">JSONViewer</a> - 一个页面格式化多条 JSON，提升工作效率</p><p><a href="https://github.com/gildas-lormeau/SingleFile" target="_blank" rel="noopener">SingleFile</a> - 将完整的页面保存到一个 HTML 文件中</p><p><a href="https://www.uku.im" target="_blank" rel="noopener">Unblock Youku</a> - 我平时很少看国内在线视频，不过这款良心插件已经坚持了 5 年，作者不容易。如果速度不稳定大家也可以购买国内的阿里云、腾讯云等，我始终相信云即未来</p><p><a href="https://github.com/vinta/pangu.js" target="_blank" rel="noopener">为什么你们就是不能加个空格呢？</a> - 对文字排版有强迫症的福音吧</p><p><a href="https://github.com/sciooga/v2ex-plus" target="_blank" rel="noopener">v2ex plus</a> - 可能是 v2ex 最好用的扩展</p><h2 id="油猴脚本推荐"><a href="#油猴脚本推荐" class="headerlink" title="油猴脚本推荐"></a>油猴脚本推荐</h2><blockquote><p>我个人的选择是 TemperMoneky &gt; ViolentMoneky</p></blockquote><p><a href="https://www.tampermonkey.net" target="_blank" rel="noopener">Tampermonkey</a> - Tampermonkey 是一款免费的浏览器扩展和最为流行的用户脚本管理器</p><p><a href="https://greasyfork.org/zh-CN" target="_blank" rel="noopener">Greasy Fork</a> - 这里是一个提供用户脚本的网站</p><h3 id="通用-1"><a href="#通用-1" class="headerlink" title="通用"></a>通用</h3><p><a href="https://greasyfork.org/zh-CN/scripts/329484" target="_blank" rel="noopener">豆瓣资源下载大师</a> - 装这一个脚本就够了！可能是你遇到的最好的豆瓣增强脚本</p><p><a href="https://greasyfork.org/zh-CN/scripts/29762" target="_blank" rel="noopener">网盘自动填写密码【威力加强版】</a> - 这个功能比插件弱一些，好处就是不涉及上传隐私数据</p><p><a href="https://greasyfork.org/zh-CN/scripts/370634" target="_blank" rel="noopener">懒人专用，自用组合型多功能脚本</a> - 为避免争议，各位可以阅读脚本描述后决定是否使用</p><p><a href="https://greasyfork.org/zh-CN/scripts/25718" target="_blank" rel="noopener">解除 B 站区域限制</a> - 通过替换获取视频地址接口的方式，实现解除 B 站区域限制</p><p><a href="https://tiansh.github.io/yawf/" target="_blank" rel="noopener">YAWF</a> - 新浪微博根据关键词、作者、话题、来源等过滤微博，清理版面，以及其他改造功能</p><p><a href="https://tiansh.github.io/us-else/zhihu_visitor/" target="_blank" rel="noopener">知乎免登录</a> - 如题</p><p><a href="https://greasyfork.org/zh-CN/scripts/2312" target="_blank" rel="noopener">右键在新标签中打开图片时显示最优化图像质量</a> - 支持：谷歌 (G+ blogspot YouTube)、Tumblr、推特、Steam、新浪微博、知乎、豆瓣、百度贴吧、淘宝（天猫）、ArtStation、Pinimg 等</p><h3 id="开发者-1"><a href="#开发者-1" class="headerlink" title="开发者"></a>开发者</h3><blockquote><p>不解释，大伙都是为了努力学习新知识，但你值得拥有一种更舒服的姿势</p></blockquote><p><a href="https://greasyfork.org/zh-CN/scripts/23840" target="_blank" rel="noopener">大人的 Greasyfork</a></p><p><a href="https://sleazyfork.org/zh-CN/scripts/25781" target="_blank" rel="noopener">JAV 老司机</a></p><p><a href="https://greasyfork.org/zh-CN/scripts/23316" target="_blank" rel="noopener">琉神转</a></p>]]></content>
    
    <summary type="html">
    
      Google Chrome浏览器插件和油猴脚本推荐
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>基于 bash shell 脚本制定灵活的 trimlog 日志清理策略</title>
    <link href="https://wsgzao.github.io/post/trimlog/"/>
    <id>https://wsgzao.github.io/post/trimlog/</id>
    <published>2019-10-08T06:59:49.000Z</published>
    <updated>2019-10-08T08:55:40.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>透过 Zabbix 文件系统监控告警发现日志未定时清理，进一步排查后确认前同事写的 trimlog 脚本在某些服务器上执行定时任务时出现了异常，review 后发现代码逻辑本身没有问题，主要由于 cron job 在执行 date 参数时没有使用转义字符导致，不过 trimlog.sh 这个日志清理脚本代码结构清晰易读，做下共享方便大家参考和二次修改。</p><blockquote><p>基于 bash shell 脚本制定灵活的 trimlog 日志清理策略</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 10 月 08 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/trimlog/">https://wsgzao.github.io/post/trimlog/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://wsgzao.github.io/post/find/">基于 bash find 命令执行 log 日志备份和清理的一次简单实践</a></p><hr><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查 crontab</span></span><br><span class="line">cat /etc/crontab</span><br><span class="line"></span><br><span class="line"><span class="comment">#Ansible: gdp_trim_log</span></span><br><span class="line">0 1 * * * root /data/release/trimlog.sh <span class="string">'/data/release/log/gop_gdp'</span> 30 1 <span class="string">'*'</span> <span class="string">'%Y%m%d'</span> &gt;&gt; /data/release/trimlog.txt</span><br><span class="line">0 1 * * * root /data/release/trimlog.sh <span class="string">'/data/release/log/cacheupdate'</span> 30 1 <span class="string">'*'</span> <span class="string">'%Y%m%d'</span> &gt;&gt; /data/release/trimlog.txt</span><br><span class="line"><span class="comment">#Ansible: gdp_trim_backup</span></span><br><span class="line">0 1 * * * root /data/release/trimbackup.sh <span class="string">'/data/release/backup/gop_gdp'</span> 30 &gt;&gt; /data/release/trimbackup.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 crontab 日志 </span></span><br><span class="line">less /var/<span class="built_in">log</span>/cron</span><br><span class="line"></span><br><span class="line">Oct  8 01:00:01 sg-gop-10-71-12-146 CROND[183782]: (root) CMD (/data/release/trimlog.sh <span class="string">'/data/release/log/gop_gdp'</span> 30 1 <span class="string">'*'</span> <span class="string">')</span></span><br><span class="line"><span class="string">Oct  8 01:00:01 sg-gop-10-71-12-146 CROND[183783]: (root) CMD (/data/release/trimbackup.sh'</span>/data/release/backup/gop_gdp<span class="string">'30 &gt;&gt; /data/release/trimbackup.txt)</span></span><br><span class="line"><span class="string">Oct  8 01:00:01 sg-gop-10-71-12-146 CROND[183784]: (root) CMD (/data/release/trimlog.sh'</span>/data/release/<span class="built_in">log</span>/cacheupdate<span class="string">'30 1'</span>*<span class="string">''</span>)</span><br><span class="line">Oct  8 01:00:01 sg-gop-10-71-12-146 CROND[183786]: (root) CMD (/usr/lib64/sa/sa1 1 1)</span><br><span class="line">Oct  8 01:00:01 sg-gop-10-71-12-146 CROND[183788]: (root) CMD (<span class="built_in">cd</span> /tmp &amp;&amp;  ss -tna | awk <span class="string">'&#123;print $1&#125;'</span> | sort | uniq -c &gt; snmpss.tmp &amp;&amp; chcon system_u:object_r</span><br><span class="line">:snmpd_var_run_t:s0 snmpss.tmp &amp;&amp; mv -f snmpss.tmp snmpss.cache)</span><br><span class="line">Oct  8 01:00:01 sg-gop-10-71-12-146 CROND[183779]: (root) CMDOUT (/bin/bash: -c: line 0: unexpected EOF <span class="keyword">while</span> looking <span class="keyword">for</span> matching `<span class="string">''</span>)</span><br><span class="line">Oct  8 01:00:01 sg-gop-10-71-12-146 CROND[183779]: (root) CMDOUT (/bin/bash: -c: line 1: syntax error: unexpected end of file)</span><br><span class="line">Oct  8 01:00:01 sg-gop-10-71-12-146 CROND[183778]: (root) CMDOUT (/bin/bash: -c: line 0: unexpected EOF <span class="keyword">while</span> looking <span class="keyword">for</span> matching `<span class="string">''</span>)</span><br><span class="line">Oct  8 01:00:01 sg-gop-10-71-12-146 CROND[183778]: (root) CMDOUT (/bin/bash: -c: line 1: syntax error: unexpected end of file)</span><br><span class="line">Oct  8 01:00:01 sg-gop-10-71-12-146 CROND[183777]: (root) CMDOUT (find: ‘/data/release/backup/gop_gdp’: No such file or directory)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 crontab 的 date 中加入转移字符即可 </span></span><br><span class="line">0 1 * * * root /data/release/trimlog.sh <span class="string">'/data/release/log/gop_gdp'</span> 30 1 <span class="string">'*'</span> <span class="string">'\%Y\%m\%d'</span> &gt;&gt; /data/release/trimlog.txt</span><br><span class="line">0 1 * * * root /data/release/trimlog.sh <span class="string">'/data/release/log/cacheupdate'</span> 30 1 <span class="string">'*'</span> <span class="string">'\%Y\%m\%d'</span> &gt;&gt; /data/release/trimlog.txt</span><br></pre></td></tr></table></figure><h2 id="bash-shell-代码"><a href="#bash-shell-代码" class="headerlink" title="bash shell 代码"></a>bash shell 代码</h2><blockquote><p>vim /data/release/trimlog.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">dir=`dirname <span class="variable">$0</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"usage: <span class="variable">$0</span> DIRECTORY [DELETE_DAYS] [COMPRESS_DAYS] [COMPRESS_FILE_PATTERN] [DATE_PATTERN]"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"multiple matches example for COMPRESS_FILE_PATTERN: data|error"</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">current_date=$(date +<span class="string">"%Y-%m-%d %T"</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Start trim log at <span class="variable">$current_date</span>"</span></span><br><span class="line"></span><br><span class="line">path=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -gt 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">log_delete_days=<span class="variable">$2</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">log_delete_days=7</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -gt 2 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">log_compress_days=<span class="variable">$3</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">log_compress_days=0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -gt 3 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">log_compress_match=<span class="variable">$4</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">log_compress_match=<span class="string">'*'</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -gt 4 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">date_pattern=<span class="variable">$5</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">date_pattern=<span class="string">"%Y-%m-%d"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$log_delete_days</span> -gt 0 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">files=`ls <span class="variable">$path</span>/*.<span class="built_in">log</span>.*`</span><br><span class="line">i=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -le <span class="variable">$log_delete_days</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">d=`date <span class="string">"+<span class="variable">$date_pattern</span>"</span> --date <span class="string">"<span class="variable">$i</span> day ago"</span>`</span><br><span class="line">files=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$files</span>"</span>|grep -v <span class="variable">$d</span>`</span><br><span class="line">i=`expr <span class="variable">$i</span> + 1`</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$files</span>"</span>|xargs rm -f</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$log_compress_days</span> -gt 0 ] &amp;&amp; [ -n <span class="string">"<span class="variable">$log_compress_match</span>"</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">files=`ls <span class="variable">$path</span>/*.<span class="built_in">log</span>.*|grep -v <span class="string">"\.gz$"</span>|grep -E <span class="string">"<span class="variable">$log_compress_match</span>"</span>`</span><br><span class="line">i=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -lt <span class="variable">$log_compress_days</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">d=`date <span class="string">"+<span class="variable">$date_pattern</span>"</span> --date <span class="string">"<span class="variable">$i</span> day ago"</span>`</span><br><span class="line">files=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$files</span>"</span>|grep -v <span class="variable">$d</span>`</span><br><span class="line">i=`expr <span class="variable">$i</span> + 1`</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$files</span>"</span>|xargs gzip</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">current_date=$(date +<span class="string">"%Y-%m-%d %T"</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Finish trim log at <span class="variable">$current_date</span>"</span></span><br></pre></td></tr></table></figure><blockquote><p>vim /data/release/trimbackup.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">dir=`dirname <span class="variable">$0</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"usage: <span class="variable">$0</span> DIRECTORY [KEEP_BACKUP_NUM]"</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">current_date=$(date +<span class="string">"%Y-%m-%d %T"</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Start trim backup at <span class="variable">$current_date</span>"</span></span><br><span class="line"></span><br><span class="line">path=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -gt 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">keep_backup_num=<span class="variable">$2</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">keep_backup_num=10</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">i=0</span><br><span class="line">find <span class="variable">$path</span> -maxdepth 1 ! -path <span class="variable">$path</span> -<span class="built_in">type</span> d -<span class="built_in">printf</span> <span class="string">'%p\n'</span> | sort -r -n | <span class="keyword">while</span> <span class="built_in">read</span> dir; <span class="keyword">do</span></span><br><span class="line">i=`expr <span class="variable">$i</span> + 1`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$i</span> -gt <span class="variable">$keep_backup_num</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"del <span class="variable">$dir</span>"</span></span><br><span class="line">rm -rf <span class="variable">$dir</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"keep <span class="variable">$dir</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">current_date=$(date +<span class="string">"%Y-%m-%d %T"</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Finish trim backup at <span class="variable">$current_date</span>"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      基于bash shell脚本制定灵活的trimlog日志清理策略
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>家庭保险配置公开课从小白到入门</title>
    <link href="https://wsgzao.github.io/post/insurance-xiaobang/"/>
    <id>https://wsgzao.github.io/post/insurance-xiaobang/</id>
    <published>2019-09-18T07:34:32.000Z</published>
    <updated>2019-09-19T04:10:18.551Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>文章转载自小帮规划的家庭保险配置公开课，为什么会考虑免费帮他们分享主要是内容干货比较多且不做任何具体的保险推荐，如果你觉得他们靠谱当然也可以选择付费咨询和购买相关保险，这是正常的商业模式。考虑到之前我也已经整理了 <a href="https://wsgzao.github.io/post/insurance/">香港和新加坡保险快速入门</a>，本文作为保险系列专题的延续希望帮助大家进一步提升对保险的认知。</p><blockquote><p>小白保险避坑课</p></blockquote><hr><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 18 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/insurance-xiaobang/">https://wsgzao.github.io/post/insurance-xiaobang/</a></p><p><strong> 授权转载 </strong></p><p><a href="https://www.xiaobangguihua.com/" target="_blank" rel="noopener">小帮规划</a></p><hr><h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><blockquote><p>关于家庭保险配置公开课：要不要买保险以及怎么买保险？</p></blockquote><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115352.png" alt=""></p><p>欢迎大家来到小帮规划的家庭保险配置公开课，我是小帮规划的创始人兼 CEO 徐彬，先简单的自我介绍一下，我毕业于哈佛大学统计学系。毕业以后呢，在香港做了四年投资银行和两年对冲基金，主要服务于大中型企业和小部分有钱人，帮助他们管理风险和资产增值，我之前工作的地方属于传统金融机构，他们比较嫌贫爱富，所以在过去这类优质的金融服务是少数人的特权。</p><p>2015 年，我开始创业。我想用财商教育和金融科技，把那些曾经只属于有钱人的优质金融服务带给更多普通人，这期间我做了投资理财实践课，全网销售了大概 20 多万份，也创办了基金投资平台，带领了很大一批用户开始做科学的投资实践，在服务的过程中，我发现，很多用户虽然已经有了一定的经济实力和投资意识。但是在保障方面，因为没有专业的保险服务，很多人买的保险都是很不合理的，甚至有的用户完全没有给家庭做保障，这导致一场大病或者意外，就直接让他们的财富水平一夜回到解放前，也就是常说的一夜返贫。</p><p>保险是理财的第一步，但是保险里险种复杂，保险产品众多，同时呢，保险条款特别的生涩难懂，传统保险销售还经常夸大宣传。这就导致了买保险成了让很多人都很头疼的事情，针对买保险的过程中可能遇到的各种痛点，我们小邦推出了一对一保险顾问服务，希望我们的专业能带给更多小伙伴们科学合理的保险配置，让大家拥有一份稳稳的幸福生活，今天这节课我就给大家讲解一下如何科学的给家庭建立保障。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115426.png" alt=""></p><p>首先我们来了解一下保险的大分类，看上面的图，保险分为两大类，一类是保障性，另一类呢，是理财型，通常来说，保障性保险可以理解为是纯做保障的，分为四类，分别是重疾险，意外险，医疗险和寿险，那什么是理财型保险的，简单来说就是带身故赔付的理财产品，大家常听到的两全险，分红险，万能险等等都是理财型保险。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115444.png" alt=""></p><p>这里要给大家强调买保险的第一个原则，保障性保险和理财型保险要分开买，既想有保障，又想有理财收益，这种想法往往会让你掉到买保险最大的坑里去，为什么这么说呢，这类保险产品往往打着有病赔钱，没病返钱的旗号，如果发生了风险，比如说疾病意外身故，他可以赔钱，如果没发生这些风险，平平安安的，那么会把钱返还给大家，这听起来是不是特别好啊，就是抓住了大家的这种心理，很多保险业务员都特别喜欢卖这类返还性的保险。</p><p>其实返还性保险的原理特别简单，实际上大家交了两份儿钱，同时买了两份保险，一份是保障型，另一份是理财型，保障型的保险，为风险提供保障，而为理财性保险交的那部分钱，保险公司自己拿去投资了。投资收益的大头儿，保险公司自己拿了，分了一小部分给大家而已，所以在相同保障下，返还性保险比保障型要贵非常多，这不仅无形中会增大你的经济压力，而且会导致预算有限的情况下，你的保额大打折扣。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115501.png" alt=""></p><p>比如，对于一个 30 岁的女性来说，30 万保额的定期重疾险，如果买保障型的话，只需要 3000 元左右，买返还型的话呢，可能就需要一万元保费了，同样的钱，如果用来买保障性保险的话，一万元保费可以买到 100 万保额的终身重疾险了，保险姓保，保险的作用就应该是提供保障，买保险和理财千万不要混在一起，很多人既想有保障，又想要理财收益，但结果呢，往往是两项都没做好，大家弄懂了保障性保险和理财型保险的区别之后，下面我给大家仔细介绍一下保障性保险。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115518.png" alt=""></p><p>保障性保险中按作用又分为两大类，其中重疾险和医疗险侧重于保自己。这两种保险主要是保证自己有钱治病，有钱养病，寿险和意外险侧重于保家人。这两种保险用来确保自己不幸发生身故时家人的生活，不会受到太大影响，甚至完全没有经济来源。</p><p>我们每个人啊，不仅是独立的个体，而且可能是儿子，女儿，爸爸妈妈，丈夫和妻子。所以我们不仅要照顾好自己，保重，有病有灾的时候，有足够的钱去应对。而且呢，我们还应该想办法保证自己的不幸，不要对家人的生活产生太大影响，让家人在任何情况下都能拥有幸福的生活。所以保险是我们爱与责任的，必须选择。因此对于每个家庭而言，保险都是必不可少的，那接下来我给大家详细讲解一下四类保险的保障范围和作用。</p><p>首先，我们看一下医疗险，关于医疗险，大家最常问的问题是，医疗险和医保有啥区别呢，我有了医保，医保也能报销医疗费，那我还需要医疗险吗，对于这个问题，我们来看一下医保的报销范围就知道答案了。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115537.png" alt=""></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115550.png" alt=""></p><p>我们一起来看一下上面的这张图啊，首先，医保报销会有起付线和封顶线。起付线之上，封顶线之下才能报销。并且就算再能报销的范围内也做不到 100% 全报销。其次，在治疗的过程中，医保范围外的药品是不能报销的，而大多数效果更好的进口药都不在医保范围内。所以呀，其实有了医保，我们还是需要医疗险去帮我们覆盖医保所不能覆盖的部分，现在市面上有很多不错的百万医疗险，只需要几百块钱就能做到，每年 100 万的保额，应该说是非常实惠的，所以我们建议你可以直接买百万医疗险。</p><p>讲完医疗险，接下来就是重疾险，重疾险可以说是保险的核心险种，我们在过往上课和给用户做方案的时候，经常会有用户有疑问，说我买了医疗险以后，生大病就能报销医疗费了，那是不是就可以不用买重疾险了呢，重疾险和医疗险是不是会重复呢，答案是完全不重复，重疾险更加重要。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115607.png" alt=""></p><p>医疗险都是短期的，通常都是一年期，每年都需要重新买，万一什么时候保险公司不卖类似的产品了，那下一年的保障就断档了，这就是所谓的停售风险。但重疾险通常都是长期的。虽然费用也是每年一缴，但是保障是长期的，一旦合同生效，即使产品下架了，也不影响合同履行。</p><p>其次是关于收入损失的补偿，医疗险是实报实销型，所以只能覆盖医疗费用。但是你想想重大疾病造成的经济损失，可不仅仅是医疗费用，重大疾病往往会造成长期不能工作，如果工作一年可以挣 20 万元，那每年的这 20 万元收入，他也是经济损失，这就叫收入损失，重疾险是只要符合条件就可以一次性赔付一笔钱，这笔钱用来干啥都行，可以用来支付医疗费用，后期的护理费用、也可以用来弥补收入损失，弥补收入损失恰恰是重疾险诞生的初衷。</p><p>我在 30 岁之前就给自己买了 100 万保额的重疾险，之所以这么做呢，是因为我觉得如果我不幸得了重大疾病，我爸妈肯定会不惜一切代价救我，你想想，如果没有重疾险，一家人不仅要承受精神上的痛苦，还要承担经济上的压力，相反，如果有了重疾险，一家人就可以没有后顾之忧的跟病魔做斗争了。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115625.png" alt=""></p><p>另外，再购买重疾险时有三点要特别注意，第一是否包含轻症赔付很重要，轻症就是重大疾病的早期阶段，随着医疗水平的进步，很多疾病都可以在早期阶段就被发现和治愈了，那为了能在早期阶段同样得到用来治病的钱，选择有轻症保障的重疾险是十分重要的。</p><p>第二，小心多次赔付的噱头。随着保险行业的不断发展，保险赔付也从一次赔付发展到了多次赔付，甚至同时多次重症加多次轻症赔付。通常来说，三次重症赔付加三次轻症赔付，对于大部分人来说就已经够用了，目前有些重疾险的赔付次数到了五次，甚至八次，那是完全没有必要的，只会把保费给拉高。你想一个人连得八次重大疾病，这得是多低的概率啊。</p><p>第三，保额充足最重要，我们给客户做保单体检的时候，发现很多人的重疾险保额都很低，重疾险保额 30 万是最基础的。根据目前的医疗水平和物价水平，额度，最好是 50 万起。我们买保险不是图心里安慰，而是想让保险真正的发挥作用，想要达到这个目标啊，保额充足是必须的。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115643.png" alt=""></p><p>聊完重疾险，我们再来看看意外险，如果不幸遭遇意外，严重的话，会造成身故或者伤残，即使没有那么严重，也需要花费医疗费用，那意外险就是针对这两种情况进行保障的，意外险非常的便宜，比如 50 万保额的意外险只需要 100 多块钱。所以意外险保额可以配置的高一些，由于意外险需要覆盖因残疾不能工作导致的收入损失。所以一般来说，意外险的保额起码要达到五年的年收入，如果五年的年收入还不足 50 万的话，你可以直接买 50 万保额的意外险。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115659.png" alt=""></p><p>我们在来说，最后一个险种，寿险，寿险的作用是身故时赔付一笔钱，对于死亡才赔付，很多人会认为这有什么用啊，其实如果一个人在家里是主要的收入来源，也就是一个家庭的经济支柱，那这个人是一定要买寿险的，为啥呢，因为一个家庭往往有房贷，有车贷，有孩子需要抚养，有老人需要赡养，这些都是家庭责任，家庭责任是有家庭经济支柱来承担的，一旦经济支柱不幸身故了，家庭责任就没有人可以很好地承担了，那所有家庭成员的生活都会受到非常大的影响，尤其是孩子的教育和老人的养老。</p><p>所以说，给家庭经济支柱配置寿险是非常有必要的，这里有一点要特别强调，孩子是没有家庭责任的，因此不需要给孩子配置寿险，在这一点上，我们发现市面上很多产品的设计都很坑，因为市面上绝大多数儿童重疾险都有身故赔偿，也就是覆盖了寿险。而且一般还是终身寿险，带终身寿险的儿童重疾险比纯重疾险的价格要高出一倍，对于一个孩子这种终身寿险是完全没有必要的。</p><p>讲到这里，大家可能会问了。为什么那么多保险代理人给大家推荐的，反而都是强制附加了寿险的儿童重疾险，甚至有些儿童重疾险产品把寿险作为了主险。最重要的重疾险却成了附加险的。保险代理人这么做是有原因的，在过去，互联网不发达，信息不对称，在买保险这件事上，基本上是代理人说啥就是啥，大家无法对比，只能接受。所以这就给很多代理人钻空子的机会。</p><p>随着互联网保险的崛起，现在大家有机会接触到更多的性价比很高的好产品，并且通过像小邦这样的第三方平台。在保险顾问的帮助下，公平公正的去对比各式各样的产品，不仅在产品上可以挑到高性价比的产品，而且还可以根据自己的需求量身定制保障方案，让自己买到的产品不仅性价比高，而且真正的适合自己。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115716.png" alt=""></p><p>总结一下，医疗险，重疾险，意外险和寿险这四大类保险的作用各不相同，合理的根据家庭需求进行配置，几乎可以覆盖日常生活中可能发生的所有风险了。</p><p>了解完这四种主要的保障性保险后，大家最关心的问题来了，为什么有的人买了保险，以后会出现理赔难的问题呢，怎么确保买了保险之后能顺利理赔呢？</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115730.png" alt=""></p><p>能否顺利理赔，有一个最关键的点就是健康告知。啥叫健康告知？健康告知就是关于你健康情况的一个说明，需要你诚实的告诉保险公司是否得过某些疾病，或者有过某些症状，这是你在买保险时最需要注意的。</p><p>很多人在身体出现了状况以后，才意识到要买保险。但是往往会卡在健康告知上，有些缺乏职业操守的保险销售人员为了承担。有时候会教唆客户在健康告知上作假，这对买保险的人是非常不利的，极有可能会导致理赔纠纷。</p><p>健康告知的原则是，问啥答啥，不问不答，如实告知，告知不到位，可能无法赔付，变成无效投保。但告知过渡也没有必要。这个度，说实话，普通人很难把握。所以这是我们顾问在做一对一咨询服务的时候非常重要的一部分服务内容。</p><p>给你举个例子，我们服务过一例有过肠息肉的客户，他在两年前做了手术切除。很多产品的健康告知，都问到了几年内是否有过住院手术，以及是否得过息肉，客户担心直接告知进行投保的话，会被举报留下拒保记录，会影响后续再购买其他产品。</p><p>不告知的话呢，又怕后续有可能产生纠纷，影响理赔，我们的保险师在和客户详细沟通过病情后发现。客户的息肉切除之后，已经做了病理检查，检查结果，息肉是良性的，根据客户的手术时间和检查结果，我们为客户挑选了一款重疾险产品，这款产品只问一年内是否住过院。并且我们和保险公司沟通过之后，确认了客户的这个情况，是可以直接投保的，不用担心投保之后会有不能理赔的风险，保险公司的确认邮件我们还做了保存，这样我们就帮客户选到了最适合他的产品，实现了有效投保，完全避免了不能理赔的风险。</p><p>了解了险种知识和健康告知之后，接下来就是如何配置保险了，因为时间有限，我给你重点介绍一下，不同家庭角色，也就是夫妻，孩子和老人在配置保险时的顺序和特别需要注意的地方。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115747.png" alt=""></p><p>第一步，给夫妻，也就是家庭经济支柱，先配置保险，夫妻是一个家庭的中流砥柱，他们是家庭的收入来源，肩负家庭的责任。所以他们是一个家庭里最应该优先配置保险的角色，其中重疾险和寿险又是重中之重。</p><p>重疾险的配置上有三个注意点：保额，保障期限和具体产品，其中保额最重要。</p><p>重疾险的保额如果不够，是不能充分发挥它的保障作用的，那到底应该如何科学地计算合理的保额呢，根据医疗机构公布的数据，目前重大疾病的医疗费用一般在 30 万元以上，康复周期一般是三到五年。因此重疾险的保额最少应该是 30 万元，再加上三年年收入。30 万元，用来覆盖医疗费用，三年年收入用来弥补治疗期间的收入损失。</p><p>去保完保额之后，下一步是根据预算确定保障期限，成人重疾险一般保障到 70 岁，80 岁或者终身，预算充足的话，可以选择直接保障到终身。这具体产品的选择上，经常有人让我直接推荐一款重疾险，要知道，重疾险是所有险种中最复杂的。需要考虑的因素包括疾病种类，赔付方式，健康告知等等等等，而且市面上产品有上百种。想要选到真正适合你的产品，一定要结合过往病史，现有保单，目标保额，保费预算等很多方面的信息和需求。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115807.png" alt=""></p><p>前面我们说过，孩子是不需要寿险的。所以在保障方面，孩子主要是配置重疾险，医疗险和意外险，那在为孩子挑选这三类保险上要注意哪些原则呢，第一切记给孩子买了一堆保险，父母却裸奔，孩子最大的风险，其实是父母遭遇风险，丧失经济收入来源。因此，给孩子买保险之前，父母的保险一定要买足，孩子才算有了真正的保障。</p><p>第二，先给孩子上医保，医保是所有保险的基础，而且医保是国家福利，可以说是一种非常实惠的保险，如果孩子有了医保，再买商业医疗险的时候，保费可以更便宜，甚至可以便宜一半儿。</p><p>第三，一定要挑选儿童专属重疾，保障到成年基本就够了，儿童专属重疾在儿童高发疾病上。比如说白血病，重症手足口，严重幼年类风湿性关节炎等疾病，可以有更高的额外赔付。所以应该为孩子购买儿童专属重疾。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115819.png" alt=""></p><p>家庭保障配置的最后一步就是给老人配置保险，老人这一块也是我们经常被咨询的。一是因为老人年龄大，保费通常会很贵，另一个是老人通常有健康问题，这在选择保险上会遇到困难。</p><p>关于保费贵这个问题如何解决呢？接下来就需要介绍一个新的险种，防癌险，数据显示，癌症占到所有大病理赔的 60% 以上，可以说是最高发的重疾了，所以购买防癌险可以保障 60% 以上的大病，而防癌险的保费比重疾险要便宜很多，有的防癌险只需要几百元。一般来说，防癌险不会对癌症种类进行单独要求，所以不用担心有的癌症会陪，有的癌症不会赔的情况。</p><p>接下来我们再来看看健康问题怎么解决，我们都知道，每个人的健康状况都会随着年龄的增长而变差，特别是到了父母这个年纪，高血压，糖尿病高发，非常需要保险。但是对于有三高问题的父母来说，重疾险和大多数医疗险都已经无法购买了，虽然防癌险会比重疾险的健康告知更为宽松，也就是说对于身体的健康要求没有那么高，但也不是没有要求的，比如肝硬化，肿块，息肉，囊肿等等，也会造成无法购买防癌险，不仅是老人，只要不是完全健康的人群，在保险购买上都需要额外注意，建议大家一定要在买保险时咨询专业人士，这样才能更好地实现投保，并且保证之后不会出现理赔纠纷。</p><p>聊到这里，不得不强调一句，保险真的是越早买越好，因为随着年龄的增长，保险只会越来越贵，如果健康出现了问题，买保险还需要加费，甚至想买保险都买不了了，以上讲的都是原则和知识，这是每个家庭的需求都是千差万别的，所以一定要为自己的家庭个性化的量身定做保险配置方案。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919115838.png" alt=""></p><p>好的，这节课到这里就接近尾声了，最后我给你总结一下，今天这堂课的重点。第一，理财和保障分开做，不要买返还型保险。第二，优先给家庭经济支柱配置保险。第三，考虑到性价比，不要给孩子买捆绑了寿险的重疾险。第四，预算再有限都不要妥协保障额度。第五，不能人云亦云，要基于自己的家庭情况进行个性化的保险配置。</p><p>最后非常感谢大家的信任和支持，希望大家都能够通过科学的保险配置，守护好整个家庭，拥有一生稳稳的幸福。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本次《小白保险避坑课》讲到的常见误区汇总，我们来检查一下自己有没有踩坑</p><p>①既想有保障，又想有钱赚？<br>②有医保，不需要医疗险？<br>③有医疗险，不需要重疾险？<br>④重疾险保额低于 30 万？<br>⑤孩子需要买寿险？<br>⑥老人必须买重疾险？</p><p>以上内容，均为【错误】配置思路，一定要避开！</p><h2 id="我的思考"><a href="#我的思考" class="headerlink" title="我的思考"></a>我的思考</h2><p>地区: 新加坡 / 上海<br>家庭: 已婚未孕</p><p>问题 1: 公司已经购买全球医疗保险，还应该注意配置哪些类型的保险？<br>重疾险、意外险，看户口所在地和常驻地考虑是买国内的还是国外的</p><p>问题 2: 父母 60 岁退休，他们应该注意配置哪些类型的保险？<br>优先配置意外险，在健康状况符合产品条款的情况下配置防癌险和医疗险</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://wsgzao.github.io/post/insurance/">香港和新加坡保险快速入门</a></p><p><a href="https://wsgzao.github.io/post/insurance-xiaobang/">家庭保险配置公开课从小白到入门</a></p><p><a href="https://shenlanbao.com/" target="_blank" rel="noopener">深蓝保</a></p><p><a href="https://blog.seedly.sg/category/insurance/" target="_blank" rel="noopener">Seedly Singapore Insurance</a></p>]]></content>
    
    <summary type="html">
    
      小白保险避坑课
    
    </summary>
    
      <category term="生活 | Life" scheme="https://wsgzao.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
  </entry>
  
  <entry>
    <title>香港和新加坡保险快速入门</title>
    <link href="https://wsgzao.github.io/post/insurance/"/>
    <id>https://wsgzao.github.io/post/insurance/</id>
    <published>2019-09-17T07:34:32.000Z</published>
    <updated>2019-09-19T06:43:03.063Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919143225.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>文章中不会涉及具体的产品，授权转载自 @Ching 的知乎回答，我以前受父母的影响对保险的认知非常有限，老一辈人很多都会把保险当成骗子，现在关注保险虽然已经有点晚了，但我认为还不算太迟，至少还可以从我开始改变对保险的认知。欢迎大家分享自己在保险方面的看法和经验。</p><blockquote><p>帮助不了解保险的保险小白们快速入门</p></blockquote><hr><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 17 日 - 更新保险专题<br>2018 年 08 月 07 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/insurance/">https://wsgzao.github.io/post/insurance/</a></p><p><strong> 授权转载 </strong></p><p><a href="https://www.zhihu.com/question/54465569/answer/155687010" target="_blank" rel="noopener">https://www.zhihu.com/question/54465569/answer/155687010</a></p><hr><h2 id="保险公司是怎么运营的？"><a href="#保险公司是怎么运营的？" class="headerlink" title="保险公司是怎么运营的？"></a>保险公司是怎么运营的？</h2><p>学术的定义我不说，举一个简单的例子。有一个村庄，与世隔绝，村庄里居住着 1 万村民。整个村庄每年平均有 50 村民死亡。那么，这个村庄每年的平均死亡率为 0.5%。这个时候，保险公司向全村 1 万村民收取保费每人每年 100 元，并承诺赔付给当年死亡村民的配偶或后代 1.5 万元。这一年，保险公司总共收取保费 100x10000=100 万元，并拿着这 100 万做投资获取 5 万投资回报，总共理赔 1.5x50=75 万元，再除去保险公司运营成本和人力成本 20 万元，保险公司盈利 100+5-75-20=10 万元。</p><p>这是保险公司最简单的模型。但是实际上，保险公司面临着很多不确定的风险。比如村庄某年遇到了百年不遇的天灾，死亡率从 0.5% 飙升到 5%，以至于理赔需要 750 万；或者村庄里只有 2000 村民愿意购买保险获取保障，保费收入只有 20 万，而恰好那年死亡的 50 村民都在这 2000 村民中，理赔却需要 75 万；又或者保险公司拿这 100 万保费做投资失败亏损了 30 万等等等等。</p><p>所以，保险公司请了全球最顶尖的精算师、数据分析师建立模型、设计产品和制定价格。作为有保障需求的保险小白，我们需要清楚，保险公司不是在骗人，他们的高杠杆赔付（比如举例说的缴 100 元赔付 1.5 万元）是真实存在的。一旦被保人达到了赔付条款，被保人和其家人会理直气壮地获取到至尊的保障。那么问题来了，我觉得我需要拥有一份保险公司带来的保障，但是我该选择什么样的保险呢？</p><h2 id="保险的种类有哪些？"><a href="#保险的种类有哪些？" class="headerlink" title="保险的种类有哪些？"></a>保险的种类有哪些？</h2><p>如果刚刚接触保险，我们会发现，保险的种类太多了。对的，作为普通消费者，我们没有足够多的专业知识和能力去判断哪些保险是适合我自己的。很多已经购买保险的客户往往不知道自己是购买的什么险种，常常在几年后另外一个保险经纪的讲解下更改已经购买的保险，造成消费者不必要的损失。</p><blockquote><p>其实，保险并没有这么复杂。</p></blockquote><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190918155627.png" alt=""></p><p>按照功能来分类，保险主要分为两大类：一类是保障型保险，一类是增值型保险。保障型保险分为两小类，一是医疗住院保险，一是人寿型保险；人寿型保险又分为重大疾病保险、定期人寿保险、传承人寿保险。增值型保险也分为两小类，一是储蓄型保险，一是投资型保险。</p><p>每一种保险有不一样的功能和作用，不是每一个险种都适合所有人。需要根据消费者不同的情况来分析和规划。</p><p>医疗住院保险是最基本的，在大陆就是我们常常说到的社保。现在的大陆社保其实已经做得很不错了，虽然有一些进口药物不能报销，但还是可以报销普通医疗住院费用的 60%-80%，已经减轻了很多家庭的负担。</p><p>重大疾病保险的功能有两个。一是作为大陆社保的补充，以应对社保不能报销的进口药物费用和剩下的医疗住院费用；另外一个功能是作为被保人因为重疾失去赚钱能力的短期解决方案，当被保人因为重疾不能继续工作赚钱的时候，可以利用重大疾病保险的赔付维持整个家庭的开销度过难关。</p><p>定期人寿保险的功能也有两个。一是在家庭遇到极端不幸（被保人死亡）的情况下获取高额的理赔以维持整个家庭的开销、以确保子女有足够的资金长大成人、自力更生；另外一个功能是在被保人正常死亡的情况下传承高额财富给子女。</p><p>传承人寿保险，顾名思义，就是在被保人死亡的情况下传承高额财富给子女。</p><p>储蓄型保险，特点是保本、低风险，目的是跑赢通货膨胀，可以作为子女的教育金储备或者自己的退休金储备。</p><p>投资型保险，是不保本不保本不保本的（重要的事情说三遍）。保险公司会根据消费者的风险承受能力去投资对应的基金，以获取更高的投资回报率。</p><p>再次强调一下，每一种保险有不一样的功能和作用，不是每一个险种都适合所有人。一个需要重疾保障的消费者最终购买了投资型的保险是很可悲的。</p><p>那么问题来了，作为刚刚组建家庭的小两口、或者三口之家、又或者事业稳定的中年夫妇，我们该拥有哪一类的保险呢？每一种保险我们又需要拥有多少呢？这些问题，都可以从你的经纪那里获取答案。</p><h2 id="我该在哪里购买保险？"><a href="#我该在哪里购买保险？" class="headerlink" title="我该在哪里购买保险？"></a>我该在哪里购买保险？</h2><p>我的婶婶刚好在某某某寿做保险销售，她给了我一堆产品资料，我是不是应该在她那儿买？前段时间同事们都去香港买了保险，说性价比高，顺便还可以购物，我是不是也应该去香港买呢？最近又听海外留学的侄女推荐新加坡的保险，说特别划算，我该不该考虑去趟新加坡呢？</p><p>不管在哪里买保险，我们都需要从几个方面来考虑。法律法规，监管机构，产品（保障范围、性价比、理赔条款等等），公司信誉度，签单便捷度，理赔便捷度等等。</p><p>不可否认，大陆保险行业发展晚，法律法规比起香港和新加坡还没有这么完善和健全。但是值得欣慰的是，大陆保险行业增长很快，而且是越来越好。</p><p>公司信誉度，可以去国际权威的标准普尔（Standard &amp; Poor’s）评级查询，这个排名是根据公司的品牌口碑、财务报表、投资能力、信誉度等等的综合评定得来的。公司评级越高，公司越稳定和安全，公司也更加值得信赖。这个排名最高的是新加坡某诚（AA），排名最低的是中国某安（A-）。数据来源 Standard &amp; Poor’s。但是，并不是排名最高的公司产品都适合我，也不是排名最低的公司产品都不适合我。我们还是需要综合各方面因素来考虑和决定。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919120825.png" alt=""></p><p>签单便捷度和理赔便捷度，大陆就在当地签单、理赔，地理方面来讲最便捷，但是大陆理赔程序稍微复杂，还有待提升；香港和新加坡保险签单需要分别在香港和新加坡，虽然两个地方的保险都可以在大陆做理赔、但是需要寄材料到各保险公司，麻烦一些，香港和新加坡的理赔程序简单宽松。另外还要注意一点，购买新加坡人寿保险需要在新加坡医院做体检，这是和香港、大陆不一样的地方。</p><p>好，现在开始比较各地的保险产品。</p><h2 id="同样类型的保险，为什么大陆、香港、新加坡的保费差距会这么大？"><a href="#同样类型的保险，为什么大陆、香港、新加坡的保费差距会这么大？" class="headerlink" title="同样类型的保险，为什么大陆、香港、新加坡的保费差距会这么大？"></a>同样类型的保险，为什么大陆、香港、新加坡的保费差距会这么大？</h2><p>保费的制定，是一个很复杂的过程，需要参考很多指标和参数。</p><p>一个很重要的参数，是当地居民的死亡率和得病率。不同地方的居民，生活习性不一样、所在的环境质量不一样，所以会导致当地的死亡率和得病率不一样。一般来说，相同保障额度的前提下，一个地方死亡率和得病率越低，那个地方的保费就会越低。下图是 1980 年到 2015 年大陆、香港、新加坡每 1000 人的死亡率，数据来源 World Bank。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190919144209.png" alt=""></p><p>另外一个很重要的参数，业内叫做保险深度，说人话就是在举例中的全部 1 万村民中有多少人拥有了保险公司提供的保障。这个参数越高，保险公司更能准确地估算出每年需要理赔的金额，从而更能准确地估算出保险公司需要收取的保费。这样的话，保险公司就不需要很多的缓冲资产已对应不确定的风险，从而降低了保费。</p><p>在大陆，因为我们对保险的传统偏见，很少人会选择拥有一份保险公司提供的保障，可想而知，大陆地区的保险深度还有很大的提升空间。但是在香港和新加坡，因为高昂的医药费，所有本地香港人和新加坡人都会在小孩出生的第一时间开始拥有保险公司提供的保障，因此香港和新加坡的保险深度是非常高的。</p><p>最后一点，我们普通人都知道以上的道理，聪明绝顶的保险公司精算师们难道会不知道吗？所以，香港和新加坡的有些保险公司对大陆消费者是加了价格的，有些保险公司对大陆消费者是和本地人一个价格。</p><p>当然，决定保费的绝不仅仅是上面三个参数。作为有保障需求的保险小白，我们需要明白，同等保障的前提下，不同地区的保费差别可以很大，这是正常的现象。</p><h2 id="投保人、受保人、受益人的不同角色"><a href="#投保人、受保人、受益人的不同角色" class="headerlink" title="投保人、受保人、受益人的不同角色"></a>投保人、受保人、受益人的不同角色</h2><p>在我们给家里人选择保障的时候，经常会对投保人、受保人、受益人这几个角色感到困惑，不清楚各个角色的权利和义务。给大家简单梳理下这几个角色的不同之处。</p><ol><li>投保人是决定购买保单的人，有义务按时缴纳每年的保费，同时享受指定受益人的权利。</li><li>受保人，也叫被保险人，是决定保险理赔条件的载体，即受保人在发生约定的事件时（确诊重疾或者身故等），保险公司有义务进行理赔。</li><li>受益人，顾名思义，有权利在发生理赔的时候获得理赔金。</li></ol><blockquote><p>我们再分几种情况讨论</p></blockquote><ol><li>自己给自己买保险</li></ol><p>这种情况下，投保人和受保人都是自己，受益人可以自己来指定。</p><ol start="2"><li>夫妻互保</li></ol><p>比如丈夫给妻子买保险，投保人是丈夫，受保人是妻子，受益人由丈夫来指定。</p><ol start="3"><li>父母给小孩买保险</li></ol><p>比如妈妈给儿子买保险，投保人是妈妈，受保人是儿子，受益人由妈妈来指定。</p><p>把投保人、受保人、受益人的不同义务和权利弄清楚，可以帮助我们更好地规划家庭保障计划，从而选择到最适合我们的产品。</p><h2 id="保单对比"><a href="#保单对比" class="headerlink" title="保单对比"></a>保单对比</h2><p>这是个很细致的任务，不同公司的不同产品，价格差异很大、保障范围差异很大、赔付条款差异也很大。这里我就不一一列举了。</p><p>最后总结一下，保险其实是一个好东西，可以分散大众的风险，在不幸来临的时候保护家人，让家人继续有尊严的面对生活。</p><p>但是，保险的水也是很深。作为消费者，我应该拥有什么保障，拥有多少，我应该在哪个地方拥有，从哪家公司拥有，里面都有很多学问。</p><p>希望我的文章可以帮助到有保障需求的人。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://wsgzao.github.io/post/insurance/">香港和新加坡保险快速入门</a></p><p><a href="https://wsgzao.github.io/post/insurance-xiaobang/">家庭保险配置公开课从小白到入门</a></p><p><a href="https://shenlanbao.com/" target="_blank" rel="noopener">深蓝保</a></p><p><a href="https://blog.seedly.sg/category/insurance/" target="_blank" rel="noopener">Seedly Singapore Insurance</a></p>]]></content>
    
    <summary type="html">
    
      帮助到不了解保险的保险小白们快速入门
    
    </summary>
    
      <category term="生活 | Life" scheme="https://wsgzao.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
  </entry>
  
  <entry>
    <title>正则表达式从小白到入门</title>
    <link href="https://wsgzao.github.io/post/regex/"/>
    <id>https://wsgzao.github.io/post/regex/</id>
    <published>2019-09-12T06:59:49.000Z</published>
    <updated>2019-09-13T07:20:52.506Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>正则表达式（Regular Expression，RegExp，regex）使用单个字符串来描述和匹配一系列符合某种句法规则的字符串。此概念来自形式化语言理论，最初由贝尔实验室实现。正则表达式最初在 Perl 中实现，它的推广得益于 UNIX 软件的流行，尤其是 SED，GREP 等。 现在许多编程语言都内置了正则表达式引擎，如 PERL、Python、JavaScript、Java、C++ 等。很多文本编辑器也支持正则表达式来进行检索和替换，如 Vim、Sublime Text、Visual Studio Code 等。正则表达式相关的学习文章网上也是一大推，本文主要记录正则表达式的入门教程和常用公式工具，方便大家活学活用。</p><blockquote><p>正则表达式从小白到入门</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 12 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/regex/">https://wsgzao.github.io/post/regex/</a></p><p><strong> 扩展阅读 </strong></p><p>正则表达式 30 分钟入门教程 - <a href="https://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">https://deerchao.net/tutorials/regex/regex.htm</a></p><hr><h2 id="为什么要正则表达式？"><a href="#为什么要正则表达式？" class="headerlink" title="为什么要正则表达式？"></a>为什么要正则表达式？</h2><p><a href="http://yinwang0.lofter.com/post/183ec2_47bddf" target="_blank" rel="noopener">为什么需要正则表达式 - 王垠</a></p><p>学习 Unix 最开头，大家都学过正则表达式 (regexp)。可是有没有人考虑过我们为什么需要正则表达式？</p><p>正则表达式本来的初衷是用来从无结构的字符串中提取信息，殊不知这正好是 Unix 的缺陷所在。Unix 用无结构的字符串来表示数据，导致了诸多复杂的基于 regexp 的软件的诞生。sed, AWK, Perl, … 都是为了同样的目的来到这个世界上的。如果不是因为 Unix 用字符串来表示数据，我们就会拥有按数据结构类型的直接存储，而不需要折腾 regexp。正则表达式有它自己的价值（针对自然语言），但是我们其实不需要把它应用到程序语言和操作系统里面。</p><p>正则表达式本身用一个字符串来表示，这带来另外一些问题。因为正则表达式的本质不是字符串，而是一个数据结构。学过计算理论的人可能知道这个数据结构叫做 NFA（nondeterministic finite automaton，非确定性有限自动机）。所有的数据结构应该由程序语言本身来表示，就像用 Java 构造一个对象用 <code>new ClassA(&quot;a&quot;)</code> 一样。但是正则表达式强迫你把这个简单的构造函数调用写成一个字符串。所以在这个比方之下，你得写成 <code>new ClassA(\&quot;a\&quot;)</code>。这样当你想要组合这些表达式的时候就发现，正则表达式几乎都是不可组合 (compose) 的。你几乎不可能不能把两个 regexp 的变量 A 和 B 安全拼接成一个，比如用 Java 的字符串拼接 A+B。因为你不知道这两个字符串拼在一起之后，那些稀奇古怪的符号会出现什么交叉反应，使得最后的识别的东西根本不是你想要的。</p><p>在正则表达式中，由于正则表达式本身的构造函数与数据本身合并到一起，我们不得不对某些 “特殊字符” 进行 escape。这些特殊字符，其实是用来描述 NFA 的记号，它们属于更高一层的语言。可是在正则表达式里，它们与 NFA 节点里的字符混为一谈。比如很简单的一个 block comment 的正则表达式，却要写成这个样子：</p><pre><code>/\\\\\*(\[^\\\\\*\]|\[^/\])\*\\\\\*/</code></pre><p>显然这样的表达式很容易出错。 如果我们用程序语言的表达式来构造这个表达式，它应该是这样：</p><pre><code>(@... &quot;/\*&quot; (@\*(@!&quot;\*/&quot;)) &quot;\*/&quot;)</code></pre><p>在这个我自己设计的 Scheme 表达式里，以 <code>@</code> 开头的标识符都是构造函数。其中 <code>@...</code> 是构造 sequence，<code>@*</code> 是构造一个 zero-or-more 的匹配，<code>@!</code> 构造一个否定匹配。这个表达式是说：“以 <code>/ *</code> 开头，接着零个或者多个不是 <code>* /</code> 的字符，最后接着一个 <code>* /</code>。这样一来清晰明了，什么表达式在什么 “层次” 都很清楚，不需要什么反斜杠 escape，而且这样的表达式可以 compose。比如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(define reg1 (@... &quot;/\*&quot; (@\*(@!&quot;\*/&quot;)) &quot;\*/&quot;))</span><br><span class="line">(define reg2 (@+ &quot;foo&quot;))</span><br><span class="line">(define reg3 (@= &quot;b&quot;))</span><br></pre></td></tr></table></figure><p>定义这三个表达式之后，我们之后可以用像 <code>(@... reg1 (@or reg2 reg3))</code> 这样的表达式来连接 3 个不同的表达式，构造出更大的表达式。这样的构造可以无限的扩展。从这里以及以往的经验，我总结出一个普遍适用的程序设计的教训：尽量不要把多个层次的语言 “压缩” 到一层。我们也看到正则表达式与 “Unix 哲学” 有很大关系。我没有考古，所以不知道孰先孰后，但是它们肯定有直接的因果关系。两者都是 Unix 复杂性的来源。</p><blockquote><p>再来看取自 12306 网站的一段代码</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// http://www.12306.cn/mormhweb/js/adKyfw.min.js</span></span><br><span class="line">d = d.replace(<span class="string">"'"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"%"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"#"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"&amp;"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"*"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"("</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">")"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"@"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"`"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"/"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"\\"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">","</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"."</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"="</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"&lt;"</span>, <span class="string">""</span>);</span><br><span class="line">d = d.replace(<span class="string">"&gt;"</span>, <span class="string">""</span>);</span><br></pre></td></tr></table></figure><p>上述代码是在过滤掉不合法的搜索字符（姑且不论客户端过滤是否安全）， 我们可以用一行正则替换来实现相同的功能：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d = d.replace(<span class="regexp">/'%#\&amp;\*\(\)@`\/\\,\.=&lt;&gt;/g</span>, <span class="string">''</span>);</span><br></pre></td></tr></table></figure><h2 id="正则表达式入门教程推荐"><a href="#正则表达式入门教程推荐" class="headerlink" title="正则表达式入门教程推荐"></a>正则表达式入门教程推荐</h2><blockquote><p>感谢作者 deerchao 从 2006 年开始更新至今，谢谢</p></blockquote><p><a href="https://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">正则表达式 30 分钟入门教程 - DeerChao</a></p><p><a href="http://www.runoob.com/regexp/regexp-tutorial.html" target="_blank" rel="noopener">正则表达式 - 教程</a></p><p><a href="https://www.w3schools.com/python/python_regex.asp" target="_blank" rel="noopener">Python RegEx</a></p><h2 id="正则表达式在线工具"><a href="#正则表达式在线工具" class="headerlink" title="正则表达式在线工具"></a>正则表达式在线工具</h2><p><a href="https://regexr.com/" target="_blank" rel="noopener">regexr</a></p><p><a href="https://regex101.com/" target="_blank" rel="noopener">regex101</a></p><p><a href="https://deerchao.net/tools/wegester/index.html" target="_blank" rel="noopener">正则表达式测试工具（在线）</a></p><p><a href="https://c.runoob.com/front-end/854" target="_blank" rel="noopener">正则表达式在线测试</a></p><h2 id="正则表达式基本语法"><a href="#正则表达式基本语法" class="headerlink" title="正则表达式基本语法"></a>正则表达式基本语法</h2><p>定义正则表达式的方式在不同的工具中可能有所差别，但正则表达式内容的语法是一致的。 正则表达式有三类语法结构：</p><ol><li>串接（与操作）。相邻的字符默认为串接关系。例如 <code>harttle</code> 只能匹配 <code>harttle</code>， 不可匹配 <code>hart</code>。</li><li>选择（或操作，<code>|</code>）。例如：<code>harttle|serene</code> 可以匹配 <code>harttle</code> 或者 <code>serene</code>。 选择的优先级级低于串接，因此很多情况下都可以省略括号。</li><li>数量（限定符）。最常见的数量限定符包括 <code>+</code>, <code>?</code>, <code>*</code>，分别表示左侧的字符出现一次或更多，不出现或出现一次，不出现或出现任意次。例如 <code>harttle?</code> 可以匹配 <code>harttl</code> 和 <code>harttle</code>。</li><li>组合（括号，<code>()</code>）。组合用来定义操作符的作用范围和优先级。例如 <code>har(ttle)?</code> 可以匹配 <code>harttle</code> 和 <code>har</code>，<code>h(a|u)rttle</code> 可以匹配 <code>harttle</code> 和 <code>hurttle</code>。</li></ol><h2 id="常用正则表达式"><a href="#常用正则表达式" class="headerlink" title="常用正则表达式"></a>常用正则表达式</h2><table><thead><tr><th>字符</th><th>描述</th></tr></thead><tbody><tr><td><code>\\</code></td><td>将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，”<code>n</code>“匹配字符”<code>n</code>“。”<code>\n</code>“匹配一个换行符。序列”<code>\</code>“匹配”<code>\</code>“而” <code>(</code>“则匹配”<code>(</code>“。</td></tr><tr><td><code>^</code></td><td>匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，<code>^</code> 也匹配”<code>\n</code>“或”<code>\r</code>“之后的位置。</td></tr><tr><td><code>$</code></td><td>匹配输入字符串的结束位置。如果设置了 RegExp 对象的 Multiline 属性，<code>$</code> 也匹配”<code>\n</code>“或”<code>\r</code>“之前的位置。</td></tr><tr><td><code>*</code></td><td>匹配前面的子表达式零次或多次。例如，zo 能匹配”<code>z</code>“、”<code>zo</code>“以及”<code>zoo</code>“。等价于 {0,}。</td></tr><tr><td><code>+</code></td><td>匹配前面的子表达式一次或多次。例如，”<code>zo+</code>“能匹配”<code>zo</code>“以及”<code>zoo</code>“，但不能匹配”<code>z</code>“。+ 等价于 {1,}。</td></tr><tr><td><code>?</code></td><td>匹配前面的子表达式零次或一次。例如，”<code>do(es)?</code>“可以匹配”<code>do</code>“或”<code>does</code>“中的”<code>do</code>“。? 等价于 {0,1}。</td></tr><tr><td><code>{n}</code></td><td>n 是一个非负整数。匹配确定的 n 次。例如，”<code>o{2}</code>“不能匹配”<code>Bob</code>“中的”<code>o</code>“，但是能匹配”<code>food</code>“中的两个 o。</td></tr><tr><td><code>{n,}</code></td><td>n 是一个非负整数。至少匹配 n 次。例如，”<code>o{2,}</code>“不能匹配”<code>Bob</code>“中的”<code>o</code>“，但能匹配”<code>foooood</code>“中的所有 o。”<code>o{1,}</code>“等价于” <code>o+</code>“。”<code>o{0,}</code>“则等价于”<code>o</code>“。</td></tr><tr><td><code>{n,m}</code></td><td>m 和 n 均为非负整数，其中 n&lt;=m。最少匹配 n 次且最多匹配 m 次。例如，”<code>o{1,3}</code>“将匹配”<code>fooooood</code>“中的前三个 o。”<code>o{0,1}</code>“等价于”<code>o?</code>“。请注意在逗号和两个数之间不能有空格。</td></tr><tr><td><code>?</code></td><td>当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串”<code>oooo</code>“，”<code>o+?</code>“将匹配单个”<code>o</code>“，而” <code>o+</code>“将匹配所有”<code>o</code>“。</td></tr><tr><td><code>.</code></td><td>匹配除”<code>\n</code>“之外的任何单个字符。要匹配包括”<code>\n</code>“在内的任何字符，请使用像” <code>(.&#124;\n) </code>“的模式。</td></tr><tr><td><code>(pattern)</code></td><td>匹配 pattern 并获取这一匹配的子字符串。该子字符串用于向后引用。所获取的匹配可以从产生的 Matches 集合得到，在 VBScript 中使用 SubMatches 集合，在 JScript 中则使用 <code>$0...$9</code> 属性。要匹配圆括号字符，请使用”<code>(</code>“或”<code>)</code>“。</td></tr><tr><td><code>(?:pattern)</code></td><td>匹配 pattern 但不获取匹配的子字符串，也就是说这是一个非获取匹配，不存储匹配的子字符串用于向后引用。这在使用或字符”<code>(&#124;)</code>“来组合一个模式的各个部分是很有用。例如”<code>industr(?:y&#124;ies)</code>“就是一个比”<code>industry&#124;industries</code>“更简略的表达式。</td></tr><tr><td><code>(?=pattern)</code></td><td>正向肯定预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，”<code>Windows(?=95&#124;98&#124;NT&#124;2000)</code>“能匹配”<code>Windows2000</code>“中的”<code>Windows</code>“，但不能匹配” <code>Windows3.1</code>“中的”<code>Windows</code>“。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td><code>(?!pattern)</code></td><td>正向否定预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如”<code>Windows(?!95&#124;98&#124;NT&#124;2000)</code>“能匹配”<code>Windows3.1</code>“中的”<code>Windows</code>“，但不能匹配” <code>Windows2000</code>“中的”<code>Windows</code>“。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始</td></tr><tr><td><code>(?&lt;=pattern)</code></td><td>反向肯定预查，与正向肯定预查类似，只是方向相反。例如，”<code>(?&lt;=95&#124;98&#124;NT&#124;2000)Windows</code>“能匹配”<code>2000Windows</code>“中的”<code>Windows</code>“，但不能匹配”<code>3.1Windows</code>“中的” <code>Windows</code>“。</td></tr><tr><td><code>(?&lt;!pattern)</code></td><td>反向否定预查，与正向否定预查类似，只是方向相反。例如”<code>(?&lt;!95&#124;98&#124;NT&#124;2000)Windows</code>“能匹配”<code>3.1Windows</code>“中的”<code>Windows</code>“，但不能匹配”<code>2000Windows</code>“中的” <code>Windows</code>“。</td></tr><tr><td><code>x&#124;y</code></td><td>匹配 x 或 y。例如，”<code>z&#124;food</code>“能匹配”<code>z</code>“或”<code>food</code>“。”<code>(z&#124;f)ood</code>“则匹配”<code>zood</code>“或” <code>food</code>“。</td></tr><tr><td><code>[xyz]</code></td><td>字符集合（character class）。匹配所包含的任意一个字符。例如，”<code>[abc]</code>“可以匹配”<code>plain</code>“中的”<code>a</code>“。特殊字符仅有反斜线 <code>\\</code> 保持特殊含义，用于转义字符。其它特殊字符如星号、加号、各种括号等均作为普通字符。脱字符 ^ 如果出现在首位则表示负值字符集合；如果出现在字符串中间就仅作为普通字符。连字符 - 如果出现在字符串中间表示字符范围描述；如果如果出现在首位则仅作为普通字符。</td></tr><tr><td><code>[^xyz]</code></td><td>排除型（negate）字符集合。匹配未列出的任意字符。例如，”<code>[^abc]</code>“可以匹配”<code>plain</code>“中的”<code>plin</code>“。</td></tr><tr><td><code>[a-z]</code></td><td>字符范围。匹配指定范围内的任意字符。例如，”<code>[a-z]</code>“可以匹配”<code>a</code>“到”<code>z</code>“范围内的任意小写字母字符。</td></tr><tr><td><code>[^a-z]</code></td><td>排除型的字符范围。匹配任何不在指定范围内的任意字符。例如，”<code>[^a-z]</code>“可以匹配任何不在”<code>a</code>“到”<code>z</code>“范围内的任意字符。</td></tr><tr><td><code>\b</code></td><td>匹配一个单词边界，也就是指单词和空格间的位置。例如，”<code>er\b</code>“可以匹配”<code>never</code>“中的”<code>er</code>“，但不能匹配”<code>verb</code>“中的”<code>er</code>“。</td></tr><tr><td><code>\B</code></td><td>匹配非单词边界。”<code>er\B</code>“能匹配”<code>verb</code>“中的”<code>er</code>“，但不能匹配”<code>never</code>“中的”<code>er</code>“。</td></tr><tr><td><code>\cx</code></td><td>匹配由 x 指明的控制字符。例如，<code>\cM</code> 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的”<code>c</code>“字符。</td></tr><tr><td><code>\d</code></td><td>匹配一个数字字符。等价于 <code>[0-9]</code>。</td></tr><tr><td><code>\D</code></td><td>匹配一个非数字字符。等价于 <code>[^0-9]</code>。</td></tr><tr><td><code>\f</code></td><td>匹配一个换页符。等价于 <code>\x0c</code> 和 <code>\cL</code>。</td></tr><tr><td><code>\n</code></td><td>匹配一个换行符。等价于 <code>\x0a</code> 和 <code>\cJ</code>。</td></tr><tr><td><code>\r</code></td><td>匹配一个回车符。等价于 <code>\x0d</code> 和 <code>\cM</code>。</td></tr><tr><td><code>\s</code></td><td>匹配任何空白字符，包括空格、制表符、换页符等等。等价于 <code>[ \f\n\r\t\v]</code>。</td></tr><tr><td><code>\S</code></td><td>匹配任何非空白字符。等价于 <code>[^ \f\n\r\t\v]</code>。</td></tr><tr><td><code>\t</code></td><td>匹配一个制表符。等价于 <code>\x09</code> 和 <code>\cI</code>。</td></tr><tr><td><code>\v</code></td><td>匹配一个垂直制表符。等价于 <code>\x0b</code> 和 <code>\cK</code>。</td></tr><tr><td><code>\w</code></td><td>匹配包括下划线的任何单词字符。等价于”<code>[A-Za-z0-9]</code>“。</td></tr><tr><td><code>\W</code></td><td>匹配任何非单词字符。等价于”<code>[^A-Za-z0-9]</code>“。</td></tr><tr><td><code>\xn</code></td><td>匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，”<code>\x41</code>“匹配”<code>A</code>“。”<code>\x041</code>“则等价于”<code>\x04&amp;1</code>“。正则表达式中可以使用 ASCII 编码。.</td></tr><tr><td><code>\num</code></td><td>向后引用（back-reference）一个子字符串（substring），该子字符串与正则表达式的第 num 个用括号围起来的子表达式（subexpression）匹配。其中 num 是从 1 开始的正整数，其上限可能是 99。例如：”<code>(.)\1</code>“匹配两个连续的相同字符。</td></tr><tr><td><code>\n</code></td><td>标识一个八进制转义值或一个向后引用。如果 <code>\n</code> 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字（0-7），则 n 为一个八进制转义值。</td></tr><tr><td><code>\nm</code></td><td>标识一个八进制转义值或一个向后引用。如果 <code>\nm</code> 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 <code>\nm</code> 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字（0-7），则 <code>\nm</code> 将匹配八进制转义值 nm。</td></tr><tr><td><code>\nml</code></td><td>如果 n 为八进制数字（0-3），且 m 和 l 均为八进制数字（0-7），则匹配八进制转义值 nml。</td></tr><tr><td><code>\un</code></td><td>匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如，<code>\u00A9</code> 匹配版权符号（©）。</td></tr></tbody></table><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F" target="_blank" rel="noopener">Wikipedia 正则表达式</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank" rel="noopener">MDN RegExp</a></p><p><a href="https://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">正则表达式 30 分钟入门教程 - DeerChao</a></p>]]></content>
    
    <summary type="html">
    
      正则表达式从小白到入门
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>macOS 使用 Homebrew 的经验分享</title>
    <link href="https://wsgzao.github.io/post/homebrew/"/>
    <id>https://wsgzao.github.io/post/homebrew/</id>
    <published>2019-09-11T06:59:49.000Z</published>
    <updated>2019-09-17T03:16:50.471Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本来想着 macOS 使用 Homebrew 对大家没啥难度，之前就分享了一篇介绍 homebrew-bundle 备份恢复的文章，不过长期使用后还是觉得有必要做一下总结，道理也很简单，越简单越频繁使用的产品就越值得挖掘一些背自己忽视的小技巧，因为如果可以做到每天节省 5 分钟那么量变可能会成为质变。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 11 日 - 更新转载 <a href="https://crispgm.com/page/dive-in-homebrew.html" target="_blank" rel="noopener">Homebrew 深度应用</a><br>2019 年 09 月 08 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/homebrew/">https://wsgzao.github.io/post/homebrew/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew</a></p><p><a href="https://wsgzao.github.io/post/homebrew-bundle/">macOS 使用 homebrew-bundle 优雅的备份和恢复软件列表</a></p><hr><h2 id="Homebrew-简介"><a href="#Homebrew-简介" class="headerlink" title="Homebrew 简介"></a>Homebrew 简介</h2><p>Homebrew 是一款享有盛名的包管理工具，是 macOS 上包管理的事实 (de facto) 标准 。Homebrew 的意思是家酿啤酒。</p><p>它的官方 slogan 是 The missing package manager for macOS (or Linux)。Linuxbrew 已经在 Homebrew 1.9 正式合入，成为 Homebrew 的 “一等公民”。</p><p>Homebrew 最早的创建者是 Max Howell，目前的主要维护者是 Mike McQuaid。同 Jekyll 等开源项目一样，Homebrew 的核心维护者也是 GitHub 的员工。GitHub 对于员工亲自参加开源项目方面，做得一直不错。</p><p>顺带插播一条奇闻逸事：Homebrew 的创始人 Max Howell 活跃在开源社区，目前主要从事 Swift 相关的库开发。他在 2015 年初曾去 Google 面试，因为 “白板” 写算法题「翻转二叉树」失败，愤而发 tweet 讽刺：</p><blockquote><p>Google: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so fuck off. </p></blockquote><h2 id="为什么需要-Homebrew"><a href="#为什么需要-Homebrew" class="headerlink" title="为什么需要 Homebrew"></a>为什么需要 Homebrew</h2><p>对于使用 Unix/Linux 类系统的用户往往都遇到过这些需求：</p><ul><li>开源程序是源码分发，需要自己编译，但 <code>./configure</code> 参数超多，还要解决各种库的依赖</li><li>想把软件安装到用户目录，而不是系统目录（这样不需要 root 权限）</li><li>自己编译安装了软件，想删除时却不知道在哪里删除和删除哪些文件</li></ul><p>各 Linux 发行版为了提升安装软件的体验，大多都提供了官方的包管理器，如 Ubuntu 的 aptitude (apt-get)。而苹果官方没有为 macOS 提供包管理器，市面上最好的解决方案就是 Homebrew。</p><p>目前 Homebrew 的中文内容大多以简单入门级教程为主，对于它的各类能力提之甚少，我希望在这里更全面的分享 Homebrew。</p><h2 id="Homebrew-快速入门"><a href="#Homebrew-快速入门" class="headerlink" title="Homebrew 快速入门"></a>Homebrew 快速入门</h2><p>网上基础的教程很多，我这里只简略的介绍下。对于基础功能类的深度用法，推荐这篇 <a href="https://swiftcafe.io/post/home-brew" target="_blank" rel="noopener">macOS 包管理工具 Homebrew 不完全指南</a>。</p><h3 id="Homebrew-安装"><a href="#Homebrew-安装" class="headerlink" title="Homebrew 安装"></a>Homebrew 安装</h3><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>开始安装前需要安装 macOS 命令行工具：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select —install</span><br></pre></td></tr></table></figure><p>或者，在 <a href="https://developer.apple.com/download/more/" target="_blank" rel="noopener">https://developer.apple.com/download/more/</a> 下载安装。</p><p>然后执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure><h3 id="基础功能"><a href="#基础功能" class="headerlink" title="基础功能"></a>基础功能</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 安装 </span><br><span class="line">brew install wget</span><br><span class="line"></span><br><span class="line"># 完成安装后可以列出已安装内容 </span><br><span class="line">brew list</span><br><span class="line"></span><br><span class="line"># 显示可以升级的包 </span><br><span class="line">brew outdated</span><br><span class="line"></span><br><span class="line">cmake (3.13.4) &lt; 3.14.0</span><br><span class="line">yarn (1.13.0) &lt; 1.15.2</span><br><span class="line">youtube-dl (2019.03.09) &lt; 2019.03.18</span><br><span class="line"></span><br><span class="line"># 进行升级 </span><br><span class="line">brew upgrade cmake</span><br><span class="line"></span><br><span class="line"># 删除 </span><br><span class="line">brew uninstall wget</span><br><span class="line"></span><br><span class="line"># 安装桌面程序 </span><br><span class="line">brew cask install google-chrome</span><br></pre></td></tr></table></figure><p>对于 Homebrew-cask 管理桌面程序，这里先不细说，后面会专门讲。</p><p>Homebrew 会把软件安装到 <code>/usr/local/Cellar</code>，并且通过软链链接到 <code>/usr/local/bin</code>。我们可以通过 <code>brew unlink</code> 和 <code>brew link</code> 删除或创建链接。</p><h3 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h3><p>Homebrew 把软件安装过程中的各种名词都进行了拟物化命名，这些命名挺有意思，但对于大多数英语水平一般的人来说，有不少词汇有些生僻。</p><table><thead><tr><th>英文</th><th>直译</th><th>实际含义</th></tr></thead><tbody><tr><td>formula(e)</td><td>公式</td><td>安装包的描述文件，formulae 为复数</td></tr><tr><td>cellar</td><td>地窖</td><td>安装好后所在的目录</td></tr><tr><td>keg</td><td>小桶</td><td>具体某个包所在的目录，keg 是 cellar 的子目录</td></tr><tr><td>bottle</td><td>瓶子</td><td>预先编译好的包，不需要现场下载编译源码，速度会快很多；官方库中的包大多都是通过 bottle 方式安装</td></tr><tr><td>tap</td><td>(插入) 水龙头</td><td>下载启用某个源</td></tr><tr><td>cask</td><td>木桶</td><td>安装 macOS native 应用的扩展</td></tr><tr><td>bundle</td><td>捆</td><td>描述 Homebrew 依赖的扩展</td></tr></tbody></table><h2 id="Homebrew-进阶用法"><a href="#Homebrew-进阶用法" class="headerlink" title="Homebrew 进阶用法"></a>Homebrew 进阶用法</h2><p>对于 Homebrew，我们很多时候往往都是上来就 <code>brew search</code> 或是 <code>brew install</code>。缺什么安什么，没有充分的应用它的强大能力。</p><p>首先，Homebrew 虽为解决控制台程序而生，但它完全有能力（Cask）安装任何桌面软件。它还支持丰富的分类目软件库或第三方库。</p><p>除此之外，它还有一个打包安装或备份工具，可以把已安装的软件输出成 Brewfile。迁移到新电脑时，只要根据 Brewfile 运行 Homebrew bundle，就可以一键安装全部控制台、桌面和来自 Mac App Store 的程序（Mac App Store 上的软件通过 <a href="https://github.com/mas-cli/mas" target="_blank" rel="noopener">mas</a> 支持）。</p><h3 id="Tap"><a href="#Tap" class="headerlink" title="Tap"></a>Tap</h3><p>Tap 在 Homebrew 中我理解是个动词，指的是启用某个源。实际看了下发现，homebrew-services 和 homebrew-bundle 也已 tap 形式存在，因此可以认为 tap 实际指的应该是扩展（extension）。</p><p>Homebrew 默认情况下会自带：</p><ul><li>homebrew/core</li><li>homebrew/cask</li><li>homebrew/services</li><li>homebrew/bundle</li></ul><p>后两者并没有任何公式配方，而只是扩展程序。</p><p>除此之外的源，需要通过 <code>brew tap</code> 来启用。如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap heroku/brew</span><br><span class="line">brew install heroku</span><br></pre></td></tr></table></figure><h3 id="Services"><a href="#Services" class="headerlink" title="Services"></a>Services</h3><p><a href="https://github.com/Homebrew/homebrew-services" target="_blank" rel="noopener">Homebrew-services</a> 是 Homebrew 的后台服务程序扩展，它基于 macOS 的 <code>launchctl</code>。后台服务类程序的安装依旧使用 Homebrew，在管理时可以使用 Homebrew-services 进行启动、重启和停止等操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install mysql</span><br><span class="line">brew services start mysql</span><br></pre></td></tr></table></figure><h3 id="Cask"><a href="#Cask" class="headerlink" title="Cask"></a>Cask</h3><p><a href="https://github.com/Homebrew/homebrew-cask" target="_blank" rel="noopener">Homebrew-cask</a> 是 Homebrew 的 macOS Native 应用扩展，通过 cask 可以安装各类应用程序。</p><p>搜索 Cask 的方法和搜索普通包一样，但安装时需要加上 cask 指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew search google-chrome</span><br><span class="line">brew cask install google-chrome</span><br></pre></td></tr></table></figure><blockquote><p>cask-versions</p></blockquote><p>Homebrew Cask 和 Homebrew 一样，默认库只维护最新版本，但有的时候我们还是需要用旧版的（比如：我只有 Dash 3 的 License，所以需要用 Dash 3 而不是最新的 Dash 4），那就可能需要使用 cask-versions。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap homebrew/cask-versions</span><br><span class="line">brew cask install dash3</span><br></pre></td></tr></table></figure><blockquote><p>cask-fonts</p></blockquote><p>Homebrew 官方的字体源，比如 Mozilla 的开源字体 Fira Code：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap homebrew/cask-fonts</span><br><span class="line">brew cask install font-fira-code</span><br></pre></td></tr></table></figure><h3 id="Bundle"><a href="#Bundle" class="headerlink" title="Bundle"></a>Bundle</h3><p>Homebrew 不仅仅是一个包管理器，还具有软件依赖管理能力。通过 <a href="https://github.com/Homebrew/homebrew-bundle" target="_blank" rel="noopener">Homebrew Bundle</a> 可以帮你解决所有软件依赖，包括官方和第三方的 formula 以及 cask，甚至还包括 Mac App Store（简称 mas）中的应用。</p><p>Homebrew 默认就安装了 Homebrew Bundle。</p><p>我们只需要一个 <code>Brewfile</code>，就可以配置好所有需要的应用。熟悉 Ruby 的人应该不太需要解释，毕竟 Ruby 自己就有 Bundler 这套东西，Brewfile 和 Gemfile 属于对应关系。</p><p>如果你的安装列表已经足够 “干净”，那么可以执行 <code>brew bundle dump</code> 来生成现有依赖，输出到 <code>Brewfile</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">brew bundle dump</span><br><span class="line">cat Brewfile</span><br><span class="line"></span><br><span class="line">brew &quot;git&quot;</span><br><span class="line">brew &quot;wget&quot;</span><br><span class="line">brew &quot;mas&quot;</span><br><span class="line">brew &quot;p7zip&quot;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>如果想自己写也比较容易，<code>Brewfile</code> 是一种简单的 Ruby DSL，写起来比大部分配置文件都简单。只需要掌握一些常用到的命令，主要有 <code>brew</code>, <code>tap</code>, <code>cask</code> 和 <code>mas</code>。</p><p>这四条命令分别对应：</p><ul><li>brew install</li><li>brew tap</li><li>brew cask install</li><li>mas install</li></ul><blockquote><p>注：Homebrew 虽然好用，但 Homebrew 并不能管理 MAS「Mac App Store」上的应用软件，<a href="https://www.hi-linux.com/posts/18202.html" target="_blank" rel="noopener">在终端上轻松管理「Mac App Store」中应用的神器 mas-cli</a></p></blockquote><p>命令行类应用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew &quot;git&quot;</span><br><span class="line">brew &quot;wget&quot;</span><br><span class="line">brew &quot;vim&quot;</span><br></pre></td></tr></table></figure><p>非命令行类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cask &quot;google-chrome&quot;</span><br><span class="line">cask &quot;alfred&quot;</span><br><span class="line">cask &quot;visual-studio-code&quot;</span><br></pre></td></tr></table></figure><p>非官方 Formula 应用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tap  &quot;homebrew/cask-versions&quot;</span><br><span class="line">brew &quot;dash3&quot;</span><br><span class="line">tap  &quot;homebrew/cask-fonts&quot;</span><br><span class="line">cask &quot;font-source-code-pro&quot;</span><br></pre></td></tr></table></figure><p>Mac App Store 上的应用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mas &quot;WeChat&quot;, id: 836500024</span><br></pre></td></tr></table></figure><p>因此，维护好 <a href="https://github.com/crispgm/dotfiles/blob/master/Brewfile" target="_blank" rel="noopener">Brewfile</a> 就可以完美解决应用自动化安装，只需要运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew bundle</span><br></pre></td></tr></table></figure><h2 id="Homebrew-扩展用法"><a href="#Homebrew-扩展用法" class="headerlink" title="Homebrew 扩展用法"></a>Homebrew 扩展用法</h2><h3 id="提交-Formula"><a href="#提交-Formula" class="headerlink" title="提交 Formula"></a>提交 Formula</h3><p>创建并提交一个 Formula 比较容易，官方教程非常详细。这里，我就不做单独介绍了。</p><h3 id="自建-Tap"><a href="#自建-Tap" class="headerlink" title="自建 Tap"></a>自建 Tap</h3><p>Homebrew 除了各种官方维护的源外，还支持自建软件库。默认使用 GitHub，需要以 “homebrew-xxx” 格式命名 Repo。Formula 或 Cask 文件需要存放在 Formula 或 Casks 二级目录中。</p><p>比如，Heroku 的自建库在 GitHub 上是 <code>heroku/homebrew-brew</code>。通过 <code>brew tap heroku/brew</code> 就可以获取库里维护的包了。</p><h3 id="私有-Tap"><a href="#私有-Tap" class="headerlink" title="私有 Tap"></a>私有 Tap</h3><p>上面说到，Tap 默认维护在 GitHub，那么当我们想安装一些需要 <strong> 保密 </strong> 的软件时该怎么办呢？</p><p>答案是 Tap 支持指定 Git，因此也可以使用内网域名内的 Git：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap yourcompany/brew git@git.yourcompany.com: yourcompany/homebrew-brew.git</span><br><span class="line">brew install inhouse-app</span><br></pre></td></tr></table></figure><h2 id="Homebrew-Tips"><a href="#Homebrew-Tips" class="headerlink" title="Homebrew Tips"></a>Homebrew Tips</h2><h3 id="禁用自动升级"><a href="#禁用自动升级" class="headerlink" title="禁用自动升级"></a>禁用自动升级</h3><p>Homebrew 自动升级触发概率很高，由于网络等问题，检查更新会很久有时会比较烦。可以通过环境变量禁用自动升级：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HOMEBREW_NO_AUTO_UPDATE=1 brew info mysql</span><br></pre></td></tr></table></figure><h3 id="直接安装-Formula"><a href="#直接安装-Formula" class="headerlink" title="直接安装 Formula"></a>直接安装 Formula</h3><p>Homebrew 的安装指令并非只支持名字，也可以用文件安装包括网络文件和本地文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 本地 </span><br><span class="line">brew install blabla.rb</span><br><span class="line"># 远程 </span><br><span class="line">brew install https://blablablabla.com/blabla.rb</span><br></pre></td></tr></table></figure><h2 id="安装旧版软件"><a href="#安装旧版软件" class="headerlink" title="安装旧版软件"></a>安装旧版软件</h2><p>Homebrew 默认情况下只支持最新版软件安装，有些重要的版本会单独存在。但想安装一些小版本就得自己 DIY 了。</p><p>我所知有两种方法：</p><ol><li>在 GitHub 找到 Formula 所在 Repo 中（默认为 <a href="https://github.com/Homebrew/homebrew-core/blob/master/Formula/" target="_blank" rel="noopener">homebrew-core</a>）的文件，把文件远程地址复制下来，用 <code>brew install</code> 安装。</li><li>进入 homebrew-core 在 macOS 本地的路径，默认为 <code>/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core</code>，<code>git checkout</code> 到所在 commit，再用 <code>brew pin</code> 锁定这个文件的更新，然后进行安装。</li></ol><h2 id="Homebrew-常见问题"><a href="#Homebrew-常见问题" class="headerlink" title="Homebrew 常见问题"></a>Homebrew 常见问题</h2><blockquote><p>我遇到的问题大多数是升级 macOS Mojave 之后产生的，升级前要三思而后行，先备份，先备份，先备份</p></blockquote><p>Homebrew Permissions Denied Issues Solution</p><pre><code>sudo chown -R $(whoami) $(brew --prefix)/*</code></pre><p>Reference - <a href="https://gist.github.com/irazasyed/7732946" target="_blank" rel="noopener">https://gist.github.com/irazasyed/7732946</a></p><p>xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun.</p><p>Reference - <a href="https://apple.stackexchange.com/questions/254380/why-am-i-getting-an-invalid-active-developer-path-when-attempting-to-use-git-a" target="_blank" rel="noopener">https://apple.stackexchange.com/questions/254380/why-am-i-getting-an-invalid-active-developer-path-when-attempting-to-use-git-a</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># The problem is that you are using XCode and you explicit have to agree to the license agreement. So open Terminal, and run the following:</span><br><span class="line"></span><br><span class="line">xcode-select --install</span><br><span class="line"></span><br><span class="line"># This will download and install xcode developer tools and fix the problem. As a follow on step, you may need to reset the path to Xcode if you have several versions or want the command line tools to run without Xcode.</span><br><span class="line"></span><br><span class="line">xcode-select --switch /Applications/Xcode.app</span><br><span class="line">xcode-select --switch /Library/Developer/CommandLineTools</span><br></pre></td></tr></table></figure><p>Homebrew 国内加速镜像</p><p><a href="https://mirror.tuna.tsinghua.edu.cn/help/homebrew/" target="_blank" rel="noopener">Homebrew 清华大学镜像使用帮助</a></p><p><a href="https://segmentfault.com/a/1190000018520300#articleHeader4" target="_blank" rel="noopener">加速一切 - 配置国内镜像 - Linux apt/macOS brew/Docker/Python Conda/Maven</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://twitter.com/mxcl/status/608682016205344768" target="_blank" rel="noopener">Max Howell on Twitter: “Google: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so fuck off.”</a></p><p><a href="https://github.com/Linuxbrew/brew/issues/612" target="_blank" rel="noopener">https://github.com/Linuxbrew/brew/issues/612</a></p><p><a href="https://docs.brew.sh/Formula-Cookbook#homebrew-terminology" target="_blank" rel="noopener">Formula Cookbook — Homebrew Documentation</a></p><p><a href="http://tmr08c.github.io/devops/2016/10/24/homebrew-glossary.html" target="_blank" rel="noopener">Glossary of Homebrew Terms</a></p><p><a href="https://docs.brew.sh/Formula-Cookbook#an-introduction" target="_blank" rel="noopener">Formula Cookbook — Homebrew Documentation</a></p><p><a href="https://www.hi-linux.com/posts/18202.html" target="_blank" rel="noopener">在终端上轻松管理「Mac App Store」中应用的神器 mas-cli</a></p><p><a href="https://crispgm.com/page/dive-in-homebrew.html" target="_blank" rel="noopener">Homebrew 深度应用</a></p>]]></content>
    
    <summary type="html">
    
      macOS使用Homebrew的经验分享
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Vim 从小白到入门</title>
    <link href="https://wsgzao.github.io/post/vim/"/>
    <id>https://wsgzao.github.io/post/vim/</id>
    <published>2019-09-06T06:59:49.000Z</published>
    <updated>2019-09-12T08:06:17.178Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Vim 是从 vi 发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。和 Emacs 并列成为类 Unix 系统用户最喜欢的编辑器。而 <code>Windows ❤️ Linux</code> 的态度转变相信大家会经常使用到 Vim 文本编辑器，关于 Vim 的文章网上已经很多了本文只记录自己常用的作为备忘录，然而熟练掌握的方法始终只有一个字 <code>用</code>。</p><blockquote><p>Vim 从小白到入门</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 06 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/vim/">https://wsgzao.github.io/post/vim/</a></p><p><strong> 扩展阅读 </strong></p><p>Vim 英文文档 - <a href="http://vimdoc.sourceforge.net/htmldoc/" target="_blank" rel="noopener">http://vimdoc.sourceforge.net/htmldoc/</a></p><p>Vim 中文文档 - <a href="http://vimcdoc.sourceforge.net/doc/" target="_blank" rel="noopener">http://vimcdoc.sourceforge.net/doc/</a></p><hr><h2 id="Vim-键盘图"><a href="#Vim-键盘图" class="headerlink" title="Vim 键盘图"></a>Vim 键盘图</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190906144507.png" alt=""><br><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190906144435.png" alt=""><br><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190906151306.jpg" alt=""></p><h2 id="Vim-入门-5-步骤"><a href="#Vim-入门-5-步骤" class="headerlink" title="Vim 入门 5 步骤"></a>Vim 入门 5 步骤</h2><blockquote><p>完成以下练习恭喜你打开 Vim 的大门</p></blockquote><ol><li>vim HelloWorld.txt</li><li>键入 i</li><li>编辑 输入任意信息，如 Hello World</li><li>键入 [ESC]</li><li>键入: wq 保存退出</li></ol><p>你可以访问 <a href="https://www.openvim.com/" target="_blank" rel="noopener">Vim 在线练习模拟器</a>，通过引导熟悉 Vim</p><h2 id="Vim-基础概念"><a href="#Vim-基础概念" class="headerlink" title="Vim 基础概念"></a>Vim 基础概念</h2><h3 id="Vim-常用模式"><a href="#Vim-常用模式" class="headerlink" title="Vim 常用模式"></a>Vim 常用模式</h3><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190906181131.png" alt=""></p><ul><li>正常模式 (Normal Mode)</li><li>插入模式 (Insert Mode)</li><li>可视模式 (Visual Mode)</li><li>命令模式 (Command Mode)</li></ul><p>①. 正常模式 (Normal Mode)<br>正常模式主要用来浏览和修改文本内容的</p><p>一般的，打开 Vim 都是正常模式。在任何模式下，只要按下 Esc 键就可以返回正常模式。</p><p>②. 插入模式 (Insert Mode)<br>插入模式则用来向文本中添加内容的，我自己常用的是 i 和 o</p><p>i 在光标所在字符前开始输入文字并进入插入模式</p><p>o (字母 o) 在光标所在行的下面单独开一新行来输入文字并进入插入模式</p><p>③. 可视模式 (Visual Mode)<br>可视模式相当于高亮选取文本后的普通模式。</p><p>可视模式具有子模式，以行为单位进行选取的可视行模式，使用 “V” 键进入（也就是 Shift+v）；和以块为单位进行选取的可视块模式，使用 “Ctrl+v” 键进入。</p><p>④. 命令模式 (Command Mode)<br>命令模式则多用于操作文本文件（而不是操作文本文件的内容），例如保存文件；或者用来改变编辑器本身的状态，例如设定多栏窗口、标签或者退出编辑器</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>通过运行 <code>vim -V</code> 可查看整个初始化过程</p><p>Vim 的全局配置一般在 <code>/etc/vimrc</code>，对所有用户生效</p><p>用户个人的配置在 <code>~/.vimrc</code>，你可以把自己喜欢的配置比如 <code>:set number</code> 显示行号添加进去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.vimrc</span><br><span class="line"></span><br><span class="line"><span class="string">"Configuration file for vim</span></span><br><span class="line"><span class="string">set modelines=0"</span> CVE-2007-2438</span><br><span class="line"></span><br><span class="line"><span class="string">"Normally we use vim-extensions. If you want true vi-compatibility</span></span><br><span class="line"><span class="string">"</span> remove change the following statements</span><br><span class="line"><span class="built_in">set</span> nocompatible        <span class="string">"Use Vim defaults instead of 100% vi compatibility</span></span><br><span class="line"><span class="string">set backspace=2"</span> more powerful backspacing</span><br><span class="line"></span><br><span class="line"><span class="string">"Don't write backup file if vim is being called by "</span>crontab -e<span class="string">"</span></span><br><span class="line"><span class="string">au BufWrite /private/tmp/crontab.* set nowritebackup nobackup</span></span><br><span class="line"><span class="string">"</span> Don<span class="string">'t write backup file if vim is being called by "chpass"</span></span><br><span class="line"><span class="string">au BufWrite /private/etc/pw.* set nowritebackup nobackup</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let skip_defaults_vim=1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">set ai                  "auto indenting</span></span><br><span class="line"><span class="string">set ruler" show the cursor position</span></span><br><span class="line"><span class="string">set hlsearch            "highlight the last searched term</span></span><br><span class="line"><span class="string">set history=1000" keep 1000 lines of history</span></span><br><span class="line"><span class="string">syntax on               "syntax highlighting</span></span><br><span class="line"><span class="string">filetype plugin on" use the file type plugins</span></span><br></pre></td></tr></table></figure><h2 id="Vim-常用命令"><a href="#Vim-常用命令" class="headerlink" title="Vim 常用命令"></a>Vim 常用命令</h2><blockquote><p>以下为 Vim 相对高频的命令，在日常使用中善用组合方法，记住核心的几种命令即可</p></blockquote><h3 id="正常模式-Normal-Mode"><a href="#正常模式-Normal-Mode" class="headerlink" title="正常模式 (Normal Mode)"></a>正常模式 (Normal Mode)</h3><table><thead><tr><th>命令</th><th>作用（解释）</th></tr></thead><tbody><tr><td><code>h,j,k,l</code></td><td><code>h</code> 表示往左，<code>j</code> 表示往下，<code>k</code> 表示往右，<code>l</code> 表示往上</td></tr><tr><td><code>Ctrl</code>+ <code>f</code></td><td>上一页</td></tr><tr><td><code>Ctrl</code>+ <code>b</code></td><td>下一页</td></tr><tr><td><code>w</code>,  <code>e</code>, <code>W</code>,  <code>E</code></td><td>跳到单词的后面，小写包括标点</td></tr><tr><td><code>b</code>,  <code>B</code></td><td>以单词为单位往前跳动光标，小写包含标点</td></tr><tr><td><code>o</code></td><td>开启新的一行</td></tr><tr><td><code>^</code></td><td>一行的开始</td></tr><tr><td><code>$</code></td><td>一行的结尾</td></tr><tr><td><code>gg</code></td><td>文档的第一行</td></tr><tr><td><code>[N]G</code></td><td>文档的第 N 行或者最后一行</td></tr><tr><td><code>dd</code></td><td>删除一行</td></tr><tr><td><code>dw</code></td><td>删除一个单词</td></tr><tr><td><code>x</code></td><td>删除后一个字符</td></tr><tr><td><code>X</code></td><td>删除前一个字符</td></tr><tr><td><code>D</code></td><td>删除一行最后一个字符</td></tr><tr><td><code>[N]yy</code></td><td>复制一行或者 N 行</td></tr><tr><td><code>yw</code></td><td>复制一个单词</td></tr><tr><td><code>p</code></td><td>粘贴</td></tr><tr><td><code>u</code></td><td>撤销上一步操作</td></tr><tr><td><code>ctrl</code>+ <code>r</code></td><td>恢复上一步操作</td></tr><tr><td><code>.</code></td><td>重复最后一个命令</td></tr><tr><td><code>/pattern</code></td><td>向光标下搜索字符串，可以是正则表达式</td></tr><tr><td><code>?pattern</code></td><td>向光标上搜索字符串</td></tr><tr><td><code>n</code></td><td>向下搜索前一个搜素动作</td></tr><tr><td><code>N</code></td><td>向上搜索前一个搜索动作</td></tr></tbody></table><h3 id="插入模式-Insert-Mode"><a href="#插入模式-Insert-Mode" class="headerlink" title="插入模式 (Insert Mode)"></a>插入模式 (Insert Mode)</h3><table><thead><tr><th>命令</th><th>作用（解释)</th></tr></thead><tbody><tr><td><code>i</code></td><td>插入到光标前面</td></tr><tr><td><code>I</code></td><td>插入到行的开始位置</td></tr><tr><td><code>a</code></td><td>插入到光标的后面</td></tr><tr><td><code>A</code></td><td>插入到行的最后位置</td></tr><tr><td><code>o</code>,  <code>O</code></td><td>新开一行</td></tr><tr><td><code>Esc</code></td><td>关闭插入模式</td></tr></tbody></table><h3 id="视觉模式-Visual-Mode"><a href="#视觉模式-Visual-Mode" class="headerlink" title="视觉模式 (Visual Mode)"></a>视觉模式 (Visual Mode)</h3><table><thead><tr><th>命令</th><th>作用（解释)</th></tr></thead><tbody><tr><td><code>v</code></td><td>选中一个或多个字符</td></tr><tr><td><code>V</code></td><td>选中行</td></tr><tr><td><code>ctrl</code>+ <code>v</code></td><td>选中列</td></tr></tbody></table><h3 id="命令模式-Command-Mode"><a href="#命令模式-Command-Mode" class="headerlink" title="命令模式 (Command Mode)"></a>命令模式 (Command Mode)</h3><table><thead><tr><th>命令</th><th>作用（解释)</th></tr></thead><tbody><tr><td><code>:set nu</code></td><td>显示行号</td></tr><tr><td><code>:set nonu</code></td><td>取消显示行号</td></tr><tr><td><code>:set paste</code></td><td>设置粘贴模式</td></tr><tr><td><code>:%s/old/new/g</code></td><td>全文替换</td></tr><tr><td><code>:w</code></td><td>保存</td></tr><tr><td><code>:wq</code>, <code>:x</code></td><td>保存并关闭</td></tr><tr><td><code>:q</code></td><td>关闭（已保存）</td></tr><tr><td><code>:q!</code></td><td>强制关闭</td></tr><tr><td><code>:split</code></td><td>水平方向分割出一个窗口</td></tr><tr><td><code>:vsplit</code></td><td>垂直方向分割出一个窗口</td></tr><tr><td><code>:close</code></td><td>关闭窗口</td></tr><tr><td><code>Ctrl</code>+ <code>W</code></td><td>切换窗口， <code>h</code> 到左边窗口，<code>j</code> 到下方窗口，<code>k</code> 到上方窗口，<code>l</code> 到右边窗口</td></tr></tbody></table><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://vimcdoc.sourceforge.net/doc/" target="_blank" rel="noopener">Vim 中文文档</a></p><p><a href="https://coolshell.cn/articles/5426.html" target="_blank" rel="noopener">简明 VIM 练级攻略</a></p><p><a href="https://www.linuxprobe.com/chapter-04.html" target="_blank" rel="noopener">第 4 章 Vim 编辑器与 Shell 命令脚本</a></p><p>《Linux 就该这么学》最新版下载地址： <a href="https://www.linuxprobe.com/docs/LinuxProbe.docx" target="_blank" rel="noopener">Word 版本</a> ， <a href="https://www.linuxprobe.com/docs/LinuxProbe.pdf" target="_blank" rel="noopener">PDF 版本</a></p><p><a href="https://github.com/skywind3000/awesome-cheatsheets/blob/master/editors/vim.txt" target="_blank" rel="noopener">VIM CHEATSHEET (中文速查表)</a></p>]]></content>
    
    <summary type="html">
    
      Vim从小白到入门
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Redis 主从同步配置实践</title>
    <link href="https://wsgzao.github.io/post/redis/"/>
    <id>https://wsgzao.github.io/post/redis/</id>
    <published>2019-09-04T06:59:49.000Z</published>
    <updated>2019-09-04T07:36:42.483Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Redis 是一个高性能的 key-value 数据库，作为一个典型的内存数据库，高速读写性能并支持数据持久化是大多数人选择 Redis 的原因，当然 Redis 也有很多局限，即使现在升级至 6.0 在技术圈仍有很多不同的声音。Redis 监控可以通过 Keepalived 结合简单的脚本实现，也可以基于 Redis Sentinel 监控，如果需要横向扩展使用 Codis 或许是更加成熟稳定的方案。</p><blockquote><p>Redis 主备同步配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 04 日 - 补充 redis.conf 主从模式生产环境配置<br>2018 年 11 月 29 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/redis/">https://wsgzao.github.io/post/redis/</a></p><p><strong> 扩展阅读 </strong></p><p>Redis - <a href="https://redis.io/" target="_blank" rel="noopener">https://redis.io/</a></p><hr><h2 id="Redis-简介"><a href="#Redis-简介" class="headerlink" title="Redis 简介"></a>Redis 简介</h2><p>Redis is often referred as a <em>data structures</em> server. What this means is that Redis provides access to mutable data structures via a set of commands, which are sent using a <em>server-client</em> model with TCP sockets and a simple protocol. So different processes can query and modify the same data structures in a shared way.</p><p>Data structures implemented into Redis have a few special properties:</p><ul><li>Redis cares to store them on disk, even if they are always served and modified into the server memory. This means that Redis is fast, but that is also non-volatile.</li><li>Implementation of data structures stress on memory efficiency, so data structures inside Redis will likely use less memory compared to the same data structure modeled using an high level programming language.</li><li>Redis offers a number of features that are natural to find in a database, like replication, tunable levels of durability, cluster, high availability.</li></ul><p>Another good example is to think of Redis as a more complex version of memcached, where the operations are not just SETs and GETs, but operations to work with complex data types like Lists, Sets, ordered data structures, and so forth.</p><p>If you want to know more, this is a list of selected starting points:</p><ul><li>Introduction to Redis data types. <a href="http://redis.io/topics/data-types-intro" target="_blank" rel="noopener">http://redis.io/topics/data-types-intro</a></li><li>Try Redis directly inside your browser. <a href="http://try.redis.io" target="_blank" rel="noopener">http://try.redis.io</a></li><li>The full list of Redis commands. <a href="http://redis.io/commands" target="_blank" rel="noopener">http://redis.io/commands</a></li><li>There is much more inside the Redis official documentation. <a href="http://redis.io/documentation" target="_blank" rel="noopener">http://redis.io/documentation</a></li></ul><h2 id="Documentation"><a href="#Documentation" class="headerlink" title="Documentation"></a>Documentation</h2><blockquote><p>Latest stable version tar ball</p></blockquote><p><a href="http://download.redis.io/redis-stable.tar.gz" target="_blank" rel="noopener">http://download.redis.io/redis-stable.tar.gz</a></p><p><a href="http://download.redis.io/releases/redis-5.0.2.tar.gz" target="_blank" rel="noopener">http://download.redis.io/releases/redis-5.0.2.tar.gz</a></p><p><a href="http://download.redis.io/releases/redis-3.2.10.tar.gz" target="_blank" rel="noopener">http://download.redis.io/releases/redis-3.2.10.tar.gz</a></p><blockquote><p>Browse source code</p></blockquote><p><a href="http://download.redis.io/redis-stable/" target="_blank" rel="noopener">http://download.redis.io/redis-stable/</a></p><p><a href="http://download.redis.io/redis-stable/README.md" target="_blank" rel="noopener">http://download.redis.io/redis-stable/README.md</a></p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># download</span></span><br><span class="line">wget http://download.redis.io/redis-stable.tar.gz</span><br><span class="line">tar xf redis-stable.tar.gz</span><br><span class="line"><span class="built_in">cd</span> redis-stable</span><br><span class="line"><span class="comment"># check packages</span></span><br><span class="line">yum -y install gcc gcc-c++ tcl</span><br><span class="line"><span class="comment"># check version</span></span><br><span class="line">./src/redis-cli -v</span><br><span class="line">redis-cli 5.0.2</span><br><span class="line"><span class="comment"># start redis server</span></span><br><span class="line">./src/redis-server redis.conf</span><br><span class="line"><span class="comment"># test</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ./redis-stable/src/redis-cli</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> foo bar</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get foo</span><br><span class="line"><span class="string">"bar"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><blockquote><p>不理解的配置参数可以参考官方文档或者下面的中文翻译</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># create directory</span></span><br><span class="line">mkdir -p /data/running/redis-6389</span><br><span class="line">mkdir -p /var/<span class="built_in">log</span>/redis/</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy custom scripts</span></span><br><span class="line">-rwxr-xr-x 1 root root    266 Nov 28 19:11 change_redis.py</span><br><span class="line">-rwxr-xr-x 1 root root    323 Nov 28 19:11 check_redis.sh</span><br><span class="line">-rwxr-xr-x 1 root root     20 Nov 28 19:11 connect_redis.sh</span><br><span class="line">-rw-r--r-- 1 root root     74 Nov 28 19:11 keep_alived_state</span><br><span class="line">-rwxr-xr-x 1 root root    829 Nov 28 19:11 keepalived.state.sh</span><br><span class="line">-rwxr-xr-x 1 root root 173376 Nov 28 19:11 redis-cli</span><br><span class="line">-rw-r----- 1 root root  46666 Nov 28 19:11 redis.conf</span><br><span class="line">-rwxr-xr-x 1 root root 979464 Nov 28 19:11 redis-server</span><br><span class="line">-rwxr-xr-x 1 root root     74 Nov 28 19:11 start_redis.sh</span><br><span class="line">-rwxr-xr-x 1 root root     38 Nov 28 19:11 stop_redis.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># set custom values</span></span><br><span class="line">[root@sg-gop-10-71-12-78 redis-6389]<span class="comment"># grep -Ev "^$|#" redis.conf</span></span><br><span class="line">protected-mode no</span><br><span class="line">port 6389</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize yes</span><br><span class="line">supervised no</span><br><span class="line">pidfile /var/run/redis_6389.pid</span><br><span class="line">loglevel notice</span><br><span class="line">logfile /var/<span class="built_in">log</span>/redis/redis-6389.log</span><br><span class="line">databases 16</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">dir /data/running/redis-6389</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line">slave-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">slave-priority 100</span><br><span class="line">maxclients 50000</span><br><span class="line">maxmemory 400gb</span><br><span class="line">maxmemory-policy allkeys-lru</span><br><span class="line">appendonly yes</span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 0 0 0</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># set slave</span></span><br><span class="line">telnet 127.0.0.1 6389</span><br><span class="line">slaveof 10.71.12.70 6389</span><br><span class="line"><span class="comment"># cancel slave</span></span><br><span class="line">slaveof no one</span><br><span class="line">info</span><br><span class="line"><span class="comment"># Replication</span></span><br><span class="line">role:master</span><br><span class="line">connected_slaves:1</span><br><span class="line">slave0:ip=10.71.12.71,port=6389,state=online,offset=2283,lag=1</span><br><span class="line">master_repl_offset:2283</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:2</span><br><span class="line">repl_backlog_histlen:2282</span><br><span class="line"><span class="comment"># Replication</span></span><br><span class="line">role:slave</span><br><span class="line">master_host:10.71.12.70</span><br><span class="line">master_port:6389</span><br><span class="line">master_link_status:up</span><br><span class="line">master_last_io_seconds_ago:5</span><br><span class="line">master_sync_in_progress:0</span><br><span class="line">slave_repl_offset:2059</span><br><span class="line">slave_priority:100</span><br><span class="line">slave_read_only:1</span><br><span class="line">connected_slaves:0</span><br><span class="line">master_repl_offset:0</span><br><span class="line">repl_backlog_active:0</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:0</span><br><span class="line">repl_backlog_histlen:0</span><br></pre></td></tr></table></figure><h2 id="redis-conf-配置英文原版"><a href="#redis-conf-配置英文原版" class="headerlink" title="redis.conf 配置英文原版"></a>redis.conf 配置英文原版</h2><blockquote><p>最简单的模式只需要修改 daemonize yes，然后备机使用 slaveof 命令设置即可</p></blockquote><p><a href="http://download.redis.io/redis-stable/redis.conf" target="_blank" rel="noopener">http://download.redis.io/redis-stable/redis.conf</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Redis 默认配置</span></span><br><span class="line">[root@localhost redis-stable]<span class="comment"># grep -Ev "^$|#" redis.conf</span></span><br><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line">protected-mode yes</span><br><span class="line">port 6379</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize no</span><br><span class="line">supervised no</span><br><span class="line">pidfile /var/run/redis_6379.pid</span><br><span class="line">loglevel notice</span><br><span class="line">logfile <span class="string">""</span></span><br><span class="line">databases 16</span><br><span class="line">always-show-logo yes</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">dir ./</span><br><span class="line">replica-serve-stale-data yes</span><br><span class="line">replica-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">replica-priority 100</span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">replica-lazy-flush no</span><br><span class="line">appendonly no</span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">aof-use-rdb-preamble yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">stream-node-max-bytes 4096</span><br><span class="line">stream-node-max-entries 100</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit replica 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">dynamic-hz yes</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line">rdb-save-incremental-fsync yes</span><br></pre></td></tr></table></figure><h2 id="redis-conf-配置中文翻译"><a href="#redis-conf-配置中文翻译" class="headerlink" title="redis.conf 配置中文翻译"></a>redis.conf 配置中文翻译</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#redis.conf</span></span><br><span class="line"><span class="comment"># Redis configuration file example.</span></span><br><span class="line"><span class="comment"># ./redis-server /path/to/redis.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################## INCLUDES ###################################</span></span><br><span class="line"><span class="comment"># 这在你有标准配置模板但是每个 redis 服务器又需要个性设置的时候很有用。</span></span><br><span class="line">include /path/to/local.conf</span><br><span class="line">include /path/to/other.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ GENERAL #####################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否在后台执行，yes：后台运行；no：不是后台运行（老版本默认）</span></span><br><span class="line">daemonize yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.2 里的参数，是否开启保护模式，默认开启。要是配置里没有指定 bind 和密码。开启该参数后，redis 只会本地进行访问，拒绝外部访问。要是开启了密码   和 bind，可以开启。否   则最好关闭，设置为 no。</span></span><br><span class="line">protected-mode yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#redis 的进程文件 </span></span><br><span class="line">pidfile /var/run/redis/redis-server.pid</span><br><span class="line"></span><br><span class="line"><span class="comment">#redis 监听的端口号。</span></span><br><span class="line">port 6379</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此参数确定了 TCP 连接中已完成队列(完成三次握手之后) 的长度， 当然此值必须不大于 Linux 系统定义的 / proc/sys/net/core/somaxconn 值，默认是 511，而 Linux 的默认参数值是 128。当系统并发量大并且客户端速度缓慢的时候，可以将这二个参数一起参考设定。该内核参数默认值一般是 128，对于负载很大的服务程序来说大大的不够。一般会将它修改为 2048 或者更大。在 / etc/sysctl.conf 中添加: net.core.somaxconn = 2048，然后在终端中执行 sysctl -p。</span></span><br><span class="line">tcp-backlog 511</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定 redis 只接收来自于该 IP 地址的请求，如果不进行设置，那么将处理所有请求 </span></span><br><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 unix socket 来让 redis 支持监听本地连接。</span></span><br><span class="line"><span class="comment"># unixsocket /var/run/redis/redis.sock</span></span><br><span class="line"><span class="comment"># 配置 unix socket 使用文件的权限</span></span><br><span class="line"><span class="comment"># unixsocketperm 700</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 此参数为设置客户端空闲超过 timeout，服务端会断开连接，为 0 则服务端不会主动断开连接，不能小于 0。</span></span><br><span class="line">timeout 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#tcp keepalive 参数。如果设置不为 0，就使用配置 tcp 的 SO_KEEPALIVE 值，使用 keepalive 有两个好处: 检测挂掉的对端。降低中间设备出问题而导致网络看似连接却已经与对端端口的问题。在 Linux 内核中，设置了 keepalive，redis 会定时给对端发送 ack。检测到对端关闭需要两倍的设置值。</span></span><br><span class="line">tcp-keepalive 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定了服务端日志的级别。级别包括：debug（很多信息，方便开发、测试），verbose（许多有用的信息，但是没有 debug 级别信息多），notice（适当的日志级别，适合生产环境），warn（只有非常重要的信息）</span></span><br><span class="line">loglevel notice</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定了记录日志的文件。空字符串的话，日志会打印到标准输出设备。后台运行的 redis 标准输出是 / dev/null。</span></span><br><span class="line">logfile /var/<span class="built_in">log</span>/redis/redis-server.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否打开记录 syslog 功能</span></span><br><span class="line"><span class="comment"># syslog-enabled no</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#syslog 的标识符。</span></span><br><span class="line"><span class="comment"># syslog-ident redis</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志的来源、设备</span></span><br><span class="line"><span class="comment"># syslog-facility local0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库的数量，默认使用的数据库是 DB 0。可以通过”SELECT “命令选择一个 db</span></span><br><span class="line">databases 16</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ SNAPSHOTTING ################################</span></span><br><span class="line"><span class="comment"># 快照配置</span></span><br><span class="line"><span class="comment"># 注释掉“save” 这一行配置项就可以让保存数据库功能失效 </span></span><br><span class="line"><span class="comment"># 设置 sedis 进行数据库镜像的频率。</span></span><br><span class="line"><span class="comment"># 900 秒（15 分钟）内至少 1 个 key 值改变（则进行数据库保存 -- 持久化） </span></span><br><span class="line"><span class="comment"># 300 秒（5 分钟）内至少 10 个 key 值改变（则进行数据库保存 -- 持久化） </span></span><br><span class="line"><span class="comment"># 60 秒（1 分钟）内至少 10000 个 key 值改变（则进行数据库保存 -- 持久化）</span></span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当 RDB 持久化出现错误后，是否依然进行继续进行工作，yes：不能进行工作，no：可以继续进行工作，可以通过 info 中的 rdb_last_bgsave_status 了解 RDB 持久化是否有错误</span></span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用压缩 rdb 文件，rdb 文件压缩使用 LZF 压缩算法，yes：压缩，但是需要一些 cpu 的消耗。no：不压缩，需要更多的磁盘空间</span></span><br><span class="line">rdbcompression yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否校验 rdb 文件。从 rdb 格式的第五个版本开始，在 rdb 文件的末尾会带上 CRC64 的校验和。这跟有利于文件的容错性，但是在保存 rdb 文件的时候，会有大概 10% 的性能损耗，所以如果你追求高性能，可以关闭该配置。</span></span><br><span class="line">rdbchecksum yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#rdb 文件的名称</span></span><br><span class="line">dbfilename dump.rdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据目录，数据库的写入会在这个目录。rdb、aof 文件也会写在这个目录</span></span><br><span class="line">dir /var/lib/redis</span><br><span class="line"></span><br><span class="line"><span class="comment">################################# REPLICATION #################################</span></span><br><span class="line"><span class="comment"># 复制选项，slave 复制对应的 master。</span></span><br><span class="line"><span class="comment"># slaveof &lt;masterip&gt; &lt;masterport&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果 master 设置了 requirepass，那么 slave 要连上 master，需要有 master 的密码才行。masterauth 就是用来配置 master 的密码，这样可以在连上 master 后进行认证。</span></span><br><span class="line"><span class="comment"># masterauth &lt;master-password&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当从库同主机失去连接或者复制正在进行，从机库有两种运行方式：1) 如果 slave-serve-stale-data 设置为 yes(默认设置)，从库会继续响应客户端的请求。2) 如果 slave-serve-stale-data 设置为 no，除去 INFO 和 SLAVOF 命令之外的任何请求都会返回一个错误”SYNC with master in progress”。</span></span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 作为从服务器，默认情况下是只读的（yes），可以修改成 NO，用于写（不建议）。</span></span><br><span class="line">slave-read-only yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否使用 socket 方式复制数据。目前 redis 复制提供两种方式，disk 和 socket。如果新的 slave 连上来或者重连的 slave 无法部分同步，就会执行全量同步，master 会生成 rdb 文件。有 2 种方式：disk 方式是 master 创建一个新的进程把 rdb 文件保存到磁盘，再把磁盘上的 rdb 文件传递给 slave。socket 是 master 创建一个新的进程，直接把 rdb 文件以 socket 的方式发给 slave。disk 方式的时候，当一个 rdb 保存的过程中，多个 slave 都能共享这个 rdb 文件。socket 的方式就的一个个 slave 顺序复制。在磁盘速度缓慢，网速快的情况下推荐用 socket 方式。</span></span><br><span class="line">repl-diskless-sync no</span><br><span class="line"></span><br><span class="line"><span class="comment">#diskless 复制的延迟时间，防止设置为 0。一旦复制开始，节点不会再接收新 slave 的复制请求直到下一个 rdb 传输。所以最好等待一段时间，等更多的 slave 连上来。</span></span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line"></span><br><span class="line"><span class="comment">#slave 根据指定的时间间隔向服务器发送 ping 请求。时间间隔可以通过 repl_ping_slave_period 来设置，默认 10 秒。</span></span><br><span class="line"><span class="comment"># repl-ping-slave-period 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制连接超时时间。master 和 slave 都有超时时间的设置。master 检测到 slave 上次发送的时间超过 repl-timeout，即认为 slave 离线，清除该 slave 信息。slave 检测到上次和 master 交互的时间超过 repl-timeout，则认为 master 离线。需要注意的是 repl-timeout 需要设置一个比 repl-ping-slave-period 更大的值，不然会经常检测到超时。</span></span><br><span class="line"><span class="comment"># repl-timeout 60</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否禁止复制 tcp 链接的 tcp nodelay 参数，可传递 yes 或者 no。默认是 no，即使用 tcp nodelay。如果 master 设置了 yes 来禁止 tcp nodelay 设置，在把数据复制给 slave 的时候，会减少包的数量和更小的网络带宽。但是这也可能带来数据的延迟。默认我们推荐更小的延迟，但是在数据量传输很大的场景下，建议选择 yes。</span></span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制缓冲区大小，这是一个环形复制缓冲区，用来保存最新复制的命令。这样在 slave 离线的时候，不需要完全复制 master 的数据，如果可以执行部分同步，只需要把缓冲区的部分数据复制给 slave，就能恢复正常复制状态。缓冲区的大小越大，slave 离线的时间可以更长，复制缓冲区只有在有 slave 连接的时候才分配内存。没有 slave 的一段时间，内存会被释放出来，默认 1m。</span></span><br><span class="line"><span class="comment"># repl-backlog-size 5mb</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#master 没有 slave 一段时间会释放复制缓冲区的内存，repl-backlog-ttl 用来设置该时间长度。单位为秒。</span></span><br><span class="line"><span class="comment"># repl-backlog-ttl 3600</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当 master 不可用，Sentinel 会根据 slave 的优先级选举一个 master。最低的优先级的 slave，当选 master。而配置成 0，永远不会被选举。</span></span><br><span class="line">slave-priority 100</span><br><span class="line"></span><br><span class="line"><span class="comment">#redis 提供了可以让 master 停止写入的方式，如果配置了 min-slaves-to-write，健康的 slave 的个数小于 N，mater 就禁止写入。master 最少得有多少个健康的 slave 存活才能执行写命令。这个配置虽然不能保证 N 个 slave 都一定能接收到 master 的写操作，但是能避免没有足够健康的 slave 的时候，master 不能写入来避免数据丢失。设置为 0 是关闭该功能。</span></span><br><span class="line"><span class="comment"># min-slaves-to-write 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 延迟小于 min-slaves-max-lag 秒的 slave 才认为是健康的 slave。</span></span><br><span class="line"><span class="comment"># min-slaves-max-lag 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 1 或另一个设置为 0 禁用这个特性。</span></span><br><span class="line"><span class="comment"># Setting one or the other to 0 disables the feature.</span></span><br><span class="line"><span class="comment"># By default min-slaves-to-write is set to 0 (feature disabled) and</span></span><br><span class="line"><span class="comment"># min-slaves-max-lag is set to 10.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################## SECURITY ###################################</span></span><br><span class="line"><span class="comment">#requirepass 配置可以让用户使用 AUTH 命令来认证密码，才能使用其他命令。这让 redis 可以使用在不受信任的网络中。为了保持向后的兼容性，可以注释该命令，因为大部分用户也不需要认证。使用 requirepass 的时候需要注意，因为 redis 太快了，每秒可以认证 15w 次密码，简单的密码很容易被攻破，所以最好使用一个更复杂的密码。</span></span><br><span class="line"><span class="comment"># requirepass foobared</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把危险的命令给修改成其他名称。比如 CONFIG 命令可以重命名为一个很难被猜到的命令，这样用户不能使用，而内部工具还能接着使用。</span></span><br><span class="line"><span class="comment"># rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置成一个空的值，可以禁止一个命令</span></span><br><span class="line"><span class="comment"># rename-command CONFIG ""</span></span><br><span class="line"><span class="comment">################################### LIMITS ####################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置能连上 redis 的最大客户端连接数量。默认是 10000 个客户端连接。由于 redis 不区分连接是客户端连接还是内部打开文件或者和 slave 连接等，所以 maxclients 最小建议设置到 32。如果超过了 maxclients，redis 会给新的连接发送’max number of clients reached’，并关闭连接。</span></span><br><span class="line"><span class="comment"># maxclients 10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#redis 配置的最大内存容量。当内存满了，需要配合 maxmemory-policy 策略进行处理。注意 slave 的输出缓冲区是不计算在 maxmemory 内的。所以为了防止主机内存使用完，建议设置的 maxmemory 需要更小一些。</span></span><br><span class="line"><span class="comment"># maxmemory &lt;bytes&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内存容量超过 maxmemory 后的处理策略。</span></span><br><span class="line"><span class="comment">#volatile-lru：利用 LRU 算法移除设置过过期时间的 key。</span></span><br><span class="line"><span class="comment">#volatile-random：随机移除设置过过期时间的 key。</span></span><br><span class="line"><span class="comment">#volatile-ttl：移除即将过期的 key，根据最近过期时间来删除（辅以 TTL）</span></span><br><span class="line"><span class="comment">#allkeys-lru：利用 LRU 算法移除任何 key。</span></span><br><span class="line"><span class="comment">#allkeys-random：随机移除任何 key。</span></span><br><span class="line"><span class="comment">#noeviction：不移除任何 key，只是返回一个写错误。</span></span><br><span class="line"><span class="comment"># 上面的这些驱逐策略，如果 redis 没有合适的 key 驱逐，对于写命令，还是会返回错误。redis 将不再接收写请求，只接收 get 请求。写命令包括：set setnx setex append incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby getset mset msetnx exec sort。</span></span><br><span class="line"><span class="comment"># maxmemory-policy noeviction</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#lru 检测的样本数。使用 lru 或者 ttl 淘汰算法，从需要淘汰的列表中随机选择 sample 个 key，选出闲置时间最长的 key 移除。</span></span><br><span class="line"><span class="comment"># maxmemory-samples 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################## APPEND ONLY MODE ###############################</span></span><br><span class="line"><span class="comment"># 默认 redis 使用的是 rdb 方式持久化，这种方式在许多应用中已经足够用了。但是 redis 如果中途宕机，会导致可能有几分钟的数据丢失，根据 save 来策略进行持久化，Append Only File 是另一种持久化方式，可以提供更好的持久化特性。Redis 会把每次写入的数据在接收后都写入 appendonly.aof 文件，每次启动时 Redis 都会先把这个文件的数据读入内存里，先忽略 RDB 文件。</span></span><br><span class="line">appendonly no</span><br><span class="line"></span><br><span class="line"><span class="comment">#aof 文件名</span></span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#aof 持久化策略的配置</span></span><br><span class="line"><span class="comment">#no 表示不执行 fsync，由操作系统保证数据同步到磁盘，速度最快。</span></span><br><span class="line"><span class="comment">#always 表示每次写入都执行 fsync，以保证数据同步到磁盘。</span></span><br><span class="line"><span class="comment">#everysec 表示每秒执行一次 fsync，可能会导致丢失这 1s 数据。</span></span><br><span class="line">appendfsync everysec</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 aof 重写或者写入 rdb 文件的时候，会执行大量 IO，此时对于 everysec 和 always 的 aof 模式来说，执行 fsync 会造成阻塞过长时间，no-appendfsync-on-rewrite 字段设置为默认设置为 no。如果对延迟要求很高的应用，这个字段可以设置为 yes，否则还是设置为 no，这样对持久化特性来说这是更安全的选择。设置为 yes 表示 rewrite 期间对新写操作不 fsync, 暂时存在内存中, 等 rewrite 完成后再写入，默认为 no，建议 yes。Linux 的默认 fsync 策略是 30 秒。可能丢失 30 秒数据。</span></span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line"></span><br><span class="line"><span class="comment">#aof 自动重写配置。当目前 aof 文件大小超过上一次重写的 aof 文件大小的百分之多少进行重写，即当 aof 文件增长到一定大小的时候 Redis 能够调用 bgrewriteaof 对日志文件进行重写。当前 AOF 文件大小是上次日志重写得到 AOF 文件大小的二倍（设置为 100）时，自动启动新的日志重写过程。</span></span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line"><span class="comment"># 设置允许重写的最小 aof 文件大小，避免了达到约定百分比但尺寸仍然很小的情况还要重写</span></span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line"></span><br><span class="line"><span class="comment">#aof 文件可能在尾部是不完整的，当 redis 启动的时候，aof 文件的数据被载入内存。重启可能发生在 redis 所在的主机操作系统宕机后，尤其在 ext4 文件系统没有加上 data=ordered 选项（redis 宕机或者异常终止不会造成尾部不完整现象。）出现这种现象，可以选择让 redis 退出，或者导入尽可能多的数据。如果选择的是 yes，当截断的 aof 文件被导入的时候，会自动发布一个 log 给客户端然后 load。如果是 no，用户必须手动 redis-check-aof 修复 AOF 文件才可以。</span></span><br><span class="line">aof-load-truncated yes</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ LUA SCRIPTING ###############################</span></span><br><span class="line"><span class="comment"># 如果达到最大时间限制（毫秒），redis 会记个 log，然后返回 error。当一个脚本超过了最大时限。只有 SCRIPT KILL 和 SHUTDOWN NOSAVE 可以用。第一个可以杀没有调 write 命令的东西。要是已经调用了 write，只能用第二个命令杀。</span></span><br><span class="line">lua-time-limit 5000</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ REDIS CLUSTER ###############################</span></span><br><span class="line"><span class="comment"># 集群开关，默认是不开启集群模式。</span></span><br><span class="line"><span class="comment"># cluster-enabled yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群配置文件的名称，每个节点都有一个集群相关的配置文件，持久化保存集群的信息。这个文件并不需要手动配置，这个配置文件有 Redis 生成并更新，每个 Redis 集群节点需要一个单独的配置文件，请确保与实例运行的系统中配置文件名称不冲突</span></span><br><span class="line"><span class="comment"># cluster-config-file nodes-6379.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点互连超时的阀值。集群节点超时毫秒数</span></span><br><span class="line"><span class="comment"># cluster-node-timeout 15000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在进行故障转移的时候，全部 slave 都会请求申请为 master，但是有些 slave 可能与 master 断开连接一段时间了，导致数据过于陈旧，这样的 slave 不应该被提升为 master。该参数就是用来判断 slave 节点与 master 断线的时间是否过长。判断方法是：</span></span><br><span class="line"><span class="comment"># 比较 slave 断开连接的时间和(node-timeout * slave-validity-factor) + repl-ping-slave-period</span></span><br><span class="line"><span class="comment"># 如果节点超时时间为三十秒, 并且 slave-validity-factor 为 10, 假设默认的 repl-ping-slave-period 是 10 秒，即如果超过 310 秒 slave 将不会尝试进行故障转移 </span></span><br><span class="line"><span class="comment"># cluster-slave-validity-factor 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#master 的 slave 数量大于该值，slave 才能迁移到其他孤立 master 上，如这个参数若被设为 2，那么只有当一个主节点拥有 2 个可工作的从节点时，它的一个从节点会尝试迁移。</span></span><br><span class="line"><span class="comment"># cluster-migration-barrier 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认情况下，集群全部的 slot 有节点负责，集群状态才为 ok，才能提供服务。设置为 no，可以在 slot 没有全部分配的时候提供服务。不建议打开该配置，这样会造成分区的时候，小分区的 master 一直在接受写请求，而造成很长时间数据不一致。</span></span><br><span class="line"><span class="comment"># cluster-require-full-coverage yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################################## SLOW LOG ###################################</span></span><br><span class="line"><span class="comment">###slog log 是用来记录 redis 运行中执行比较慢的命令耗时。当命令的执行超过了指定时间，就记录在 slow log 中，slog log 保存在内存中，所以没有 IO 操作。</span></span><br><span class="line"><span class="comment"># 执行时间比 slowlog-log-slower-than 大的请求记录到 slowlog 里面，单位是微秒，所以 1000000 就是 1 秒。注意，负数时间会禁用慢查询日志，而 0 则会强制记录所有命令。</span></span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 慢查询日志长度。当一个新的命令被写进日志的时候，最老的那个记录会被删掉。这个长度没有限制。只要有足够的内存就行。你可以通过 SLOWLOG RESET 来释放内存。</span></span><br><span class="line">slowlog-max-len 128</span><br><span class="line"></span><br><span class="line"><span class="comment">################################ LATENCY MONITOR ##############################</span></span><br><span class="line"><span class="comment"># 延迟监控功能是用来监控 redis 中执行比较缓慢的一些操作，用 LATENCY 打印 redis 实例在跑命令时的耗时图表。只记录大于等于下边设置的值的操作。0 的话，就是关闭监视。默认延迟监控功能是关闭的，如果你需要打开，也可以通过 CONFIG SET 命令动态设置。</span></span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line"></span><br><span class="line"><span class="comment">############################# EVENT NOTIFICATION ##############################</span></span><br><span class="line"><span class="comment"># 键空间通知使得客户端可以通过订阅频道或模式，来接收那些以某种方式改动了 Redis 数据集的事件。因为开启键空间通知功能需要消耗一些 CPU ，所以在默认配置下，该功能处于关闭状态。</span></span><br><span class="line"><span class="comment">#notify-keyspace-events 的参数可以是以下字符的任意组合，它指定了服务器该发送哪些类型的通知：</span></span><br><span class="line"><span class="comment">##K 键空间通知，所有通知以 __keyspace@__ 为前缀</span></span><br><span class="line"><span class="comment">##E 键事件通知，所有通知以 __keyevent@__ 为前缀</span></span><br><span class="line"><span class="comment">##g DEL 、 EXPIRE 、 RENAME 等类型无关的通用命令的通知</span></span><br><span class="line"><span class="comment">##$ 字符串命令的通知</span></span><br><span class="line"><span class="comment">##l 列表命令的通知</span></span><br><span class="line"><span class="comment">##s 集合命令的通知</span></span><br><span class="line"><span class="comment">##h 哈希命令的通知</span></span><br><span class="line"><span class="comment">##z 有序集合命令的通知</span></span><br><span class="line"><span class="comment">##x 过期事件：每当有过期键被删除时发送</span></span><br><span class="line"><span class="comment">##e 驱逐(evict) 事件：每当有键因为 maxmemory 政策而被删除时发送</span></span><br><span class="line"><span class="comment">##A 参数 g$lshzxe 的别名</span></span><br><span class="line"><span class="comment"># 输入的参数中至少要有一个 K 或者 E，否则的话，不管其余的参数是什么，都不会有任何 通知被分发。详细使用可以参考 http://redis.io/topics/notifications</span></span><br><span class="line"></span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################### ADVANCED CONFIG ###############################</span></span><br><span class="line"><span class="comment"># 数据量小于等于 hash-max-ziplist-entries 的用 ziplist，大于 hash-max-ziplist-entries 用 hash</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="comment">#value 大小小于等于 hash-max-ziplist-value 的用 ziplist，大于 hash-max-ziplist-value 用 hash。</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据量小于等于 list-max-ziplist-entries 用 ziplist，大于 list-max-ziplist-entries 用 list。</span></span><br><span class="line">list-max-ziplist-entries 512</span><br><span class="line"><span class="comment">#value 大小小于等于 list-max-ziplist-value 的用 ziplist，大于 list-max-ziplist-value 用 list。</span></span><br><span class="line">list-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据量小于等于 set-max-intset-entries 用 iniset，大于 set-max-intset-entries 用 set。</span></span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据量小于等于 zset-max-ziplist-entries 用 ziplist，大于 zset-max-ziplist-entries 用 zset。</span></span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line"><span class="comment">#value 大小小于等于 zset-max-ziplist-value 用 ziplist，大于 zset-max-ziplist-value 用 zset。</span></span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"><span class="comment">#value 大小小于等于 hll-sparse-max-bytes 使用稀疏数据结构（sparse），大于 hll-sparse-max-bytes 使用稠密的数据结构（dense）。一个比 16000 大的 value 是几乎没用的，建议的 value 大概为 3000。如果对 CPU 要求不高，对空间要求较高的，建议设置到 10000 左右。</span></span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line"></span><br><span class="line"><span class="comment">#Redis 将在每 100 毫秒时使用 1 毫秒的 CPU 时间来对 redis 的 hash 表进行重新 hash，可以降低内存的使用。当你的使用场景中，有非常严格的实时性需要，不能够接受 Redis 时不时的对请求有 2 毫秒的延迟的话，把这项配置为 no。如果没有这么严格的实时性要求，可以设置为 yes，以便能够尽可能快的释放内存。</span></span><br><span class="line">activerehashing yes</span><br><span class="line"></span><br><span class="line"><span class="comment">## 对客户端输出缓冲进行限制可以强迫那些不从服务器读取数据的客户端断开连接，用来强制关闭传输缓慢的客户端。</span></span><br><span class="line"><span class="comment"># 对于 normal client，第一个 0 表示取消 hard limit，第二个 0 和第三个 0 表示取消 soft limit，normal client 默认取消限制，因为如果没有寻问，他们是不会接收数据的。</span></span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line"><span class="comment"># 对于 slave client 和 MONITER client，如果 client-output-buffer 一旦超过 256mb，又或者超过 64mb 持续 60 秒，那么服务器就会立即断开客户端连接。</span></span><br><span class="line">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class="line"><span class="comment"># 对于 pubsub client，如果 client-output-buffer 一旦超过 32mb，又或者超过 8mb 持续 60 秒，那么服务器就会立即断开客户端连接。</span></span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line"></span><br><span class="line"><span class="comment">#redis 执行任务的频率为 1s 除以 hz。</span></span><br><span class="line">hz 10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 aof 重写的时候，如果打开了 aof-rewrite-incremental-fsync 开关，系统会每 32MB 执行一次 fsync。这对于把文件写入磁盘是有帮助的，可以避免过大的延迟峰值。</span></span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br></pre></td></tr></table></figure><h2 id="生产环境配置"><a href="#生产环境配置" class="headerlink" title="生产环境配置"></a>生产环境配置</h2><p>To configure a master-slave redis with optimum performance, here are some suggestions:</p><ul><li>Kernel Configure:<ul><li>Make sure to set the Linux kernel overcommit memory setting to 1. Add <code>vm.overcommit_memory = 1</code> to <code>/etc/sysctl.conf</code> and then reboot or run the command <code>sysctl vm.overcommit_memory=1</code> for this to take effect immediately.This make redis to consider server always have enough memory to fork.</li><li>Make sure to disable Linux kernel feature <em>transparent huge pages</em>, it will affect greatly both memory usage and latency in a negative way. This is accomplished with the following command: <code>echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</code>. It will change memory page size from 4kb to 2M, increase memory usage on copy-on-write. <a href="https://docs.mongodb.com/manual/tutorial/transparent-huge-pages/#red-hat-centos-7" target="_blank" rel="noopener">https://docs.mongodb.com/manual/tutorial/transparent-huge-pages/#red-hat-centos-7</a></li></ul></li><li><p>Common redis:</p><ul><li><strong>maxclients 50000</strong></li><li><strong>tcp-keepalive 300</strong>, enabled to check tcp dead connections</li><li><strong>daemonize yes</strong>, not using systemd to manage</li><li><strong>maxmemory=70%</strong> of physical memory, leave enough safe space for forking to do background save or full replication. Since remain memory can be used for accumulate changes(which cause copy-on-write) during background save or AOF rewrite.</li><li><strong>stop-writes-on-bgsave-error no</strong>, to allow client write even on failure of rdb background save, increase robustness of redis master.</li><li><strong>repl-backlog-size 1gb</strong>. should be determined by the write LOAD of clients, the default is 1mb, we can raise it to 1gb.</li><li><strong>repl-backlog-ttl 0</strong>,never release backlog buffer</li><li><strong>client-output-buffer-limit slave <maxmemory> 0 0</maxmemory></strong>, disable soft limit, set hardlimit same as maxmemory size, if set this to unlimited, and slave is blocking, will used up all memory and force master to evict all keys.</li><li><strong>maxmemory-policy volatile-lru</strong>, only volatile keys will be evicted.</li><li><strong>appendfsync everysec</strong>，if both master and slave crash due to power shortage, we can ensure only lost 1 second data in slave.</li><li><strong>no-appendfsync-on-rewrite yes</strong>, make sure slave would be not blocking by rewrite process if try to write AOF log, so slave can follow master closely, we prefer availability to durability.</li><li><strong>aof-load-truncated yes</strong>, let redis fix truncated error by itself.</li><li>The repl_backlog is only allocated once there is at least a replica connected.</li><li>If slave disconnected from master and write changes exceed repl-backlog-size. The master will do a background save, which will block all clients when forking which utilize copy-on-write to allocated memory if changed during dump, it may not double the memory usage if memory page size is small and load not too high.</li><li>No need to enable repl-diskless-sync , it also requires fork, but only will write to socket instead of disk.</li><li><p>can change python logic code to use hash type for kv type, such as redis tokens, it can reduce memory profoundly</p><ul><li><p>hash-max-ziplist-value 64</p></li><li><p>hash-max-ziplist-entries 512</p></li></ul></li></ul></li><li><p>Redis master</p><ul><li><strong>save “”</strong></li><li><strong>appendonly no</strong></li><li>disable RDB and AOF, since process forking  caused by RDB and AOF will block all commands. INFO command to check fork time for each gigabytes: latest_fork_usec:<strong>2568287us</strong> / used_memory_human: <strong>76.02G</strong> =<strong>33.784ms</strong>, for each gigabyte, it may take 33ms to fork</li></ul></li><li><p>Redis slave:</p><ul><li><p>enable RDB dump.</p><ul><li><strong>save 900 1</strong><br><strong>save 300 10</strong><br><strong>save 60 10000</strong></li></ul></li><li><p>enable AOF：</p><ul><li><strong>appendonly yes</strong></li></ul></li><li>be cautious if master is empty, the slaveof can wipe out all slave keys.</li></ul></li><li>Fail-over<ul><li>config set <strong>save “”</strong> -- disable RDB in master</li><li>config set <strong>appendonly no</strong> -- disable AOF in master</li><li>take note on latest_fork_usec:5934556, this means redis master will be blocked for 5.9 seconds, and if keepalived healthy check mistakenly consider this as downtime, its VIP will failover to slave which cause the current syncing slave become master, in this case, do not empty slave when trying to sync with master which may cause empty ‘<em>master</em>‘ at the moment.</li><li>When slave try to sync with master, remember to set keepalived fail count to be much bigger number, to prevent keepalived falsely to do unwanted failover.</li><li>If AOF enabled, redis will ignore dump.rdb file during initial loading.</li><li>On instance, where only one redis, can use service keepalived restart to failover, but if with two or more instance, it has to stop_redis.sh to let keepalived failover to another instance</li><li><strong>Never stop_redis.sh on master, it may lost all data if appendonly.aof is empty, and cause long init loading time if data set is bigger!</strong></li></ul></li></ul><h3 id="redis-conf-线上配置"><a href="#redis-conf-线上配置" class="headerlink" title="redis.conf 线上配置"></a>redis.conf 线上配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-71-12-77 redis-6389]<span class="comment"># grep -Ev '^$|#' redis.conf</span></span><br><span class="line">protected-mode no</span><br><span class="line">port 6389</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize yes</span><br><span class="line">supervised no</span><br><span class="line">pidfile /var/run/redis_6389.pid</span><br><span class="line">loglevel notice</span><br><span class="line">logfile /var/<span class="built_in">log</span>/redis/redis-6389.log</span><br><span class="line">databases 16</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error no</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">dir /data/running/redis-6389</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line">slave-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">repl-backlog-size 1gb</span><br><span class="line">repl-backlog-ttl 0</span><br><span class="line">slave-priority 100</span><br><span class="line">maxclients 50000</span><br><span class="line">maxmemory 700gb</span><br><span class="line">maxmemory-policy volatile-lru</span><br><span class="line">appendonly no</span><br><span class="line">appendfilename <span class="string">"appendonly.aof"</span></span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite yes</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events <span class="string">""</span></span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-entries 512</span><br><span class="line"><span class="built_in">hash</span>-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line"><span class="built_in">set</span>-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 700gb 0 0</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br></pre></td></tr></table></figure><h2 id="自定义脚本"><a href="#自定义脚本" class="headerlink" title="自定义脚本"></a>自定义脚本</h2><blockquote><p>使用 keepalived 做最基本的高可用</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-71-12-78 redis-6389]<span class="comment"># cat start_redis.sh</span></span><br><span class="line">/data/running/redis-6389/redis-server /data/running/redis-6389/redis.conf</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-12-78 redis-6389]<span class="comment"># cat connect_redis.sh</span></span><br><span class="line">./redis-cli -p 6389</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-12-78 redis-6389]<span class="comment"># cat stop_redis.sh</span></span><br><span class="line"><span class="built_in">kill</span> -9 `cat /var/run/redis_6389.pid`</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-12-78 redis-6389]<span class="comment"># cat check_redis.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Check if redis is running, return 1 if not.</span></span><br><span class="line"><span class="comment"># Used by keepalived to initiate a failover in case redis is down</span></span><br><span class="line"></span><br><span class="line">REDIS_STATUS=$(telnet 127.0.0.1 6389 &lt; /dev/null | grep <span class="string">"Connected"</span> )</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$REDIS_STATUS</span>"</span> != <span class="string">""</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  logger <span class="string">"REDIS is NOT running. Setting keepalived state to FAULT."</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-12-78 redis-6389]<span class="comment"># cat change_redis.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line">import redis</span><br><span class="line">import re</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"><span class="comment">#main</span></span><br><span class="line">status=sys.argv[1]</span><br><span class="line">r = redis.StrictRedis(host=<span class="string">'localhost'</span>, port=6389, db=0)</span><br><span class="line"><span class="built_in">print</span> r.info().get(<span class="string">"role"</span>)</span><br><span class="line"><span class="keyword">if</span> status == <span class="string">'master'</span>:</span><br><span class="line">        r.slaveof()</span><br><span class="line">        r.config_set(<span class="string">"save"</span>, <span class="string">""</span>)</span><br><span class="line"><span class="built_in">print</span> r.info().get(<span class="string">"role"</span>)</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-12-78 redis-6389]<span class="comment"># cat keepalived.state.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">TYPE=<span class="variable">$1</span> <span class="comment">#GROUP or INSTANCE</span></span><br><span class="line">NAME=<span class="variable">$2</span> <span class="comment">#name of group or instance</span></span><br><span class="line">STATE=<span class="variable">$3</span> <span class="comment">#MASTER, BACKUP FAULT</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$STATE</span> <span class="keyword">in</span></span><br><span class="line">        <span class="string">"MASTER"</span>) <span class="built_in">echo</span> $(date)<span class="string">':'</span><span class="variable">$STATE</span> &gt;&gt; /data/running/redis-6389/keep_alived_state <span class="comment">#Become redis master</span></span><br><span class="line">                  python /data/running/redis-6389/change_redis.py master</span><br><span class="line">                  <span class="built_in">exit</span> 0</span><br><span class="line">                  ;;</span><br><span class="line">        <span class="string">"BACKUP"</span>) <span class="built_in">echo</span> $(date)<span class="string">':'</span><span class="variable">$STATE</span> &gt;&gt; /data/running/redis-6389/keep_alived_state <span class="comment">#Become redis slave</span></span><br><span class="line">                  python /data/running/redis-6389/change_redis.py slave</span><br><span class="line">                  <span class="built_in">exit</span> 0</span><br><span class="line">                  ;;</span><br><span class="line">        <span class="string">"FAULT"</span>)  <span class="built_in">echo</span> $(date)<span class="string">':'</span><span class="variable">$STATE</span> &gt;&gt; /data/running/redis-6389/keep_alived_state <span class="comment">#restart and become redis slave</span></span><br><span class="line">                  <span class="built_in">exit</span> 0</span><br><span class="line">                  ;;</span><br><span class="line">        *)        <span class="built_in">echo</span> <span class="string">"unknown state"</span></span><br><span class="line">                  <span class="built_in">exit</span> 1</span><br><span class="line">                  ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-71-12-77 wangao]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">vrrp_script check_redis &#123;</span><br><span class="line">    script <span class="string">"/data/running/redis-6389/check_redis.sh"</span></span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_sync_group NC-MAIN-HA &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        NC-MAIN-HA-PRI</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance NC-MAIN-HA-PRI &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 77</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.13.77/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_redis</span><br><span class="line">    &#125;</span><br><span class="line">    notify /data/running/redis-6389/keepalived.state.sh</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Keepalived 切换逻辑代码已经分享至 GitHub</p><p><a href="https://github.com/wsgzao/redis" target="_blank" rel="noopener">https://github.com/wsgzao/redis</a></p>]]></content>
    
    <summary type="html">
    
      Redis主备同步配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>LVS-TUN 原理介绍和配置实践</title>
    <link href="https://wsgzao.github.io/post/lvs-tun/"/>
    <id>https://wsgzao.github.io/post/lvs-tun/</id>
    <published>2019-09-03T10:59:49.000Z</published>
    <updated>2019-09-10T09:04:45.964Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要讲述 LVS-TUN 原理介绍和配置实践，HA 高可用方案基于 Keepalived。</p><blockquote><p>LVS-TUN 原理介绍和配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 03 日 - 拆分 LVS-Keepalived 中 LVS-TUN<br>2019 年 08 月 23 日 - 更新 LVS/NAT、LVS/DR、LVS/TUN 三种模式的原理和配置实践<br>2018 年 12 月 03 日 - 精简和更新配置步骤<br>2018 年 07 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/lvs-tun/">https://wsgzao.github.io/post/lvs-tun/</a></p><p><strong> 扩展阅读 </strong></p><p>LVS - <a href="http://www.linuxvirtualserver.org/zh/index.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/zh/index.html</a><br>Keepalived - <a href="http://www.keepalived.org/" target="_blank" rel="noopener">http://www.keepalived.org/</a></p><hr><h2 id="ReadMe"><a href="#ReadMe" class="headerlink" title="ReadMe"></a>ReadMe</h2><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>Virtual Server via IP Tunneling - <a href="http://www.linuxvirtualserver.org/VS-IPTunneling.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/VS-IPTunneling.html</a><br>LVS 和 Keepalived 官方中文手册 PDF - <a href="https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg</a></p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><blockquote><p>以下术语涉及 LVS 三种工作模式的原理</p></blockquote><ul><li>LB (Load Balancer 负载均衡) </li><li>HA (High Available 高可用) </li><li>Failover (失败切换) </li><li>Cluster (集群) </li><li>LVS (Linux Virtual Server Linux 虚拟服务器) </li><li>DS (Director Server)，指的是前端负载均衡器节点</li><li>RS (Real Server)，后端真实的工作服务器</li><li>VIP (Virtual IP)，虚拟的 IP 地址，向外部直接面向用户请求，作为用户请求的目标的 IP 地址</li><li>DIP (Director IP)，主要用于和内部主机通讯的 IP 地址</li><li>RIP (Real Server IP)，后端服务器的 IP 地址</li><li>CIP (Client IP)，访问客户端的 IP 地址</li></ul><h2 id="LVS-三种模式的主要区别"><a href="#LVS-三种模式的主要区别" class="headerlink" title="LVS 三种模式的主要区别"></a>LVS 三种模式的主要区别</h2><table><thead><tr><th></th><th></th><th>VS/NAT</th><th>VS/TUN</th><th>VS/DR</th></tr></thead><tbody><tr><td></td><td>server</td><td>any</td><td>tunneling</td><td>non-arp device</td><td></td></tr><tr><td></td><td>server network</td><td>private</td><td>LAN/WAN</td><td>LAN</td><td></td></tr><tr><td></td><td>server number</td><td>low (10~20)</td><td>high</td><td>high</td><td></td></tr><tr><td></td><td>server gateway</td><td>load balancer</td><td>own router</td><td>own router</td><td></td></tr></tbody></table><table><thead><tr><th></th><th>模式与特点</th><th>NAT 模式</th><th>IPIP 模式</th><th>DR 模式</th></tr></thead><tbody><tr><td></td><td>对服务器的要求</td><td>服务节点可以使任何操作系统</td><td>必须支持 IP 隧道，目前只有 Linux 系统支持</td><td>服务器节点支持虚拟网卡设备，能够禁用设备的 ARP 响应</td><td></td></tr><tr><td></td><td>网络要求</td><td>拥有私有 IP 地址的局域网络</td><td>拥有合法 IP 地址的局域，网或广域网</td><td>拥有合法 IP 地址的局域，服务器节点与负载均衡器必须在同一个网段</td><td></td></tr><tr><td></td><td>通常支持节点数量</td><td>10 到 20 个，根据负载均衡器的处理能力而定</td><td>较高，可以支持 100 个服务节点</td><td>较高，可以支持 100 个服务节点</td><td></td></tr><tr><td></td><td>网关</td><td>负载均衡器为服务器节点网关</td><td>服务器的节点同自己的网关或者路由器连接，不经过负载均衡器</td><td>服务节点同自己的网关或者路由器连接，不经过负载均衡器</td><td></td></tr><tr><td></td><td>服务节点安全性</td><td>较好，采用内部 IP，服务节点隐蔽</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td></td></tr><tr><td></td><td>IP 要求</td><td>仅需要一个合法的 IP 地址作为 VIP 地址</td><td>除了 VIPO 地址外，每个服务器界定啊需要拥有合法的 IP 地址，可以直接从路由到客户端</td><td>除了 VIP 外，每个服务节点需拥有合法的 IP 地址，可以直接从路由到客户端</td><td></td></tr><tr><td></td><td>特点</td><td>地址转换</td><td>封装 IP</td><td>修改 MAC 地址</td><td></td></tr><tr><td></td><td>配置复杂度</td><td>简单</td><td>复杂</td><td>复杂</td><td></td></tr></tbody></table><h2 id="LVS-基本工作原理"><a href="#LVS-基本工作原理" class="headerlink" title="LVS 基本工作原理"></a>LVS 基本工作原理</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823142206.png" alt=""></p><ol><li>当用户向负载均衡调度器（Director Server）发起请求，调度器将请求发往至内核空间</li><li>PREROUTING 链首先会接收到用户请求，判断目标 IP 确定是本机 IP，将数据包发往 INPUT 链</li><li>IPVS 是工作在 INPUT 链上的，当用户请求到达 INPUT 时，IPVS 会将用户请求和自己已定义好的集群服务进行比对，如果用户请求的就是定义的集群服务，那么此时 IPVS 会强行修改数据包里的目标 IP 地址及端口，并将新的数据包发往 POSTROUTING 链</li><li>POSTROUTING 链接收数据包后发现目标 IP 地址刚好是自己的后端服务器，那么此时通过选路，将数据包最终发送给后端的服务器</li></ol><h3 id="LVS-的组成"><a href="#LVS-的组成" class="headerlink" title="LVS 的组成"></a>LVS 的组成</h3><blockquote><p>LVS 由 2 部分程序组成，包括 ipvs 和 ipvsadm。</p></blockquote><ol><li>ipvs(ip virtual server)：一段代码工作在内核空间，叫 ipvs，是真正生效实现调度的代码。</li><li>ipvsadm：另外一段是工作在用户空间，叫 ipvsadm，负责为 ipvs 内核框架编写规则，定义谁是集群服务，而谁是后端真实的服务器 (Real Server)</li></ol><h3 id="LVS-和-Keepalived"><a href="#LVS-和-Keepalived" class="headerlink" title="LVS 和 Keepalived"></a>LVS 和 Keepalived</h3><p>在 lvs+keepalived 环境里面，lvs 主要的工作是提供调度算法，把客户端请求按照需求调度在 real 服务器，keepalived 主要的工作是提供 lvs 控制器的一个冗余，并且对 real 服务器做健康检查，发现不健康的 real 服务器，就把它从 lvs 集群中剔除，real 服务器只负责提供服务。</p><h3 id="LVS-TUN"><a href="#LVS-TUN" class="headerlink" title="LVS/TUN"></a>LVS/TUN</h3><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823151135.png" alt=""></p><blockquote><p>在原有的 IP 报文外再次封装多一层 IP 首部，内部 IP 首部 (源地址为 CIP，目标 IIP 为 VIP)，外层 IP 首部 (源地址为 DIP，目标 IP 为 RIP)</p></blockquote><p>(1) 当用户请求到达 Director Server，此时请求的数据报文会先到内核空间的 PREROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 VIP 。<br>(2) PREROUTING 检查发现数据包的目标 IP 是本机，将数据包送至 INPUT 链<br>(3) IPVS 比对数据包请求的服务是否为集群服务，若是，在请求报文的首部再次封装一层 IP 报文，封装源 IP 为 DIP，目标 IP 为 RIP。然后发至 POSTROUTING 链。 此时源 IP 为 DIP，目标 IP 为 RIP<br>(4) POSTROUTING 链根据最新封装的 IP 报文，将数据包发至 RS（因为在外层封装多了一层 IP 首部，所以可以理解为此时通过隧道传输）。 此时源 IP 为 DIP，目标 IP 为 RIP<br>(5) RS 接收到报文后发现是自己的 IP 地址，就将报文接收下来，拆除掉最外层的 IP 后，会发现里面还有一层 IP 首部，而且目标是自己的 lo 接口 VIP，那么此时 RS 开始处理此请求，处理完成之后，通过 lo 接口送给 eth0 网卡，然后向外传递。 此时的源 IP 地址为 VIP，目标 IP 为 CIP<br>(6) 响应报文最终送达至客户端</p><blockquote><p>LVS/TUN 模型特性</p></blockquote><ul><li>RIP、VIP、DIP 全是公网地址</li><li>RS 的网关不会也不可能指向 DIP</li><li>所有的请求报文经由 Director Server，但响应报文必须不能进过 Director Server</li><li>不支持端口映射</li><li>RS 的系统必须支持隧道</li></ul><blockquote><p>其实企业中最常用的是 DR 实现方式，而 NAT 配置上比较简单和方便，后边实践中会总结 DR 和 NAT 具体使用配置过程。</p></blockquote><p>TUN（virtual server via ip tunneling　IP 隧道）调度器把请求的报文通过 IP 隧道转发到真实的服务器。真实的服务器将响应处理后的数据直接返回给客户端。这样调度器就只处理请求入站报文。此转发方式不修改请求报文的 IP 首部（源 IP 为 CIP，目标 IP 为 VIP），而在原 IP 报文之外再封装一个 IP 首部（源 IP 是 DIP，目标 IP 是 RIP），将报文发往挑选出的目标 RS；RS 直接响应给客户端（源 IP 是 VIP，目标 IP 是 CIP），由于一般网络服务应答数据比请求报文大很多，采用 lvs-tun 模式后，集群系统的最大吞吐量可以提高 10 倍</p><p>注意：<br>(1) DIP, VIP, RIP 都应该是公网地址；<br>(2) RS 的网关不能，也不可能指向 DIP；<br>(3) 请求报文要经由 Director，但响应不能经由 Director；<br>(4) 此模式不支持端口映射；<br>(5) RS 的操作系统得支持隧道功能</p><p>缺点: 由于后端服务器 RS 处理数据后响应发送给用户，此时需要租借大量 IP（特别是后端服务器使用较多的情况下）。</p><p>优点: 实现 lvs-tun 模式时，LVS 调度器将 TCP/IP 请求进行重新封装并转发给后端服务器，由目标应用服务器直接回复用户。应用服务器之间是通过 IP 隧道来进行转发，故两者可以存在于不同的网段中。</p><h2 id="配置-LVS-TUN"><a href="#配置-LVS-TUN" class="headerlink" title="配置 LVS-TUN"></a>配置 LVS-TUN</h2><h3 id="DS"><a href="#DS" class="headerlink" title="DS"></a>DS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install keepalived</span></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install keepalived ipvsadm</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install keepalived ipvsadm</span><br><span class="line"></span><br><span class="line"><span class="comment"># update iptables</span></span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># For keepalived:</span></span><br><span class="line"><span class="comment"># allow vrrp </span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line"><span class="comment"># allow multicast</span></span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># reload iptables</span></span><br><span class="line">service iptables reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># open ip_forward</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="comment"># edit sysctl.conf</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived for lvs-tun</span></span><br><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_AUTH &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface em1</span><br><span class="line">    virtual_router_id 11</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.10.36.11/23 dev em1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind TUN</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.4 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.10.36.7 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable and start keepalived</span></span><br><span class="line">systemctl start keepalived</span><br><span class="line">systemctl <span class="built_in">enable</span> keepalived</span><br><span class="line">watch ipvsadm -L -n --stats</span><br><span class="line"></span><br><span class="line"><span class="comment"># write script, recommand manage it by keepalived.conf</span></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># Startup script handle the initialisation of LVS</span></span><br><span class="line"><span class="comment"># chkconfig: - 28 72</span></span><br><span class="line"><span class="comment"># description: Initialise the Linux Virtual Server for TUN</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides: ipvsadm</span></span><br><span class="line"><span class="comment"># Required-Start: $local_fs $network $named</span></span><br><span class="line"><span class="comment"># Required-Stop: $local_fs $remote_fs $network</span></span><br><span class="line"><span class="comment"># Short-Description: Initialise the Linux Virtual Server</span></span><br><span class="line"><span class="comment"># Description: The Linux Virtual Server is a highly scalable and highly</span></span><br><span class="line"><span class="comment">#   available server built on a cluster of real servers, with the load</span></span><br><span class="line"><span class="comment">#   balancer running on Linux.</span></span><br><span class="line"><span class="comment"># description: start LVS of TUN</span></span><br><span class="line">LOCK=/var/lock/lvs-tun.lock</span><br><span class="line">VIP=10.10.36.11</span><br><span class="line">RIP1=10.10.36.4</span><br><span class="line">RIP2=10.10.36.7</span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>()    &#123;</span><br><span class="line">     PID=`ipvsadm -Ln | grep <span class="variable">$&#123;VIP&#125;</span> | wc -l`</span><br><span class="line">     <span class="keyword">if</span>    [ <span class="variable">$PID</span> -gt 0 ];</span><br><span class="line"></span><br><span class="line">     <span class="keyword">then</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"The LVS-TUN Server is already running !"</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">           <span class="comment">#Load the tun mod</span></span><br><span class="line">           /sbin/modprobe tun</span><br><span class="line">           /sbin/modprobe ipip</span><br><span class="line">           <span class="comment">#Set the tun Virtual IP Address</span></span><br><span class="line">           /sbin/ifconfig tunl0 <span class="variable">$VIP</span> broadcast <span class="variable">$VIP</span> netmask 255.255.255.255 up</span><br><span class="line">           /sbin/route add -host <span class="variable">$VIP</span> dev tunl0</span><br><span class="line">           <span class="comment">#Clear IPVS Table</span></span><br><span class="line">           /sbin/ipvsadm -C</span><br><span class="line">           <span class="comment">#The icmp recruit setting</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/ip_forward</span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/send_redirects</span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/default/send_redirects</span><br><span class="line">           <span class="comment">#Set Lvs</span></span><br><span class="line">           /sbin/ipvsadm -At <span class="variable">$VIP</span>:80 -s rr</span><br><span class="line">           /sbin/ipvsadm -at <span class="variable">$VIP</span>:80 -r <span class="variable">$RIP1</span>:80 -i  -w 1</span><br><span class="line">           /sbin/ipvsadm -at <span class="variable">$VIP</span>:80 -r <span class="variable">$RIP2</span>:80 -i  -w 1</span><br><span class="line">           /bin/touch <span class="variable">$LOCK</span></span><br><span class="line">           <span class="comment">#Run Lvs</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"starting LVS-TUN-DIR Server is ok !"</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>()    &#123;</span><br><span class="line">           <span class="comment">#stop  Lvs server</span></span><br><span class="line">           /sbin/ipvsadm -C</span><br><span class="line">           /sbin/ifconfig tunl0 down &gt;/dev/null</span><br><span class="line">           <span class="comment">#Remove the tun mod</span></span><br><span class="line">           /sbin/modprobe -r tun</span><br><span class="line">           /sbin/modprobe -r ipip</span><br><span class="line">           rm -rf <span class="variable">$LOCK</span></span><br><span class="line">           <span class="built_in">echo</span> <span class="string">"stopping LVS-TUN-DIR server is ok !"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status</span></span>()  &#123;</span><br><span class="line">     <span class="keyword">if</span> [ -e <span class="variable">$LOCK</span> ];</span><br><span class="line">     <span class="keyword">then</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"The LVS-TUN Server is already running !"</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"The LVS-TUN Server is not running !"</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">  stop)</span><br><span class="line">        stop</span><br><span class="line">        ;;</span><br><span class="line">  restart)</span><br><span class="line">        stop</span><br><span class="line">        sleep 1</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">  status)</span><br><span class="line">        status</span><br><span class="line">        ;;</span><br><span class="line">  *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$1</span> &#123;start|stop|restart|status&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><h3 id="RS"><a href="#RS" class="headerlink" title="RS"></a>RS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在加载好 ipip 模块后就会有默认的 tunl0 隧道 </span></span><br><span class="line">modprobe ipip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 VIP</span></span><br><span class="line"><span class="comment"># ifconfig tunl0 down</span></span><br><span class="line">ifconfig tunl0 10.10.36.11 broadcast 10.10.36.11 netmask 255.255.255.255 up</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加路由 </span></span><br><span class="line">route add -host 10.10.36.11 tunl0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动关闭 ARP 转发 </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'1'</span> &gt; /proc/sys/net/ipv4/conf/tunl0/arp_ignore </span><br><span class="line"><span class="built_in">echo</span> <span class="string">'2'</span> &gt; /proc/sys/net/ipv4/conf/tunl0/arp_announce</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'1'</span> &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'2'</span> &gt; /proc/sys/net/ipv4/conf/all/arp_announce </span><br><span class="line"><span class="built_in">echo</span> <span class="string">'0'</span> &gt; /proc/sys/net/ipv4/conf/tunl0/rp_filter</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'0'</span> &gt; /proc/sys/net/ipv4/conf/all/rp_filter </span><br><span class="line"></span><br><span class="line"><span class="comment"># iptables 允许 ipip 协议 </span></span><br><span class="line">iptables -I INPUT 1 -p 4 -j ACCEPT</span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line">-A INPUT -p ipv4 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编写 RS 启停脚本，推荐用脚本管理 RS</span></span><br><span class="line">vim /etc/init.d/lvs-tun</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Startup script handle the initialisation of LVS</span></span><br><span class="line"><span class="comment"># chkconfig: - 28 72</span></span><br><span class="line"><span class="comment"># description: Initialise the Linux Virtual Server for TUN</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides: ipvsadm</span></span><br><span class="line"><span class="comment"># Required-Start: $local_fs $network $named</span></span><br><span class="line"><span class="comment"># Required-Stop: $local_fs $remote_fs $network</span></span><br><span class="line"><span class="comment"># Short-Description: Initialise the Linux Virtual Server</span></span><br><span class="line"><span class="comment"># Description: The Linux Virtual Server is a highly scalable and highly</span></span><br><span class="line"><span class="comment">#   available server built on a cluster of real servers, with the load</span></span><br><span class="line"><span class="comment">#   balancer running on Linux.</span></span><br><span class="line"><span class="comment"># description: start LVS of TUN-RIP</span></span><br><span class="line">LOCK=/var/lock/ipvsadm.lock</span><br><span class="line">VIP=10.10.36.11</span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">     PID=`ifconfig | grep tunl0 | wc -l`</span><br><span class="line">     <span class="keyword">if</span> [ <span class="variable">$PID</span> -ne 0 ];</span><br><span class="line">     <span class="keyword">then</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"The LVS-TUN-RIP Server is already running !"</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">         <span class="comment">#Load the tun mod</span></span><br><span class="line">         /sbin/modprobe tun</span><br><span class="line">         /sbin/modprobe ipip</span><br><span class="line">         <span class="comment">#Set the tun Virtual IP Address</span></span><br><span class="line">         /sbin/ifconfig tunl0 <span class="variable">$VIP</span> netmask 255.255.255.255 broadcast <span class="variable">$VIP</span> up</span><br><span class="line">         /sbin/route add -host <span class="variable">$VIP</span> dev tunl0</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/tunl0/arp_ignore</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/tunl0/arp_announce</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt; /proc/sys/net/ipv4/conf/tunl0/rp_filter</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt; /proc/sys/net/ipv4/conf/all/rp_filter</span><br><span class="line">         /bin/touch <span class="variable">$LOCK</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"starting LVS-TUN-RIP server is ok !"</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">         /sbin/ifconfig tunl0 down</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/tunl0/arp_ignore</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/tunl0/arp_announce</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">         <span class="comment">#Remove the tun mod</span></span><br><span class="line">         /sbin/modprobe -r tun</span><br><span class="line">         /sbin/modprobe -r ipip</span><br><span class="line">         rm -rf <span class="variable">$LOCK</span></span><br><span class="line">         <span class="built_in">echo</span> <span class="string">"stopping LVS-TUN-RIP server is ok !"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status</span></span>() &#123;</span><br><span class="line">     <span class="keyword">if</span> [ -e <span class="variable">$LOCK</span> ];</span><br><span class="line">     <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"The LVS-TUN-RIP Server is already running !"</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"The LVS-TUN-RIP Server is not running !"</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">  start)</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">  stop)</span><br><span class="line">        stop</span><br><span class="line">        ;;</span><br><span class="line">  restart)</span><br><span class="line">        stop</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">  status)</span><br><span class="line">        status</span><br><span class="line">        ;;</span><br><span class="line">  *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$1</span> &#123;start|stop|restart|status&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># start lvs-tun</span></span><br><span class="line">chmod 755 /etc/init.d/lvs-tun</span><br><span class="line">service lvs-tun start</span><br><span class="line">chkconfig lvs-tun on</span><br><span class="line"></span><br><span class="line"><span class="comment"># Nginx test</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rs1"</span> &gt; /usr/share/nginx/html/index.html</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rs2"</span> &gt; /usr/share/nginx/html/index.html</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..100&#125;; <span class="keyword">do</span> curl 10.10.36.11; sleep 0.5; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>这一步的主要目的是让 RS 禁言，在相对较新的版本中新增了两个内核参数 (kernel parameter)</p><ul><li>第一个是 arp_ignore 定义接受到 ARP 请求时的相应级别</li><li>第二个是 arp_announce 定义将自己地址向外通告是的通告级别</li><li>第三个是 rp_filter 定义系统是否开启对数据包源地址的校验</li></ul><p>总结: LVS/TUN 是所有模式中最最适用于跨网络跨地域地理位置的一种模式，需要注意的是:</p><ol><li>若 DIR 和 RIP 在不同 lan 网络中，比如不同的网段，不同的 IDC 机房，就不需要设置 arp 仰制，不同网段中，arp 会被屏蔽掉，所以只需设置 ip tunne 以及报文反向验证即可；</li><li>若 DIR 和 RIP 在同一广播域中，需要和 LVS/DR 模式一样在所有的 RIP 上仰制 arp，防止 arp 响应导致 arp 表混乱，这样 lvs 就不能正常工作！</li></ol><p>配置时除了配置 DIR，还需要需要配置后端 RS server，即在 tunl 上口配置 vip 地址（需要系统支持 tunl 才行），广播为为自己，此模式下无需开启路由转发功能！</p><h2 id="配置-LVS-DR-和-LVS-TUN-混合模式"><a href="#配置-LVS-DR-和-LVS-TUN-混合模式" class="headerlink" title="配置 LVS/DR 和 LVS/TUN 混合模式"></a>配置 LVS/DR 和 LVS/TUN 混合模式</h2><h3 id="DS-1"><a href="#DS-1" class="headerlink" title="DS"></a>DS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关于 3 中模式的参数 </span></span><br><span class="line">[packet-forwarding-method]</span><br><span class="line">       -g, --gatewaying  Use gatewaying (direct routing). This is the default.</span><br><span class="line">       -i, --ipip  Use ipip encapsulation (tunneling).</span><br><span class="line">       -m, --masquerading  Use masquerading (network access translation, or NAT).</span><br><span class="line">       Note:  Regardless of the packet-forwarding mechanism specified, real servers <span class="keyword">for</span> addresses <span class="keyword">for</span> <span class="built_in">which</span> there are interfaces on the <span class="built_in">local</span> node will  be  use  the</span><br><span class="line">       <span class="built_in">local</span>  forwarding  method, <span class="keyword">then</span> packets <span class="keyword">for</span> the servers will be passed to upper layer on the <span class="built_in">local</span> node. This cannot be specified by ipvsadm, rather it <span class="built_in">set</span> by</span><br><span class="line">       the kernel as real servers are added or modified.</span><br><span class="line"></span><br><span class="line"><span class="comment"># ipvsadm 命令行混配 </span></span><br><span class="line">/sbin/ifconfig tunl0 10.10.36.11 broadcast 10.10.36.11 netmask 255.255.255.255 up</span><br><span class="line">/sbin/route add -host 10.10.36.11 dev tunl0</span><br><span class="line">/sbin/ipvsadm -At 10.10.36.11:80 -s rr</span><br><span class="line">/sbin/ipvsadm -at 10.10.36.11:80 -r 10.10.36.4:80 -g -w 1</span><br><span class="line">/sbin/ipvsadm -at 10.10.36.11:80 -r 10.10.36.7:80 -i -w 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived 混配 </span></span><br><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_AUTH &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface em1</span><br><span class="line">    virtual_router_id 11</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.10.36.11/23 dev em1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.4 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind TUN</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.7 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查结果可用 </span></span><br><span class="line">[root@d126027 wangao]<span class="comment"># for i in &#123;1..100&#125;; do curl 10.10.36.11; sleep 0.5; done</span></span><br><span class="line">rs2</span><br><span class="line">rs1</span><br><span class="line">rs2</span><br><span class="line">rs1</span><br><span class="line">rs2</span><br><span class="line"></span><br><span class="line">[root@d126009 keepalived]<span class="comment"># ipvsadm -Ln --stats</span></span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port               Conns   InPkts  OutPkts  InBytes OutBytes</span><br><span class="line">  -&gt; RemoteAddress:Port</span><br><span class="line">TCP  10.10.36.11:80                    100      700        0    36700        0</span><br><span class="line">  -&gt; 10.10.36.4:80                      50      350        0    18350        0</span><br><span class="line">  -&gt; 10.10.36.7:80                      50      350        0    18350        0</span><br><span class="line"></span><br><span class="line">[root@d126009 wangao]<span class="comment"># ipvsadm -Ln</span></span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</span><br><span class="line">TCP  10.10.36.11:80 rr</span><br><span class="line">  -&gt; 10.10.36.4:80                Route   100    0          0</span><br><span class="line">  -&gt; 10.10.36.7:80                Tunnel  100    0          0</span><br></pre></td></tr></table></figure><h3 id="RS-1"><a href="#RS-1" class="headerlink" title="RS"></a>RS</h3><blockquote><p>DR 和 TUN 的模式基本不用做改动</p></blockquote><h2 id="LVS-和-Keepalived-系列"><a href="#LVS-和-Keepalived-系列" class="headerlink" title="LVS 和 Keepalived 系列"></a>LVS 和 Keepalived 系列</h2><p><a href="https://wsgzao.github.io/post/lvs-keepalived/">LVS 和 Keepalived 的原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs/">LVS 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/keepalived/">Keepalived 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-nat/">LVS-NAT 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-dr/">LVS-DR 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-tun/">LVS-TUN 原理介绍和配置实践</a></p>]]></content>
    
    <summary type="html">
    
      LVS-TUN原理介绍和配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>LVS-DR 原理介绍和配置实践</title>
    <link href="https://wsgzao.github.io/post/lvs-dr/"/>
    <id>https://wsgzao.github.io/post/lvs-dr/</id>
    <published>2019-09-03T09:59:49.000Z</published>
    <updated>2019-09-10T09:04:51.779Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要讲述 LVS-DR 原理介绍和配置实践，HA 高可用方案基于 Keepalived。</p><blockquote><p>LVS-DR 原理介绍和配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 03 日 - 拆分 LVS-Keepalived 中 LVS-DR<br>2019 年 08 月 23 日 - 更新 LVS/NAT、LVS/DR、LVS/TUN 三种模式的原理和配置实践<br>2018 年 12 月 03 日 - 精简和更新配置步骤<br>2018 年 07 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/lvs-nat/">https://wsgzao.github.io/post/lvs-nat/</a></p><p><strong> 扩展阅读 </strong></p><p>LVS - <a href="http://www.linuxvirtualserver.org/zh/index.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/zh/index.html</a><br>Keepalived - <a href="http://www.keepalived.org/" target="_blank" rel="noopener">http://www.keepalived.org/</a></p><hr><h2 id="ReadMe"><a href="#ReadMe" class="headerlink" title="ReadMe"></a>ReadMe</h2><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>Virtual Server via Direct Routing - <a href="http://www.linuxvirtualserver.org/VS-DRouting.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/VS-DRouting.html</a><br>LVS 和 Keepalived 官方中文手册 PDF - <a href="https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg</a></p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><blockquote><p>以下术语涉及 LVS 三种工作模式的原理</p></blockquote><ul><li>LB (Load Balancer 负载均衡) </li><li>HA (High Available 高可用) </li><li>Failover (失败切换) </li><li>Cluster (集群) </li><li>LVS (Linux Virtual Server Linux 虚拟服务器) </li><li>DS (Director Server)，指的是前端负载均衡器节点</li><li>RS (Real Server)，后端真实的工作服务器</li><li>VIP (Virtual IP)，虚拟的 IP 地址，向外部直接面向用户请求，作为用户请求的目标的 IP 地址</li><li>DIP (Director IP)，主要用于和内部主机通讯的 IP 地址</li><li>RIP (Real Server IP)，后端服务器的 IP 地址</li><li>CIP (Client IP)，访问客户端的 IP 地址</li></ul><h2 id="LVS-三种模式的主要区别"><a href="#LVS-三种模式的主要区别" class="headerlink" title="LVS 三种模式的主要区别"></a>LVS 三种模式的主要区别</h2><table><thead><tr><th></th><th></th><th>VS/NAT</th><th>VS/TUN</th><th>VS/DR</th></tr></thead><tbody><tr><td></td><td>server</td><td>any</td><td>tunneling</td><td>non-arp device</td><td></td></tr><tr><td></td><td>server network</td><td>private</td><td>LAN/WAN</td><td>LAN</td><td></td></tr><tr><td></td><td>server number</td><td>low (10~20)</td><td>high</td><td>high</td><td></td></tr><tr><td></td><td>server gateway</td><td>load balancer</td><td>own router</td><td>own router</td><td></td></tr></tbody></table><table><thead><tr><th></th><th>模式与特点</th><th>NAT 模式</th><th>IPIP 模式</th><th>DR 模式</th></tr></thead><tbody><tr><td></td><td>对服务器的要求</td><td>服务节点可以使任何操作系统</td><td>必须支持 IP 隧道，目前只有 Linux 系统支持</td><td>服务器节点支持虚拟网卡设备，能够禁用设备的 ARP 响应</td><td></td></tr><tr><td></td><td>网络要求</td><td>拥有私有 IP 地址的局域网络</td><td>拥有合法 IP 地址的局域，网或广域网</td><td>拥有合法 IP 地址的局域，服务器节点与负载均衡器必须在同一个网段</td><td></td></tr><tr><td></td><td>通常支持节点数量</td><td>10 到 20 个，根据负载均衡器的处理能力而定</td><td>较高，可以支持 100 个服务节点</td><td>较高，可以支持 100 个服务节点</td><td></td></tr><tr><td></td><td>网关</td><td>负载均衡器为服务器节点网关</td><td>服务器的节点同自己的网关或者路由器连接，不经过负载均衡器</td><td>服务节点同自己的网关或者路由器连接，不经过负载均衡器</td><td></td></tr><tr><td></td><td>服务节点安全性</td><td>较好，采用内部 IP，服务节点隐蔽</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td></td></tr><tr><td></td><td>IP 要求</td><td>仅需要一个合法的 IP 地址作为 VIP 地址</td><td>除了 VIPO 地址外，每个服务器界定啊需要拥有合法的 IP 地址，可以直接从路由到客户端</td><td>除了 VIP 外，每个服务节点需拥有合法的 IP 地址，可以直接从路由到客户端</td><td></td></tr><tr><td></td><td>特点</td><td>地址转换</td><td>封装 IP</td><td>修改 MAC 地址</td><td></td></tr><tr><td></td><td>配置复杂度</td><td>简单</td><td>复杂</td><td>复杂</td><td></td></tr></tbody></table><h2 id="LVS-基本工作原理"><a href="#LVS-基本工作原理" class="headerlink" title="LVS 基本工作原理"></a>LVS 基本工作原理</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823142206.png" alt=""></p><ol><li>当用户向负载均衡调度器（Director Server）发起请求，调度器将请求发往至内核空间</li><li>PREROUTING 链首先会接收到用户请求，判断目标 IP 确定是本机 IP，将数据包发往 INPUT 链</li><li>IPVS 是工作在 INPUT 链上的，当用户请求到达 INPUT 时，IPVS 会将用户请求和自己已定义好的集群服务进行比对，如果用户请求的就是定义的集群服务，那么此时 IPVS 会强行修改数据包里的目标 IP 地址及端口，并将新的数据包发往 POSTROUTING 链</li><li>POSTROUTING 链接收数据包后发现目标 IP 地址刚好是自己的后端服务器，那么此时通过选路，将数据包最终发送给后端的服务器</li></ol><h3 id="LVS-的组成"><a href="#LVS-的组成" class="headerlink" title="LVS 的组成"></a>LVS 的组成</h3><blockquote><p>LVS 由 2 部分程序组成，包括 ipvs 和 ipvsadm。</p></blockquote><ol><li>ipvs(ip virtual server)：一段代码工作在内核空间，叫 ipvs，是真正生效实现调度的代码。</li><li>ipvsadm：另外一段是工作在用户空间，叫 ipvsadm，负责为 ipvs 内核框架编写规则，定义谁是集群服务，而谁是后端真实的服务器 (Real Server)</li></ol><h3 id="LVS-和-Keepalived"><a href="#LVS-和-Keepalived" class="headerlink" title="LVS 和 Keepalived"></a>LVS 和 Keepalived</h3><p>在 lvs+keepalived 环境里面，lvs 主要的工作是提供调度算法，把客户端请求按照需求调度在 real 服务器，keepalived 主要的工作是提供 lvs 控制器的一个冗余，并且对 real 服务器做健康检查，发现不健康的 real 服务器，就把它从 lvs 集群中剔除，real 服务器只负责提供服务。</p><h3 id="LVS-DR"><a href="#LVS-DR" class="headerlink" title="LVS/DR"></a>LVS/DR</h3><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823150520.png" alt=""></p><blockquote><p>重点将请求报文的目标 MAC 地址设定为挑选出的 RS 的 MAC 地址</p></blockquote><p>(1) 当用户请求到达 Director Server，此时请求的数据报文会先到内核空间的 PREROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 VIP<br>(2) PREROUTING 检查发现数据包的目标 IP 是本机，将数据包送至 INPUT 链<br>(3) IPVS 比对数据包请求的服务是否为集群服务，若是，将请求报文中的源 MAC 地址修改为 DIP 的 MAC 地址，将目标 MAC 地址修改 RIP 的 MAC 地址，然后将数据包发至 POSTROUTING 链。 此时的源 IP 和目的 IP 均未修改，仅修改了源 MAC 地址为 DIP 的 MAC 地址，目标 MAC 地址为 RIP 的 MAC 地址<br>(4) 由于 DS 和 RS 在同一个网络中，所以是通过二层来传输。POSTROUTING 链检查目标 MAC 地址为 RIP 的 MAC 地址，那么此时数据包将会发至 Real Server。<br>(5) RS 发现请求报文的 MAC 地址是自己的 MAC 地址，就接收此报文。处理完成之后，将响应报文通过 lo 接口传送给 eth0 网卡然后向外发出。 此时的源 IP 地址为 VIP，目标 IP 为 CIP<br>(6) 响应报文最终送达至客户端</p><blockquote><p>LVS/DR 模型的特性</p></blockquote><ul><li><strong> 特点 1</strong>：保证前端路由将目标地址为 VIP 报文统统发给 Director Server，而不是 RS</li><li>RS 可以使用私有地址；也可以是公网地址，如果使用公网地址，此时可以通过互联网对 RIP 进行直接访问</li><li>RS 跟 Director Server 必须在同一个物理网络中</li><li>所有的请求报文经由 Director Server，但响应报文必须不能进过 Director Server</li><li>不支持地址转换，也不支持端口映射</li><li>RS 可以是大多数常见的操作系统</li><li>RS 的网关绝不允许指向 DIP(因为我们不允许他经过 director)</li><li>RS 上的 lo 接口配置 VIP 的 IP 地址</li><li>缺陷：RS 和 DS 必须在同一机房中</li></ul><blockquote><p>特点 1 的解决方案：</p></blockquote><ul><li>在前端路由器做静态地址路由绑定，将对于 VIP 的地址仅路由到 Director Server</li><li>存在问题：用户未必有路由操作权限，因为有可能是运营商提供的，所以这个方法未必实用</li><li>arptables：在 arp 的层次上实现在 ARP 解析时做防火墙规则，过滤 RS 响应 ARP 请求。这是由 iptables 提供的</li><li>修改 RS 上内核参数（arp_ignore 和 arp_announce）将 RS 上的 VIP 配置在 lo 接口的别名上，并限制其不能响应对 VIP 地址解析请求。</li></ul><p>DR（Direct Routing 直接路由模式）此模式时 LVS 调度器只接收客户发来的请求并将请求转发给后端服务器，后端服务器处理请求后直接把内容直接响应给客户，而不用再次经过 LVS 调度器。LVS 只需要将网络帧的 MAC 地址修改为某一台后端服务器 RS 的 MAC，该包就会被转发到相应的 RS 处理，注意此时的源 IP 和目标 IP 都没变。RS 收到 LVS 转发来的包时，链路层发现 MAC 是自己的，到上面的网络层，发现 IP 也是自己的，于是这个包被合法地接受，RS 感知不到前面有 LVS 的存在。而当 RS 返回响应时，只要直接向源 IP（即用户的 IP）返回即可，不再经过 LVS。</p><p>注意：<br>(1) 确保前端路由器将目标 IP 为 VIP 的请求报文发往 Director：<br>    (a) 在前端网关做静态绑定；<br>    (b) 在 RS 上使用 arptables；<br>    (c) 在 RS 上修改内核参数以限制 arp 通告及应答级别；<br>            arp_announce<br>            arp_ignore<br>(2) RS 的 RIP 可以使用私网地址，也可以是公网地址；RIP 与 DIP 在同一 IP 网络；RIP 的网关不能指向 DIP，以确保响应报文不会经由 Director；<br>(3) RS 跟 Director 要在同一个物理网络；<br>(4) 请求报文要经由 Director，但响应不能经由 Director，而是由 RS 直接发往 Client；<br>(5) 此模式不支持端口映射；</p><p>缺点：唯一的缺陷在于它要求 LVS 调度器及所有应用服务器在同一个网段中，因此不能实现集群的跨网段应用。</p><p>优点：可见在处理过程中 LVS Route 只处理请求的直接路由转发，所有响应结果由各个应用服务器自行处理，并对用户进行回复，网络流量将集中在 LVS 调度器之上。</p><h2 id="配置-LVS-DR"><a href="#配置-LVS-DR" class="headerlink" title="配置 LVS-DR"></a>配置 LVS-DR</h2><h3 id="DS"><a href="#DS" class="headerlink" title="DS"></a>DS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install keepalived</span></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install keepalived ipvsadm</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install keepalived ipvsadm</span><br><span class="line"></span><br><span class="line"><span class="comment"># update iptables</span></span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># For keepalived:</span></span><br><span class="line"><span class="comment"># allow vrrp </span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line"><span class="comment"># allow multicast</span></span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># reload iptables</span></span><br><span class="line">service iptables reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># open ip_forward</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="comment"># edit sysctl.conf</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived for lvs-dr</span></span><br><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_CONNECT</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_CONNECT &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 128</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.65.32.28/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.28 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.13 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.65.32.14 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.28 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.13 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.65.32.14 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_AUTH &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 129</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.65.32.29/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.29 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.22 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 110.65.32.23 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.65.32.29 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.65.32.22 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 110.65.32.23 443 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 443</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable and start keepalived</span></span><br><span class="line">systemctl start keepalived</span><br><span class="line">systemctl <span class="built_in">enable</span> keepalived</span><br><span class="line">watch ipvsadm -L -n --stats</span><br></pre></td></tr></table></figure><h3 id="RS"><a href="#RS" class="headerlink" title="RS"></a>RS</h3><ol><li>Edit “/etc/sysconfig/network-scripts/ifcfg-lo” to patch bug in Centos 7 (if using Centos 7). Add TYPE=Loopback to the file.</li><li>Add loopback for each Virtual IP on each worker. E.g. first virtual IP create file “/etc/sysconfig/network-scripts/ifcfg-lo:0”.</li><li>Start adapters if not yet started</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># add TYPE=Loopback</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"TYPE=Loopback"</span> &gt;&gt; /etc/sysconfig/network-scripts/ifcfg-lo</span><br><span class="line"><span class="comment"># add ifcfg-lo:0</span></span><br><span class="line">cat &gt; /etc/sysconfig/network-scripts/ifcfg-lo:0 &lt;&lt; EOF</span><br><span class="line">DEVICE=lo:0</span><br><span class="line">IPADDR=10.65.32.28</span><br><span class="line">NETMASK=255.255.255.255</span><br><span class="line">ONBOOT=yes</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># ifup lo:0</span></span><br><span class="line">ifup lo:0</span><br><span class="line"></span><br><span class="line"><span class="comment"># add real_start</span></span><br><span class="line">cat &gt; /root/real_start.sh &lt;&lt; EOF</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># chmod 755</span></span><br><span class="line">chmod 755 /root/real_start.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># add real.service</span></span><br><span class="line">cat &gt; /usr/lib/systemd/system/real.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=autostart lvs real</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/root/real_start.sh</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable service</span></span><br><span class="line">systemctl <span class="built_in">enable</span> real.service</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># lvs real server example</span></span><br><span class="line">vim /root/lvs_real.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: Start realserver</span></span><br><span class="line"><span class="comment"># Description:       Start realserver</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># change the VIP to proper value</span></span><br><span class="line">VIP=10.65.32.28</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Start REAL Server"</span></span><br><span class="line">    /sbin/ifconfig lo:0 <span class="variable">$VIP</span> broadcast <span class="variable">$VIP</span> netmask 255.255.255.255 up</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"1"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"2"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    stop)</span><br><span class="line"></span><br><span class="line">    /sbin/ifconfig lo:0 down</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Stop REAL Server"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"0"</span> &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    restart)</span><br><span class="line"></span><br><span class="line">    <span class="variable">$0</span> stop</span><br><span class="line">    <span class="variable">$0</span> start</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    *)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop&#125;"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><h2 id="配置-LVS-DR-和-LVS-TUN-混合模式"><a href="#配置-LVS-DR-和-LVS-TUN-混合模式" class="headerlink" title="配置 LVS/DR 和 LVS/TUN 混合模式"></a>配置 LVS/DR 和 LVS/TUN 混合模式</h2><h3 id="DS-1"><a href="#DS-1" class="headerlink" title="DS"></a>DS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关于 3 中模式的参数 </span></span><br><span class="line">[packet-forwarding-method]</span><br><span class="line">       -g, --gatewaying  Use gatewaying (direct routing). This is the default.</span><br><span class="line">       -i, --ipip  Use ipip encapsulation (tunneling).</span><br><span class="line">       -m, --masquerading  Use masquerading (network access translation, or NAT).</span><br><span class="line">       Note:  Regardless of the packet-forwarding mechanism specified, real servers <span class="keyword">for</span> addresses <span class="keyword">for</span> <span class="built_in">which</span> there are interfaces on the <span class="built_in">local</span> node will  be  use  the</span><br><span class="line">       <span class="built_in">local</span>  forwarding  method, <span class="keyword">then</span> packets <span class="keyword">for</span> the servers will be passed to upper layer on the <span class="built_in">local</span> node. This cannot be specified by ipvsadm, rather it <span class="built_in">set</span> by</span><br><span class="line">       the kernel as real servers are added or modified.</span><br><span class="line"></span><br><span class="line"><span class="comment"># ipvsadm 命令行混配 </span></span><br><span class="line">/sbin/ifconfig tunl0 10.10.36.11 broadcast 10.10.36.11 netmask 255.255.255.255 up</span><br><span class="line">/sbin/route add -host 10.10.36.11 dev tunl0</span><br><span class="line">/sbin/ipvsadm -At 10.10.36.11:80 -s rr</span><br><span class="line">/sbin/ipvsadm -at 10.10.36.11:80 -r 10.10.36.4:80 -g -w 1</span><br><span class="line">/sbin/ipvsadm -at 10.10.36.11:80 -r 10.10.36.7:80 -i -w 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived 混配 </span></span><br><span class="line">vrrp_sync_group GOP &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_AUTH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_AUTH &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface em1</span><br><span class="line">    virtual_router_id 11</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.10.36.11/23 dev em1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.4 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.36.11 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind TUN</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.10.36.7 80 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 80</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查结果可用 </span></span><br><span class="line">[root@d126027 wangao]<span class="comment"># for i in &#123;1..100&#125;; do curl 10.10.36.11; sleep 0.5; done</span></span><br><span class="line">rs2</span><br><span class="line">rs1</span><br><span class="line">rs2</span><br><span class="line">rs1</span><br><span class="line">rs2</span><br><span class="line"></span><br><span class="line">[root@d126009 keepalived]<span class="comment"># ipvsadm -Ln --stats</span></span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port               Conns   InPkts  OutPkts  InBytes OutBytes</span><br><span class="line">  -&gt; RemoteAddress:Port</span><br><span class="line">TCP  10.10.36.11:80                    100      700        0    36700        0</span><br><span class="line">  -&gt; 10.10.36.4:80                      50      350        0    18350        0</span><br><span class="line">  -&gt; 10.10.36.7:80                      50      350        0    18350        0</span><br><span class="line"></span><br><span class="line">[root@d126009 wangao]<span class="comment"># ipvsadm -Ln</span></span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</span><br><span class="line">TCP  10.10.36.11:80 rr</span><br><span class="line">  -&gt; 10.10.36.4:80                Route   100    0          0</span><br><span class="line">  -&gt; 10.10.36.7:80                Tunnel  100    0          0</span><br></pre></td></tr></table></figure><h3 id="RS-1"><a href="#RS-1" class="headerlink" title="RS"></a>RS</h3><blockquote><p>DR 和 TUN 的模式基本不用做改动</p></blockquote><h2 id="LVS-和-Keepalived-系列"><a href="#LVS-和-Keepalived-系列" class="headerlink" title="LVS 和 Keepalived 系列"></a>LVS 和 Keepalived 系列</h2><p><a href="https://wsgzao.github.io/post/lvs-keepalived/">LVS 和 Keepalived 的原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs/">LVS 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/keepalived/">Keepalived 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-nat/">LVS-NAT 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-dr/">LVS-DR 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-tun/">LVS-TUN 原理介绍和配置实践</a></p>]]></content>
    
    <summary type="html">
    
      LVS-DR原理介绍和配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>LVS-NAT 原理介绍和配置实践</title>
    <link href="https://wsgzao.github.io/post/lvs-nat/"/>
    <id>https://wsgzao.github.io/post/lvs-nat/</id>
    <published>2019-09-03T08:59:49.000Z</published>
    <updated>2019-09-10T08:54:10.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要讲述 LVS-NAT 原理介绍和配置实践，HA 高可用方案基于 Keepalived。</p><blockquote><p>LVS-NAT 原理介绍和配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 09 月 03 日 - 拆分 LVS-Keepalived 中 LVS-NAT<br>2019 年 08 月 23 日 - 更新 LVS/NAT、LVS/DR、LVS/TUN 三种模式的原理和配置实践<br>2018 年 12 月 03 日 - 精简和更新配置步骤<br>2018 年 07 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/lvs-nat/">https://wsgzao.github.io/post/lvs-nat/</a></p><p><strong> 扩展阅读 </strong></p><p>LVS - <a href="http://www.linuxvirtualserver.org/zh/index.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/zh/index.html</a><br>Keepalived - <a href="http://www.keepalived.org/" target="_blank" rel="noopener">http://www.keepalived.org/</a></p><hr><h2 id="ReadMe"><a href="#ReadMe" class="headerlink" title="ReadMe"></a>ReadMe</h2><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>Virtual Server via NAT - <a href="http://www.linuxvirtualserver.org/VS-NAT.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/VS-NAT.html</a><br>LVS 和 Keepalived 官方中文手册 PDF - <a href="https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg</a></p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><blockquote><p>以下术语涉及 LVS 三种工作模式的原理</p></blockquote><ul><li>LB (Load Balancer 负载均衡) </li><li>HA (High Available 高可用) </li><li>Failover (失败切换) </li><li>Cluster (集群) </li><li>LVS (Linux Virtual Server Linux 虚拟服务器) </li><li>DS (Director Server)，指的是前端负载均衡器节点</li><li>RS (Real Server)，后端真实的工作服务器</li><li>VIP (Virtual IP)，虚拟的 IP 地址，向外部直接面向用户请求，作为用户请求的目标的 IP 地址</li><li>DIP (Director IP)，主要用于和内部主机通讯的 IP 地址</li><li>RIP (Real Server IP)，后端服务器的 IP 地址</li><li>CIP (Client IP)，访问客户端的 IP 地址</li></ul><h2 id="LVS-三种模式的主要区别"><a href="#LVS-三种模式的主要区别" class="headerlink" title="LVS 三种模式的主要区别"></a>LVS 三种模式的主要区别</h2><table><thead><tr><th></th><th></th><th>VS/NAT</th><th>VS/TUN</th><th>VS/DR</th></tr></thead><tbody><tr><td></td><td>server</td><td>any</td><td>tunneling</td><td>non-arp device</td><td></td></tr><tr><td></td><td>server network</td><td>private</td><td>LAN/WAN</td><td>LAN</td><td></td></tr><tr><td></td><td>server number</td><td>low (10~20)</td><td>high</td><td>high</td><td></td></tr><tr><td></td><td>server gateway</td><td>load balancer</td><td>own router</td><td>own router</td><td></td></tr></tbody></table><table><thead><tr><th></th><th>模式与特点</th><th>NAT 模式</th><th>IPIP 模式</th><th>DR 模式</th></tr></thead><tbody><tr><td></td><td>对服务器的要求</td><td>服务节点可以使任何操作系统</td><td>必须支持 IP 隧道，目前只有 Linux 系统支持</td><td>服务器节点支持虚拟网卡设备，能够禁用设备的 ARP 响应</td><td></td></tr><tr><td></td><td>网络要求</td><td>拥有私有 IP 地址的局域网络</td><td>拥有合法 IP 地址的局域，网或广域网</td><td>拥有合法 IP 地址的局域，服务器节点与负载均衡器必须在同一个网段</td><td></td></tr><tr><td></td><td>通常支持节点数量</td><td>10 到 20 个，根据负载均衡器的处理能力而定</td><td>较高，可以支持 100 个服务节点</td><td>较高，可以支持 100 个服务节点</td><td></td></tr><tr><td></td><td>网关</td><td>负载均衡器为服务器节点网关</td><td>服务器的节点同自己的网关或者路由器连接，不经过负载均衡器</td><td>服务节点同自己的网关或者路由器连接，不经过负载均衡器</td><td></td></tr><tr><td></td><td>服务节点安全性</td><td>较好，采用内部 IP，服务节点隐蔽</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td>较差，采用公用 IP 地址，节点安全暴露</td><td></td></tr><tr><td></td><td>IP 要求</td><td>仅需要一个合法的 IP 地址作为 VIP 地址</td><td>除了 VIPO 地址外，每个服务器界定啊需要拥有合法的 IP 地址，可以直接从路由到客户端</td><td>除了 VIP 外，每个服务节点需拥有合法的 IP 地址，可以直接从路由到客户端</td><td></td></tr><tr><td></td><td>特点</td><td>地址转换</td><td>封装 IP</td><td>修改 MAC 地址</td><td></td></tr><tr><td></td><td>配置复杂度</td><td>简单</td><td>复杂</td><td>复杂</td><td></td></tr></tbody></table><h2 id="LVS-基本工作原理"><a href="#LVS-基本工作原理" class="headerlink" title="LVS 基本工作原理"></a>LVS 基本工作原理</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823142206.png" alt=""></p><ol><li>当用户向负载均衡调度器（Director Server）发起请求，调度器将请求发往至内核空间</li><li>PREROUTING 链首先会接收到用户请求，判断目标 IP 确定是本机 IP，将数据包发往 INPUT 链</li><li>IPVS 是工作在 INPUT 链上的，当用户请求到达 INPUT 时，IPVS 会将用户请求和自己已定义好的集群服务进行比对，如果用户请求的就是定义的集群服务，那么此时 IPVS 会强行修改数据包里的目标 IP 地址及端口，并将新的数据包发往 POSTROUTING 链</li><li>POSTROUTING 链接收数据包后发现目标 IP 地址刚好是自己的后端服务器，那么此时通过选路，将数据包最终发送给后端的服务器</li></ol><h3 id="LVS-的组成"><a href="#LVS-的组成" class="headerlink" title="LVS 的组成"></a>LVS 的组成</h3><blockquote><p>LVS 由 2 部分程序组成，包括 ipvs 和 ipvsadm。</p></blockquote><ol><li>ipvs(ip virtual server)：一段代码工作在内核空间，叫 ipvs，是真正生效实现调度的代码。</li><li>ipvsadm：另外一段是工作在用户空间，叫 ipvsadm，负责为 ipvs 内核框架编写规则，定义谁是集群服务，而谁是后端真实的服务器 (Real Server)</li></ol><h3 id="LVS-和-Keepalived"><a href="#LVS-和-Keepalived" class="headerlink" title="LVS 和 Keepalived"></a>LVS 和 Keepalived</h3><p>在 lvs+keepalived 环境里面，lvs 主要的工作是提供调度算法，把客户端请求按照需求调度在 real 服务器，keepalived 主要的工作是提供 lvs 控制器的一个冗余，并且对 real 服务器做健康检查，发现不健康的 real 服务器，就把它从 lvs 集群中剔除，real 服务器只负责提供服务。</p><h3 id="LVS-NAT"><a href="#LVS-NAT" class="headerlink" title="LVS/NAT"></a>LVS/NAT</h3><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190823142555.png" alt=""></p><blockquote><p>重点理解 NAT 方式的实现原理和数据包的改变。</p></blockquote><p>(1). 当用户请求到达 Director Server，此时请求的数据报文会先到内核空间的 PREROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 VIP<br>(2). PREROUTING 检查发现数据包的目标 IP 是本机，将数据包送至 INPUT 链<br>(3). IPVS 比对数据包请求的服务是否为集群服务，若是，修改数据包的目标 IP 地址为后端服务器 IP，然后将数据包发至 POSTROUTING 链。 此时报文的源 IP 为 CIP，目标 IP 为 RIP<br>(4). POSTROUTING 链通过选路，将数据包发送给 Real Server<br>(5). Real Server 比对发现目标为自己的 IP，开始构建响应报文发回给 Director Server。 此时报文的源 IP 为 RIP，目标 IP 为 CIP<br>(6). Director Server 在响应客户端前，此时会将源 IP 地址修改为自己的 VIP 地址，然后响应给客户端。 此时报文的源 IP 为 VIP，目标 IP 为 CIP</p><blockquote><p>LVS/NAT 模型的特性</p></blockquote><ul><li>RS 应该使用私有地址，RS 的网关必须指向 DIP</li><li>DIP 和 RIP 必须在同一个网段内</li><li>请求和响应报文都需要经过 Director Server，高负载场景中，Director Server 易成为性能瓶颈</li><li>支持端口映射</li><li>RS 可以使用任意操作系统</li><li>缺陷：对 Director Server 压力会比较大，请求和响应都需经过 director server</li></ul><p>NAT（Network Address Translation 网络地址转换）是一种外网和内外地址映射的技术，内网可以是私有网址，外网可以使用 NAT 方法修改数据报头，让外网与内网能够互相通信。NAT 模式下，网络数据报的进出都要经过 LVS 的处理。LVS 需作为 RS（真实服务器）的网关。当包到达 LVS 时，LVS 做目标地址转换（DNAT），将目标 IP 改为 RS 的 IP。RS 接收到包以后，仿佛是客户端直接发给它的一样。RS 处理完，返回响应时，源 IP 是 RS IP，目标 IP 是客户端的 IP。这时 RS 的包通过网（LVS）中转，LVS 会做源地址转换（SNAT），将包的源地址改为 VIP，这样，这个包对客户端看起来就仿佛是 LVS 直接返回给它的。客户端无法感知到后端 RS 的存在。</p><p>（1）RIP 和 DIP 必须在同一个 IP 网络，且应该使用私网地址；RS 的网关要指向 DIP；<br>（2）请求报文和响应报文都必须经由 Director 转发；Director 易于成为系统瓶颈；<br>（3）支持端口映射，可修改请求报文的目标 PORT；<br>（4）vs 必须是 Linux 系统，rs 可以是任意系统；</p><p>缺点：在整个过程中，所有输入输出的流量都要经过 LVS 调度服务器。显然，LVS 调度服务器的网络 I/O 压力将会非常大，因此很容易成为瓶颈，特别是对于请求流量很小，而响应流量很大的 Web 类应用来说尤为如此。</p><p>优点：NAT 模式的优点在于配置及管理简单，由于了使用 NAT 技术，LVS 调度器及应用服务器可以在不同网段中，网络架构更灵活，应用服务器只需要进行简单的网络设定即可加入集群。</p><h2 id="配置-LVS-NAT"><a href="#配置-LVS-NAT" class="headerlink" title="配置 LVS-NAT"></a>配置 LVS-NAT</h2><h3 id="DS"><a href="#DS" class="headerlink" title="DS"></a>DS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install keepalived</span></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">apt-get install keepalived ipvsadm</span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">yum install keepalived ipvsadm</span><br><span class="line"></span><br><span class="line"><span class="comment"># update iptables</span></span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># For keepalived:</span></span><br><span class="line"><span class="comment"># allow vrrp </span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line"><span class="comment"># allow multicast</span></span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># reload iptables</span></span><br><span class="line">service iptables reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># open ip_forward</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"1"</span> &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="comment"># edit sysctl.conf</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># keepalived for lvs-nat</span></span><br><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group NC-MAIN-API &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        NC-MAIN-API-PUB</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance NC-MAIN-API-PUB &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond1</span><br><span class="line">    virtual_router_id 222</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xx.xx.xx.xx/25 dev bond1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server xx.xx.xx.xx 15000 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 10.71.12.69 15000 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 15000</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 10.71.12.76 15000 &#123;</span><br><span class="line">        weight 100</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">                connect_timeout 3</span><br><span class="line">                nb_get_retry 3</span><br><span class="line">                delay_before_retry 3</span><br><span class="line">                connect_port 15000</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># enable and start keepalived</span></span><br><span class="line">systemctl start keepalived</span><br><span class="line">systemctl <span class="built_in">enable</span> keepalived</span><br><span class="line">watch ipvsadm -L -n --stats</span><br></pre></td></tr></table></figure><h3 id="RS"><a href="#RS" class="headerlink" title="RS"></a>RS</h3><p>修改默认网关指向 NAT 的 VIP 地址</p><h2 id="LVS-和-Keepalived-系列"><a href="#LVS-和-Keepalived-系列" class="headerlink" title="LVS 和 Keepalived 系列"></a>LVS 和 Keepalived 系列</h2><p><a href="https://wsgzao.github.io/post/lvs-keepalived/">LVS 和 Keepalived 的原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs/">LVS 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/keepalived/">Keepalived 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-nat/">LVS-NAT 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-dr/">LVS-DR 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-tun/">LVS-TUN 原理介绍和配置实践</a></p>]]></content>
    
    <summary type="html">
    
      LVS-NAT原理介绍和配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
</feed>
