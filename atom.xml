<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HelloDog</title>
  
  <subtitle>Keep Calm and Carry On</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wsgzao.github.io/"/>
  <updated>2020-02-25T06:26:41.859Z</updated>
  <id>https://wsgzao.github.io/</id>
  
  <author>
    <name>wsgzao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从国内跳槽至新加坡工作的经验分享</title>
    <link href="https://wsgzao.github.io/post/singapore/"/>
    <id>https://wsgzao.github.io/post/singapore/</id>
    <published>2020-02-23T02:59:49.000Z</published>
    <updated>2020-02-25T06:26:41.859Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191007154135.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>为什么会写这样一篇长文记录和分享自己在新加坡的工作生活，主要是我在 2018 年 6 月 9 日前需要了解新加坡的时候网上的参考信息屈指可数，出于这个原因我决定顺手记录来新加坡的经历方便自己回顾也方便他人参考。非常感谢在 2019 年出现的<a href="https://996.icu" target="_blank" rel="noopener">996.icu</a>，让更多人看到了一个不一样的世界，里面也有很多朋友分享了新加坡的生活经历。不管你现在的生活是 996 还是 669，我都希望大家可以从电视剧《都挺好》里发现那个最真实的自己。如果你只想了解我是如何来到新加坡的可以直接跳到最后一章。</p><blockquote><p>为帮助大家玩转新加坡，快速适应当地生活</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 xx 月 xx 日 - 增加 PR 申请结果和新加坡金融理财以及信用卡申请心得<br>2019 年 12 月 31 日 - 增加新加坡保险购买经历的思考和新加坡 2020 年各行业工资数据<br>2019 年 10 月 16 日 - 更新 EP 申请 PR 材料细节，增加新加坡婚礼红包份子钱的礼仪<br>2019 年 06 月 09 日 - 更新新加坡一周年经历<br>2019 年 02 月 14 日 - 更新半年的经历以及 PR 申请流程<br>2018 年 09 月 09 日 - 增加新加坡 3 个月工作生活感受<br>2018 年 08 月 01 日 - 更新个人经验<br>2018 年 05 月 15 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/singapore/">https://wsgzao.github.io/post/singapore/</a></p><p><strong> 扩展阅读 </strong></p><p>逃离 996 - <a href="https://github.com/623637646/996.Leave" target="_blank" rel="noopener">https://github.com/623637646/996.Leave</a></p><hr><h2 id="认识狮城"><a href="#认识狮城" class="headerlink" title="认识狮城"></a>认识狮城</h2><p>姓名：新加坡</p><p>年龄：53 岁（成立于 1965 年，国庆日为每年的 8 月 9 日）</p><p>家庭住址：北半球赤道地区，位于马来半岛最南端 （北纬 1°22′，东经 103°48′）</p><p>住房面积：新加坡国土面积 710.3 平方公里 （新加坡面积是上海的 1/9，北京的 1/23）</p><p>家庭成员：人口约 520 万，密度达到每平方公里 7700 多人（排在世界前列）</p><p>相貌特征：新加坡多元种族和文化的相互融合是其极具魅力的原因之一，由华族（占全国人口约四分之三）、欧亚族、印度族、马来族、土生华人构成。</p><p>性格特征：新加坡以实行严格的法律和制度著称，无论是居民还是游客，都需要予以足够重视，否则可能会被课以重罚。当然，如果您遵循当地法律规章，也不必过分担心。</p><blockquote><p>所获荣誉：或许这些荣誉只属于过去，我们更需要关心的是现在和未来会怎样</p></blockquote><p>让人最想移民的国家全球排名第一<br>全球最具竞争力国家排名第一<br>最适应亚洲人士居住的地方全球排名第一<br>城市基础设施建设全球排名第一<br>全球化程度最高的城市排名第一</p><p>其他方面：<a href="http://www.visitsingapore.com.cn/travel-guide-tips/about-singapore/" target="_blank" rel="noopener">http://www.visitsingapore.com.cn/travel-guide-tips/about-singapore/</a></p><h2 id="旅游出入境"><a href="#旅游出入境" class="headerlink" title="旅游出入境"></a>旅游出入境</h2><blockquote><p>新加坡 5 件套</p></blockquote><ul><li>打疫苗</li><li>打 HPV</li><li>开账户</li><li>买保险</li><li>看学校</li></ul><blockquote><p>签证</p></blockquote><p>中国公民去新加坡须提前申请有效签证，不可以落地签。</p><p>中国公民申请的新加坡旅游 / 商务签证为电子签证（e-Visa），在获得签证后，建议上网打印多份有效签证以防遗失。签证费为每人 SG$30。</p><p>新加坡签证可多次入境，有效期分别有 35 天 / 62 天 / 2 年，由签证官根据申请人资料而定。逗留时间则由入境官决定，通常为 14-30 天。从 2015 年 6 月 1 日起新加坡将给予符合条件的中国公民有效期长达 10 年的多次入境签证。</p><p><a href="http://www.visitsingapore.com.cn/travel-guide-tips/travelling-to-singapore/" target="_blank" rel="noopener">http://www.visitsingapore.com.cn/travel-guide-tips/travelling-to-singapore/</a></p><blockquote><p>申请途径 How to Apply</p></blockquote><p>2014 年 12 月 8 日起大使馆及各领事馆停止接收签证申请，可登录新加坡外交部官网，查询中国国内官方指定的签证机构，办理新加坡签证。</p><blockquote><p>所需资料 Required Information</p></blockquote><ol><li>个人信息表（登录新加坡外交部官网下载表格，链接：<a href="http://www.mfa.gov.sg）" target="_blank" rel="noopener">www.mfa.gov.sg）</a></li><li>户口本（原件或扫描电子版，户主 + 个人页复印件）</li><li>身份证（原件或正反面扫描电子版，正反面复印件）</li><li>护照（原件或个人页扫描电子版，个人页复印件，有效期 6 个月以上）</li><li>2 张 2 寸白底免冠照片</li><li>在职证明原件或相关职业证书</li></ol><blockquote><p>出入境</p></blockquote><p>从 2018 年 10 月 4 日起，新加坡纸质入境卡（人称 “白卡”）即将走入历史！取而代之的是电子化入境卡。</p><p>访客可通过移民关卡局官方网站 <a href="https://www.ica.gov.sg/" target="_blank" rel="noopener">https://www.ica.gov.sg/</a> 或下载手机应用程序填写资料。通过手机填写资料还有自动储存功能，以方便下一次入境时使用。而与家人或小组团体同游新加坡的人，能够以团体方式提交入境资料。</p><p>离境前别忘了退税，在附有 “退税” 标志的场所消费满 100 新币以上，即可退回 7% 的商品及服务税，退税时需出示购物发票或收据。具体的退税要求，可咨询工作人员。</p><blockquote><p>其它注意事项</p></blockquote><p>电源插座：新加坡使用的标准电流是 220-240 伏特交流电（50 赫兹），在这里，您可以使用三眼电源插座。</p><p><a href="http://www.visitsingapore.com.cn/travel-guide-tips/" target="_blank" rel="noopener">http://www.visitsingapore.com.cn/travel-guide-tips/</a></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802161219.png" alt=""></p><h2 id="新加坡工作准证"><a href="#新加坡工作准证" class="headerlink" title="新加坡工作准证"></a>新加坡工作准证</h2><blockquote><p>关于工作准证的最新信息请以新加坡人力部 (MOM) 发布的为准</p></blockquote><p><a href="https://www.mom.gov.sg/" target="_blank" rel="noopener">https://www.mom.gov.sg/</a></p><p>在新加坡工作，新加坡人力部 Ministry Of Manpower (MOM) 是最常打交道的政府部门，工作准证不仅是由人力部批准和颁发所有文件提交最终也是到达人力部</p><p>注意：所有提交给 MOM 的资料原件，都需要在入境的时候随身携带。以便在去人力部办卡的时候，让长官核实和查阅。</p><ol><li>新版卡片上将不再印刷准证的到期日期，新版卡片会印上二维码（QR Code），下载 SGWorkPass 的手机 APP 后，可以扫码查看持卡人的职务、证件是否有效等信息</li><li>如果过海关或签合约等需要核对卡片截止日期时，不再可以只看卡面信息，还需要扫码或在线上核对截止日期等，建议保存 SGWorkPass 截图至手机中以防万一</li></ol><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802161307.png" alt=""></p><p><a href="https://docs.qq.com/sheet/DeVh5ZEhKWnhCTldK" target="_blank" rel="noopener">如果发现表有错误请点击链接申请编辑更新，谢谢</a></p><h3 id="Work-Permit-WP"><a href="#Work-Permit-WP" class="headerlink" title="Work Permit (WP)"></a>Work Permit (WP)</h3><p>WP 是人力部设置的给外国低水准员工提供的工作准证。</p><p>对申请者的要求：薪水和学历：无要求<br>年龄：马来西亚人（18-58 周岁），非马来西亚人（18-50 周岁）；<br>对公司的要求：需要为其购买保额至少 15000 新币的保险；缴纳 5000 新币担保金<br>注意事项：<br>公司需要先为雇员申请好 WP 并办理保险，才可以持 WP 准证进入新加坡。在申请的状态中，本人不可以进入新加坡。</p><h3 id="S-PASS-SP"><a href="#S-PASS-SP" class="headerlink" title="S PASS (SP)"></a>S PASS (SP)</h3><p>SP 是人力部设置的给外国中级技术水准雇员提供的工作准证。</p><p>对申请者的要求：学历：大专，本科，或者技术资质认证（需要至少一年全职学习获得的技术认证）；<br>工作年限：虽然没有明文规定最少需要多少年的工作经验，但工作经验会作为一个审核标准；<br>对公司的要求：所付起薪 2200 新币；</p><p>注意事项：<br>也有公司人头配额限制：服务行业 SP 人数不可超过总员工的 15%，其它行业是 20%。<br>你在申请之前需要确保学历在 Dataflow，学信网及中国学位与研究生教育信息网上可以查到。另外，针对不同的行业，也有可能需要提交相关的专业证明。</p><h3 id="Employment-Pass（EP）"><a href="#Employment-Pass（EP）" class="headerlink" title="Employment Pass（EP）"></a>Employment Pass（EP）</h3><p>EP 是人力部设置的给外国专业人员（管理层，主管或专业职位）提供的工作准证. 是工作准证中级别最高的。</p><p>对申请者的要求：<br>年轻的申请者需拥有优秀院校的毕业证书，且达到 3600 的雇佣薪水以及拥有相关专业经验才可以申请。<br>至于年长的申请人，则必须拥有更高的薪水以及相应工作经验和工作质量。</p><p>对雇主的要求：<br>所付起薪 3600 新币</p><p>注意事项：<br>和申请 SP 一样，在申请之前需要确保学历在 Dataflow，学信网及中国学位与研究生教育信息网上可以查到。另外，针对不同的行业，也有可能需要提交相关的专业证明。<br>根据对应的准证类型，提交人力部 (MOM) 所要求的材料</p><ul><li>有效的护照信息</li><li>必要的技能证书</li><li>有效的毕业证</li></ul><p>2018 年 1 月 1 日起两件重要变化</p><ul><li>EP 准证持有人月薪至少 6000 新币以上可以给配偶和孩子申请相关准证(DP)</li><li>EP 准证持有人月薪至少 12000 新币以上可以申请父母长期探访准证（LTVP)</li></ul><h2 id="家庭成员准证"><a href="#家庭成员准证" class="headerlink" title="家庭成员准证"></a>家庭成员准证</h2><h3 id="Dependant‘s-Pass-家属准证（DP）"><a href="#Dependant‘s-Pass-家属准证（DP）" class="headerlink" title="Dependant‘s Pass 家属准证（DP）"></a>Dependant‘s Pass 家属准证（DP）</h3><p>家属准证，在新加坡工作或经商，并持有 EP SP 或 Enptrpass 的人士，可为自己的配偶及 21 岁以下小孩申请的一种准证。持家属准证的小孩，可直接入学新加坡政府中小学。</p><p>薪水：担保人固定月薪薪水需达到 5,000 新币以上。（2018 年 1 月 1 日起至少达到 6000 新币以上）。</p><p>工作：EP 或创业准证家属，可通过公司向人力部申请新加坡工作的凭证 LOC（Letter of consent），批准后，可直接工作（不占用公司配额）。SP 家属准证，需申请工作准证后才能工作。家属准证（DP）持有人申请到工作准证（EP 或 SP）后需取消 DP，SP 家属取得的工作准证有效期与 SP 持有人准证有效期相关。</p><h3 id="Long-Term-Visit-Pass-长期探访准证（LTVP）"><a href="#Long-Term-Visit-Pass-长期探访准证（LTVP）" class="headerlink" title="Long Term Visit Pass 长期探访准证（LTVP）"></a>Long Term Visit Pass 长期探访准证（LTVP）</h3><p>长期探访准证，是新加坡政府颁发的一种可以在新加坡长期居住的准证，期限从半年到十年不等。其中新加坡公民的配偶又可以申请获得 LTVP+。目前的审批部门有两个，一个是 ICA 移民厅，一个是 MOM 人力部。</p><p>需要去移民厅申请的：</p><ol><li>新加坡公民的配偶<br>2.PR 的配偶</li><li>新加坡公民 / PR 未满 21 周岁的小孩</li><li>新加坡公民 / 21 周岁以上 PR 的父母</li><li>寻求在新加坡工作的有关高校毕业生</li><li>小孩 / 孙辈在新加坡持学生准证读书的母亲或外祖母</li><li>寻求准许在新加坡分娩者</li></ol><p>新加坡移民局网址<br><a href="https://www.ica.gov.sg/" target="_blank" rel="noopener">https://www.ica.gov.sg/</a></p><p>需要去人力部申请的：</p><ol><li>EP/SP 准证持有者的配偶（2018 年 1 月 1 日起至少 6000 新币）</li><li>EP/SP 准证持有者未满 21 周岁的未婚残疾子女（2018 年 1 月 1 日起至少 6000 新币）</li><li>EP/SP 准证持有者未满 21 周岁的未婚继子女（2018 年 1 月 1 日起至少 6000 新币）</li><li>EP/SP 准证持有者的父母（2018 年 1 月 1 日起至少 12000 新币）</li><li>Entrepass（创业准证）的父母</li></ol><p>新加坡人力部网址：<br><a href="https://www.mom.gov.sg/" target="_blank" rel="noopener">https://www.mom.gov.sg/</a></p><h2 id="新加坡通讯指南"><a href="#新加坡通讯指南" class="headerlink" title="新加坡通讯指南"></a>新加坡通讯指南</h2><p>国内的手机大部分都可以在新加坡直接换卡使用，除非你的手机是中国移动 4G 定制版本，由于网络制式的区别，无法使用新加坡 4G 网络，新加坡目前 2G 网络停止服务。</p><blockquote><p>小贴士：建议使用全网通手机，去国外任何地方都可以直接换卡使用。</p></blockquote><p>运营商：新电信（Singtel）、星河（Starhub）和 M1（Mobile One）</p><p>在新加坡机场、邮局、7-11 便利店和代理商都可以购买和充值电话卡，记得一定要带上护照，新加坡的手机卡采用实名制。推荐大家下载所用运营商的 App，查询和购买话费、流量等。</p><blockquote><p>Zero1: Get Ready For Unlimited Data | Plans</p></blockquote><p>我自己办理的是 Zero1 的 9.9 新币 / 月无限流量套餐</p><p>详情请参考官网：<a href="https://zero1.sg/" target="_blank" rel="noopener">https://zero1.sg/</a></p><blockquote><p>新加坡支持携号转网但仅限于 post-paid，pre-paid 是不支持的</p></blockquote><h2 id="新加坡交通指南"><a href="#新加坡交通指南" class="headerlink" title="新加坡交通指南"></a>新加坡交通指南</h2><p>新加坡主要交通出行方式：地铁（MRT）、轻轨（LRT）、巴士（Bus）和德士（Taxi）。</p><p>其中地铁（MRT）是新加坡最便捷的交通工具，也是日常最佳的出行方式。根据官方 2017 年 1 月份提供的最新信息显示，全岛共设有 142 个车站，目前主要的运营线中，南北运营线以 “NS” 红线标明，东西运营线以 “EW” 绿线标明，东北运营线以 “NE” 紫线标明，环线以 “CC” 黄线标明，市区运营线以 “DT” 蓝线。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802161743.png" alt=""></p><p>新加坡地铁图</p><p><a href="https://www.lta.gov.sg/content/ltaweb/en/public-transport/mrt-and-lrt-trains/train-system-map.html" target="_blank" rel="noopener">https://www.lta.gov.sg/content/ltaweb/en/public-transport/mrt-and-lrt-trains/train-system-map.html</a><br><a href="https://exploresg.com/ditie/" target="_blank" rel="noopener">https://exploresg.com/ditie/</a></p><p>新加坡地铁和巴士车 (站) 内规定</p><ol><li>不可吃喝、吸烟、携带榴莲、大声喧哗和带宠物 </li><li>Bus 不报站、上下车需要刷卡</li></ol><p>温馨提示</p><ol><li>地铁和巴士上冷气很足，建议携带薄外套</li><li>在 20 分钟内，地铁和巴士之间转换，车资有优惠</li><li>在地铁或者商场等使用扶梯时，左侧是站立侧，右侧是快速通道</li></ol><h2 id="新加坡房屋指南"><a href="#新加坡房屋指南" class="headerlink" title="新加坡房屋指南"></a>新加坡房屋指南</h2><blockquote><p>组屋(HDB)</p></blockquote><p>新加坡的“组屋”，全称为组合房屋。由新加坡建屋发展局（HDB）不以盈利为目的承担建筑的楼房，为大部分新加坡人（80%）的住所。</p><p>组屋一般分为三房式、四房式和五房式。三房式指一厅两房，使用面积约 60 平方米；四房式是一厅三房，使用面积约 90 平方米；五房式是两厅三房，使用面积大致在 110 平方米。</p><p>组屋的区分都是按照地区名 + 数字，例如：PasirRis Block 186（巴西立大牌 186）、YishunBlock 210（义顺大牌 210）等。</p><p>屋内客厅，厨房，卫生间都是公用设施，一般会配备冰箱，洗衣机，空调或者风扇。</p><p>租房费用（一般情况下）：</p><p>新型组屋 (近 10 年内建成的) 相对条件会好很多 (平均价格 S$1000-1200 / 间)<br>单人单间：500-1000 新币<br>二人间：350-550 新币 / 人<br>四人间：270-350 新币 / 人</p><p><strong> 小贴士 </strong></p><ol><li>新加坡政府规定租住的房子必须要能在建屋局上注册。正常情况下，注册要求至少住 6 个月。如果不能注册，就是不合法的房屋。</li><li>如果退租，一定要提前一月声明，以防押金不退。</li><li>仔细看合同，仔细看合同，仔细看合同。</li></ol><blockquote><p>私人公寓(Condo)</p></blockquote><p>公寓，常见两房式或三房式，相当于国内的高档成熟社区，内有免费游泳池、健身房，BBQ 等公共设施，住宿环境相对较好，价格也相对高一些；大部分的 condo 房间都有主人房与非主人房之分，主人房有自己独立的洗手间和相对宽敞的卧室，当然价格也比非主人房高 200-300 / 月(非主人房平均价格<br>S$1,000-1,500 / 间 / 月)</p><blockquote><p>排屋(Terrace)</p></blockquote><p>独门不独栋的联排别墅，此类出租房源相对较少，住宿环境、价格与房子位置、条件有相当大的关系。</p><blockquote><p>独栋别墅(Landedproperty)</p></blockquote><p>少见于房间出租。</p><h2 id="租房"><a href="#租房" class="headerlink" title="租房"></a>租房</h2><blockquote><p>如果英语不是太差，不推荐狮城 BBS 或者微博租房，如果你有认识的新加坡房产中介自然是最佳选择</p></blockquote><p>PropertyGuru - <a href="http://www.propertyguru.com.sg/" target="_blank" rel="noopener">http://www.propertyguru.com.sg/</a></p><p>SRX - <a href="https://www.srx.com.sg/" target="_blank" rel="noopener">https://www.srx.com.sg/</a></p><p>新加坡本地发布平台，房源多。使用下来感觉 PropertyGuru 和 SRX 信息发布是最多的，信息筛选条件多，容易搜索到希望的房源。多为中介发布，有中介费。</p><p>我移除了 Nestia 和 99.co 因为根据新加坡房地产中介的建议他们只会在流量头部站点积极更新，其它站点基本疏于维护，租房房源一般 3 周以上就可能不用看已经租出去了。</p><p>在新加坡租房，有哪些经验可以分享？<br><a href="https://www.zhihu.com/question/22430961" target="_blank" rel="noopener">https://www.zhihu.com/question/22430961</a></p><h2 id="在新加坡买房与中国有何不同？"><a href="#在新加坡买房与中国有何不同？" class="headerlink" title="在新加坡买房与中国有何不同？"></a>在新加坡买房与中国有何不同？</h2><blockquote><p>无论在中国还是新加坡买房前后都记得关注下政策上的变化，新加坡买房的流程很简单，首付 = 房屋价格 + 税 + 中介费 - 贷款额度。</p></blockquote><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200109111339.png" alt=""></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802162119.png" alt=""></p><p>① 面积</p><p>说到面积，首先让中国买家摸不着头脑的，就是面积单位的换算。中国买家习惯用平方米（也称平方公尺）计算面积，来新加坡选购房子时听到的都是平方英尺，往往脑子得转一圈才知道个大概。1 平方米约等于 10.8 平方英尺。100 平方米就是 1080 平方英尺。</p><p>除了计算单位不同，“面积”一词在两地公寓市场上的定义也不一样。在中国，面积指的是建筑面积；新加坡算的是实用面积。建筑面积的算法比较繁琐。简单来讲，是根据各套房屋的套内建筑面积，求得各套房屋分摊所得的共有建筑分摊面积，比如门口的面积、楼梯等，都按比例算进每一个单位的建筑面积。</p><p>所以，同一个公寓单位，其建筑面积一定会大于实用面积，通常后者比前者少 20％左右。在中国买一个 “100 平方米” 的单位，和在新加坡买一个“1080 平方英尺”（相当于 100 平方米）相比，后者明显感觉宽敞一点，就是这个道理。</p><p>② 地契</p><p>中国的房产地契通常是 70 年左右，而新加坡的则有 99 年、999 年和永久地契之分。新加坡的房产因为地契年限长，颇受外籍人士青睐。其中，永久地契的房产一般要比 99 年地契的贵 20％。尽管如此，永久地契一直很抢手，也深受中国买家欢迎，因为买家看准这块市场的保值与增值。</p><p>这其中很大程度上因为新加坡的地皮比较少，想要建新楼必须拆掉现有的建筑。不像中国地皮比较多，还有可开发的地段。新加坡永久地契的地段价值比较高，所以如果进行集体出售、或是被政府征用的话，永久地契房地产的房主会可得到较高的补偿。</p><p>物以稀为贵，永久地契房产越是少见，也就越炙手可热。此外，永久地契对中国买家还有另一大吸引力，那就是永久地契满足了 “总觉得要给后代留下点什么” 的传统华人心愿。所以说，新加坡房产能如此吸引外国买家，与地契久脱不了关系。</p><p>③ 贷款</p><p>在新加坡首次购房的买家，可向金融机构贷款的房贷比率顶限为 80％，外籍人士一般则最高 70％。在中国，外国人一般不能向本土中国银行贷款，只能通过外资银行或中国银行境外支行。</p><p>原本新加坡和中国在房贷比率顶限方面有很大差别。不过两国都不断调整房贷比率顶限，因此两国的房贷比率顶限差别已缩小。</p><p>④ 税收</p><p>在新加坡，如果在一定期限里卖掉公寓，卖家需要上缴印花税。在 2011 年 1 月 14 日过后买房的购屋者，只要在四年内卖房屋都需要支付卖方印花税，第一、二、三和四年卖掉房产的税率分别是 16％、12％、8％和 4％。此后就不必上缴卖家印花税。</p><p>在中国，除了印花税外，还需要上缴增值税。为了给中国房地产市场降温，中国政府在 2013 年实施 20％的房地产买卖增值税。所谓增值税，就是对卖家卖房所得的利润征收的税。譬如，150 万人民币买的房子在几年后以 200 万人民币卖掉，卖家所赚得的 50 万就将需要以一定的比率交税。</p><p>⑤ 车位</p><p>在中国购买中高档住宅，需要另外购买车位。而在新加坡，买家不需要另付车位费，发展商一般会为每个新单位赠送一个车位。可不能小瞧这个车位费。近年来，车位费在中国节节攀升，动辄十几、二十万人民币，是一笔不小的开销。</p><p>新加坡私人公寓不收车位费，而是将停车场的修建和维护等费用，包括在每月的项目管理费之中。管理费除了车库，还包括游泳池、健身房等设施，每月一般是几百元新元。如果每月的管理费是 300 元新元（约 1400 元人民币），一年就是 1 万 7000 元人民币，15 年刚好是 25 万 5000 元人民币。总体来讲，这要比中国的车位 “划算” 得多。</p><h2 id="新加坡医疗指南"><a href="#新加坡医疗指南" class="headerlink" title="新加坡医疗指南"></a>新加坡医疗指南</h2><p>新加坡是一个热带国家，从国内刚过去有可能因水土不服引起的伤风、感冒、皮肤敏感或蚊虫叮咬等。出行之前可以带一些三九胃泰、牛黄解毒等日常药品之类的药品，防范于未然是最好的。</p><p>看医生：在新加坡持有工作签证，所在的公司会按照新加坡劳工部规定给每位员工会购买医疗保险或者费用报销。</p><p>医疗保险：一般是三种模式</p><ol><li>直接去合作门诊，提供公司信息，看病不用自己拿钱。</li><li>直接去合作门诊，提供公司信息，看病前给门诊 5 新币（每个公司不一样），其它的费用不用自己拿。</li><li>直接去合作门诊，自己先付产生的费用，然后去公司报销。意外伤害险等（视公司合同规定）。</li></ol><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191219193504.png" alt=""></p><p><a href="https://toutiaosg.com/%E6%96%B0%E5%8A%A0%E5%9D%A1%E5%8C%BB%E7%96%97%E5%85%A8%E7%90%83%E7%AC%AC%E4%B8%89%EF%BC%8C%E5%87%AD%E4%BB%80%E4%B9%88%EF%BC%9F/" target="_blank" rel="noopener">新加坡医疗全球第三，凭什么？</a></p><h2 id="公立和私立医疗服务"><a href="#公立和私立医疗服务" class="headerlink" title="公立和私立医疗服务"></a>公立和私立医疗服务</h2><blockquote><p>中国人在新加坡看病就好比外国人在中国看病一样不是很方便，价格不便宜，小病也有可能看成大病</p></blockquote><p>新加坡的医疗服务体系以优质高效著称，选择面广, 综合医院，专科医院，私人诊所遍布全国, 随处可见；不仅为全新加坡的公民，永久居民，外籍工作人士提供服务，同时周边国家的高端人群, 包括东南亚、亚洲、欧洲、中东阿拉伯等国家的病患都会将新加坡的国际医疗服务作为他们的首选。</p><p>新加坡的公立医疗机构和私立医疗机构在整个医疗系统中扮演着不同的角色。基础医疗门诊 80% 由私立医疗机构 / 家庭医生诊所提供，另外 20% 则是由政府综合诊疗所提供；而综合医疗，包括各类科室的住院，专科和 24 小时急诊主要由公立医疗机构提供，占 80% 的比例，剩下的 20% 由私立医疗机构提供。由于政府的有效规划和管控，公立医院和私立医院相辅相成, 缺一不可。</p><p>在公立医疗机构就诊一般都需要提前预约, 候诊时间较长, 也不能自由选择医生。由于那里的医生要面对更多的患者, 为每个患者服务的时间相对较短；而私立医疗机构由于患者相对较少, 不需要预约, 候诊时间较短，还可以自己选择医生，医生也能与患者作更多的交流, 提供更细致的服务，收费就相应高一些。</p><p>一些新加坡的公立医院也为自费病人提供高端医疗服务, 设有针对性的部门和项目, 如体检，会诊，专科治疗等。基础的检查和服务, 公立医院比私立医院收费较低；对于外籍人士和高端的服务项目, 公立和私立医院的收费差异不大。</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzIwMTQxODUxNw==&amp;mid=2650871863&amp;idx=3&amp;sn=b9536c73a1b6a0e0ed02019598d75c35&amp;chksm=8d1b8a4dba6c035b898a133fdf30ec613eb6826a0f4a66d5befe6364a04e24fb6bde9a981ce7&amp;scene=21" target="_blank" rel="noopener">8 家新加坡著名的公立和私立医院</a></p><h2 id="货币兑换和汇款"><a href="#货币兑换和汇款" class="headerlink" title="货币兑换和汇款"></a>货币兑换和汇款</h2><blockquote><p>如果时间宽裕，推荐走新加坡工商银行渠道</p></blockquote><p>新加坡实行货币开放政策，货币兑换中心随处可见，尤其是在牛车水 (China Town) 附近。如有汇款需求到国内，可以先去牛车水汇款 (珍珠坊二楼)，方便快捷。等周围熟悉后，推荐去淡宾尼(Tampines) 汇款到国内，汇率会比其它地方高一些。具体的地方，在地图搜索 Tampines Money Exchange Center。 </p><p>小贴士：汇款中心一般可以汇到中国邮政、中国农业、中国交通、中国招商和中国银行等。第一次汇钱到国内，当填写汇款单据的时候一定要知道对方银行卡是在 <strong> 省 </strong> 市 ** 银行支行开户的(很重要)。</p><h2 id="法律法规"><a href="#法律法规" class="headerlink" title="法律法规"></a>法律法规</h2><p>新加坡向来是给世人展示优美环境，井然秩序，舒适安全的名片，然而这些美好的展现离不开新加坡法律制度的约束和规范。Singaporeis a“fine”country 完整的诠释了这两方面。所以在新加坡生活，你需要注意以下细节：</p><ol><li>自动排队：公共场合最经常听到的一句话就是 please queue！</li><li>着装：不同场合穿不同衣服, 建议每天换衣服。</li><li>公共习惯：乘坐公共交通或者在公共场合用餐时, 切忌大声喧哗, 不然你一样会被当做异类奥! 而且记得再饿也要撑到下车再用餐。</li><li>言论：新加坡是多文化和宗教融合的国家, 公共场合不要发表敏感政治言论或者宗教话题, 这也体现互相尊重。</li><li>不当行为：竖中指可能会被当做种族歧视处理的</li><li>如厕：来也匆匆, 去也冲冲。如若不然请准备 500 新币吧。</li><li>口香糖：公共场所不允许嚼口香糖, 不可以随意买卖, 允许带少量入境, 正是这个奇葩的规定维护了公共环境的整洁。</li><li>吸烟：新加坡公共场所绝对禁烟。如若吸烟不幸被抓到, 恭喜你一个月的工资 (高达 2000 新币) 为国家做贡献了!</li><li>垃圾：乱丢垃圾初犯者将处高达 1000 新币罚款, 再犯者将罚款额提高至 2000 新币以及在劳改法令下受罚。</li><li>交通规则：闯红灯, 随便乱穿马路这些不多啰嗦。违反的是规则, 伤害的是人身安全, 因为小编也感觉马路上的车如同闪电般行驶。</li><li>不可非法聚会和使用暴力</li></ol><p>以上内容是提醒大家在生活细节方面应遵守的规则, 但有些行为未必就可以罚款结案的, 比如: 签证到期后逾期逗留、抢劫、公共场所涂鸦、纵火、携带毒品等这些可都是在鞭刑的定罪范围内的。</p><p><strong> 最后郑重的提醒各位：</strong> 在机场不要发扬助人为乐精神帮陌生人携带物品, 因为很有可能你同时把生命交给了别人(运输毒品和贩毒同罪)。</p><h2 id="工作准证遗失如何处理"><a href="#工作准证遗失如何处理" class="headerlink" title="工作准证遗失如何处理"></a>工作准证遗失如何处理</h2><ol><li>发现丢失后立即携带护照或者工作准证的复印件到任何一间警察局报案，记得保存报案记录原件。</li><li>通知雇主公司 HR, 让其在 7 天之内在新加坡人力部网上提交补办工作准证的申请。</li><li>费用: 首次补办 100 新币, 第二次是 300 新币(一般在提交申请补办 4 个工作日可去新卡)</li></ol><h2 id="银行卡遗失如何处理"><a href="#银行卡遗失如何处理" class="headerlink" title="银行卡遗失如何处理"></a>银行卡遗失如何处理</h2><ol><li>发现遗失后立即拨打银行客户服务中心热线挂失</li><li>银行客户专员会核对护照和工作准证信息, 然后等待新卡邮寄到住处或者去支行直接领取。</li></ol><p>POSB 用户请拨打 18003396963<br>DBS 用户请拨打 18001111111<br>UOB 用户请拨打 18002222121<br>OCBC 用户请拨打 18003633333</p><h2 id="护照遗失如何处理"><a href="#护照遗失如何处理" class="headerlink" title="护照遗失如何处理"></a>护照遗失如何处理</h2><p>如护照遗失或被盗, 请立即到中国驻新加坡大使馆如实填写《护照遗失陈述表》，提供关于护照遗失或被盗的情况说明, 以及提供报警记录原件及复印件。如护照损毁, 请提交损毁的护照, 以及护照损毁的原因说明。</p><p>具体的更换护照和网上预约等等详细流程请参考大使馆的官网：<a href="http://www.chinaembassy.org.sg/chn/" target="_blank" rel="noopener">http://www.chinaembassy.org.sg/chn/</a></p><p>中国驻新加坡大使馆信息:</p><p>地址: 150 TANGLIN ROAD,SINGAPORE 247969</p><p>领事部：64712117；92971517(仅限紧急领保求助, 不接受证件咨询)</p><p>Email: <a href="mailto:chinaemb_sg@mfa.gov.cn" target="_blank" rel="noopener">chinaemb_sg@mfa.gov.cn</a></p><p>办公时间：周一至周五(节假日除外)</p><p>上午 9:00-11:30</p><h2 id="新加坡日常-App-推荐"><a href="#新加坡日常-App-推荐" class="headerlink" title="新加坡日常 App 推荐"></a>新加坡日常 App 推荐</h2><blockquote><p>如果是 Android 记得安装 Google 框架，如果是 iOS 记得调整更改 Apple ID 国家或地区</p></blockquote><p>交通: Grab(类似国内滴滴)、Google Map(谷歌地图)、SG Buses(公交时刻表)、Mobike（摩拜单车国内账户通用）</p><p>社交: Facebook、WhatsApp、Twitter、Instagram</p><p>购物: Shopee、Lazada、eBay、Amazon、淘宝国际、京东国际、网易考拉、网易严选、小米有品、拼多多</p><p>娱乐: Youtube(视频必备)、 Golden Village(电影院)、CATHAY (电影院)</p><p>快递: <a href="http://www.xiaopodao.com/" target="_blank" rel="noopener">小坡岛集运</a>、淘宝直送 / 集运</p><p>微信公众号: </p><ul><li>新加坡眼</li><li>新加坡狮城椰子</li></ul><p>视频 / 音频播客:</p><ul><li><a href="https://www.youtube.com/channel/UClL3IBde8AhRSqGXioa3FiA?sub_confirmation=1" target="_blank" rel="noopener">AbbieLu 新加坡</a></li><li><a href="https://www.ximalaya.com/toutiao/5218657/" target="_blank" rel="noopener">俊玮谈新</a></li></ul><p>特别推荐: </p><ul><li><a href="https://zero1.sg/" target="_blank" rel="noopener">Zero1</a>: 9.9 每月无限流量手机卡</li><li><a href="https://originallyus.sg/products/" target="_blank" rel="noopener">SG BusLeh</a>: 个人认为是比 SG Buses 更好用的公交时刻表</li><li><a href="http://refer.eatigo.com/eati17aqf-1v9" target="_blank" rel="noopener">eatigo</a>: 开启新加坡美食 5 折之旅</li><li><a href="https://app.shopback.com/sgp?raf=kxg2ZG" target="_blank" rel="noopener">ShopBack</a>: 类似于国内的购物返现平台</li><li><a href="http://www.xiaopodao.com/" target="_blank" rel="noopener">小坡岛集运</a>: 从中国寄送包裹到新加坡空运最低仅需 19RMB/kg, 海运小包 10RMB/kg</li></ul><p>推荐信息聚合平台:</p><ul><li><a href="https://toutiaosg.com/" target="_blank" rel="noopener">新加坡头条</a>: 聚合了主流的新加坡本地中文站点，用来搜索历史记录比较合适</li><li><a href="https://blog.seedly.sg/" target="_blank" rel="noopener">Seedly</a>: 熟悉新加坡本地的银行金融，保险，买房投资规则</li><li><a href="https://www.moneysmart.sg/" target="_blank" rel="noopener">MONEYSMART</a>: 详细的金融类评测对比报告</li></ul><h2 id="新加坡至其他国家旅游"><a href="#新加坡至其他国家旅游" class="headerlink" title="新加坡至其他国家旅游"></a>新加坡至其他国家旅游</h2><blockquote><p>旅游可以具体向专业旅行社咨询，以政策变化为准</p></blockquote><p><a href="http://cs.mfa.gov.cn/wgrlh/lhqz/cjwdn_660600/t1175681.shtml" target="_blank" rel="noopener">境外中国公民赴香港特区怎么办理？</a></p><ol><li>持中华人民共和国护照，在海外过境香港特区前往中国内地或其他国家（或地区），凭有效护照和联程机票，可免办进入许可并在港停留 7 天。持中华人民共和国护照，自内地经香港特区前往其他国家（或地区），出示联程机票和前往国家或地区的签证，或合法居留证件 (如 “绿卡”) 后，可免办进入许可并在香港特区停留 7 天。 </li><li>如预计在香港特区停留超过 7 天，应事先申请进入许可。中国驻外使领馆可根据申请人情况签发 3 个月一次或两次有效，每次停留不超过 30 天的进入许可。持有外国永久居留证件，并在海外居住不少于 1 年者，可申请两年多次有效进入许可。</li></ol><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjA4NzQzNA==&amp;mid=503621899&amp;idx=1&amp;sn=62d66af2463312f4d66adf0a272e71f8&amp;chksm=004730ee3730b9f8b6a0ece62952493af344cce03f3a9fb8504a3e3a9a15777f6e351d285d26&amp;mpshare=1&amp;scene=23&amp;srcid=08022k223Jxs2MD7XXeHCXxT&amp;sharer_sharetime=1564734537933&amp;sharer_shareid=456ba82bbd1a1c9f32e5725824095308%23rd" target="_blank" rel="noopener">新加坡到各国签证办理条例</a></p><h2 id="新加坡父母签证"><a href="#新加坡父母签证" class="headerlink" title="新加坡父母签证"></a>新加坡父母签证</h2><blockquote><p>网上找到的，忘记出处了，如果有错误描述请及时指正</p></blockquote><p>本人 PR，老婆七月份预产期。打算让父母 6 月中旬来。计划步骤如下:<br>1, 先买往返机票（返程可更改的）。<br>=== 对的。<br>2,5 月份申请父母旅游签证。<br>=== 旅游签证可提前一个月内申请，有效期多数 63 天，也有一年，两年，非固定。有效期内入境即可。<br>3, 父母来新后申请延期至 89 天。<br>=== 对的。<br>4, 同时申请 LTVP。<br>=== 也没错。<br>5, 悲剧后申诉。<br>=== 步骤没错。<br>请指点一下按这样做有什么不拖吗？<br>=== 有什么不妥是吧？没什么不妥的，如果觉得自己条件还可以，就可以早点安排申请 LTVP，如果觉得条件比较牵强，可以晚一点入境，晚一点延期，晚一点申请 ltvp，争取在月子后多待一点时间帮你们带孩子。<br>可以现在就申请旅行签证吗?<br>=== 提前一个月内申请，一个月内，内。<br>旅行签证有效期多久? 一年多次吗？<br>=== 上面已经回答了。<br>申请 LTVP 必须人在新加坡吗？<br>=== 是的。必须入境后申请。</p><p><a href="https://www.ica.gov.sg/" target="_blank" rel="noopener">https://www.ica.gov.sg/</a></p><h2 id="新加坡婚礼红包份子钱"><a href="#新加坡婚礼红包份子钱" class="headerlink" title="新加坡婚礼红包份子钱"></a>新加坡婚礼红包份子钱</h2><blockquote><p>婚礼怎么随份子钱，是个讲究活儿。它不仅是人情的体现，也是婚礼平衡开支的一种方式</p></blockquote><p>切记要分清是 “午宴” 还是 “晚宴”，时间是在工作日还是周末。毕竟在不同时段，价格差异很大。</p><p>想知道新加坡各大酒店在工作日、周末或公共假期时的婚礼餐标，可以查看<a href="http://www.weddingangbao.com" target="_blank" rel="noopener">Wedding Ang Bao</a></p><p>这可以通过知道婚礼举办地每桌的费用来推算出最合适的红包金额。计算方式是，每桌的基本费用处以 10，就能得到最低应给红包金额。比如婚宴每桌需要 1000 新币（包括了消费税 7% 和服务税 10%）。每桌 10 位客人。将 1000 除以 10，平均每人需要送红包 100 新币。</p><p>另外，由于红包的价格通常是整数，最好包一些新加坡人认为是比较吉利的数字。礼金金额切忌有 1，3 或 4，因为它被认为是不吉利的。最常见的礼金金额是 100 新币、120 新币、128 新币、150 新币、160 新币。</p><ul><li>红包的行情，是在餐馆还是酒店举行，午宴或晚宴，平日或周末，都不相同<ul><li>CAPELLA，ST.REGIS 等这种超级高大上的酒店一般要给 200-250 新币 / 人</li><li>金沙，香格里拉等酒店则是 160-200 新币 / 人</li><li>希尔顿，圣淘沙的酒店则是 150-200 新币 / 人</li><li>凯悦，泛太平洋酒店则是 120-150 新币</li><li>非酒店的餐馆，一般 100-120 新币 / 人</li><li>如果是自助餐档次的呢，80-100 新币 / 人</li></ul></li><li>红包的数目其实就是按人头计算，常用的计算方式是每桌的基本费用处以 10</li><li>关系特别好的时候，有些朋友也会在最少红包数额的基础上加 100-200 新币哦</li></ul><h2 id="新加坡公民-永久居民-外国人的区别"><a href="#新加坡公民-永久居民-外国人的区别" class="headerlink" title="新加坡公民 / 永久居民 / 外国人的区别"></a>新加坡公民 / 永久居民 / 外国人的区别</h2><blockquote><p>我们大多数人的起点是外国人，这点与国内的户口制度类似，无论是中国还是新加坡始终绕不开买房和教育这两座大山</p></blockquote><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802162244.png" alt=""></p><p><a href="https://docs.qq.com/sheet/B80RhZ2ZATLC0ge3Bi2bLYpr2iY5PC1nE3031LWRcK1rTcgj0Z2bvD00bDO63Ie3tz2ovOwW4" target="_blank" rel="noopener">如果发现表有错误请点击链接申请编辑更新，谢谢</a></p><h3 id="EP-申请-PR"><a href="#EP-申请-PR" class="headerlink" title="EP 申请 PR"></a>EP 申请 PR</h3><blockquote><p>在新加坡工作满半年即可申请 PR，不过大概率是被拒的，失败后等待半年继续申请挑战吧</p></blockquote><p><a href="https://www.ica.gov.sg/apply/PR/apply_PR_who" target="_blank" rel="noopener">Becoming a Permanent Resident</a></p><blockquote><p>申请步骤均在网上完成，务必提前准备好申请材料，重点检查 4、6、7、9、10</p></blockquote><ol><li>有效的护照个人信息和官方备注页面，原件与复印件</li><li>EP 或 S Pass 准证原件及复印件</li><li>身份证（如有）</li><li>出生证明或者家庭户口（非英文需要公证书翻译）</li><li>更名证明文件（如有）</li><li>标准护照尺寸照片</li><li>最高学历（成绩单，资格证，会员资质等也可提供）(非英文需要公证书翻译)</li><li>以前雇主的推荐信，说明就业的性质，持续时间以及基本工资（如有）</li><li>过去六个月的工资单</li><li>现任雇主的信函，说明就业日期，过去六个月的每月工资，包括加班和津贴，可以找 HR 准备，要在申请前一个月内开具此信件</li><li>IRAS 同意书，表示同意 ICA 获取和核实与此相关的财务信息</li><li>对于自雇人士，需出示有效商业登记证明书并显示合伙人姓名</li><li>对于自雇人士，与工作有关的职业执照（例如小贩执照，营业执照， 物业代理牌照）</li></ol><blockquote><p>已婚人士还需要这些：</p></blockquote><ol><li>结婚证书（非英文需要公证书翻译）</li><li>关于之前婚姻的死亡证明或离婚证明（如有）</li><li>关于以前婚姻的子女的监护文件（如有）</li><li>配偶的最高教育证书（包括大专学历），成绩单，职业资格证等（非英文需要公证书翻译）</li></ol><blockquote><p>如果配偶一同申请：</p></blockquote><ol><li>配偶的有效旅行证件及有效的入境通行证，护照（资料页）</li><li>配偶的出生证明（非英文需要公证书翻译）</li><li>更名文件（如有）</li><li>配偶的身份证（如适用）</li><li>关于配偶以前的婚姻离婚证明以及孩子的监护文件，或者死亡证明（如有）</li></ol><blockquote><p>如果孩子一起申请：</p></blockquote><ol><li>孩子的护照资料页</li><li>孩子的出生证明，显示孩子和父母的姓名（非英文需要公证书翻译）</li><li>儿童收养文件（如适用）</li><li>儿童改名证明（如适用）</li></ol><p>关于其他的申请条件可以访问移民局网站，查询需要提交的资料。</p><blockquote><p>关于 PR 申请期间搬家修改住址需要更新信息，可以直接 Email ICA</p></blockquote><p><a href="mailto:ICA_PR@ica.gov.sg" target="_blank" rel="noopener">ICA_PR@ica.gov.sg</a><br><a href="mailto:ICA_Feedback@ica.gov.sg" target="_blank" rel="noopener">ICA_Feedback@ica.gov.sg</a></p><p>A) Applicant / Sponsor’s full name:</p><p>B) Applicant /Sponsor’s NRIC/FIN :</p><p>C) Application Reference Number (if any):</p><p>D) Your contact number:</p><h3 id="PR-申请公民"><a href="#PR-申请公民" class="headerlink" title="PR 申请公民"></a>PR 申请公民</h3><blockquote><p>等 PR 满两年后再申请</p></blockquote><p><a href="https://www.ica.gov.sg/application/singapore-citizenship/becoming-a-singapore-citizen" target="_blank" rel="noopener">Becoming a Singapore Citizen</a></p><p><a href="https://toutiaosg.com/%E5%90%90%E8%A1%80%E6%95%B4%E7%90%86%EF%BC%81%E5%A6%82%E4%BD%95%E5%9C%A8%E7%BD%91%E4%B8%8A%E7%94%B3%E8%AF%B7%E6%96%B0%E5%8A%A0%E5%9D%A1pr%E5%92%8C%E5%85%AC%E6%B0%91%E6%9C%80%E5%BC%BA%E6%94%BB%E7%95%A5/" target="_blank" rel="noopener">吐血整理！如何在网上申请新加坡 PR 和公民最强攻略！收藏~</a></p><h2 id="我的新加坡之旅时间轴"><a href="#我的新加坡之旅时间轴" class="headerlink" title="我的新加坡之旅时间轴"></a>我的新加坡之旅时间轴</h2><blockquote><p>时间轴不再描述细节，如果需要了解详细信息可以阅读后面的内容</p></blockquote><p>201804</p><ul><li>LinkedIn 收到 100offer 猎头来自 Sea 的工作邀请机会</li><li>经历 3 轮远程 Skype 视频面试，时间约为 3 周</li><li>提出辞职由 Sea HR 帮忙开始申请 EP，时间约为 3 周</li></ul><p>201805</p><ul><li>完成离职流程，时间约为 1 个月</li><li>收到 EP 的 IPA，由 Sea HR 帮忙开始申请 DP，时间约为 1 周(申请 DP 请提前准备好结婚证公正)</li><li>完成新加坡机票，住宿，货币，各种材料纸质化和电子扫描化的准备(可选为申请 PR 准备国内学历学位公证和出生证公证)</li></ul><blockquote><p>再强调一下出国前的建议</p></blockquote><ol><li>随身携带好护照和相关入境材料，非常重要，非常重要，非常重要</li><li>证件，学历和结婚证公正翻译等材料可以通过扫描全能王 (CamScanner) 录入为电子版，水印是可以很方便去除的，这里就不多说了。如果觉得好用请购买正版服务支持下总部位于上海的合合信息，名片全能王 (CamCard) 也是他们家的产品</li><li>提前规划好到达新加坡后的住宿(新加坡 Airbnb 违法)，交通出行，手机应用，SIM 卡，入职流程</li><li>准备好足够的新币现金建议 4k+，因为银行卡和租房都是大头，有条件至少准备一张以上的 Visa/Mastercard 信用卡</li><li>出国前检查下国内的银行，手机，社保，人事档案是否安排妥当，身份证和护照离过期更换时间是否可控</li><li>如果有条件出国前做下全面的体检至少对自己身体有一个清晰的认识，把牙齿之类的小毛小病尽可能提前扫除隐患</li><li>现在的网络通信都很发达，记得和家人保持联系，减少他们的担心，自己照顾好自己</li></ol><p>201806</p><ul><li>20180609 星期六晚上 20 点第一次来到新加坡</li><li>完成住宿，EZ-Link 交通卡和 Singtel Prepaid 手机卡，时间约为 1 天</li><li>入职一周左右由 HR 协助申请 EP，需要本人预约 MOM 现场办理 EP，收到 EP 实体卡时间约为 1 周内</li><li>收到 EP 实体卡使用 SGWorkPass 扫描获取有效期并保存照片，注册 SingPass，约 1 周左右收到密码信封然后激活</li><li>办理 Zero1.sg 的无合约限制，无限流量的 Postpaid 手机卡，背后运营商为 Singtel 质量靠谱</li><li>携带相关证明办理银行卡，我选择 UOB 但是推荐各位选择 DBS，如需转账回国可以再额外开通工商银行</li></ul><p>201903</p><ul><li>全年在新加坡工作满 183 天以上需要报税，新加坡税率较低平均缴税额度大概年收入 5%-8%，对外国人来说可以理解为税前≈税后或者到手收入</li><li>工作满半年可以开始申请 PR，但一般建议等满 2 年，可以提前准备各种材料，国内学历学位和出生证公证在新加坡本地认证机构都可以代办</li><li>在半年时间中根据自身状况可选办理信用卡，健身卡，推荐补充个人住院医疗，重疾人寿意外为可选项，保障自己的身体健康很重要</li><li>基本熟悉新加坡的生活节奏，明白新加坡的优缺点，规划自己下一个阶段目标</li></ul><p><img src="https://cdn-blog.seedly.sg/wp-content/uploads/2018/06/30020702/Personal-finance-guide-01.png" alt=""></p><p><a href="https://blog.seedly.sg/read-me-first-your-personal-finance-journey-starts-with-this-article/" target="_blank" rel="noopener">READ ME FIRST: Your Personal Finance Journey Starts With This Article</a></p><p><a href="https://www.moneysmart.sg/" target="_blank" rel="noopener">moneysmart</a></p><p>201912</p><ul><li>新加坡保险的思考和决策</li><li>我购买的是 AIA 储蓄 + 终生人寿重疾险 30 万新币保障额度</li></ul><p>我身边很多购买过保险的人基本是 AIA 和 Prudential，我为什么会买 AIA 因为一直在房产投资群潜水，偶然冒泡后误打误撞结识了 AIA 团队排名第一的 (真) 学霸，大佬开玩笑邀请我去他们团队私人会所检验其专业性，我拖了半年觉得自己对保险的认知仅停留在皮毛阶段，最后选择在年末去了解下，对方因为私人原因跨行业横向切入保险的经历挺不容易的，我简单说下我理解的新加坡保险，不正确的地方也欢迎补充，毕竟这对每个人来说都息息相关：</p><ol><li>公司配置的一般是团体险，覆盖门诊 + 住院医疗，福利好可以不用担心看不起病。如果额度不高就建议单独购买住院医疗，大家应该清楚新加坡住院的费用是很贵的，保险费用在 1000 新币 / 年左右不算贵，选择哪家保险都差不多，这也是大多数人在新加坡自费购买的第一个保险。如果是 PR/SC 可以升级政府 CPF 中的私人医疗保险。</li><li>新加坡的寿险分定期和终生，保额高费用低，单独购买每年 800 新币即可配置 100w 保额，这也是很多人从国内飞来新加坡购买寿险的原因。</li><li>新加坡的重疾险和国内一样都是最贵的险种，但核心优势是新加坡保险协会制定的保障范围覆盖初期 + 中期 + 重疾种类市场最多，而且购买和赔付流程合理清晰。需要根据家庭收入分配，年龄，保额，初期，倍数等仔细评估</li><li>新加坡的意外险比较简单，注意并理解赔付规则为意外的含义</li><li>新加坡投资类保险收益没有香港的乐观</li></ol><p>如果买保险只需要找同类型最便宜的，那我们也就不用这么累去仔细比较。保险中存在很多影响价格的关键参数，不少细节也需要你和保险代理一一沟通确认清楚，无论你选择哪一家保险公司一个专业且靠谱的保险代理会让你省心不少，如果你在国内买过保险或者房子应该能感同身受。</p><p>对于买保险这个事情千万不能像父母那一代认为是骗子或者买成了人情险，要对自己的家庭生活品质和风险管理负责，新加坡保险代理相对国内比较靠谱，购买保险前多和已经买过的朋友或者不同的保险公司对比咨询如何合理搭配，在不同阶段买适合的保险产品，不要等到大病意外或被拒绝赔付后才意识到为什么没有提前配置正确的保险产品。微信朋友圈中你也许已经看到过大量真实的水滴筹大病求助信息，我希望你或者你的家人朋友能通过保险的来应对生活的挑战。</p><p><a href="http://m.opinion.caixin.com/zknews/2017-01-22/101047816.html" target="_blank" rel="noopener">我为什么要去新加坡买定期寿险 - 财新网专栏作家 - 明宏义</a></p><p>2020xx</p><ul><li>关于新加坡银行储蓄利率和信用卡申请选择</li><li>关于 PR 申请结果</li></ul><p>DBS: Debit Card, DBS Multiplier Account, POSB Everyday Card<br>UOB: Debit Card, UOB One Account, UOB ONE CARD<br>OCBC: Debit Card, OCBC 360 Account, OCBC 365 Credit Card<br>ICBC: Debit Card, Credit Card<br>Gray: GrayPay Card</p><ol><li>新加坡银行首选 DBS，因为我是 UOB，我老婆是 DBS，略微复杂的阶梯储蓄利率奖励额度上限一般 10w 新币超出部分按基础利率计算，整体来看新加坡本地银行基本都维持在年化利率 2%，选任何一家收益差别并不大，没有特殊情怀自然是推荐用户体验更好本土实力更强的 DBS</li><li>新加坡信用卡在你没有决定是否长期留在新加坡前属于可有可无，如果需要办理信用卡可以参考知乎 @<a href="https://www.zhihu.com/question/336365196" target="_blank" rel="noopener">中国工商银行股份有限公司新加坡分行 信用卡部主管 邢起超</a>的客观回答，<a href="https://www.moneysmart.sg/" target="_blank" rel="noopener">MoneySmart.sg</a>有更多详细的评测报告</li><li>单从投资收益和风险来说我希望各位可以多关注下 REITs，ETF，美股或者港股，以学习的心态了解整个世界的金融体系大概如何运作的，如果各位对金融理财了解不多，推荐先阅读一本书《小狗钱钱》，微信读书可以免费看。</li></ol><h2 id="新加坡-1-个月感想"><a href="#新加坡-1-个月感想" class="headerlink" title="新加坡 1 个月感想"></a>新加坡 1 个月感想</h2><blockquote><p>选择新加坡的理由：给自己多一种选择</p></blockquote><ul><li>MOM: Ministry of Manpower 新加坡人力部</li><li>IPA: In-Principle Approval 批准信</li><li>EP: Employment Pass 人才准证</li><li>DP: Dependant’s Pass 家属准证</li><li>PR: Singapore Permanent Resident 新加坡永久居民</li><li>SC: Singapore Citizen 新加坡公民</li><li>HDB: Housing &amp; Development 政府组屋</li><li>Condo: 私人公寓</li><li>Food Court: 食阁</li><li>CPF: 公积金</li><li>NUS: National University of Singapore 新加坡国立大学</li><li>NTU: Nanyang Technological University 新加坡南洋理工大学</li></ul><ol><li>原始坐标：上海，无留学经验也没有去过新加坡</li><li>猎头推荐新加坡的职位，想想自己那被遗忘的蹩脚英语抱着试一试的心态</li><li>一共 3 轮 Skype 远程视频面试，约 4 周时间到最后确认 offer</li><li>约 1 天时间思考，离职申请，签电子合同</li><li>检查护照有效期，下载学信网英文翻译认证，由 HR 帮助提交申请 EP，约 3 周内收到 IPA</li><li>在上海户口所在区公证处办理结婚证公证翻译，约 3 周时间完成，又慢又麻烦</li><li>完成 EP 后由 HR 帮助提交申请 DP，约 1 周内收到 IPA</li><li>购买机票，打印 IPA，带上护照，打包行李，兑换 4000 新币，确认人事档案存放地址，选择不缴纳每月养老保险和医疗保险约 1500 元人民币(可由父母代缴，中断非连续缴纳暂时不影响回国养老，以政策变化为准)</li><li>飞机上填写好新加坡入境卡，完成入境登记，无需录入指纹，开启华为天际通</li><li>抵达公司提前安排好的住址，熟悉新加坡环境</li><li>办理 EZ-Link 交通卡和 Singtel Prepaid 手机卡(如果没有强需求可以暂时不办理)</li><li>公司 HR 提交 EP 现场办理申请，收到邮件后预约 MOM 办理时间（我没有被要求体检，根据不同公司情况而定）</li><li>约 1 周后收到 EP 绿色实体卡，使用 SGWorkPass 扫描保存照片，注册 SingPass 后约 1 周左右收到密码信封</li><li>公司开具证明办理银行卡，新加坡本地我选择 UOB(保持 1000 新币存款)，另外强烈推荐再办理工商银行卡(持卡 0 门槛，转账回国 0 费用)</li><li>网上申请 Zero1 的无限流量手机卡，约 3 个工作日收到直接使用，弃用 Singtel Prepaid（浪费了 25 新币）</li><li>新加坡日常消费以现金为主，我本人习惯手机支付无奈降级至刷信用卡阶段(持有浦发 AE 白 / Visa/Master)，怀念下国内的支付宝和微信</li></ol><p>我刚来新加坡 1 个多月，不用担心语言不通，大部分人都会说华语。新加坡真的不算大，地铁和公交都很方便，空气质量很好至少我的鼻炎消失了，天气没有国内那么热，居然没有蚊子，没有蚊子，没有蚊子。在这段时间里我幸运了结识了交大和复旦的校友，跟随专业的中介实地考察了新加坡的租房和买房市场，走遍了几个重要的核心区域，顺便吃了几顿亲民的米其林一星。之后我应该还会继续更新自己在新加坡的经历，比如健身、快递、看病等日常生活，希望对大家有所帮助。</p><h3 id="新加坡-3-个月感想"><a href="#新加坡-3-个月感想" class="headerlink" title="新加坡 3 个月感想"></a>新加坡 3 个月感想</h3><blockquote><p>咋们就从最传统的衣食住行说起吧</p></blockquote><p><strong> 衣 </strong></p><p>因为新加坡全年都是夏季，平时的正常温度基本在 30° 上下，对于我来说已经把家里的夏装的家底全部带过来了，所以也没有什么特别需要单独购买，作为男生如果以后缺衣服的话在新加坡线下就是优衣库，线上还是优衣库。</p><p>女生的选择实在太多了，乌节路和 VivoCity 等都可以逛好久，这里就跳过吧</p><p>新加坡本地的 Outlet(奥特莱斯)是 IMM，如果你喜欢跑步运动，那么只卖 80 新币的 adidas Ultraoost X 和 Asics GEL-Kayano 会有一定吸引力</p><p>在新加坡网购，和国内激烈竞争的胜出者相比，还有很长一段路要走，当然也证明东南亚市场是一块巨大的蛋糕等待挖掘</p><p>新加坡室内空调冷气普遍开得比较足，建议怕冷的同学多备件长袖外套在公司，长时间逛商场时注意冷热交替避免生病</p><p>从中国快递至新加坡的方式已经快捷不少，淘宝直运和集运，小坡岛集运单人小包团都是很方便的选择</p><p><strong> 食 </strong></p><p>新加坡最有特点的饮食文化莫过于食阁(Food Court)，其实有点类似于上海的大食代，但价格亲民而且还有米其林一星的神奇存在，平均一顿的价格区间在 3-7 新币，整体口味偏重。每个食阁上方都会标注 A/B/C 卫生评级，新加坡本地的习惯一般不在家做饭，大家都出去吃所以种类也还算多，不知道吃什么可以认准 Singapore Best Foods 红色标志，和国内相比关键是放心。</p><p>如果平时想吃顿大餐类似国内海底捞、小龙坎那种，平均每人大概 30-50 新币左右，评级更高的餐厅价格自然也水涨船高</p><p>自己在家做饭的成本其实和外面吃也差不了多少，如果居住的房子允许大炒和大煮当然可以选择自己动手丰衣足食</p><p>新加坡的菜市场比较少见可能是我没有刻意去寻找或者需求的缘故吧，买蔬菜和肉类基本都在 Sheng Siong(昇菘)，FairPrice(NTUC)，Cold Storage，喜欢日本食物还可以选择 DON DON DONKI，我个人很喜欢这只萌企鹅的魔性主题曲</p><p><a href="https://www.bilibili.com/video/av32078102" target="_blank" rel="noopener">https://www.bilibili.com/video/av32078102</a></p><p>新加坡的便利店清一色 7-Eleven，部分大一点的屈臣氏 (Watsons) 支持支付宝(Alipay)，上面提到的 Sheng Siong 已经全部支持 Alipay</p><p>外卖大家就不要指望 GrabFood 或 Foodpanda 有饿了么和美团外卖的速度了，老老实实去附近的食阁按时吃饭才是正道</p><p>我每个周末都会使用 <a href="http://refer.eatigo.com/eati17aqf-1v9" target="_blank" rel="noopener">eatigo</a> 开启 5 折美食之旅打打牙祭</p><p><strong> 住 </strong></p><p>(1) 租房</p><p>我在租房这个环节基本上算是跳过了，刚来时建议找好房源，这边的酒店居住成本很高的。因为目前是长租在公司提供的组屋 (HDB) 内，毕竟室友都是公司自己人很放心，合同限制不多每月会安排阿姨定期打扫和保养空调等，手机银行转账支付租金也方便。回想当时刚来的 1 个月每周都跟随专业的中介校友出去找房子都十分辛苦，更不要说自己联系中介一家一家看了，说多了都是泪。这边的房产中介需要考证，据说通过率只有 10-15%，每个中介都会展示唯一的证书编号，所以不用太担心被骗，不过每个中介的态度千差万别，找到靠谱的中介能够加快找房的速度。</p><blockquote><p>备注: 公司已经不再提供租房支持，可以联系 HR 询问中介联系方式提前沟通房源</p></blockquote><p>由于地理位置和房屋面积质量差异，下面的租房价格仅仅是一个参考区间，数字单位为新币 / 月<br>组屋(HBD)，普通房 600-800，主人房 1000-1200，整租 1000+<br>公寓(Condo)，普通房 800-1500，主人房 1200-2000，整租 1500+</p><p>房源信息可以来自于同事，也可以自己在线挑选，方法我都写在前面了，和同事咨询过新加坡租房的大致流程</p><ol><li>看准自己喜欢的房子</li><li>看清楚合同，看清楚合同，看清楚合同，签约</li><li>签 1 年一般押一付一，签 2 年押二付一</li><li>中介费是根据实际情况由房东或者租客来承担，一般根据合约长短支付 0.5 或 1 个月的房租作为中介费</li></ol><p>(2) 买房</p><p>虽然是否决定买房的话题为时尚早，但经历了魔都十几年房地产的上涨自然也不会错过对新加坡房地产的研究，如果你是冲着 30w 新币的组屋 (HDB) 那么找新加坡本地人结婚是最快的途径。新加坡在 2018 年 07 月 06 日 0 点开始调整了印花税，对于我们普通人来说 2-3 年内拿到永久居民 (PR) 已然不易。新加坡私人公寓 (Condo) 的价格和质量相对国内来说是有优势的，但是 1 室 80w，2 室 100w，3 室 120w 这样的价格加上印花税还是会让我们感到一丢丢肉疼，好在房地产市场涨幅长期平稳且退出机制清晰，租房市场也足够活跃，而且银行可以贷款 7 成 + 2% 左右的低利率还是足以让我们拥有奋力一搏的勇气，不用牺牲 6 个钱包。</p><p>这里给未来的新加坡买房经历留个坑位吧</p><p><a href="https://toutiaosg.com/%E6%96%B0%E5%8A%A0%E5%9D%A1%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BA%B2%E5%8E%86%EF%BC%9A%E5%A6%82%E4%BD%95%E5%9C%A81%E4%B8%AA%E6%9C%88%E5%86%85%E4%BA%91%E6%B7%A1%E9%A3%8E%E8%BD%BB%E5%9C%B0%E4%B9%B0%E6%88%BF/" target="_blank" rel="noopener">新加坡程序员亲历：如何在 1 个月内云淡风轻地买房卖房</a></p><p><a href="https://zhuanlan.zhihu.com/p/32493002" target="_blank" rel="noopener">新加坡买房小记</a></p><p><strong> 行 </strong></p><p>现在无论在哪里手机的使用比重都是极高的，我自己来新加坡前把小米 6 替换为华为 P20 Pro，妻子还是用的小米 MIX2，在国内早已习惯电信乐享家 199 元全国无限流量，我们的老卡 1 个是移动，1 个是联通，来到新加坡之后选择了无合约限制价格为 29.99 新币无限流量的虚拟运营商 Zero1.sg，因为背后是 Singtel 所以质量有保障。在新加坡接收国内短信验证码之类不要钱，双卡双待都是没有问题的，不过我妻子还是很期待 iPhone 即将推出的双卡功能，毕竟她在美国时的 iPhone5s 也用了 4 年多，被我硬生生拖入 Android 阵营实属不易。 </p><p>新加坡公共交通发达，Google Map 在手说走就走。我的选择和国内类似，能坐地铁尽量就不会选择公交车，因为坐公交车有几点不爽，如果你不熟悉新加坡或者不会熟练使用 Google Map 建议不要轻易乘坐公交车。</p><blockquote><p>乘坐地铁切记不可吃喝、吸烟、携带榴莲、大声喧哗和带宠物，乘坐公交车的规定与地铁类似但有以下额外注意事项</p></blockquote><ol><li>公交车来之前一定要招手才会停</li><li>在到达下一站前一定要按 Stop 红色停车按钮，不然不会停</li><li>下车时还要再刷一次交通卡确认付款</li></ol><p>除了公交车和国内差异较大以外，平时过马路记得按一下身边的指示灯，你不按或者对面也没人按，那你就不用想着过去了</p><p>这边的公交卡称为 EZ-Link，想刷 NFC 不好意思没有小米和华为，请购买 NFC SIM card。虽然充值很方便支持国内双币信用卡，但我还是很想念上海二维码扫码进闸机。另外新加坡地铁站没有安检，没有安检，没有安检。</p><p>我丢过一次地铁卡，为了挽回里面 25 新币我第一次主动走进新加坡警察局开具丢失证明，他们做事确实负责而高效，不过我因为操作失误导致旧卡数据没有正常转移到新卡，超过 7 天申报时间我也没有办法无力回天，所以再一次怀念下国内的手机刷卡。</p><p>~~ 新加坡已经遍布 Mobike 和 ofo，摩拜的国内账户可以在这里直接使用，ofo 需要重新注册。~~ 单车市场基本倒闭</p><p>新加坡打车市场已经被 Grab 一统江湖，Uber 和滴滴出行都入股 Grab，另外 Grab 打车很安全而且支持支付宝(Alipay)，普通出租车都支持微信和支付宝。目前能看到的对手只有 Gojek。</p><p>关于机票从上海往返新加坡的航班很多，价格和飞行时间比较透明就不多说了，我这里还是推荐大家体验下新加坡航空 (Singapore Airlines) 的服务，今年航空公司评选又站回全球第一，即使乘坐经济舱也不要忘记品尝一下新加坡司令哈。</p><p>今年国庆节期间我和老婆买了新加坡至四川成都的 5 日往返机票，新加坡航空旗下的胜安航空(SilkAir)，令我感到惊喜的是 2 人机票往返价格总共才 1600 人民币，单人往返 800 人民币，可能是 bug 价格了。</p><p>新加坡和国内的走位不一样，行走避让和司机开车位置与国内正好相反。</p><p>新加坡拥车成本比较高，虽然公共交通发达，但是开车的梦想还是要有的，万一实现了呢？</p><blockquote><p>传统的四大金刚扯完了，我们再聊一些逆转未来的话题</p></blockquote><p><strong> 安全 </strong></p><p>新加坡的安全本质上是基于严格的法律加上遍布各地的摄像头，你如果想挑战下不如先了解下鞭刑的酸爽和罚款罚到你肉疼的数字。</p><p>吸烟，喝酒，乱扔垃圾在法律中都有明确要求，虽然不能百分百杜绝抽烟现象，但你走在马路上不会遇到随意吐痰也不需要提防狗屎。穿过十字路口车辆都会早早的自觉停下来等你先过去，新加坡随处可见的就是无障碍设施，地铁沿线基本都设置了棚顶，既可以防晒又可以躲雨，即便每天都能遇到短时暴雨由于出色的排水系统也从来不会看到有积水。</p><p>在国内随时会收到的垃圾短信和房产金融中介等骚扰电话，在新加坡基本是看不到的，不过 Email 和 WhatsApp 这种网络骚扰还是无法消灭的。这边的违法成本比较高只要被投诉就会收到法律的严格制裁，当然注意保护自己的隐私安全始终不能掉以轻心，毕竟再文明的社会偶尔也会遇上小人。</p><p>在新加坡你基本不用担心丢失物品，因为大概率都能找回来，包包也不用刻意放在前面，拉链忘记拉上也没关系，不用担心人口贩子和小孩走丢，更不用担心一个人走夜路会不会不安全，犯罪成本高促成的低犯罪率给你带来的不仅仅是安全感更是幸福感。</p><p>由于新加坡的地理位置极好，无论是过去还是未来基本是不会受到任何灾难气候影响，台风、海啸或者地震是不存在的</p><p>新加坡的人际关系相对简单，与人为善的过程中也不要忘记多留个心眼谨慎一些，在这边和他人发生误会大多数都会听到 Sorry 和 I am fine 而不是争吵，规规矩矩排队而很少有人随意插队，政府办事效率高以廉洁著称也是难能可贵，在新加坡未必有国内这么亲切有人情味，但你能感受到的是相对的公平和简单。</p><p><strong> 健康 </strong></p><p>我在上海的时候就饱受着变态反应性鼻炎的痛苦，每次体检医生都开玩笑要不住到外环去吧，没想到现在离家这么远。至少来新加坡后我的鼻子就彻底舒畅了，我原来对空气质量也不以为然，买个小米净化器放在家里，直到离开上海前看见基因检测报告提醒风险最高的是鼻咽癌，我才明白空气对于每个人的未来都是如此重要。</p><p>新加坡的温度常年保持在 30° 上下，不会像上海夏季烈日炎炎，但新加坡比较像“蓝天白云 晴空万里 突然暴风雨”，有云有风有遮雨棚，身体其实会觉得很舒服.</p><p>之前已经说过新加坡的饮食文化以食阁 (Food Court) 为主，这些小店很多都有几十年的历史，食物未必都符合你的胃口但至少足够安全，不用担心地沟油。合理的饮食搭配以及规律的生活节奏才是根本。</p><p>新加坡本地人都注重健身，如果不想花太多钱在健身房可以考虑在小区附近的体育馆免费跑步或者花费 1.3 新币游泳。私人公寓 (Condo) 一般自带小型游泳池和健身房，虽然小但有总比没有好。如果公司有补贴健身房的价格 (一般 150-200 新币每月) 其实也不算太贵，每月 99 新币可以选择像 Fitness First or Pure Fitness(Pure Yoga)等专业健身房。</p><p>关于看病，因为前段时间工作比较忙抵抗力突然下降导致出现额头皮肤红肿，在国内经历过不注意小病而酿成大病的惨痛教训，<a href="https://wsgzao.github.io/post/wisdom-tooth/">我是如何做到花 8000 元拔智齿的</a>，所以这次特地请 1 天病假去公司合作的 Raffles Medical 私人诊所看病，事后看诊断结果比较准确且看病过程十分高科技 + 高效率，病因是 <code>带状疱疹</code>，总共 99 新币，30 是问诊费其余都是买药钱。只不过第二天我发现未有起色且眼皮红肿都快睁不开了就先让昨天的医生开具的急症介绍信，然后直奔 Raffles Hospital，在了解基本无大碍和每位专科医生复查至少 300 新币起步的情况下果断申请放弃继续治疗赶紧溜回去休养生息，这一趟花了 199 新币，其中 130 为问诊费(节假日看病费用翻翻)。命固然重要，但人只要一生病真的可能失去一切甚至连累家人。</p><p>2019 年去了 2 次新加坡伊丽莎白医院 - Mount Elizabeth Hospital，还增加了人生中第一次坐救护车的经历，好软好舒服。首先是价格没有想象中那么贵，当然还是优先建议购买住院保险以防万一，其次是建议能选择私立医院就不要选择公立，看病的效率真让人着急。未来有机会再探索下新加坡鹰阁医院 - Gleneagles Hospital。</p><p>和同事回顾了他们看病的流程，作为外国人一般也是建议直接去附近的私人医院，价格其实差不多但不用排队。如果选择去政府医院比如 NUH 等可能存在排队现象，这个体验对于国内看病来说大家心里应该很明白有多痛苦，如果各位有足额的医疗保险在国内其实可以选择特需医疗(免排队 + 专家门诊)。关于新加坡医院的更多信息可以参考最上面的介绍。</p><p>印尼 “烧芭” 引发空气污染和马来西亚动不动就拿断水挑事也是新加坡需要持续努力解决的问题之一。</p><p>新加坡的蔬菜和水果算不上贵但也不会像国内一样便宜，除了猫山王榴莲和部分进口水果质量和价格有优势，也没有太多的种类可供选择，我自己会从网易考拉购买 Swisse 作为补充，话说新加坡的营养品真心贵，同样的 Swisse 一小瓶卖 56 新币，其它品牌价格也是高居不下。</p><p><strong> 娱乐消费 </strong></p><p>新加坡本身就很小，加上我和我妻子都倾向于工作，学习和健身。平时的娱乐活动也就停留在节假日出去寻找下亲民美食，慢慢游览新加坡仅有的几个景点，新加坡环球影城，S.E.A. 海洋馆，新加坡动物园，新加坡夜间动物园，滨海湾花园，金沙酒店附近的鱼尾狮和摩天轮，圣淘沙和赌场，其它像植物园，大学校园很多都是免费的，旅游一般 2 天可以快速结束，如果需要细细品味也就再多增加 1-2 天足够了。</p><p>新加坡娱乐设施真的不算很多，看电影还得去现场买票，网上购买需要多花钱。吃喝玩乐想看看附近的活动和评价都没有像美团点评类似的产品，毕竟需求不像国内这么大，但我觉得让国内的美团猫眼或者阿里淘票票来进攻新加坡市场，相信分分钟钟可以拿下。</p><p>新加坡本地目前小额仍然以现金为主，商场一般支持刷卡，而主要的景点和购物中心区域全部覆盖支付宝(Alipay)</p><p><strong> 教育培训 </strong></p><p>虽然现在谈教育太早但是新加坡本地的教育资源始终都是偏向本国公民的，对我们来说永久居民 (PR) 只是万里长征的第一步，要不要买学区房，要不要做义工，也是留给自己的问题。感觉这又有上海户口，学区房，拼父母，何其相似？</p><p>新加坡和中国一样都很注重基础教育，对子女的教育支出都很高，新加坡第三方教育机构或者成人专业类培训机构的市场也很大。最近在微信朋友圈看到英国 BBC 邀请 3 名威尔士的优等生体验韩国鸡血教育的文章，除了深刻感受到教育的重要性，更加理解韩国快速崛起的因素，成熟而完整的教育产业链对孩子很重要，对国家来说更重要。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200109110126.png" alt=""></p><p><a href="https://zhuanlan.zhihu.com/p/46043323" target="_blank" rel="noopener">谈新加坡教育的分流制度</a></p><p><strong> 工作生活 </strong></p><p>我目前在一家新加坡互联网公司 Sea 上班，旗下知名度比较高的是 Garena 和 Shopee。工作制度是弹性的，没有严格的打卡要求，正常时间为 09:30-19:00，周围以中国同事居多，大部分是在这边读书毕业工作，学校几乎清一色新加坡国立大学 (NUS) 和新加坡南洋理工大学(NTU)，工作语言为英文，核心生产力工具包括 Google Suite，顶配 MacBook Pro，Herman Miller，Dell 2417H，还有无限制的饮料，水果和零食。原以为只能在国内的创业公司和少数尊重技术的优质公司才能看到的办公环境，可能在国外是很常见的事情吧。新加坡互联网公司在 IT 方面的人才非常短缺，也许是因为本地人大都投身于金融行业，所以很多技术人才也是会考虑从中国引进，甚至直接在国内开设分公司。</p><p>因为我以 EP 身份把我老婆也带了过来，目前还是 DP。对她来说在新加坡找一份金融行业的工作真的非常不容易，花了 2 个多月时间扫光了 LinkedIn 在新加坡几乎所有公开招聘，遗憾的是很少有金融行业愿意招聘非新加坡公民 (SZ) 和永久居民 (PR) 以外的人群，得到的回复大多数都是 Sorry，毕竟新加坡政府在很多地方都会优先照顾本国人的利益，这个道理放在中国也很好理解。不过目前经历了 6 轮面试最终拿到了一个还不错的 offer，后续 DP 也要转成 EP，这是一件值得庆幸的事情。</p><p>新加坡月薪中位数是 4500 新币左右，新加坡人力部公布了 2018 年全国的工资中位数 4437 新币 / 月，如果你对各行业数据感兴趣可以参考<a href="https://www.michaelpage.com.sg/salary-guide" target="_blank" rel="noopener">Singapore Salary Benchmark 2020 Michael Page</a></p><p>在没有明显压缩新加坡生活成本，按 1 人每月估算为 1w 人民币，如果是 2 个人差不多是 1.5w 人民币</p><p>HDB 合租主人房: 1100<br>水电网: 50<br>移动套餐: 9.9<br>饭费: 20x30<br>交通: 2x30<br>健身: 99<br>理发: 12<br>其他: 100</p><p>≈2030.9 新币≈10000 人民币，如果你是单人还可以选择普通房大概 800 每月。不过我相信新加坡贵的部分体现在后期的看病和生娃教育上<br><a href="https://mp.weixin.qq.com/s?__biz=MzIwMTQxODUxNw==&amp;mid=2650896087&amp;idx=1&amp;sn=9eb1be6f3e8ff3a5acc908e2c983cb37&amp;chksm=8d1be4adba6c6dbbb26bb7a8f6e99cff210306f1f1f856297851bc10ed378f532081f08a298b&amp;mpshare=1&amp;scene=23&amp;srcid=0627SV9XjUJihYiNxW383bUB&amp;sharer_sharetime=1564742363597&amp;sharer_shareid=456ba82bbd1a1c9f32e5725824095308%23rd" target="_blank" rel="noopener">扒一扒新加坡的精英制度！月薪 14 万的人到底经历了什么？</a><br>中国 VS 新加坡，生娃养娃究竟要花多少钱？</p><p>中国：</p><ul><li>生娃：3000-1 万人民币</li><li>养娃：65 万元 - 130 万人民币</li><li>总计：约 65 万 - 131 万人民币</li></ul><p>新加坡：</p><ul><li>生娃：1003-18912 新币</li><li>养娃：至少 67 万新币</li><li>总计：约 69 万新币</li></ul><p>推荐下 Grammarly for Chrome，在写邮件和文档时可以快速发现并纠正语法错误，对提升英文书写能力非常有帮助。我自己也是第一次开始深度使用 MacBook，记录一些简单的入门过程在 Blog 中，也可以做下参考。</p><p><a href="https://wsgzao.github.io/post/macbook/">MacBook macOS 从小白到入门</a></p><p><strong> 养老政策 </strong></p><p>新加坡不养闲人，你在新加坡的食阁 (Food Court) 仔细观察过就会发现几乎所有打扫卫生的都是老年人，和中国相比新加坡的养老金 CPF 是交多少退多少，不会被平均，所以更多的本地人会提前了解基金股票保险和投资房地产等方式来为自己养老。新加坡、日本、韩国等国家的老龄化问题已经凸显，我们都可以看到未来国内严重的老龄化趋势，谁又能独善其身呢？</p><p>新加坡政府因为楼市过热而提高印花税的闪电行动，中国也吹响了全球征税的集结号，无论身在哪里我们始终躲不开政治不是吗？</p><h2 id="日用品推荐"><a href="#日用品推荐" class="headerlink" title="日用品推荐"></a>日用品推荐</h2><blockquote><p>回顾来新加坡前后的经历，我希望自己分享的一部分实用建议和商品可以帮助大家更好的适应新加坡生活。如果你不喜欢网易严选和网易考拉可以选择性跳过。</p></blockquote><p>我自己携带并且大家都能买到的产品分享：</p><ol><li>药品：我带的是泰诺和夫西地酸乳膏，这边初期看病成本还是比较高，建议最好带一些板蓝根、急用的抗生素、抗过敏药及自己习惯的常用药，如胃药、哮喘喷剂等等。</li><li>其他综合的日用品，我是分 3 批带过来的，这里按照重要性分成 2 部分来推荐，大部分来自网易严选和网易考拉工厂店，关于原因我也记录了自己的观点。</li></ol><p><a href="https://wsgzao.github.io/post/buy/">我的线上线下购物变迁史</a></p><h3 id="必备推荐"><a href="#必备推荐" class="headerlink" title="必备推荐"></a>必备推荐</h3><blockquote><p>我就只推荐适用于男同胞的产品了，虽然我妻子也是在严选和工厂店买，如果各位有需求我日后可以再补充，她的东西实在是多</p></blockquote><p>[手机 / 耳机 / 智能穿戴无推荐]<br>Follow Your Heart</p><p><a href="http://163.lu/I8OGX1" target="_blank" rel="noopener">28 寸 纯 PC“铝框”（非全铝）拉杆箱</a><br>新秀丽制造商，但是怎么看怎么觉得更像是日默瓦(RIMOWA)，虽然有小米 90 分旅行箱但 20 寸太小，为了追求更大容量就买了这款，使用感受非常可靠，五星推荐</p><p>[双肩包无推荐]<br>我自己背的是一加(OnePlus)1 代和 2 代，她带的是 Longchamp 和 Doughnut，都是多年的老包了</p><p><a href="http://wx.uniir.com/" target="_blank" rel="noopener">独美</a><br>眼镜我和妻子每人配了 2 副做主备, 我们买的都是来自京东众筹的独美，3.3g 镜架加镜片只要 398。小米有品太阳镜带了 1 副，不过来新加坡后我从来没佩戴过</p><p>[晴雨伞没有推荐]<br>新加坡经常短时暴雨，平日基本阳光明媚，建议携带一把晴雨伞，既能遮阳、又能挡雨。我自己带了 1 把天堂和 1 把小米晴雨两用，因为比较懒所以买的都是自动伞。只是可惜了 RealBrella 锐乐 不对称设计长柄伞留在家里吃灰，我好喜欢这款大红色啊。</p><p>[跑鞋无推荐]<br>自己带了 2 双旧鞋过来，严选上买过一双类似 Adidas UltraBoost 的鞋子还不错。我妻子带了 Asics GEL-Kayano 24，无论在网易考拉买还是在新加坡本地买 Asics 都很便宜，而且新加坡 NIKE REACT 跑鞋一般也只要 120 新币左右。</p><p><a href="http://163.lu/050tb0" target="_blank" rel="noopener">两带式男女款软木拖鞋 2.0</a><br><a href="http://163.lu/SpQlo1" target="_blank" rel="noopener">两带式男 / 女款拖鞋</a><br>Birkenstock 集团制造商，我特地在国内和新加坡的专卖店对比过，自己穿了 1 代非常舒服然后又买了 2 代，因为在新加坡基本是拖鞋 + 短裤的夏装，如果你的工作要求正装注意带好皮鞋和衣服套装</p><p><a href="http://163.lu/v4KrM2" target="_blank" rel="noopener">软弹速干男 / 女沐浴拖鞋</a><br>Crocs 制造商，浴室必备。本来想分享严选的人字拖，但不知道为什么严选把它下架了，反正我基本是放在室内穿，大家买自己觉得舒服的就好</p><p><a href="http://163.lu/CKQh21" target="_blank" rel="noopener">考拉工厂店 5 双 男士精梳棉防臭休闲袜</a><br>我在新加坡穿袜子的次数就和穿运动鞋的次数保持一致，除了健身和户外活动，几乎都是大拖鞋走起，上次登顶新加坡最高峰武吉知马山也是拖鞋，不过大家还是必要学我穿拖鞋爬山，以免自己给自己挖坑</p><p><a href="http://163.lu/uE5Uz3" target="_blank" rel="noopener">网易严选 男式丝滑莫代尔平角内裤</a><br><a href="http://163.lu/7ZOLU2" target="_blank" rel="noopener">考拉工厂店 男士莫代尔零束缚感内裤</a><br>我买过 CK 也买过网易严选和小米有品的纯棉内裤，但真正可以打动我的材质还是莫代尔，网易严选和网易考拉工厂店的两款我都买了，质感各有特色。严选上还有一款空气内裤，勇于尝鲜的同学要不试试？</p><p><a href="http://163.lu/aXBps0" target="_blank" rel="noopener">考拉工厂店 男式无缝插肩短袖 T 恤</a><br>我买了 3 件来自于严选和考拉工厂店的运动速干衣，但是从品质和舒适度上还是感觉不如自己再 Nike 实体店中购买的 Dri-FIT，考拉工厂店这款已经无限逼近了。小米有品也有很多运动衣，都是可以考虑的。我个人推荐备上 3 套运动衣，因为新加坡常年夏季，出汗是难免的，速干面料可以保持身体的舒适</p><p><a href="http://163.lu/Qxhpq2" target="_blank" rel="noopener">考拉工厂店 男式运动短裤</a><br>这款运动短裤我五星推荐，不仅做工精湛，口袋拉链等细节也非常到位，我自己直接买了 2 条，如果不是因为只有 2 种颜色，我还会继续买。另外还带了一条 Nike Dri-FIT 短裤，不过因为没有拉链所以来新加坡后基本没穿过，在上海的时候也仅仅是健身时穿的，现在因为设计问题算是彻底废了。</p><p><a href="http://163.lu/FPubq0" target="_blank" rel="noopener">考拉工厂店 男式针织轻薄运动裤</a><br>这款运动长裤我五星推荐，空气面料在夏天也依旧舒爽，内口袋拉链细节设计极赞，我索性买了 2 条一模一样的黑色款。新加坡平时上班我基本是穿这款长裤，原因和上面说过的新加坡室内空调温度较低有关，注意保暖。</p><p>[睡衣没有推荐]<br>我就直接把以前优衣库的全棉联名 T 恤全部带过来当睡衣穿了，有时候出门也可以穿哈</p><p>[外套没有推荐]<br>我自己带了 Under Armour 防风防雨衣，小米有品夜跑皮肤衣，小米有品防雨皮肤衣，除了 Under Armour 放在公司偶尔冷的时候会披一下，其它皮肤衣还没穿过。</p><p>[衬衫没有推荐]<br>我把原来公司定制的各种正装带过来了，可惜就入职时穿过一次，后来就是拖鞋加运动套装上班了</p><p><a href="http://163.lu/N7voR2" target="_blank" rel="noopener">成人款 高清时尚电镀泳镜</a><br><a href="http://163.lu/tDJJb2" target="_blank" rel="noopener">黑闪系列 硅胶防水泳帽 （男女通用）</a><br><a href="http://163.lu/Egc5c1" target="_blank" rel="noopener">男式基础泳裤</a><br>严选做了游泳装备也出乎我的意料，关键是和我之前买的 Speedo 相比那叫一个便宜啊，我本身是退休多年的游泳二级运动员，看似很简单的游泳装备严选的质量和价格都把控的不错，希望未来增加带度数的游泳镜。新加坡开放的普通游泳馆使用 EZ-link 刷卡，1.3 新币一次非常便宜，关键还多是训练使用的标准泳池人也少，定时清洁的规范让人放心。</p><p><a href="http://163.lu/rDAkF3" target="_blank" rel="noopener">全球通用转换插座</a><br>全球通用转换插座出国的人都应该明白是必备的，严选居然也做出来了，感觉又要干死一片坑爹厂商</p><p>[移动电源必须小米啊]<br>互联网上一直流传着这样的传说，小米什么产品都可以黑但是谁要是敢黑小米移动电源就被其他人反过来喷死。如果不是小米移动电源的出现干掉一众无良商家，现在市场上还不知道有多少人会受到低劣电池爆炸的影响，小米移动电源是真正用产品说话赢得用户口碑的最佳案例之一。我自己买的是紫米新款，我妻子买了一个超薄款就为了好看，哎</p><p><a href="http://163.lu/4ehYt4" target="_blank" rel="noopener">3 头浮动式电动剃须刀</a><br>科技类产品其实很想支持小米，可惜小米生态链不给力，就先用着严选高性价比的剃须刀好了</p><p><a href="http://163.lu/5cpvU0" target="_blank" rel="noopener">THREE SEVEN/777 进口指甲刀便携 4 件套 指甲剪小套装 三色可选</a><br>被淘宝坑过电动指甲刀和匠技指甲刀，也被严选坑过过于简约的指甲刀，没想到最后还是要选择韩国原装进口的 777 牌 4 件套，我以前不了解斜口指甲刀，后来才发现这货是剪脚指甲的神器啊，我以前剪脚指甲是有多痛苦哇</p><p><a href="http://163.lu/RNu3A1" target="_blank" rel="noopener">8 件装 折叠多功能衣架</a><br><a href="http://163.lu/dtCu31" target="_blank" rel="noopener">18 头多功能晾衣架</a><br>必备推荐，折叠携带很方便，18 头多功能晾衣架晾衣服的时候一个顶百，我都差点可以不用普通衣架了</p><p><a href="http://163.lu/pAmCc4" target="_blank" rel="noopener">旅行分装瓶套装</a><br>洗护用品我建议用分装瓶或者带最小包装的出国，因为这些日常用品本身价值不高但分量重，在当地超市购买就好了，除非你非常在意使用某些品牌</p><p><a href="http://163.wyh5.top/OsArG4" target="_blank" rel="noopener">考拉工厂店 智能清洁电动牙刷</a><br>我给父母买的也是同款，建议再带上 2 个以上刷头。如果你之前从来没有使用过电动牙刷，非常建议你尝试，清洁牙齿更加彻底和方便，爱上之后就无法回到过去手动刷牙啦</p><p><a href="http://163.lu/H03jR2" target="_blank" rel="noopener">电动式硅胶洁面仪</a><br>我还记得我给妻子送的第一个礼物就是 FOREO LUNA MINI2 Plus，这个也是我在网易考拉上买的第一个商品，当时这款网红洁面仪被招商银行垄断，没办法直接购买，逼着自己了解到网易考拉在国内海淘市场的领先地位，也算是缘分吧。现在严选自己也推出类似洁面仪才十分之一的价格，买个给自己吧</p><p><a href="http://163.lu/ZKkRz3" target="_blank" rel="noopener">韩国制造 硅胶洁面刷</a><br><a href="http://163.lu/RJS3r0" target="_blank" rel="noopener">韩国制造 硅胶沐浴按摩手套</a><br><a href="http://163.lu/Rv9KI2" target="_blank" rel="noopener">韩国制造 多功能硅胶清洁刷</a><br>严选从韩国引进来相当专业的硅胶产品制造商，其中这 3 件小东西在洗脸，沐浴，洗碗上极大的提升了我的幸福感，强烈推荐人手一件</p><p><a href="http://163.lu/womXA3" target="_blank" rel="noopener">皇室御用超柔毛巾</a><br>内野制造商，这是网易严选当年备受争议的产品之一，我不知道内野是什么，但我只知道这款毛巾确实舒服</p><p>[床单 / 床笠 / 被套 / 毯子]<br>我从家里带了 2 套旧的，然后又从考拉工厂店买了外国人比较喜欢的床笠，因为晚上睡觉都是关闭空调，没有被子就一层薄薄的毯子，一般租房子房东都会提供床板和床上用品，如果你不习惯或者运气不好，在新加坡本地宜家采购也很方便的</p><p><a href="http://163.lu/VY4v73" target="_blank" rel="noopener">考拉工厂店 100% 桑蚕丝双面美肤枕套</a><br>我和妻子一人一个，带过去非常方便，水洗之后也没有出现质量问题，面料实在丝滑</p><p><a href="http://163.lu/pBhg61" target="_blank" rel="noopener">AQR 创口贴</a><br>在新加坡常年夏装，像脚和皮肤很容易受伤，带上一盒以备不时之需</p><h3 id="可选推荐"><a href="#可选推荐" class="headerlink" title="可选推荐"></a>可选推荐</h3><blockquote><p>分享自己购买过的东西真的好累，没想到不知不觉买了这么多，但是能够对自己派上用场没有浪费也值了</p></blockquote><p><a href="http://163.lu/23D8k4" target="_blank" rel="noopener">泰国制造 天然乳胶枕 护颈优眠 升级抗菌</a><br>我买过记忆枕，空气枕，乳胶枕还有各种酒店的枕头体验。小米 8H 的乳胶枕和网易严选的相比我更推荐严选的升级款，这也属于严选的爆款商品了</p><p><a href="http://163.lu/6iWZ74" target="_blank" rel="noopener">日式多功能颈枕 舒滑款</a><br>第一次看到 MUJI 的微粒子 U 型枕就被深深吸引，现在小米和网易严选都有同样类型的，我自己购买的是光滑面料，毕竟新加坡非常热，原来在国内我还买过一个经典款</p><p><a href="http://163.lu/9iYPC2" target="_blank" rel="noopener">舒眠真丝眼罩</a><br>折叠床是带不过去了，很早之前买过零听眼罩，用过真丝眼罩后才明白丝的舒服，就和上面买真丝枕套的理由一样。如果你对声音也很敏感，除了戴耳机以外，再购置几副耳塞也是不错的选择</p><p>[鼻毛修剪器]<br>~~ 没有看到小米和严选有~~ 现在严选和小米素士都做了，看了张大妈的评测最后淘宝购入松下 ER-BN50，虽然不知道和国产的飞科相比有多大优势，至少用下来还行吧</p><p>[洗护 / 牙膏 / 洗面奶 / 防晒霜]<br>我推荐带上便携装，其实选择什么不重要，重要的是理解背后的成分，我唯一推荐的就是自己在上海和新加坡都长期使用的<a href="http://163.lu/lWFct2" target="_blank" rel="noopener"> 熊野油脂 无硅弱酸性马油洗发水</a></p><p><a href="http://163.lu/M8IW72" target="_blank" rel="noopener">Swisse 男士复合维生素 120 片 / 瓶</a><br>加上我在上海之前吃的半瓶，一共带了 2.5 瓶过去，现在回头看这个决定是非常明智的，因为新加坡本地蔬菜和水果不算便宜，关键是营养品价格奇高，一小瓶都要五六十新币。营养品不能代替药物，更不能代替你规律的饮食作息和身体锻炼，请记住这只是用来辅助身体营养平衡。我妻子还会购买 Swisse 的女士复合维生素片 + 葡萄籽和 Unichi 玫瑰果 + 葡萄籽</p><p><a href="http://163.lu/PsXds0" target="_blank" rel="noopener">考拉工厂店 便携式手持蒸汽挂烫机</a><br>我妻子要买的，方便小巧，出席正式场合会排上用场</p><p><a href="http://163.lu/WXcRz2" target="_blank" rel="noopener">考拉工厂店 强力除螨吸尘器</a><br>我没同意我妻子买养生壶和破壁料理机，原本这么大个头的除螨仪其实也是拒绝的，但是在阅读过网易浪潮工作室的一篇《中国人为什么爱晒被子》后我认为在美国或者韩国流行的洗衣烘干一体机可能不适合现在的我们，但是我不希望自己身边的人因为痘痘或者皮肤细菌感染而受到伤害，既然网易工厂店降低了除螨仪的购买门槛，为什么不尝试改变下自己的习惯呢？</p><p><a href="http://163.lu/oCJS84" target="_blank" rel="noopener">春风 TryFun 超润滑避孕套</a><br>好孩子就不要点击了，尤其是不要淘气切换到春风 TryFun 系列</p><h2 id="工作招聘"><a href="#工作招聘" class="headerlink" title="工作招聘"></a>工作招聘</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191226105334.png" alt=""></p><p><a href="https://docs.qq.com/doc/BqI21X2yZIht1vALQM0Mf73G24se4c4wv0v31gLPCn3U4vsH0IQmKC2Cjyb927Q9Ok0PRkXB3WYpg82K1GXC4" target="_blank" rel="noopener">中金所技术公司最新招聘岗位</a></p><p><a href="https://docs.qq.com/doc/B80RhZ2ZATLC0DsTVf3kFjA01XR7Mg1x8BG42bVOrs1E5zYc01HWAZ0vDTku39xOdU3cS99t2" target="_blank" rel="noopener">Sea Job Openings</a></p><p>这是我第一次创建微信个人公众号，不会向大家推送文章，只是作为信息分享的渠道。我和上家公司以及现在公司的人力关系都还不错，在征得允许的前提下给大家分享上海和新加坡这两家公司目前的内部招聘动态，上海的职位真的的是进去的多出来的少，如果你希望相对稳定那这是很不错的机会。新加坡这边我会跟随公司内部招聘邮件每半个月左右更新，工作语言以英文为主，周围的中国同事还比较多，不用太担心在新加坡的语言关。这两家公司的介绍都可以在互联网上轻松获取，如果你相信自己的能力可以直接投递简历至文章内的联系方式。努力奋斗未必都能达到预想的结果，但至少你做出了自己的选择。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><blockquote><p>如果你无法访问 wsgzao.github.io/post/singapore 的原文可以查看知乎专栏的文章，如果你只想了解我前往新加坡的求职过程可以看微信公众号的提炼内容</p></blockquote><p>从国内跳槽至新加坡工作的经验分享<br><a href="https://zhuanlan.zhihu.com/p/44280335" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/44280335</a></p><p>从国内跳槽至新加坡的最初半年，我都经历了什么？<br><a href="https://mp.weixin.qq.com/s/gDntToVrvFoQbyfrNf7XqA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/gDntToVrvFoQbyfrNf7XqA</a></p><p>从小到大我都没有离开过父母的保护，感谢你们的理解和支持，也同样感谢老婆的付出和双方家庭的包容。<br>引用领结婚证那天分享在朋友圈的一句话作为结语: I never grow up, but I never stop growing.</p>]]></content>
    
    <summary type="html">
    
      为帮助大家玩转新加坡、快速适应当地生活
    
    </summary>
    
      <category term="生活 | Life" scheme="https://wsgzao.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
  </entry>
  
  <entry>
    <title>模板引擎 Jinja2 语法介绍</title>
    <link href="https://wsgzao.github.io/post/jinja/"/>
    <id>https://wsgzao.github.io/post/jinja/</id>
    <published>2020-02-20T06:59:49.000Z</published>
    <updated>2020-02-21T10:21:50.441Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Flask 和 Django，以及其它很多 Python 框架如 Ansible，都默认使用 Jinja2 来作为模版引擎。我们用 Jinja2 在服务器上直接生成配置和其他文件。 Jinja 是一个基于 Python 设计语言的“全功能模板引擎”，个人认为 Jinja 语法本身并不复杂，但掌握好基本的 Jinja 语法会帮助你在构建 Ansible、Jenkins、Web 等批处理作业时做到事半功倍的效果。</p><blockquote><p>模板引擎 Jinja2 语法介绍</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 02 月 20 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/jinja/">https://wsgzao.github.io/post/jinja/</a></p><hr><h2 id="Jinja-简介"><a href="#Jinja-简介" class="headerlink" title="Jinja 简介"></a>Jinja 简介</h2><p>Jinja is a modern and designer-friendly templating language for Python, modelled after Django’s templates. It is fast, widely used and secure with the optional sandboxed template execution environment:</p><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> "base.html" %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">Members</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> user <span class="keyword">in</span> users %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; user.url &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span><span class="template-variable">&#123;&#123; user.username &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><p>Features:</p><ul><li>sandboxed execution</li><li>powerful automatic HTML escaping system for XSS prevention</li><li>template inheritance</li><li>compiles down to the optimal python code just in time</li><li>optional ahead-of-time template compilation</li><li>easy to debug. Line numbers of exceptions directly point to the correct line in the template.</li><li>configurable syntax</li></ul><p>Jinja2 是一个现代的，设计者友好的，仿照 Django 模板的 Python 模板语言。 它速度快，被广泛使用，并且提供了可选的沙箱模板执行环境保证安全:</p><p>特性:</p><ul><li>沙箱中执行</li><li>强大的 HTML 自动转义系统保护系统免受 XSS</li><li>模板继承</li><li>及时编译最优的 python 代码</li><li>可选提前编译模板的时间</li><li>易于调试。异常的行数直接指向模板中的对应行。</li><li>可配置的语法</li></ul><blockquote><p>为什么要叫 Jinja？</p></blockquote><p>之所以叫 Jinja，是因为日本的神社（Jinja）英文单词是 temple，而模板的英文是 template，两者发音很相似（这么说来，它本来也有可能叫 Miao 的……）。</p><blockquote><p>Jinja 的速度怎么样？</p></blockquote><p>和 Mako 差不多，但比 Genshi 以及 Django 的模板引擎快 10~20 倍。</p><blockquote><p>把逻辑判断（Logic）放到模板里是个好主意吗？</p></blockquote><p>毫无疑问，你放到模板里逻辑判断（Logic）应该越少越好。但为了让大家都开心，适当的逻辑判断是需要的。尽管如此，它有很多对于你能做什么，不能做什么的限制。</p><p>出于诸多考虑（速度，易读性等等），Jinja 既不允许你放置任意的 Python 代码，也不允许所有的 Python 表达式。这也是为什么我们要了解 Jinja2 的语法。</p><p>在 Jinja 官方文档中建议大家可以优先阅读以下 2 个章节：</p><ul><li><a href="https://jinja.palletsprojects.com/en/master/faq/" target="_blank" rel="noopener">Frequently Asked Questions</a></li><li><a href="https://jinja.palletsprojects.com/en/master/templates/" target="_blank" rel="noopener">Template Designer Documentation</a></li></ul><h2 id="什么是模版引擎"><a href="#什么是模版引擎" class="headerlink" title="什么是模版引擎"></a>什么是模版引擎</h2><p>在 Python 中，什么是模版？就是在一个静态 HTML 加入一些类似变量的标签，然后引擎在渲染这个 HTML 时候会动态的把变量填入内容，生成一个最终的 HTML。<br>什么是模版引擎？其实就是一种能解析 <code>类似 Python 语言</code> 的标记语言的解释器。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">比如我们在 HTML 模版中输入一个 `&lt;p&gt; &#123;&#123; post.title &#125;&#125; &lt;/p&gt;`，显然这不是真正的 HTML 语法。但是当 Jinja2 解释器读取到 `&#123;&#123; ...&#125;&#125;` 后知道里面是一个变量，那么就把这个变量替换为真正的值，最后翻译出来就变成了 `&lt;p&gt; 大标题 &lt;/p&gt;` 这样的 HTML 内容。</span><br></pre></td></tr></table></figure></p><p><strong>Jinja2 是一个模版语言，只是类似 Python，比较符合 Python 语法，但不完全相同！</strong></p><p>所有的模版引擎，实际上都差不多，不管是基于 VBS 语言的 ASP 模版，还是基于 PHP 语言的 PHP 模版，都不是与原本语言一摸一样，而只是做到尽量一样而已。</p><h2 id="Jinja2-语言基础"><a href="#Jinja2-语言基础" class="headerlink" title="Jinja2 语言基础"></a>Jinja2 语言基础</h2><p>注意：<code>Jinja2</code> 模版语言，是不区分缩进的，和纯 python 不同。实际上所有模版语言都不区分缩紧。</p><p>常用标记：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注释：`&#123;# 这是注释 #&#125;`</span><br><span class="line">变量：`&#123;&#123; post.title &#125;&#125;`，或字典元素 `&#123;&#123;your_dict[&apos;key&apos;]&#125;&#125;`，或列表 `&#123;&#123;your_list[0]&#125;&#125;`</span><br><span class="line">多行代码块：`&#123;% 开始 %&#125; HTML 标签 &#123;% 结束 %&#125;`</span><br></pre></td></tr></table></figure></p><p>示例：</p><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> user %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; user &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    hello!</span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> index <span class="keyword">in</span> indexs %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123; index &#125;&#125;</span><span class="xml"> </span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h3 id="Delimiters（分隔符）"><a href="#Delimiters（分隔符）" class="headerlink" title="Delimiters（分隔符）"></a>Delimiters（分隔符）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% … %&#125; 语句（[Statements](http://jinja.pocoo.org/docs/dev/templates/#list-of-control-structures)）</span><br><span class="line">&#123;&#123; … &#125;&#125; 打印模板输出的表达式（[Expressions](http://jinja.pocoo.org/docs/dev/templates/#expressions)）</span><br><span class="line">&#123;# … #&#125; 注释</span><br><span class="line"># … ## 行语句（[Line Statements](http://jinja.pocoo.org/docs/dev/templates/#line-statements)）</span><br></pre></td></tr></table></figure><h3 id="Variables（变量）"><a href="#Variables（变量）" class="headerlink" title="Variables（变量）"></a>Variables（变量）</h3><p>除了普通的字符串变量，Jinja2 还支持列表、字典和对象，你可以这样获取变量值：<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; mydict['key'] &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; mylist[3] &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; mylist[myintvar] &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; myobj.somemethod() &#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>获取一个变量的属性有两种方式：<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; foo.bar &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; foo['bar'] &#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>这两种方法基本相同（深层次的区别可以暂不考虑）</p><h3 id="Filter-过滤器"><a href="#Filter-过滤器" class="headerlink" title="Filter 过滤器()"></a>Filter 过滤器()</h3><p>一个 filter 过滤器的本质就是一个 function 函数。使用格式为：<code>变量名 | 函数</code>。<br>它做到的就是，把变量传给函数，然后再把函数返回值作为这个代码块的值。</p><p>如：<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- 带参数的 --&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; 变量 | 函数名(*args)&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 不带参数可以省略括号 --&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; 变量 | 函数名 &#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>链式调用（管道式）：<br>和命令行的 pipline 管道一样，可以一次调用多个函数（过滤器），如：<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; "hello world" | reverse | upper &#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>文本块调用（将中间的所有文字都作为变量内容传入到过滤器中）：<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">filter</span></span> upper %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    一大堆文字</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfilter</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><blockquote><p>Jinja2 常用过滤器</p></blockquote><p>字符串操作：</p><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">safe：禁用转义</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; '&lt;em&gt;hello&lt;/em&gt;' | safe &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">capitalize：把变量值的首字母转成大写，其余字母转小写</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; 'hello' | capitalize &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">lower：把值转成小写</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; 'HELLO' | lower &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">upper：把值转成大写</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; 'hello' | upper &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">title：把值中的每个单词的首字母都转成大写</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; 'hello' | title &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">reverse：字符串反转</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; 'olleh' | reverse &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">format：格式化输出</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; '%s is %d' | format('name',17) &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">striptags：渲染之前把值中所有的 HTML 标签都删掉</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; '&lt;em&gt;hello&lt;/em&gt;' | striptags &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">truncate: 字符串截断</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; 'hello every one' | truncate(9)&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>列表操作：</p><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">first：取第一个元素</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; [1,2,3,4,5,6] | first &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">last：取最后一个元素</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; [1,2,3,4,5,6] | last &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">length：获取列表长度</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; [1,2,3,4,5,6] | length &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">sum：列表求和</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; [1,2,3,4,5,6] | sum &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">sort：列表排序</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; [6,2,3,1,5,4] | sort &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="https://jinja.palletsprojects.com/en/master/templates/#builtin-filters" target="_blank" rel="noopener">List of Builtin Filters</a></p><h3 id="Tests（测试，判断）"><a href="#Tests（测试，判断）" class="headerlink" title="Tests（测试，判断）"></a>Tests（测试，判断）</h3><p>Jinja2 提供的 tests 可以用来在语句里对变量或表达式进行测试，如果要测试一个变量，可以在变量后加上 “is” 和 test 名，比如：<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> user.age is equalto 42 %&#125;</span><span class="xml"> </span><span class="comment">&#123;# 这里也可以写成... is equalto(42) #&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">Ha, you are 42!</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>如果要传入参数，可以在 test 后增加括号，也可以直接写在后面。</p><p>常用的 test（未说明的均返回 True 或 False）：</p><ul><li>boolean</li><li>defined</li><li>equalto</li><li>escaped</li><li>none</li><li>sequence</li><li>string</li><li>number</li><li>reverse</li><li>replace</li></ul><p><a href="https://jinja.palletsprojects.com/en/master/templates/#list-of-builtin-tests" target="_blank" rel="noopener">List of Builtin Tests</a></p><h2 id="For-If-列表控制结构"><a href="#For-If-列表控制结构" class="headerlink" title="For/If (列表控制结构)"></a>For/If (列表控制结构)</h2><p>A control structure refers to all those things that control the flow of a program - conditionals (i.e. if/elif/else), for-loops, as well as things like macros and blocks. With the default syntax, control structures appear inside blocks.</p><p><a href="https://jinja.palletsprojects.com/en/master/templates/#list-of-control-structures" target="_blank" rel="noopener">List of Control Structures</a></p><h3 id="For"><a href="#For" class="headerlink" title="For"></a>For</h3><p>Loop over each item in a sequence. For example, to display a list of users provided in a variable called users:<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Members<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> user <span class="keyword">in</span> users %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123; user.username|e &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>As variables in templates retain their object properties, it is possible to iterate over containers like dict:<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> key, value <span class="keyword">in</span> my_dict.items() %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><span class="template-variable">&#123;&#123; key|e &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><span class="template-variable">&#123;&#123; value|e &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>循环索引</p><ul><li>loop.index: 循环当前迭代(从 1 开始)。</li><li>loop.index0: 循环当前迭代(从 0 开始)。</li><li>loop.revindex: 循环迭代的数量(从 1 开始)。</li><li>loop.revindex0: 循环迭代的数量(从 0 开始)。</li><li>loop.first: 是否为迭代的第一步。</li><li>loop.last: 是否为迭代的最后一步。</li><li>loop.length: 序列中元素的数量。</li></ul><h3 id="If"><a href="#If" class="headerlink" title="If"></a>If</h3><p>The if statement in Jinja is comparable with the Python if statement. In the simplest form, you can use it to test if a variable is defined, not empty and not false:</p><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> users %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> user <span class="keyword">in</span> users %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123; user.username|e &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><p>For multiple branches, elif and else can be used like in Python. You can use more complex <a href="https://jinja.palletsprojects.com/en/master/templates/#expressions" target="_blank" rel="noopener">Expressions</a> there, too:</p><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> kenny.sick %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    Kenny is sick.</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">elif</span></span> kenny.dead %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    You killed Kenny!  You bastard!!!</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    Kenny looks okay --- so far</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h2 id="Ansible-Jinja2-模版使用"><a href="#Ansible-Jinja2-模版使用" class="headerlink" title="Ansible Jinja2 模版使用"></a>Ansible Jinja2 模版使用</h2><blockquote><p>更多用法可以阅读参考文章中的链接</p></blockquote><p>variables: 可以输出数据<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; my_variable &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; some_dudes_name | capitalize &#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>statements: 可以用来创建条件和循环等等<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> my_conditional %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    xxx</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> item <span class="keyword">in</span> all_items %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; item &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>从上文中第二个 variable 的例子中可以看出，Jinja2 支持使用带过滤器的 Unix 型管道操作符。有很多的内置过滤器可供使用。</p><p>我们可以仅仅用一堆简单 if 和 for 就可以建立建立几乎任何的常规配置文件。不过如果你有意更进一步，Jinja2 Documentation 包含了很多有趣的东西可供了解。我们可以看到 Ansibe 允许在模板中使用一些额外的模版变量。</p><p>按照 Ansible template_module, 我们模板的示例：<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">- name: Create Nginx SSL configuration</span></span><br><span class="line"><span class="xml">  template:</span></span><br><span class="line"><span class="xml">    src: "nginx_ssl.j2"</span></span><br><span class="line"><span class="xml">    dest: "/etc/nginx/sites-available/</span><span class="template-variable">&#123;&#123; project_name &#125;&#125;</span><span class="xml">"</span></span><br></pre></td></tr></table></figure></p><p>我们同样可以发现在 Ansible Facts 中有很多可用的 Ansible 变量。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://jinja.palletsprojects.com/" target="_blank" rel="noopener">Jinja Documentation</a></p><p><a href="http://docs.jinkan.org/docs/jinja2/index.html" target="_blank" rel="noopener">Jinja2 中文文档</a></p><p><a href="http://greyli.com/flask-template-engine-jinja2-syntax-introduction/" target="_blank" rel="noopener">Flask 模板引擎：Jinja2 语法介绍</a></p><p><a href="https://segmentfault.com/a/1190000018002480" target="_blank" rel="noopener">一篇文章搞懂 Jinja2 Template Engine 模版引擎</a></p><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_templating.html" target="_blank" rel="noopener">Ansible Templating (Jinja2)</a></p><p><a href="https://www.zsythink.net/archives/2999" target="_blank" rel="noopener">ansible 笔记（38）：jinja2 模板（一）</a></p><p><a href="http://zhangblog.com/2020/01/08/ansible-10/" target="_blank" rel="noopener">Ansible Jinja2 模板使用</a></p>]]></content>
    
    <summary type="html">
    
      模板引擎Jinja2语法介绍
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 certbot 代替 acme.sh 免费申请 wildcard 通配符证书和自动更新实践小结</title>
    <link href="https://wsgzao.github.io/post/certbot/"/>
    <id>https://wsgzao.github.io/post/certbot/</id>
    <published>2020-02-19T06:59:49.000Z</published>
    <updated>2020-02-20T09:26:31.871Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200219171300.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为 Google Chrome 和运营商劫持干扰访问者体验的努力推动了大型网站加速应用全站 HTTPS，而 <a href="https://letsencrypt.org/" target="_blank" rel="noopener">Let’s Encrypt</a> 这个项目通过自动化把配置和维护 HTTPS 变得更加简单，Let’s Encrypt 设计了一个 ACME 协议目前版本是 v2，并在 2018 年支持通配符证书 <a href="https://community.letsencrypt.org/t/acme-v2-and-wildcard-certificate-support-is-live/55579" target="_blank" rel="noopener">Wildcard Certificate Support is Live</a>。官网主推的客户端是<a href="https://certbot.eff.org/" target="_blank" rel="noopener">Certbot</a>，任何人都可以基于 ACME 协议实现一个客户端，比如大名鼎鼎的<a href="https://github.com/Neilpang/acme.sh" target="_blank" rel="noopener">acme.sh</a>。本文主要使用<a href="https://github.com/certbot/certbot/tree/master/certbot-dns-route53" target="_blank" rel="noopener">certbot-dns-route53</a> 插件为例，由于 certbot 官方 DNS Plugins 插件支持有限，如果你需要支持 aliyun/tencentyun/godaddy dns 可以参考 <a href="https://github.com/ywdblog/certbot-letencrypt-wildcardcertificates-alydns-au" target="_blank" rel="noopener">certbot-letencrypt-wildcardcertificates-alydns-au</a>，随着 Docker 容器化和 K8S(Kubernetes) 的进击，相信会促进 certbot 多样化玩法。</p><blockquote><p>使用 certbot 代替 acme.sh 免费申请 wildcard 通配符证书和自动更新实践小结</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 02 月 19 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/certbot/">https://wsgzao.github.io/post/certbot/</a></p><hr><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="关于-HTTPS"><a href="#关于-HTTPS" class="headerlink" title="关于 HTTPS"></a>关于 HTTPS</h3><blockquote><p>引维基百科的说法</p></blockquote><p>超文本传输安全协议（英语：Hypertext Transfer Protocol Secure，缩写：HTTPS）是一种网络安全传输协议。在计算机网络上，HTTPS 经由超文本传输协议进行通信，但利用 SSL/TLS 来对数据包进行加密。HTTPS 开发的主要目的，是提供对网络服务器的身份认证，保护交换数据的隐私与完整性</p><p>HTTPS 的主要思想是在不安全的网络上创建一安全信道，并可在使用适当的加密包和服务器证书可被验证且可被信任时，对窃听和中间人攻击提供合理防护。</p><p>HTTPS 的信任继承基于预先安装在浏览器中的证书颁发机构（如 Symantec、Comodo、GoDaddy 和 GlobalSign 等）（意即“我信任证书颁发机构告诉我应该信任的”）。因此，一个到某网站的 HTTPS 连接可被信任，当且且当：</p><ul><li>用户相信他们的浏览器正确实现了 HTTPS 且安装了正确的证书颁发机构；</li><li>用户相信证书颁发机构仅信任合法的网站；</li><li>被访问的网站提供了一个有效的证书，意即，它是由一个被信任的证书颁发机构签发的（大部分浏览器会对无效的证书发出警告）；</li><li>该证书正确地验证了被访问的网站（如，访问 <a href="https://example.com" target="_blank" rel="noopener">https://example.com</a> 时收到了给 example.com 而不是其他组织的证书）；</li><li>或者互联网上相关节点是值得信任的，或者用户相信本协议的加密层（TLS 或 SSL）不能被窃听者破坏。</li></ul><h3 id="HTTP-和-HTTPS-区别"><a href="#HTTP-和-HTTPS-区别" class="headerlink" title="HTTP 和 HTTPS 区别"></a>HTTP 和 HTTPS 区别</h3><p>HTTP 协议传输的数据都是未加密的，也就是明文的，因此使用 HTTP 协议传输隐私信息非常不安全，为了保证这些隐私数据能加密传输，于是网景公司设计了 SSL（Secure Sockets Layer）协议用于对 HTTP 协议传输的数据进行加密，从而就诞生了 HTTPS。简单来说，HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，要比 HTTP 协议安全。</p><p>HTTPS 和 HTTP 的区别主要如下：</p><ul><li>HTTPS 协议需要到 CA 申请证书，一般免费证书较少，因而需要一定费用。</li><li>HTTP 是超文本传输协议，信息是明文传输，HTTPS 则是具有安全性的 SSL 加密传输协议。</li><li>HTTP 和 HTTPS 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。</li><li>HTTP 的连接很简单，是无状态的；HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，比 HTTP 协议安全。</li></ul><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200220153747.png" alt=""></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200220153532.png" alt=""></p><p><a href="https://serverguy.com/ssl/types-of-ssl-certificates/" target="_blank" rel="noopener">Types of SSL Certificates for a Secure Business Website</a></p><h3 id="关于-TLS-SSL"><a href="#关于-TLS-SSL" class="headerlink" title="关于 TLS/SSL"></a>关于 TLS/SSL</h3><p>传输层安全协议（英语：Transport Layer Security，缩写：TLS），及其前身安全套接层（Secure Sockets Layer，缩写：SSL）是一种安全协议，目的是为互联网通信，提供安全及数据完整性保障</p><h3 id="为什么要部署-HTTPS"><a href="#为什么要部署-HTTPS" class="headerlink" title="为什么要部署 HTTPS"></a>为什么要部署 HTTPS</h3><p>说到底，就是 HTTPS 更安全。甚至为了安全，一个专业可靠的网站， HTTPS 是必须的。 Firefox 和 Chrome 都计划将没有配置 SSL 加密的 HTTP 网站标记为不安全（貌似 Firefox 50 已经这么干了），目前它们也正在联合其他相关的基金会与公司推动整个互联网 HTTPS 化，现在大家访问的一些主要的网站。如 Google 多年前就已经全部启用 HTTPS ，国内的淘宝、搜狗、知乎、百度等等也全面 HTTPS 了。甚至 Google 的搜索结果也正在给予 HTTPS 的网站更高的排名和优先收录权。</p><h3 id="怎么部署-HTTPS"><a href="#怎么部署-HTTPS" class="headerlink" title="怎么部署 HTTPS"></a>怎么部署 HTTPS</h3><p>你只需要有一张被信任的 CA （ Certificate Authority ）也就是证书授权中心颁发的 SSL 安全证书，并且将它部署到你的网站服务器上。一旦部署成功后，当用户访问你的网站时，浏览器会在显示的网址前加一把小绿锁，表明这个网站是安全的，当然同时你也会看到网址前的前缀变成了 HTTPS ，不再是 HTTP 了。</p><h3 id="怎么获得-SSL-安全证书"><a href="#怎么获得-SSL-安全证书" class="headerlink" title="怎么获得 SSL 安全证书"></a>怎么获得 SSL 安全证书</h3><p>理论上，我们自己也可以签发 SSL 安全证书，但是我们自己签发的安全证书不会被主流的浏览器信任，所以我们需要被信任的证书授权中心（ CA ）签发的安全证书。而一般的 SSL 安全证书签发服务都比较贵，比如 Godaddy 、 GlobalSign 等机构签发的证书一般都需要 20 美金一年甚至更贵，不过为了加快推广 HTTPS 的普及， EEF 电子前哨基金会、 Mozilla 基金会和美国密歇根大学成立了一个公益组织叫 ISRG （ Internet Security Research Group ），这个组织从 2015 年开始推出了 Let’s Encrypt 免费证书。这个免费证书不仅免费，而且还相当好用，所以我们就可以利用 Let’s Encrypt 提供的免费证书部署 HTTPS 了</p><h2 id="Let’s-Encrypt-简介"><a href="#Let’s-Encrypt-简介" class="headerlink" title="Let’s Encrypt 简介"></a>Let’s Encrypt 简介</h2><p>Let’s Encrypt 是 一个叫 ISRG （ Internet Security Research Group ，互联网安全研究小组）的组织推出的免费安全证书计划。参与这个计划的组织和公司可以说是互联网顶顶重要的先驱，除了前文提到的三个牛气哄哄的发起单位外，后来又有思科（全球网络设备制造商执牛耳者）、 Akamai 加入，甚至连 Linux 基金会也加入了合作，这些大牌组织的加入保证了这个项目的可信度和可持续性。</p><p>部署 HTTPS 网站的时候需要证书，证书由 CA 机构签发，大部分传统 CA 机构签发证书是需要收费的，这不利于推动 HTTPS 协议的使用。</p><p>Let’s Encrypt 也是一个 CA 机构，但这个 CA 机构是免费的！！！也就是说签发证书不需要任何费用。</p><p>Let’s Encrypt 由于是非盈利性的组织，需要控制开支，他们搞了一个非常有创意的事情，设计了一个 ACME 协议，目前该协议的版本是 v1。</p><p>那为什么要创建 ACME 协议呢，传统的 CA 机构是人工受理证书申请、证书更新、证书撤销，完全是手动处理的。而 ACME 协议规范化了证书申请、更新、撤销等流程，只要一个客户端实现了该协议的功能，通过客户端就可以向 Let’s Encrypt 申请证书，也就是说 Let’s Encrypt CA 完全是自动化操作的。</p><p>任何人都可以基于 ACME 协议实现一个客户端，官方推荐的客户端是 Certbot 。</p><h3 id="Let’s-Encrypt-通配符证书"><a href="#Let’s-Encrypt-通配符证书" class="headerlink" title="Let’s Encrypt 通配符证书"></a>Let’s Encrypt 通配符证书</h3><p>在没有出现通配符证书之前，Let’s Encrypt 支持两种证书。</p><p>1）单域名证书：证书仅仅包含一个主机。</p><p>2）SAN 证书：一张证书可以包括多个主机（Let’s Encrypt 限制是 20），也就是证书可以包含下列的主机：<a href="http://www.example.com、www.example.cn、blog.example.com" target="_blank" rel="noopener">www.example.com、www.example.cn、blog.example.com</a> 等等。</p><p>证书包含的主机可以不是同一个注册域，不要问我注册域是什么？注册域就是向域名注册商购买的域名。</p><p>对于个人用户来说，由于主机并不是太多，所以使用 SAN 证书完全没有问题，但是对于大公司来说有一些问题：</p><ul><li>子域名非常多，而且过一段时间可能就要使用一个新的主机。</li><li>注册域也非常多。</li></ul><p>读者可以思考下，对于大企业来说，SAN 证书可能并不能满足需求，类似于 sina 这样的网站，所有的主机全部包含在一张证书中，而使用 Let’s Encrypt 证书是无法满足的。</p><p>通配符证书就是证书中可以包含一个通配符，比如 .example.com、.example.cn，读者很快明白，大型企业也可以使用通配符证书了，一张证书可以防止更多的主机了。</p><p>这个功能可以说非常重要，从功能上看 Let’s Encrypt 和传统 CA 机构没有什么区别了，会不会触动传统 CA 机构的利益呢？</p><h3 id="如何申请-Let’s-Encrypt-通配符证书"><a href="#如何申请-Let’s-Encrypt-通配符证书" class="headerlink" title="如何申请 Let’s Encrypt 通配符证书"></a>如何申请 Let’s Encrypt 通配符证书</h3><p>为了实现通配符证书，Let’s Encrypt 对 ACME 协议的实现进行了升级，只有 v2 协议才能支持通配符证书。</p><p>也就是说任何客户端只要支持 ACME v2 版本，就可以申请通配符证书了，是不是很激动。</p><p>在了解该协议之前有几个注意点：</p><p>客户在申请 Let’s Encrypt 证书的时候，需要校验域名的所有权，证明操作者有权利为该域名申请证书，目前支持三种验证方式：</p><ul><li>dns-01：给域名添加一个 DNS TXT 记录。</li><li>http-01：在域名对应的 Web 服务器下放置一个 HTTP well-known URL 资源文件。</li><li>tls-sni-01：在域名对应的 Web 服务器下放置一个 HTTPS well-known URL 资源文件。</li></ul><p>而申请通配符证书，只能使用 dns-01 的方式</p><h2 id="Certbot-简介"><a href="#Certbot-简介" class="headerlink" title="Certbot 简介"></a>Certbot 简介</h2><blockquote><p>What’s Certbot?</p></blockquote><p>Certbot is a free, open source software tool for automatically using <a href="https://letsencrypt.org/" target="_blank" rel="noopener">Let’s Encrypt</a> certificates on manually-administrated websites to enable HTTPS.</p><p>Certbot is made by the <a href="https://www.eff.org/" target="_blank" rel="noopener">Electronic Frontier Foundation (EFF)</a>, a 501(c)3 nonprofit based in San Francisco, CA, that defends digital privacy, free speech, and innovation.</p><p>Certbot 的官方网站是 <a href="https://certbot.eff.org/" target="_blank" rel="noopener">https://certbot.eff.org/</a> ，打开这个链接选择自己使用的 web server 和操作系统，EFF 官方会给出详细的使用方法，如果 DNS 在官方的支持插件列表中可以按官方文档操作，但如果是国内的 DNS 可以参考<a href="https://github.com/ywdblog/certbot-letencrypt-wildcardcertificates-alydns-au" target="_blank" rel="noopener">certbot-letencrypt-wildcardcertificates-alydns-au</a></p><p><a href="https://certbot.eff.org/docs/using.html#dns-plugins" target="_blank" rel="noopener">DNS plugin’s name on the Documentation list</a></p><p><a href="https://certbot.eff.org/docs/" target="_blank" rel="noopener">certbot docs</a></p><h3 id="certbot-插件介绍"><a href="#certbot-插件介绍" class="headerlink" title="certbot 插件介绍"></a>certbot 插件介绍</h3><p>Certbot 现在需要运行在安装了 Python （2.7 or 3.4）的类 unix 系统上，内存大于 512MB（如果小于的话，<a href="https://certbot.eff.org/docs/install.html#problems-with-python-virtual-environment" target="_blank" rel="noopener">官方解决方案</a>），默认是需要 root 权限的，比如写证书操作需要 root 权限。</p><p>Certbot 客户机支持获取和安装证书的两种插件:<code>auth</code> 和 <code>install</code>，当使用 certonly 参数的时候，只会获取证书，并不会安装证，获取的证书位于 / etc/letsencrypt 目录下</p><p>主要插件的介绍：</p><p><a href="https://certbot.eff.org/docs/using.html#getting-certificates-and-choosing-plugins" target="_blank" rel="noopener">Getting certificates (and choosing plugins)</a></p><table><thead><tr><th>Plugin</th><th>Auth</th><th>Install</th><th>Notes</th><th>Challenge types (and port)</th></tr></thead><tbody><tr><td>apache</td><td>Y</td><td>Y</td><td>自动化获取并安装证书</td><td>tls-sni-01 (443)</td></tr><tr><td>webroot</td><td>Y</td><td>N</td><td>已经有运行的服务，通过验证 webroot 目录来获取证书</td><td>http-01 (80)</td></tr><tr><td>nginx</td><td>Y</td><td>Y</td><td>使用 nginx 自动获取和安装证书</td><td>tls-sni-01 (443)</td></tr><tr><td>standalone</td><td>Y</td><td>N</td><td>建立一个 standalone WEB 服务，需要 80 或者 443 端口可用，如果你没有类似 nginx 和 apache 等服务，这很有用</td><td>http-01 (80) or tls-sni-01 (443)</td></tr><tr><td>DNS plugins</td><td>Y</td><td>N</td><td>通过修改 dns 服务器的 text 记录，来获取证书，野卡证书只能通过此方式获取</td><td>dns-01 (53)</td></tr><tr><td>manual</td><td>Y</td><td>N</td><td>通过自己给指令获取证书，支持添加定制脚本来完成任务</td><td>http-01 (80), dns-01 (53) or tls-sni-01 (443)</td></tr></tbody></table><p>解析：</p><ul><li>如果你使用 standalone 插件，那么需要使用 80 和 443 端口，因为要建一个监听这些端口的服务，如果你有别的服务使用了该端口，那么就会出问题了。</li><li>webroot 方式，如果你使用了 nginx，那么你需要更改一些 nginx 配置，确保能验证你对该域名的所有权限</li></ul><p>插件的具体使用可以参考<a href="https://www.cnblogs.com/redirect/p/10140248.html" target="_blank" rel="noopener">letsencrypt 证书 - 管理工具 certbot</a></p><p>我个人推荐选择 <code>DNS plugins</code> 或者 <code>manual</code> 方式来管理</p><h3 id="certbot-dns-route53-实践"><a href="#certbot-dns-route53-实践" class="headerlink" title="certbot-dns-route53 实践"></a>certbot-dns-route53 实践</h3><p>因为域名在 Amazon Route 53，所以选择使用 certbot-dns-route53 插件会比较方便，敏感信息都用 xxx 打码了但不影响阅读理解</p><p><a href="https://github.com/certbot/certbot/tree/master/certbot-dns-route53" target="_blank" rel="noopener">https://github.com/certbot/certbot/tree/master/certbot-dns-route53</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create a virtual environment</span></span><br><span class="line">pip install virtualenv</span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">virtualenv certbot</span><br><span class="line"><span class="built_in">source</span> certbot/bin/activate</span><br><span class="line"></span><br><span class="line"><span class="comment"># Update its pip and setuptools (VENV/bin/pip install -U setuptools pip) to avoid problems with cryptography's dependency on setuptools&gt;=11.3.</span></span><br><span class="line"></span><br><span class="line">certbot/bin/pip install -U setuptools pip</span><br><span class="line"></span><br><span class="line">pip list</span><br><span class="line"></span><br><span class="line">Package    Version</span><br><span class="line">---------- -------</span><br><span class="line">pip        20.0.2</span><br><span class="line">setuptools 44.0.0</span><br><span class="line">wheel      0.34.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make sure you have libssl-dev and libffi (or your regional equivalents) installed. You might have to set compiler flags to pick things up (I have to use CPPFLAGS=-I/usr/local/opt/openssl/include LDFLAGS=-L/usr/local/opt/openssl/lib on my macOS to pick up brew's openssl, for example).</span></span><br><span class="line"></span><br><span class="line">pip install certbot-dns-route53</span><br><span class="line"></span><br><span class="line"><span class="comment"># create aws credentials</span></span><br><span class="line">mkdir ~/.aws/</span><br><span class="line">vim ~/.aws/credentials</span><br><span class="line">[default]</span><br><span class="line">aws_access_key_id=xxx</span><br><span class="line">aws_secret_access_key=xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate certificate</span></span><br><span class="line">certbot certonly \</span><br><span class="line">  -n --agree-tos --email xxx \</span><br><span class="line">  --dns-route53 \</span><br><span class="line">  -d <span class="string">"*.xxx"</span> </span><br><span class="line"></span><br><span class="line">(certbot) [root@xxx ~]<span class="comment"># certbot certonly \</span></span><br><span class="line">&gt;   -n --agree-tos --email xxx  \</span><br><span class="line">&gt;   --dns-route53 \</span><br><span class="line">&gt;   -d <span class="string">"*.xxx"</span></span><br><span class="line">Saving debug <span class="built_in">log</span> to /var/<span class="built_in">log</span>/letsencrypt/letsencrypt.log</span><br><span class="line">Found credentials <span class="keyword">in</span> shared credentials file: ~/.aws/credentials</span><br><span class="line">Plugins selected: Authenticator dns-route53, Installer None</span><br><span class="line">Obtaining a new certificate</span><br><span class="line">Performing the following challenges:</span><br><span class="line">dns-01 challenge <span class="keyword">for</span> xxx</span><br><span class="line">Waiting <span class="keyword">for</span> verification...</span><br><span class="line">Cleaning up challenges</span><br><span class="line"></span><br><span class="line">IMPORTANT NOTES:</span><br><span class="line"> - Congratulations! Your certificate and chain have been saved at:</span><br><span class="line">   /etc/letsencrypt/live/xxx/fullchain.pem</span><br><span class="line">   Your key file has been saved at:</span><br><span class="line">   /etc/letsencrypt/live/xxx/privkey.pem</span><br><span class="line">   Your cert will expire on 2020-05-19. To obtain a new or tweaked</span><br><span class="line">   version of this certificate <span class="keyword">in</span> the future, simply run certbot</span><br><span class="line">   again. To non-interactively renew *all* of your certificates, run</span><br><span class="line">   <span class="string">"certbot renew"</span></span><br><span class="line"> - Your account credentials have been saved <span class="keyword">in</span> your Certbot</span><br><span class="line">   configuration directory at /etc/letsencrypt. You should make a</span><br><span class="line">   secure backup of this folder now. This configuration directory will</span><br><span class="line">   also contain certificates and private keys obtained by Certbot so</span><br><span class="line">   making regular backups of this folder is ideal.</span><br><span class="line"> - If you like Certbot, please consider supporting our work by:</span><br><span class="line"></span><br><span class="line">   Donating to ISRG / Let<span class="string">'s Encrypt:   https://letsencrypt.org/donate</span></span><br><span class="line"><span class="string">   Donating to EFF:                    https://eff.org/donate-le</span></span><br></pre></td></tr></table></figure><h3 id="certbot-证书默认存放路径结构"><a href="#certbot-证书默认存放路径结构" class="headerlink" title="certbot 证书默认存放路径结构"></a>certbot 证书默认存放路径结构</h3><p><a href="https://certbot.eff.org/docs/using.html#where-are-my-certificates" target="_blank" rel="noopener">Where are my certificates</a></p><p>All generated keys and issued certificates can be found in <code>/etc/letsencrypt/live/$domain</code>. In the case of creating a SAN certificate with multiple alternative names, <code>$domain</code>is the first domain passed in via -d parameter. Rather than copying, please point your (web) server configuration directly to those files (or create symlinks). During the <a href="#renewal">renewal</a>, <code>/etc/letsencrypt/live</code>is updated with the latest necessary files.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check letsencrypt directory</span></span><br><span class="line">[root@xxx ~]<span class="comment"># tree /etc/letsencrypt/</span></span><br><span class="line">/etc/letsencrypt/</span><br><span class="line">├── accounts</span><br><span class="line">│   └── acme-v02.api.letsencrypt.org</span><br><span class="line">│       └── directory</span><br><span class="line">│           └── xxx</span><br><span class="line">│               ├── meta.json</span><br><span class="line">│               ├── private_key.json</span><br><span class="line">│               └── regr.json</span><br><span class="line">├── archive</span><br><span class="line">│   └── xxx</span><br><span class="line">│       ├── cert1.pem</span><br><span class="line">│       ├── chain1.pem</span><br><span class="line">│       ├── fullchain1.pem</span><br><span class="line">│       └── privkey1.pem</span><br><span class="line">├── csr</span><br><span class="line">│   ├── 0000_csr-certbot.pem</span><br><span class="line">│   └── 0001_csr-certbot.pem</span><br><span class="line">├── keys</span><br><span class="line">│   ├── 0000_key-certbot.pem</span><br><span class="line">│   └── 0001_key-certbot.pem</span><br><span class="line">├── live</span><br><span class="line">│   ├── xxx</span><br><span class="line">│   │   ├── cert.pem -&gt; ../../archive/xxx/cert1.pem</span><br><span class="line">│   │   ├── chain.pem -&gt; ../../archive/xxx/chain1.pem</span><br><span class="line">│   │   ├── fullchain.pem -&gt; ../../archive/xxx/fullchain1.pem</span><br><span class="line">│   │   ├── privkey.pem -&gt; ../../archive/xxx/privkey1.pem</span><br><span class="line">│   │   └── README</span><br><span class="line">│   └── README</span><br><span class="line">├── renewal</span><br><span class="line">│   └── xxx.conf</span><br><span class="line">└── renewal-hooks</span><br><span class="line">    ├── deploy</span><br><span class="line">    ├── post</span><br><span class="line">    └── pre</span><br><span class="line"></span><br><span class="line">15 directories, 18 files</span><br></pre></td></tr></table></figure><ul><li>live 目录下存放的将会链接到最新的证书和私钥</li><li>csr keys 用来存放当前代理的授权密钥对</li><li>account 用来存放证书的管理信息, 这里涉及 ACME</li><li>renewal 存放当前代理所管理的域的信息</li></ul><p>如果是配置 Nginx SSL 证书，通常只需要按照下面这样修改即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssl_certificate /etc/letsencrypt/live/xxx/fullchain.pem;</span><br><span class="line">ssl_certificate_key /etc/letsencrypt/live/xxx/privkey.pem;</span><br></pre></td></tr></table></figure><p><a href="https://certbot.eff.org/docs/using.html#certbot-command-line-options" target="_blank" rel="noopener">Certbot command-line options</a></p><p>Certbot supports a lot of command line options. Here’s the full list, from <code>certbot --help all</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">(certbot) [root@xxx ~]<span class="comment"># certbot -h</span></span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line"></span><br><span class="line">  certbot [SUBCOMMAND] [options] [-d DOMAIN] [-d DOMAIN] ...</span><br><span class="line"></span><br><span class="line">Certbot can obtain and install HTTPS/TLS/SSL certificates.  By default,</span><br><span class="line">it will attempt to use a webserver both <span class="keyword">for</span> obtaining and installing the</span><br><span class="line">certificate. The most common SUBCOMMANDS and flags are:</span><br><span class="line"></span><br><span class="line">obtain, install, and renew certificates:</span><br><span class="line">    (default) run   Obtain &amp; install a certificate <span class="keyword">in</span> your current webserver</span><br><span class="line">    certonly        Obtain or renew a certificate, but <span class="keyword">do</span> not install it</span><br><span class="line">    renew           Renew all previously obtained certificates that are near</span><br><span class="line">expiry</span><br><span class="line">    enhance         Add security enhancements to your existing configuration</span><br><span class="line">   -d DOMAINS       Comma-separated list of domains to obtain a certificate <span class="keyword">for</span></span><br><span class="line"></span><br><span class="line">  (the certbot apache plugin is not installed)</span><br><span class="line">  --standalone      Run a standalone webserver <span class="keyword">for</span> authentication</span><br><span class="line">  (the certbot nginx plugin is not installed)</span><br><span class="line">  --webroot         Place files <span class="keyword">in</span> a server<span class="string">'s webroot folder for authentication</span></span><br><span class="line"><span class="string">  --manual          Obtain certificates interactively, or using shell script</span></span><br><span class="line"><span class="string">hooks</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   -n               Run non-interactively</span></span><br><span class="line"><span class="string">  --test-cert       Obtain a test certificate from a staging server</span></span><br><span class="line"><span class="string">  --dry-run         Test"renew"or"certonly"without saving any certificates</span></span><br><span class="line"><span class="string">to disk</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">manage certificates:</span></span><br><span class="line"><span class="string">    certificates    Display information about certificates you have from Certbot</span></span><br><span class="line"><span class="string">    revoke          Revoke a certificate (supply --cert-name or --cert-path)</span></span><br><span class="line"><span class="string">    delete          Delete a certificate (supply --cert-name)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">manage your account:</span></span><br><span class="line"><span class="string">    register        Create an ACME account</span></span><br><span class="line"><span class="string">    unregister      Deactivate an ACME account</span></span><br><span class="line"><span class="string">    update_account  Update an ACME account</span></span><br><span class="line"><span class="string">  --agree-tos       Agree to the ACME server'</span>s Subscriber Agreement</span><br><span class="line">   -m EMAIL         Email address <span class="keyword">for</span> important account notifications</span><br><span class="line"></span><br><span class="line">More detailed <span class="built_in">help</span>:</span><br><span class="line"></span><br><span class="line">  -h, --<span class="built_in">help</span> [TOPIC]    <span class="built_in">print</span> this message, or detailed <span class="built_in">help</span> on a topic;</span><br><span class="line">                        the available TOPICS are:</span><br><span class="line"></span><br><span class="line">   all, automation, commands, paths, security, testing, or any of the</span><br><span class="line">   subcommands or plugins (certonly, renew, install, register, nginx,</span><br><span class="line">   apache, standalone, webroot, etc.)</span><br><span class="line">  -h all                <span class="built_in">print</span> a detailed <span class="built_in">help</span> page including all topics</span><br><span class="line">  --version             <span class="built_in">print</span> the version number</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br></pre></td></tr></table></figure><h2 id="certbot-自动更新证书"><a href="#certbot-自动更新证书" class="headerlink" title="certbot 自动更新证书"></a>certbot 自动更新证书</h2><blockquote><p>简单介绍 2 种常见的需求，其他情况如使用容器 renew 的朋友相信应该都不用参考本文了</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最简单的手动 renew 命令，看到 success 表示成功</span></span><br><span class="line">certbot renew --force-renewal</span><br><span class="line"></span><br><span class="line">(certbot) [root@xxx ~]<span class="comment"># certbot renew --force-renewal</span></span><br><span class="line">Saving debug <span class="built_in">log</span> to /var/<span class="built_in">log</span>/letsencrypt/letsencrypt.log</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Processing /etc/letsencrypt/renewal/xxx.conf</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Found credentials <span class="keyword">in</span> shared credentials file: ~/.aws/credentials</span><br><span class="line">Plugins selected: Authenticator dns-route53, Installer None</span><br><span class="line">Renewing an existing certificate</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">new certificate deployed without reload, fullchain is</span><br><span class="line">/etc/letsencrypt/live/xxx/fullchain.pem</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line"></span><br><span class="line">Congratulations, all renewals succeeded. The following certs have been renewed:</span><br><span class="line">  /etc/letsencrypt/live/xxx/fullchain.pem (success)</span><br></pre></td></tr></table></figure><blockquote><p>使用 crontab 定期执行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑 certbot_renew.sh，强制更新并重新 reload nginx 加载新证书</span></span><br><span class="line">vim /root/certbot_renew.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">certbot renew --force-renew</span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果是 virtualenv 虚拟环境可以这样写</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/bin</span><br><span class="line"><span class="built_in">source</span> certbot/bin/activate</span><br><span class="line">certbot renew --force-renew</span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加执行权限</span></span><br><span class="line">chmod a+x /root/certbot_renew.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置定时任务自动更新证书，“At 01:01 on day-of-month 1.”</span></span><br><span class="line">vim /etc/crontab</span><br><span class="line">1 1 1 * * /root/certbot_renew.sh &gt;/root/crontab.log 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要记录日志可以这样写</span></span><br><span class="line">1 1 1 * * <span class="built_in">echo</span> `date -R` &gt;&gt; /var/<span class="built_in">log</span>/certbot.crontab.log; certbot renew --force-renewal &gt;&gt; /var/<span class="built_in">log</span>/certbot.crontab.log 2&gt;&amp;1; nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># certbot 官方使用 python 产生了一个分钟的随机数，让更新时间随机一些</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"0 0,12 * * * root python -c'import random; import time; time.sleep(random.random() * 3600)'&amp;&amp; certbot renew"</span> | sudo tee -a /etc/crontab &gt; /dev/null</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://letsencrypt.org/docs/" target="_blank" rel="noopener">Let’s Encrypt Documentation</a></p><p><a href="https://github.com/Neilpang/acme.sh" target="_blank" rel="noopener">acme.sh</a></p><p><a href="https://certbot.eff.org/" target="_blank" rel="noopener">Certbot</a></p><p><a href="https://certbot.eff.org/docs/" target="_blank" rel="noopener">certbot docs</a></p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-centos-7" target="_blank" rel="noopener">How To Secure Apache with Let’s Encrypt on CentOS 7</a></p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04" target="_blank" rel="noopener">How To Secure Nginx with Let’s Encrypt on Ubuntu 18.04</a></p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-18-04" target="_blank" rel="noopener">How To Secure Apache with Let’s Encrypt on Ubuntu 18.04</a></p><p><a href="https://ksmx.me/letsencrypt-ssl-https/" target="_blank" rel="noopener">LET’S ENCRYPT 给网站加 HTTPS 完全指南</a></p><p><a href="https://my.oschina.net/kimver/blog/1634575" target="_blank" rel="noopener">申请 Let’s Encrypt 通配符 HTTPS 证书</a></p><p><a href="https://www.jianshu.com/p/c5c9d071e395" target="_blank" rel="noopener">Let’s Encrypt 终于支持通配符证书了</a></p><p><a href="https://mp.weixin.qq.com/s/hKvtDDQw7EHSGFRGT4QVbw" target="_blank" rel="noopener">Certobot 管理 Let’s Encrypt 证书的几个经验</a></p><p><a href="https://www.cnblogs.com/redirect/p/10140248.html" target="_blank" rel="noopener">letsencrypt 证书 - 管理工具 certbot</a></p>]]></content>
    
    <summary type="html">
    
      使用certbot代替acme.sh免费申请wildcard通配符证书和自动更新实践小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Git 常用命令和 Git 团队使用规范指南</title>
    <link href="https://wsgzao.github.io/post/git/"/>
    <id>https://wsgzao.github.io/post/git/</id>
    <published>2020-02-06T08:22:32.000Z</published>
    <updated>2020-02-07T03:10:48.137Z</updated>
    
    <content type="html"><![CDATA[<p><img src="//i.v2ex.co/fAhm82RJ.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在 2005 年的某一天，Linux 之父 Linus Torvalds 发布了他的又一个里程碑作品——Git。它的出现改变了软件开发流程，大大地提高了开发流畅度，直到现在仍十分流行，完全没有衰退的迹象。其实一般情况下，只需要掌握 git 的几个常用命令即可，但是在使用的过程中难免会遇到各种复杂的需求，这时候经常需要搜索，非常麻烦，故总结了一下自己平常会用到的 git 操作。本文根据团队实践记录 Git 入门指南和 Git 常用命令，文章中不仅记录了 Git 的搭建和使用教程，还参考了大量 Git 团队使用规范上的经验，希望大家可以结合自己团队的实际应用场景让 Git 协作优雅的落地。</p><blockquote><p>Git 是目前世界上最先进的分布式版本控制系统</p></blockquote><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2020 年 02 月 06 日 - 更新 Git 命令学习<br>2016 年 04 月 22 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/git/">https://wsgzao.github.io/post/git/</a></p><p><strong> 扩展阅读 </strong></p><p>Git Book - <a href="https://git-scm.com/book/zh/" target="_blank" rel="noopener">https://git-scm.com/book/zh/</a><br>git 简明指南 - <a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="noopener">http://rogerdudler.github.io/git-guide/index.zh.html</a><br>常用 Git 命令清单 - <a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html</a><br>猴子都能懂的 GIT 入门 - <a href="http://backlogtool.com/git-guide/cn/" target="_blank" rel="noopener">http://backlogtool.com/git-guide/cn/</a><br>Git 教程 - <a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></p><h2 id="SVN-与-Git-的最主要的区别"><a href="#SVN-与-Git-的最主要的区别" class="headerlink" title="SVN 与 Git 的最主要的区别"></a>SVN 与 Git 的最主要的区别</h2><p>SVN 是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，所以首先要从中央服务器哪里得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就纳闷了。</p><p>Git 是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件 A，其他人也在电脑上改了文件 A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。</p><h2 id="Git-搭建和使用"><a href="#Git-搭建和使用" class="headerlink" title="Git 搭建和使用"></a>Git 搭建和使用</h2><blockquote><p>Git 上手并不难，深入学习还是建议多实践，可以参考扩展阅读中廖雪峰的 Git 教程</p></blockquote><h3 id="Git-服务端"><a href="#Git-服务端" class="headerlink" title="Git 服务端"></a>Git 服务端</h3><blockquote><p>服务端搭建 Git 很简单，有更多需求不妨试试 Gogs 和 Gitlab</p></blockquote><p>使用 Gogs 轻松搭建可能比 GitLab 更好用的 Git 服务平台 - <a href="https://wsgzao.github.io/post/gogs/">https://wsgzao.github.io/post/gogs/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 git</span></span><br><span class="line">sudo apt-get install git</span><br><span class="line">yum install git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个 git 用户，用来运行 git 服务</span></span><br><span class="line">sudo adduser git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建证书使用公钥免密码登录(可选)</span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line">vi ~/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化 Git 仓库</span></span><br><span class="line">sudo git init --bare sample.git</span><br><span class="line">sudo chown -R git:git sample.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁用 shell 登录</span></span><br><span class="line">vi /etc/passwd</span><br><span class="line">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在客户端上克隆远程仓库</span></span><br><span class="line">git <span class="built_in">clone</span> git@server:/srv/sample.git</span><br></pre></td></tr></table></figure><p>管理公钥推荐使用 Gitosis<br>Gitosis - <a href="https://github.com/res0nat0r/gitosis" target="_blank" rel="noopener">https://github.com/res0nat0r/gitosis</a><br>Gitosis 配置手记 - <a href="http://debugo.com/gitosis/" target="_blank" rel="noopener">http://debugo.com/gitosis/</a></p><p>管理权限推荐使用 Gitolite<br>Gitolite - <a href="https://github.com/sitaramc/gitolite" target="_blank" rel="noopener">https://github.com/sitaramc/gitolite</a></p><h3 id="Git-客户端"><a href="#Git-客户端" class="headerlink" title="Git 客户端"></a>Git 客户端</h3><blockquote><p>Git 客户端可以按个人习惯来选择，遵守团队协作中的 Git 规范标准才是更重要的</p></blockquote><p>Git - <a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a><br>TortoiseGit - <a href="https://tortoisegit.org/" target="_blank" rel="noopener">https://tortoisegit.org/</a><br>SourceTree - <a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener">https://www.sourcetreeapp.com/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以最基本的 Git 命令行为例，先下载 Git</span></span><br><span class="line">https://git-scm.com/download/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 git 提交用户名和邮箱，定义别名方便区分</span></span><br><span class="line">git config --global user.name <span class="string">"你的姓名"</span></span><br><span class="line">git config --global user.email <span class="string">"you@example.com"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆仓库</span></span><br><span class="line">git <span class="built_in">clone</span> <span class="built_in">cap</span>@172.28.70.243:/<span class="built_in">cap</span>/cap.git</span><br><span class="line"></span><br><span class="line">$ git <span class="built_in">clone</span> <span class="built_in">cap</span>@172.28.70.243:/<span class="built_in">cap</span>/cap.git</span><br><span class="line">Cloning into <span class="string">'cap'</span>...</span><br><span class="line">warning: You appear to have cloned an empty repository.</span><br><span class="line">Checking connectivity... <span class="keyword">done</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试推送</span></span><br><span class="line">touch README</span><br><span class="line">git add README</span><br><span class="line">git commit -m <span class="string">"add readme"</span></span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line">Counting objects: 3, <span class="keyword">done</span>.</span><br><span class="line">Writing objects: 100% (3/3), 199 bytes | 0 bytes/s, <span class="keyword">done</span>.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0)</span><br><span class="line">To <span class="built_in">cap</span>@172.28.70.243:/<span class="built_in">cap</span>/cap.git</span><br><span class="line"> * [new branch]      master -&gt; master</span><br></pre></td></tr></table></figure><h2 id="Git-常用命令"><a href="#Git-常用命令" class="headerlink" title="Git 常用命令"></a>Git 常用命令</h2><p><strong> 符号约定 </strong></p><ul><li><code>&lt;xxx&gt;</code> 自定义内容</li><li><code>[xxx]</code> 可选内容</li><li><code>[&lt;xxx&gt;]</code> 自定义可选内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始设置</span></span><br><span class="line">git config --global user.name <span class="string">"&lt; 用户名 & gt;"</span> <span class="comment"># 设置用户名</span></span><br><span class="line">git config --global user.email <span class="string">"&lt; 电子邮件 & gt;"</span> <span class="comment"># 设置电子邮件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地操作</span></span><br><span class="line">git add [-i] <span class="comment"># 保存更新，-i 为逐个确认。</span></span><br><span class="line">git status <span class="comment"># 检查更新。</span></span><br><span class="line">git commit [-a] -m <span class="string">"&lt; 更新说明 & gt;"</span> <span class="comment"># 提交更新，-a 为包含内容修改和增删，-m 为说明信息，也可以使用 -am。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 远端操作</span></span><br><span class="line">git <span class="built_in">clone</span> &lt;git 地址 & gt; <span class="comment"># 克隆到本地。</span></span><br><span class="line">git fetch <span class="comment"># 远端抓取。</span></span><br><span class="line">git merge <span class="comment"># 与本地当前分支合并。</span></span><br><span class="line">git pull [&lt; 远端别名 & gt;] [&lt; 远端 branch&gt;] <span class="comment"># 抓取并合并, 相当于第 2、3 步</span></span><br><span class="line">git push [-f] [&lt; 远端别名 & gt;] [&lt; 远端 branch&gt;] <span class="comment"># 推送到远端，-f 为强制覆盖</span></span><br><span class="line">git remote add &lt; 别名 & gt; &lt;git 地址 & gt; <span class="comment"># 设置远端别名</span></span><br><span class="line">git remote [-v] <span class="comment"># 列出远端，-v 为详细信息</span></span><br><span class="line">git remote show &lt; 远端别名 & gt; <span class="comment"># 查看远端信息</span></span><br><span class="line">git remote rename &lt; 远端别名 & gt; &lt; 新远端别名 & gt; <span class="comment"># 重命名远端</span></span><br><span class="line">git remote rm &lt; 远端别名 & gt; <span class="comment"># 删除远端</span></span><br><span class="line">git remote update [&lt; 远端别名 & gt;] <span class="comment"># 更新分支列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分支相关</span></span><br><span class="line">git branch [-r] [-a] <span class="comment"># 列出分支，-r 远端 ,-a 全部</span></span><br><span class="line">git branch &lt; 分支名 & gt; <span class="comment"># 新建分支</span></span><br><span class="line">git branch -b &lt; 分支名 & gt; <span class="comment"># 新建并切换分支</span></span><br><span class="line">git branch -d &lt; 分支名 & gt; <span class="comment"># 删除分支</span></span><br><span class="line">git checkout &lt; 分支名 & gt; <span class="comment"># 切换到分支</span></span><br><span class="line">git checkout -b &lt; 本地 branch&gt; [-t &lt; 远端别名 & gt;/&lt; 远端分支 & gt;] <span class="comment">#-b 新建本地分支并切换到分支, -t 绑定远端分支</span></span><br><span class="line">git merge &lt; 分支名 & gt; <span class="comment"># 合并某分支到当前分支</span></span><br></pre></td></tr></table></figure><p><a href="http://gityuan.com/2015/06/27/git-notes/" target="_blank" rel="noopener">Git 常用命令</a></p><p><img src="http://gityuan.com/images/git/1.png" alt=""></p><ul><li>workspace: 本地的工作目录。（记作 A）</li><li>index：缓存区域，临时保存本地改动。（记作 B）</li><li>local repository: 本地仓库，只想最后一次提交 HEAD。（记作 C）</li><li>remote repository：远程仓库。（记作 D）</li></ul><blockquote><p>以下所有的命令的功能说明，都采用上述的标记的 A、B、C、D 的方式来阐述。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化 </span></span><br><span class="line">git init // 创建</span><br><span class="line">git <span class="built_in">clone</span> /path/to/repository // 检出</span><br><span class="line">git config --global user.email <span class="string">"you@example.com"</span> // 配置 email</span><br><span class="line">git config --global user.name <span class="string">"Name"</span> // 配置用户名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 操作</span></span><br><span class="line">git add &lt;file&gt; // 文件添加，A → B</span><br><span class="line">git add . // 所有文件添加，A → B</span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">"代码提交信息"</span> // 文件提交，B → C</span><br><span class="line">git commit --amend // 与上次 commit 合并, *B → C</span><br><span class="line"></span><br><span class="line">git push origin master // 推送至 master 分支, C → D</span><br><span class="line">git pull // 更新本地仓库至最新改动， D → A</span><br><span class="line">git fetch // 抓取远程仓库更新， D → C</span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> // 查看提交记录</span><br><span class="line">git status // 查看修改状态</span><br><span class="line">git diff// 查看详细修改内容</span><br><span class="line">git show// 显示某次提交的内容</span><br><span class="line"></span><br><span class="line"><span class="comment"># 撤销操作</span></span><br><span class="line">git reset &lt;file&gt;// 某个文件索引会回滚到最后一次提交， C → B</span><br><span class="line">git reset// 索引会回滚到最后一次提交， C → B</span><br><span class="line">git reset --hard // 索引会回滚到最后一次提交， C → B → A</span><br><span class="line"></span><br><span class="line">git checkout // 从 index 复制到 workspace， B → A</span><br><span class="line">git checkout -- files // 文件从 index 复制到 workspace， B → A</span><br><span class="line">git checkout HEAD -- files // 文件从 < span class="built_in">local</span> repository 复制到 workspace， C → A<br><span class="line"></span><br><span class="line"><span class="comment"># 分支相关</span></span><br><span class="line">git checkout -b branch_name // 创建名叫“branch_name” 的分支，并切换过去 </span><br><span class="line">git checkout master // 切换回主分支</span><br><span class="line">git branch -d branch_name // 删除名叫“branch_name” 的分支</span><br><span class="line">git push origin branch_name // 推送分支到远端仓库</span><br><span class="line">git merge branch_name // 合并分支 branch_name 到当前分支(如 master)</span><br><span class="line">git rebase // 衍合，线性化的自动， D → A</span><br><span class="line"></span><br><span class="line"><span class="comment"># 冲突处理</span></span><br><span class="line">git diff // 对比 workspace 与 index</span><br><span class="line">git diff HEAD // 对于 workspace 与最后一次 commit</span><br><span class="line">git diff &lt;source_branch&gt; &lt;target_branch&gt; // 对比差异</span><br><span class="line">git add &lt;filename&gt; // 修改完冲突，需要 add 以标记合并成功</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他</span></span><br><span class="line">gitk // 开灯图形化 git</span><br><span class="line">git config color.ui <span class="literal">true</span> // 彩色的 git 输出</span><br><span class="line">git config format.pretty oneline // 显示历史记录时，每个提交的信息只显示一行</span><br><span class="line">git add -i // 交互式添加文件到暂存区</span><br></pre></td></tr></table></figure><h2 id="git-命令一览"><a href="#git-命令一览" class="headerlink" title="git 命令一览"></a>git 命令一览</h2><p><a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="noopener">Git 简明指南</a></p><table><thead><tr><th>命令</th><th>解析</th></tr></thead><tbody><tr><td>git init</td><td>初始化本地 git 仓库（创建新仓库）</td></tr><tr><td>git config –global user.name “xxx”</td><td>配置用户名</td></tr><tr><td>git config –global user.email “<a href="mailto:xxx@xxx.com" target="_blank" rel="noopener">xxx@xxx.com</a>“</td><td>配置邮件</td></tr><tr><td>git config –global color.ui true</td><td>git status 等命令自动着色</td></tr><tr><td>git config –global –unset http.proxy</td><td>remove proxy configuration on git</td></tr><tr><td>git clone git+ssh:<a href="mailto://git@192.168.53.168" target="_blank" rel="noopener">//git@192.168.53.168</a>/VT.git</td><td>clone 远程仓库</td></tr><tr><td>git status</td><td>查看当前版本状态（是否修改）</td></tr><tr><td>git add xyz</td><td>添加 xyz 文件至 index</td></tr><tr><td>git add .</td><td>增加当前子目录下所有更改过的文件至 index</td></tr><tr><td>git commit -m ‘xxx’</td><td>提交</td></tr><tr><td>git commit –amend -m ‘xxx’</td><td>合并上一次提交（用于反复修改）</td></tr><tr><td>git commit -am ‘xxx’</td><td>将 add 和 commit 合为一步</td></tr><tr><td>git rm xxx</td><td>删除 index 中的文件</td></tr><tr><td>git rm -r *</td><td>递归删除</td></tr><tr><td>git log</td><td>显示提交日志</td></tr><tr><td>git log -1</td><td>显示 1 行日志 -n 为 n 行</td></tr><tr><td>git log –stat</td><td>显示提交日志及相关变动文件</td></tr><tr><td>git show dfb02e6xxxx</td><td>显示某个提交的详细内容</td></tr><tr><td>git show dfb02</td><td>可只用 commitid 的前几位</td></tr><tr><td>git show HEAD</td><td>显示 HEAD 提交日志</td></tr><tr><td>git show HEAD^</td><td>显示 HEAD 的父（上一个版本）的提交日志 为上两个版本 5 为上 5 个版本</td></tr><tr><td>git tag</td><td>显示已存在的 tag</td></tr><tr><td>git tag -a v2.0 -m ‘xxx’</td><td>增加 v2.0 的 tag</td></tr><tr><td>git show v2.0</td><td>显示 v2.0 的日志及详细内容</td></tr><tr><td>git log v2.0</td><td>显示 v2.0 的日志</td></tr><tr><td>git diff</td><td>显示所有未添加至 index 的变更</td></tr><tr><td>git diff –cached</td><td>显示所有已添加 index 但还未 commit 的变更</td></tr><tr><td>git diff HEAD^</td><td>比较与上一个版本的差异</td></tr><tr><td>git diff HEAD — ./lib</td><td>比较与 HEAD 版本 lib 目录的差异</td></tr><tr><td>git diff origin/master..master</td><td>比较远程分支 master 上有本地分支 master 上没有的</td></tr><tr><td>git diff origin/master..master –stat</td><td>只显示差异的文件，不显示具体内容</td></tr><tr><td>git remote add origin git+ssh:<a href="mailto://git@192.168.53.168" target="_blank" rel="noopener">//git@192.168.53.168</a>/VT.git</td><td>增加远程定义（用于 push/pull/fetch）</td></tr><tr><td>git branch</td><td>显示本地分支</td></tr><tr><td>git branch –contains 50089</td><td>显示包含提交 50089 的分支</td></tr><tr><td>git branch -a</td><td>显示所有分支</td></tr><tr><td>git branch -r</td><td>显示所有原创分支</td></tr><tr><td>git branch –merged</td><td>显示所有已合并到当前分支的分支</td></tr><tr><td>git branch –no-merged</td><td>显示所有未合并到当前分支的分支</td></tr><tr><td>git branch -m master master_copy</td><td>本地分支改名</td></tr><tr><td>git checkout -b master_copy</td><td>从当前分支创建新分支 master_copy 并检出</td></tr><tr><td>git checkout -b master master_copy</td><td>上面的完整版</td></tr><tr><td>git checkout features/performance</td><td>检出已存在的 features/performance 分支</td></tr><tr><td>git checkout –track hotfixes/BJVEP933</td><td>检出远程分支 hotfixes/BJVEP933 并创建本地跟踪分支</td></tr><tr><td>git checkout v2.0</td><td>检出版本 v2.0</td></tr><tr><td>git checkout -b devel origin/develop</td><td>从远程分支 develop 创建新本地分支 devel 并检出</td></tr><tr><td>git checkout — README</td><td>检出 head 版本的 README 文件（可用于修改错误回退）</td></tr><tr><td>git merge origin/master</td><td>合并远程 master 分支至当前分支</td></tr><tr><td>git cherry-pick ff44785404a8e</td><td>合并提交 ff44785404a8e 的修改</td></tr><tr><td>git push origin master</td><td>将当前分支 push 到远程 master 分支</td></tr><tr><td>git push origin :hotfixes/BJVEP933</td><td>删除远程仓库的 hotfixes/BJVEP933 分支</td></tr><tr><td>git push –tags</td><td>把所有 tag 推送到远程仓库</td></tr><tr><td>git fetch</td><td>获取所有远程分支（不更新本地分支，另需 merge）</td></tr><tr><td>git fetch –prune</td><td>获取所有原创分支并清除服务器上已删掉的分支</td></tr><tr><td>git pull origin master</td><td>获取远程分支 master 并 merge 到当前分支</td></tr><tr><td>git mv README README2</td><td>重命名文件 README 为 README2</td></tr><tr><td>git reset –hard HEAD</td><td>将当前版本重置为 HEAD（通常用于 merge 失败回退）</td></tr><tr><td>git branch -d hotfixes/BJVEP933</td><td>删除分支 hotfixes/BJVEP933（本分支修改已合并到其他分支）</td></tr><tr><td>git branch -D hotfixes/BJVEP933</td><td>强制删除分支 hotfixes/BJVEP933</td></tr><tr><td>git ls-files</td><td>列出 git index 包含的文件</td></tr><tr><td>git show-branch</td><td>图示当前分支历史</td></tr><tr><td>git show-branch –all</td><td>图示所有分支历史</td></tr><tr><td>git whatchanged</td><td>显示提交历史对应的文件修改</td></tr><tr><td>git revert dfb02e6e4f2f7b573337763e5c0013802e392818</td><td>撤销提交 dfb02e6e4f2f7b573337763e5c0013802e392818</td></tr><tr><td>git ls-tree HEAD</td><td>内部命令：显示某个 git 对象</td></tr><tr><td>git rev-parse v2.0</td><td>内部命令：显示某个 ref 对于的 SHA1 HASH</td></tr><tr><td>git reflog</td><td>显示所有提交，包括孤立节点</td></tr><tr><td>git show master@{yesterday}</td><td>显示 master 分支昨天的状态</td></tr><tr><td>git log –pretty=format:’%h %s’ –graph</td><td>图示提交日志</td></tr><tr><td>git stash</td><td>暂存当前修改，将所有至为 HEAD 状态</td></tr><tr><td>git stash list</td><td>查看所有暂存</td></tr><tr><td>git stash show -p stash@{0}</td><td>参考第一次暂存</td></tr><tr><td>git stash apply stash@{0}</td><td>应用第一次暂存</td></tr><tr><td>git grep “delete from”</td><td>文件中搜索文本 “delete from”</td></tr></tbody></table><h2 id="如何提交-PR"><a href="#如何提交-PR" class="headerlink" title="如何提交 PR"></a>如何提交 PR</h2><blockquote><p>引用 kubeasz 的帮助文件为例</p></blockquote><p><a href="https://github.com/easzlab/kubeasz/blob/master/docs/mixes/HowToContribute.md" target="_blank" rel="noopener">为项目 kubeasz 提交 pull request</a></p><p>首先请核对下本地 git config 配置的用户名和邮箱与你 github 上的注册用户和邮箱一致，否则即使 pull request 被接受，贡献者列表中也看不到自己的名字，设置命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email <span class="string">"you@example.com"</span></span><br><span class="line">$ git config --global user.name <span class="string">"Your Name"</span></span><br></pre></td></tr></table></figure><ol><li>登陆 github，在本项目页面点击 fork 到自己仓库</li><li>clone 自己的仓库到本地：git clone <a href="https://github.com/xxx/kubeasz.git" target="_blank" rel="noopener">https://github.com/xxx/kubeasz.git</a></li><li>在 master 分支添加原始仓库为上游分支：git remote add upstream <a href="https://github.com/easzlab/kubeasz.git" target="_blank" rel="noopener">https://github.com/easzlab/kubeasz.git</a></li><li>在本地新建开发分支：git checkout -b dev</li><li>在开发分支修改代码并提交：git add ., git commit -am ‘xx 变更说明’</li><li>切换至 master 分支，同步原始仓库：git checkout master， git pull upstream master</li><li>切换至 dev 分支，合并本地 master 分支（已经和原始仓库同步），可能需要解冲突：git checkout dev, git merge master</li><li>提交本地 dev 分支到自己的远程 dev 仓库：git push origin dev</li><li>在 github 自己仓库页面，点击 Compare &amp; pull request 给原始仓库发 pull request 请求<br>a. 等待原作者回复（接受 / 拒绝）</li></ol><h2 id="Git-使用规范"><a href="#Git-使用规范" class="headerlink" title="Git 使用规范"></a>Git 使用规范</h2><p>Git 使用规范流程 - <a href="http://www.ruanyifeng.com/blog/2015/08/git-use-process.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2015/08/git-use-process.html</a><br>团队中的 Git 实践 - <a href="https://ourai.ws/posts/working-with-git-in-team/" target="_blank" rel="noopener">https://ourai.ws/posts/working-with-git-in-team/</a><br>构家网 git 团队协作使用规范 v2 - <a href="http://wenku.baidu.com/view/e1430d1b7f1922791788e81e" target="_blank" rel="noopener">http://wenku.baidu.com/view/e1430d1b7f1922791788e81e</a></p><blockquote><p>Git 使用规范提醒</p></blockquote><ul><li>使用 Git 过程中，必须通过创建分支进行开发，坚决禁止在主干分支上直接开发。review 的同事有责任检查其他同事是否遵循分支规范。</li><li>在 Git 中，默认是不会提交空目录的，如果想提交某个空目录到版本库中，需要在该目录下新建一个 .gitignore 的空白文件，就可以提交了</li><li>把外部文件纳入到自己的 Git 分支来的时候一定要记得是先比对，确认所有修改都是自己修改的，然后再纳入。不然，容易出现代码回溯</li><li>多人协作时，不要各自在自己的 Git 分支开发，然后发文件合并。正确的方法应该是开一个远程分支，然后一起在远程分支里协作。不然，容易出现代码回溯（即别人的代码被覆盖的情况）</li><li>每个人提交代码是一定要 git diff 看提交的东西是不是都是自己修改的。如果有不是自己修改的内容，很可能就是代码回溯</li><li>review 代码的时候如果看到有被删除掉的代码，一定要确实是否是写代码的同事自己删除的。如果不是，很可能就是代码回溯</li></ul><h2 id="Git-练习"><a href="#Git-练习" class="headerlink" title="Git 练习"></a>Git 练习</h2><blockquote><p>如果线下环境做 git 练习不便，可以选择开源中国的在线 Git 命令学习</p></blockquote><p><a href="https://jvns.ca/blog/2019/08/30/git-exercises--navigate-a-repository/" target="_blank" rel="noopener">git exercises: navigate a repository</a></p><p><a href="http://blog.lujun9972.win/blog/2019/09/12/git%E7%BB%83%E4%B9%A0/" target="_blank" rel="noopener">git 练习答案</a></p><p><a href="https://oschina.gitee.io/learn-git-branching/" target="_blank" rel="noopener">开源中国在线 Git 命令学习</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://mp.weixin.qq.com/s/KD8UeunsBit4jOxPZ02yQQ" target="_blank" rel="noopener">珍藏多年的 Git 问题和操作清单</a></p><p><a href="https://gitee.com/all-about-git" target="_blank" rel="noopener">Git 大全</a></p>]]></content>
    
    <summary type="html">
    
      Git是目前世界上最先进的分布式版本控制系统
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>curl 命令学习使用小结</title>
    <link href="https://wsgzao.github.io/post/curl/"/>
    <id>https://wsgzao.github.io/post/curl/</id>
    <published>2020-02-05T06:59:49.000Z</published>
    <updated>2020-02-07T08:09:35.040Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>curl 是利用 URL 语法在命令行方式下工作的开源文件传输工具。它被广泛应用在 Unix、多种 Linux 发行版中，并且有 DOS 和 Win32、Win64 下的移植版本。在日常的开发和问题处理中，经常会使用 curl 命令来测试 http 接口，Windows/macOS 环境上有很多接口测试的工具比如 Postman，但这些工具在 Linux 平台上使用起来相对不那么便捷。有时候当我们要测试一些外部接口时，当本地无权调用测试路径时，需要将测试建立在 Linux 平台，除了封装简单的请求代码进行实现外，可通过 curl 工具实现。当然我们平时接触 curl 命令最多的地方还是在 Linux 环境，本来 curl 作为常用命令应该不用多介绍，但是在使用 Jenkins API 做数据迁移的过程中发现自己对 curl 相关的命令还是不熟悉，借这个机会重新梳理一些技巧。</p><blockquote><p>curl 命令学习使用小结</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 02 月 05 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/curl/">https://wsgzao.github.io/post/curl/</a></p><hr><h2 id="curl-简介"><a href="#curl-简介" class="headerlink" title="curl 简介"></a>curl 简介</h2><p>curl is a tool to transfer data from or to a server, using one of the supported protocols (DICT, FILE, FTP, FTPS, GOPHER, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET and TFTP). The command is designed to work without user interaction.</p><p>curl offers a busload of useful tricks like proxy support, user authentication, FTP upload, HTTP post, SSL connections, cookies, file transfer resume, Metalink, and more. As you will see below, the number of features will make your head spin!</p><p>curl 支持你做很多事情。你可以把 curl 想象成一个精简的命令行网页浏览器。它支持几乎你能想到的所有协议，可以交互访问几乎所有在线内容。唯一和浏览器不同的是，curl 不会渲染接收到的相应信息。</p><h2 id="curl-常用命令"><a href="#curl-常用命令" class="headerlink" title="curl 常用命令"></a>curl 常用命令</h2><p>curl 是一个利用 URL 语法在命令行下工作的文件传输工具。它支持文件上传和下载，所以是综合传输工具，但按传统，习惯称 curl 为下载工具。其语法格式及常见参数含义如下，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法 </span></span><br><span class="line">curl [option] [url]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最简单的使用，获取服务器内容，默认将输出打印到标准输出中(STDOUT) 中。</span></span><br><span class="line">curl http://www.centos.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 - v 参数可以看到详细解析过程，通常用于 debug</span></span><br><span class="line">curl -v http://www.centos.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># curl 发送 Get 请求</span></span><br><span class="line">curl URL</span><br><span class="line">curl URL -O 文件绝对路径</span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 发送 post 请求</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求主体用 json 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d @json 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d <span class="string">'json 内容'</span> URL</span><br><span class="line"><span class="comment"># 请求主体用 xml 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d @xml 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d <span class="string">'xml 内容'</span> URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置 cookies</span></span><br><span class="line">curl URL --cookie <span class="string">"cookie 内容"</span></span><br><span class="line">curl URL --cookie-jar cookie 文件绝对路径</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置代理字符串</span></span><br><span class="line">curl URL --user-agent <span class="string">"代理内容"</span></span><br><span class="line">curl URL -A <span class="string">"代理内容"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 限制带宽</span></span><br><span class="line">curl URL --<span class="built_in">limit</span>-rate 速度</span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 认证</span></span><br><span class="line">curl -u user:<span class="built_in">pwd</span> URL</span><br><span class="line">curl -u user URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 只打印 http 头部信息</span></span><br><span class="line">curl -I URL</span><br><span class="line">curl -head URL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 末尾参数</span></span><br><span class="line">--progress  显示进度条</span><br><span class="line">--silent    不现实进度条</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不需要修改 / etc/hosts，curl 直接解析 ip 请求域名</span></span><br><span class="line"><span class="comment"># 将 http://example.com 或 https://example.com 请求指定域名解析的 IP 为 127.0.0.1</span></span><br><span class="line">curl --resolve example.com:80:127.0.0.1 http://example.com/</span><br><span class="line">curl --resolve example.com:443:127.0.0.1 https://example.com/</span><br></pre></td></tr></table></figure><h2 id="curl-接口测试"><a href="#curl-接口测试" class="headerlink" title="curl 接口测试"></a>curl 接口测试</h2><p>curl 可以很方便地完成对 REST API 的调用场景，比如：设置 Header，指定 HTTP 请求方法，指定 HTTP 消息体，指定权限认证信息等。通过 -v 选项也能输出 REST 请求的所有返回信息。curl 功能很强大，有很多参数，这里列出 REST 测试常用的参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">-X/--request [GET|POST|PUT|DELETE|…]  指定请求的 HTTP 方法</span><br><span class="line">-H/--header                           指定请求的 HTTP Header</span><br><span class="line">-d/--data                             指定请求的 HTTP 消息体（Body）</span><br><span class="line">-v/--verbose                          输出详细的返回信息</span><br><span class="line">-u/--user                             指定账号、密码</span><br><span class="line">-b/--cookie                           读取 cookie  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 典型的测试命令为：</span></span><br><span class="line">curl -v -X POST -H <span class="string">"Content-Type: application/json"</span> http://127.0.0.1:8080/user -d<span class="string">'&#123;"username":"admin","password":"admin1234"&#125;'</span>...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试 get 请求</span></span><br><span class="line">curl http://www.linuxidc.com/login.cgi?user=test001&amp;password=123456</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试 post 请求</span></span><br><span class="line">curl -d <span class="string">"user=nickwolfe&amp;password=12345"</span> http://www.linuxidc.com/login.cgi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求主体用 json 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d @json 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d <span class="string">'json 内容'</span> URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 请求主体用 xml 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d @xml 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d <span class="string">'xml 内容'</span> URL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送 post 请求时需要使用 - X 选项，除了使用 POST 外，还可以使用 http 规范定义的其它请求谓词，如 PUT,DELETE 等</span></span><br><span class="line">curl -XPOST url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送 post 请求时，通常需要指定请求体数据。可以使用 - d 或 --data 来指定发送的请求体。</span></span><br><span class="line">curl -XPOST -d <span class="string">"name=leo&amp;age=12"</span> url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要对请求数据进行 urlencode, 可以使用下面的方式：</span></span><br><span class="line">curl -XPOST --data-urlencode <span class="string">"name=leo&amp;age=12"</span> url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此外发送 post 请求还可以有如下几种子选项：</span></span><br><span class="line">–data-raw</span><br><span class="line">–data-ascii</span><br><span class="line">–data-binary</span><br></pre></td></tr></table></figure><blockquote><p>使用 curl 和 Jenkins REST API</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># To retrieve the job config.xml</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/job/&lt;jobname&gt;/config.xml'</span> -u username:API_TOKEN -o &lt;jobname&gt;.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># to use this config to create a new job</span></span><br><span class="line">curl -s -XPOST <span class="string">'&lt;jenkinshost&gt;/createItem?name=&lt;jobname&gt;'</span> -u username:API_TOKEN --data-binary @&lt;jobname&gt;.xml -H <span class="string">"Content-Type:text/xml"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get all jenkins jobs</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/api/json?pretty=true'</span> -u username:API_TOKEN -o jobs.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># get jenkins view</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/view/&lt;viewname&gt;/api/json'</span> -u username:API_TOKEN -o view.json</span><br></pre></td></tr></table></figure><h2 id="curl-help"><a href="#curl-help" class="headerlink" title="curl help"></a>curl help</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line">curl --<span class="built_in">help</span></span><br><span class="line">Usage: curl [options...] &lt;url&gt;</span><br><span class="line">Options: (H) means HTTP/HTTPS only, (F) means FTP only</span><br><span class="line">     --anyauth       Pick <span class="string">"any"</span> authentication method (H)</span><br><span class="line"> -a, --append        Append to target file when uploading (F/SFTP)</span><br><span class="line">     --basic         Use HTTP Basic Authentication (H)</span><br><span class="line">     --cacert FILE   CA certificate to verify peer against (SSL)</span><br><span class="line">     --capath DIR    CA directory to verify peer against (SSL)</span><br><span class="line"> -E, --cert CERT[:PASSWD]  Client certificate file and password (SSL)</span><br><span class="line">     --cert-status   Verify the status of the server certificate (SSL)</span><br><span class="line">     --cert-type TYPE  Certificate file <span class="built_in">type</span> (DER/PEM/ENG) (SSL)</span><br><span class="line">     --ciphers LIST  SSL ciphers to use (SSL)</span><br><span class="line">     --compressed    Request compressed response (using deflate or gzip)</span><br><span class="line"> -K, --config FILE   Read config from FILE</span><br><span class="line">     --connect-timeout SECONDS  Maximum time allowed <span class="keyword">for</span> connection</span><br><span class="line">     --connect-to HOST1:PORT1:HOST2:PORT2 Connect to host (network level)</span><br><span class="line"> -C, --<span class="built_in">continue</span>-at OFFSET  Resumed transfer OFFSET</span><br><span class="line"> -b, --cookie STRING/FILE  Read cookies from STRING/FILE (H)</span><br><span class="line"> -c, --cookie-jar FILE  Write cookies to FILE after operation (H)</span><br><span class="line">     --create-dirs   Create necessary <span class="built_in">local</span> directory hierarchy</span><br><span class="line">     --crlf          Convert LF to CRLF <span class="keyword">in</span> upload</span><br><span class="line">     --crlfile FILE  Get a CRL list <span class="keyword">in</span> PEM format from the given file</span><br><span class="line"> -d, --data DATA     HTTP POST data (H)</span><br><span class="line">     --data-raw DATA  HTTP POST data, <span class="string">'@'</span> allowed (H)</span><br><span class="line">     --data-ascii DATA  HTTP POST ASCII data (H)</span><br><span class="line">     --data-binary DATA  HTTP POST binary data (H)</span><br><span class="line">     --data-urlencode DATA  HTTP POST data url encoded (H)</span><br><span class="line">     --delegation STRING  GSS-API delegation permission</span><br><span class="line">     --digest        Use HTTP Digest Authentication (H)</span><br><span class="line">     --<span class="built_in">disable</span>-eprt  Inhibit using EPRT or LPRT (F)</span><br><span class="line">     --<span class="built_in">disable</span>-epsv  Inhibit using EPSV (F)</span><br><span class="line">     --dns-servers   DNS server addrs to use: 1.1.1.1;2.2.2.2</span><br><span class="line">     --dns-interface  Interface to use <span class="keyword">for</span> DNS requests</span><br><span class="line">     --dns-ipv4-addr  IPv4 address to use <span class="keyword">for</span> DNS requests, dot notation</span><br><span class="line">     --dns-ipv6-addr  IPv6 address to use <span class="keyword">for</span> DNS requests, dot notation</span><br><span class="line"> -D, --dump-header FILE  Write the received headers to FILE</span><br><span class="line">     --egd-file FILE  EGD socket path <span class="keyword">for</span> random data (SSL)</span><br><span class="line">     --engine ENGINE  Crypto engine (use <span class="string">"--engine list"</span> <span class="keyword">for</span> list) (SSL)</span><br><span class="line">     --expect100-timeout SECONDS How long to <span class="built_in">wait</span> <span class="keyword">for</span> 100-continue (H)</span><br><span class="line"> -f, --fail          Fail silently (no output at all) on HTTP errors (H)</span><br><span class="line">     --fail-early    Fail on first transfer error, <span class="keyword">do</span> not <span class="built_in">continue</span></span><br><span class="line">     --<span class="literal">false</span>-start   Enable TLS False Start.</span><br><span class="line"> -F, --form CONTENT  Specify HTTP multipart POST data (H)</span><br><span class="line">     --form-string STRING  Specify HTTP multipart POST data (H)</span><br><span class="line">     --ftp-account DATA  Account data string (F)</span><br><span class="line">     --ftp-alternative-to-user COMMAND  String to replace <span class="string">"USER [name]"</span> (F)</span><br><span class="line">     --ftp-create-dirs  Create the remote <span class="built_in">dirs</span> <span class="keyword">if</span> not present (F)</span><br><span class="line">     --ftp-method [MULTICWD/NOCWD/SINGLECWD]  Control CWD usage (F)</span><br><span class="line">     --ftp-pasv      Use PASV/EPSV instead of PORT (F)</span><br><span class="line"> -P, --ftp-port ADR  Use PORT with given address instead of PASV (F)</span><br><span class="line">     --ftp-skip-pasv-ip  Skip the IP address <span class="keyword">for</span> PASV (F)</span><br><span class="line">     --ftp-pret      Send PRET before PASV (<span class="keyword">for</span> drftpd) (F)</span><br><span class="line">     --ftp-ssl-ccc   Send CCC after authenticating (F)</span><br><span class="line">     --ftp-ssl-ccc-mode ACTIVE/PASSIVE  Set CCC mode (F)</span><br><span class="line">     --ftp-ssl-control  Require SSL/TLS <span class="keyword">for</span> FTP login, clear <span class="keyword">for</span> transfer (F)</span><br><span class="line"> -G, --get           Send the -d data with a HTTP GET (H)</span><br><span class="line"> -g, --globoff       Disable URL sequences and ranges using &#123;&#125; and []</span><br><span class="line"> -H, --header LINE   Pass custom header LINE to server (H)</span><br><span class="line"> -I, --head          Show document info only</span><br><span class="line"> -h, --<span class="built_in">help</span>          This <span class="built_in">help</span> text</span><br><span class="line">     --hostpubmd5 MD5  Hex-encoded MD5 string of the host public key. (SSH)</span><br><span class="line"> -0, --http1.0       Use HTTP 1.0 (H)</span><br><span class="line">     --http1.1       Use HTTP 1.1 (H)</span><br><span class="line">     --http2         Use HTTP 2 (H)</span><br><span class="line">     --http2-prior-knowledge  Use HTTP 2 without HTTP/1.1 Upgrade (H)</span><br><span class="line">     --ignore-content-length  Ignore the HTTP Content-Length header</span><br><span class="line"> -i, --include       Include protocol headers <span class="keyword">in</span> the output (H/F)</span><br><span class="line"> -k, --insecure      Allow connections to SSL sites without certs (H)</span><br><span class="line">     --interface INTERFACE  Use network INTERFACE (or address)</span><br><span class="line"> -4, --ipv4          Resolve name to IPv4 address</span><br><span class="line"> -6, --ipv6          Resolve name to IPv6 address</span><br><span class="line"> -j, --junk-session-cookies  Ignore session cookies <span class="built_in">read</span> from file (H)</span><br><span class="line">     --keepalive-time SECONDS  Wait SECONDS between keepalive probes</span><br><span class="line">     --key KEY       Private key file name (SSL/SSH)</span><br><span class="line">     --key-type TYPE  Private key file <span class="built_in">type</span> (DER/PEM/ENG) (SSL)</span><br><span class="line">     --krb LEVEL     Enable Kerberos with security LEVEL (F)</span><br><span class="line">     --libcurl FILE  Dump libcurl equivalent code of this <span class="built_in">command</span> line</span><br><span class="line">     --<span class="built_in">limit</span>-rate RATE  Limit transfer speed to RATE</span><br><span class="line"> -l, --list-only     List only mode (F/POP3)</span><br><span class="line">     --<span class="built_in">local</span>-port RANGE  Force use of RANGE <span class="keyword">for</span> <span class="built_in">local</span> port numbers</span><br><span class="line"> -L, --location      Follow redirects (H)</span><br><span class="line">     --location-trusted  Like <span class="string">'--location'</span>, and send auth to other hosts (H)</span><br><span class="line">     --login-options OPTIONS  Server login options (IMAP, POP3, SMTP)</span><br><span class="line"> -M, --manual        Display the full manual</span><br><span class="line">     --mail-from FROM  Mail from this address (SMTP)</span><br><span class="line">     --mail-rcpt TO  Mail to this/these addresses (SMTP)</span><br><span class="line">     --mail-auth AUTH  Originator address of the original email (SMTP)</span><br><span class="line">     --max-filesize BYTES  Maximum file size to download (H/F)</span><br><span class="line">     --max-redirs NUM  Maximum number of redirects allowed (H)</span><br><span class="line"> -m, --max-time SECONDS  Maximum time allowed <span class="keyword">for</span> the transfer</span><br><span class="line">     --metalink      Process given URLs as metalink XML file</span><br><span class="line">     --negotiate     Use HTTP Negotiate (SPNEGO) authentication (H)</span><br><span class="line"> -n, --netrc         Must <span class="built_in">read</span> .netrc <span class="keyword">for</span> user name and password</span><br><span class="line">     --netrc-optional  Use either .netrc or URL; overrides -n</span><br><span class="line">     --netrc-file FILE  Specify FILE <span class="keyword">for</span> netrc</span><br><span class="line"> -:, --next          Allows the following URL to use a separate <span class="built_in">set</span> of options</span><br><span class="line">     --no-alpn       Disable the ALPN TLS extension (H)</span><br><span class="line"> -N, --no-buffer     Disable buffering of the output stream</span><br><span class="line">     --no-keepalive  Disable keepalive use on the connection</span><br><span class="line">     --no-npn        Disable the NPN TLS extension (H)</span><br><span class="line">     --no-sessionid  Disable SSL session-ID reusing (SSL)</span><br><span class="line">     --noproxy       List of hosts <span class="built_in">which</span> <span class="keyword">do</span> not use proxy</span><br><span class="line">     --ntlm          Use HTTP NTLM authentication (H)</span><br><span class="line">     --ntlm-wb       Use HTTP NTLM authentication with winbind (H)</span><br><span class="line">     --oauth2-bearer TOKEN  OAuth 2 Bearer Token (IMAP, POP3, SMTP)</span><br><span class="line"> -o, --output FILE   Write to FILE instead of stdout</span><br><span class="line">     --pass PASS     Pass phrase <span class="keyword">for</span> the private key (SSL/SSH)</span><br><span class="line">     --path-as-is    Do not squash .. sequences <span class="keyword">in</span> URL path</span><br><span class="line">     --pinnedpubkey FILE/HASHES Public key to verify peer against (SSL)</span><br><span class="line">     --post301       Do not switch to GET after following a 301 redirect (H)</span><br><span class="line">     --post302       Do not switch to GET after following a 302 redirect (H)</span><br><span class="line">     --post303       Do not switch to GET after following a 303 redirect (H)</span><br><span class="line">     --preproxy [PROTOCOL://]HOST[:PORT] Proxy before HTTP(S) proxy</span><br><span class="line"> -<span class="comment">#, --progress-bar  Display transfer progress as a progress bar</span></span><br><span class="line">     --proto PROTOCOLS  Enable/<span class="built_in">disable</span> PROTOCOLS</span><br><span class="line">     --proto-default PROTOCOL  Use PROTOCOL <span class="keyword">for</span> any URL missing a scheme</span><br><span class="line">     --proto-redir PROTOCOLS   Enable/<span class="built_in">disable</span> PROTOCOLS on redirect</span><br><span class="line"> -x, --proxy [PROTOCOL://]HOST[:PORT]  Use proxy on given port</span><br><span class="line">     --proxy-anyauth  Pick <span class="string">"any"</span> proxy authentication method (H)</span><br><span class="line">     --proxy-basic   Use Basic authentication on the proxy (H)</span><br><span class="line">     --proxy-digest  Use Digest authentication on the proxy (H)</span><br><span class="line">     --proxy-cacert FILE CA certificate to verify peer against <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-capath DIR CA directory to verify peer against <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-cert CERT[:PASSWD] Client certificate file and password <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-cert-type TYPE Certificate file <span class="built_in">type</span> (DER/PEM/ENG) <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-ciphers LIST SSL ciphers to use <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-crlfile FILE Get a CRL list <span class="keyword">in</span> PEM format from the given file <span class="keyword">for</span> proxy</span><br><span class="line">     --proxy-insecure Allow connections to SSL sites without certs <span class="keyword">for</span> proxy (H)</span><br><span class="line">     --proxy-key KEY Private key file name <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-key-type TYPE Private key file <span class="built_in">type</span> <span class="keyword">for</span> proxy (DER/PEM/ENG) (SSL)</span><br><span class="line">     --proxy-negotiate  Use HTTP Negotiate (SPNEGO) authentication on the proxy (H)</span><br><span class="line">     --proxy-ntlm    Use NTLM authentication on the proxy (H)</span><br><span class="line">     --proxy-header LINE Pass custom header LINE to proxy (H)</span><br><span class="line">     --proxy-pass PASS Pass phrase <span class="keyword">for</span> the private key <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-ssl-allow-beast Allow security flaw to improve interop <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-tlsv1   Use TLSv1 <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-tlsuser USER TLS username <span class="keyword">for</span> proxy</span><br><span class="line">     --proxy-tlspassword STRING TLS password <span class="keyword">for</span> proxy</span><br><span class="line">     --proxy-tlsauthtype STRING TLS authentication <span class="built_in">type</span> <span class="keyword">for</span> proxy (default SRP)</span><br><span class="line">     --proxy-service-name NAME  SPNEGO proxy service name</span><br><span class="line">     --service-name NAME  SPNEGO service name</span><br><span class="line"> -U, --proxy-user USER[:PASSWORD]  Proxy user and password</span><br><span class="line">     --proxy1.0 HOST[:PORT]  Use HTTP/1.0 proxy on given port</span><br><span class="line"> -p, --proxytunnel   Operate through a HTTP proxy tunnel (using CONNECT)</span><br><span class="line">     --pubkey KEY    Public key file name (SSH)</span><br><span class="line"> -Q, --quote CMD     Send <span class="built_in">command</span>(s) to server before transfer (F/SFTP)</span><br><span class="line">     --random-file FILE  File <span class="keyword">for</span> reading random data from (SSL)</span><br><span class="line"> -r, --range RANGE   Retrieve only the bytes within RANGE</span><br><span class="line">     --raw           Do HTTP <span class="string">"raw"</span>; no transfer decoding (H)</span><br><span class="line"> -e, --referer       Referer URL (H)</span><br><span class="line"> -J, --remote-header-name  Use the header-provided filename (H)</span><br><span class="line"> -O, --remote-name   Write output to a file named as the remote file</span><br><span class="line">     --remote-name-all  Use the remote file name <span class="keyword">for</span> all URLs</span><br><span class="line"> -R, --remote-time   Set the remote file<span class="string">'s time on the local output</span></span><br><span class="line"><span class="string"> -X, --request COMMAND  Specify request command to use</span></span><br><span class="line"><span class="string">     --resolve HOST:PORT:ADDRESS  Force resolve of HOST:PORT to ADDRESS</span></span><br><span class="line"><span class="string">     --retry NUM   Retry request NUM times if transient problems occur</span></span><br><span class="line"><span class="string">     --retry-connrefused  Retry on connection refused (use with --retry)</span></span><br><span class="line"><span class="string">     --retry-delay SECONDS  Wait SECONDS between retries</span></span><br><span class="line"><span class="string">     --retry-max-time SECONDS  Retry only within this period</span></span><br><span class="line"><span class="string">     --sasl-ir       Enable initial response in SASL authentication</span></span><br><span class="line"><span class="string"> -S, --show-error    Show error. With -s, make curl show errors when they occur</span></span><br><span class="line"><span class="string"> -s, --silent        Silent mode (don'</span>t output anything)</span><br><span class="line">     --socks4 HOST[:PORT]  SOCKS4 proxy on given host + port</span><br><span class="line">     --socks4a HOST[:PORT]  SOCKS4a proxy on given host + port</span><br><span class="line">     --socks5 HOST[:PORT]  SOCKS5 proxy on given host + port</span><br><span class="line">     --socks5-hostname HOST[:PORT]  SOCKS5 proxy, pass host name to proxy</span><br><span class="line">     --socks5-gssapi-service NAME  SOCKS5 proxy service name <span class="keyword">for</span> GSS-API</span><br><span class="line">     --socks5-gssapi-nec  Compatibility with NEC SOCKS5 server</span><br><span class="line"> -Y, --speed-limit RATE  Stop transfers below RATE <span class="keyword">for</span> <span class="string">'speed-time'</span> secs</span><br><span class="line"> -y, --speed-time SECONDS  Trigger <span class="string">'speed-limit'</span> abort after SECONDS (default: 30)</span><br><span class="line">     --ssl           Try SSL/TLS (FTP, IMAP, POP3, SMTP)</span><br><span class="line">     --ssl-reqd      Require SSL/TLS (FTP, IMAP, POP3, SMTP)</span><br><span class="line"> -2, --sslv2         Use SSLv2 (SSL)</span><br><span class="line"> -3, --sslv3         Use SSLv3 (SSL)</span><br><span class="line">     --ssl-allow-beast  Allow security flaw to improve interop (SSL)</span><br><span class="line">     --ssl-no-revoke    Disable cert revocation checks (WinSSL)</span><br><span class="line">     --stderr FILE   Where to redirect stderr (use <span class="string">"-"</span> <span class="keyword">for</span> stdout)</span><br><span class="line">     --suppress-connect-headers  Suppress proxy CONNECT response headers</span><br><span class="line">     --tcp-nodelay   Use the TCP_NODELAY option</span><br><span class="line">     --tcp-fastopen  Use TCP Fast Open</span><br><span class="line"> -t, --telnet-option OPT=VAL  Set telnet option</span><br><span class="line">     --tftp-blksize VALUE  Set TFTP BLKSIZE option (must be &gt;512)</span><br><span class="line">     --tftp-no-options  Do not send TFTP options requests</span><br><span class="line"> -z, --time-cond TIME   Transfer based on a time condition</span><br><span class="line"> -1, --tlsv1         Use &gt;= TLSv1 (SSL)</span><br><span class="line">     --tlsv1.0       Use TLSv1.0 (SSL)</span><br><span class="line">     --tlsv1.1       Use TLSv1.1 (SSL)</span><br><span class="line">     --tlsv1.2       Use TLSv1.2 (SSL)</span><br><span class="line">     --tlsv1.3       Use TLSv1.3 (SSL)</span><br><span class="line">     --tls-max VERSION  Use TLS up to VERSION (SSL)</span><br><span class="line">     --trace FILE    Write a debug trace to FILE</span><br><span class="line">     --trace-ascii FILE  Like --trace, but without hex output</span><br><span class="line">     --trace-time    Add time stamps to trace/verbose output</span><br><span class="line">     --tr-encoding   Request compressed transfer encoding (H)</span><br><span class="line"> -T, --upload-file FILE  Transfer FILE to destination</span><br><span class="line">     --url URL       URL to work with</span><br><span class="line"> -B, --use-ascii     Use ASCII/text transfer</span><br><span class="line"> -u, --user USER[:PASSWORD]  Server user and password</span><br><span class="line">     --tlsuser USER  TLS username</span><br><span class="line">     --tlspassword STRING  TLS password</span><br><span class="line">     --tlsauthtype STRING  TLS authentication <span class="built_in">type</span> (default: SRP)</span><br><span class="line">     --unix-socket PATH    Connect through this Unix domain socket</span><br><span class="line">     --abstract-unix-socket PATH Connect to an abstract Unix domain socket</span><br><span class="line"> -A, --user-agent STRING  Send User-Agent STRING to server (H)</span><br><span class="line"> -v, --verbose       Make the operation more talkative</span><br><span class="line"> -V, --version       Show version number and quit</span><br><span class="line"> -w, --write-out FORMAT  Use output FORMAT after completion</span><br><span class="line">     --xattr         Store metadata <span class="keyword">in</span> extended file attributes</span><br><span class="line"> -q, --<span class="built_in">disable</span>       Disable .curlrc (must be first parameter)</span><br></pre></td></tr></table></figure><h2 id="curl-练习"><a href="#curl-练习" class="headerlink" title="curl 练习"></a>curl 练习</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200206193007.png" alt=""></p><p><a href="https://linux.cn/article-11648-1.html" target="_blank" rel="noopener">21 个 curl 命令练习</a></p><p><a href="https://jvns.ca/blog/2019/08/27/curl-exercises/" target="_blank" rel="noopener">curl exercises</a></p><p><a href="http://blog.lujun9972.win/blog/2019/09/11/curl%E7%BB%83%E4%B9%A0/" target="_blank" rel="noopener">curl 练习答案</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://curl.haxx.se/docs/manpage.html" target="_blank" rel="noopener">curl the man page</a></p><p><a href="https://blog.csdn.net/russ44/article/details/53308838" target="_blank" rel="noopener">linux 使用 curl 进行接口测试</a></p><p><a href="https://www.cnblogs.com/52fhy/p/6581116.html" target="_blank" rel="noopener">cURL 笔记</a></p>]]></content>
    
    <summary type="html">
    
      curl命令学习使用小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Postman 使用小结</title>
    <link href="https://wsgzao.github.io/post/postman/"/>
    <id>https://wsgzao.github.io/post/postman/</id>
    <published>2020-01-22T06:59:49.000Z</published>
    <updated>2020-01-22T09:02:13.767Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在涉及 HTTP 方面的后台 REST API 开发时，往往会需要调试 API 接口。这方面有很多工具，其中最好用的算是接下来要介绍的 Postman 了，Postman helps you develop APIs faster。网上关于 Postman 的教程已经非常，我仅描述自己平时经常用到的部分，其他知识点可以阅读参考文章。</p><blockquote><p>Postman 使用小结</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 01 月 22 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/postman/">https://wsgzao.github.io/post/postman/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://www.getpostman.com/" target="_blank" rel="noopener">Postman</a></p><hr><h2 id="Postman-简介"><a href="#Postman-简介" class="headerlink" title="Postman 简介"></a>Postman 简介</h2><p>What is Postman?</p><p>Postman is a collaboration platform for API development. Postman’s features simplify each step of building an API and streamline collaboration so you can create better APIs—faster.</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://learning.getpostman.com/docs/postman/launching-postman/introduction/" target="_blank" rel="noopener">Postman Docs</a></p><p><a href="https://segmentfault.com/a/1190000017890654" target="_blank" rel="noopener">宇宙最强 postman 教程</a></p><p><a href="https://crifan.github.io/api_tool_postman/website/" target="_blank" rel="noopener">API 开发利器：Postman</a></p><p><a href="https://lailin.xyz/post/45050.html" target="_blank" rel="noopener">善用工具之 postman 高级用法概述</a></p>]]></content>
    
    <summary type="html">
    
      Postman使用小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Visual Studio Code 使用小结</title>
    <link href="https://wsgzao.github.io/post/vscode/"/>
    <id>https://wsgzao.github.io/post/vscode/</id>
    <published>2020-01-22T06:59:49.000Z</published>
    <updated>2020-02-24T04:18:35.426Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Visual Studio Code 简称 VS Code 可能是目前史上最好用的轻量级编辑器，包括但不限于常用快捷键，调试 Python，常用插件，搜索功能，包括正则搜索，文件编码，git 仓库代码管理，各种主题字体和插件，强大好用的插件市场，代码格式化等等各种好用的功能，且性能优越。是目前最值得推荐的编辑器，没有之一。相对于重量级选手 Microsoft Visual Studio 和 JetBrains 旗下耳熟能详的 IntelliJ IDEA、PyCharm 等产品来说 VS Code 已经足够简单好用。</p><blockquote><p>Visual Studio Code 使用小结</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 01 月 22 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/vscode/">https://wsgzao.github.io/post/vscode/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">Visual Studio Code</a></p><hr><h2 id="Visual-Studio-Code-简介"><a href="#Visual-Studio-Code-简介" class="headerlink" title="Visual Studio Code 简介"></a>Visual Studio Code 简介</h2><p>Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. It comes with built-in support for JavaScript, TypeScript and Node.js and has a rich ecosystem of extensions for other languages (such as C++, C#, Java, Python, PHP, Go) and runtimes (such as .NET and Unity). Begin your journey with VS Code with these <a href="https://code.visualstudio.com/docs/introvideos/overview" target="_blank" rel="noopener">introductory videos</a>.</p><h2 id="为什么要使用-VSCode"><a href="#为什么要使用-VSCode" class="headerlink" title="为什么要使用 VSCode"></a>为什么要使用 VSCode</h2><ol><li>免费开源</li><li>有海量扩展插件</li><li>轻量（不会占用大量内存和 CPU，不会对电脑造成卡顿）</li></ol><p>以前还有人会推荐 Sublime Text 和 PyCharm，但随着 VSCode 社区的繁荣基本可以首选 VSCode 作为你的第一款轻量级编辑器，当然编程能力的强弱和编辑器没有必然联系，哪款用得顺手选择它能帮助你提到编码效率就行</p><h2 id="VSCode-常用快捷键"><a href="#VSCode-常用快捷键" class="headerlink" title="VSCode 常用快捷键"></a>VSCode 常用快捷键</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 光标所在行整行复制，粘贴，剪切 </span><br><span class="line">Ctrl + C</span><br><span class="line">Ctrl + V</span><br><span class="line">Ctrl + X</span><br><span class="line"></span><br><span class="line">Ctrl + F                #查找 </span><br><span class="line">Ctrl + H                #替换 </span><br><span class="line">Ctrl + S                #保存 </span><br><span class="line"></span><br><span class="line">Ctrl + /                #行注释 </span><br><span class="line">Shift + Alt + A         #块注释 </span><br><span class="line"></span><br><span class="line">Ctrl + Shift + Enter    #上方插入一行 </span><br><span class="line">Ctrl + Shift + F        #文件夹查找 </span><br><span class="line">Ctrl + Enter            #下方插入一行 </span><br><span class="line">Alt + Shift + F         #格式化代码 </span><br><span class="line"></span><br><span class="line">Ctrl + Shift + P        #命令控制面板 </span><br></pre></td></tr></table></figure><h2 id="VSCode-插件推荐"><a href="#VSCode-插件推荐" class="headerlink" title="VSCode 插件推荐"></a>VSCode 插件推荐</h2><blockquote><p>插件根据实际需求安装即可</p></blockquote><p><a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode" target="_blank" rel="noopener">Prettier - Code formatter</a></p><p><a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens" target="_blank" rel="noopener">GitLens — Git supercharged</a></p><p><a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2" target="_blank" rel="noopener">Bracket Pair Colorizer 2</a></p><p><a href="https://marketplace.visualstudio.com/items?itemName=emilast.LogFileHighlighter" target="_blank" rel="noopener">Log File Highlighter</a></p><blockquote><p>Frontend</p></blockquote><p><a href="https://marketplace.visualstudio.com/items?itemName=pranaygp.vscode-css-peek" target="_blank" rel="noopener">CSS Peek</a></p><p><a href="https://marketplace.visualstudio.com/items?itemName=idleberg.icon-fonts" target="_blank" rel="noopener">Icon Fonts</a></p><p>Auto Rename Tag</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://code.visualstudio.com/docs" target="_blank" rel="noopener">Visual Studio Code Docs</a></p><p><a href="https://segmentfault.com/a/1190000017949680" target="_blank" rel="noopener">宇宙最强 vscode 教程（基础篇）</a></p><p><a href="https://book.crifan.com/books/best_editor_vscode/website/" target="_blank" rel="noopener">史上最好用的编辑器：VSCode</a></p><p><a href="https://www.imooc.com/learn/1106" target="_blank" rel="noopener">VSCode 入门</a></p>]]></content>
    
    <summary type="html">
    
      Visual Studio Code使用小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Ansible 学习指北</title>
    <link href="https://wsgzao.github.io/post/ansible/"/>
    <id>https://wsgzao.github.io/post/ansible/</id>
    <published>2020-01-22T02:59:49.000Z</published>
    <updated>2020-01-22T13:10:16.995Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为工作的缘故接触并积极推动 Ansible 在企业级生产环境的落地，独立承担并实现了《基于 ansible 的主机自动化配置管理》项目，此前也先后接触过 Puppet 和 SaltStack，本文不会讨论开源或者自主研发方案的优劣，重点是和大伙儿分享自己在 ansible 技术领域积累的一些项目实战经验，如果大家遇到任何问题也欢迎通过留言或者其他方式进行互动，我尽力做到有效回复。</p><blockquote><p>Ansible is Simple IT Automation</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 01 月 22 日 - 增加 Ansible 参考文章<br>2018 年 05 月 15 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/ansible/">https://wsgzao.github.io/post/ansible/</a></p><p><strong> 扩展阅读 </strong></p><p>ansible - <a href="https://docs.ansible.com/" target="_blank" rel="noopener">https://docs.ansible.com/</a></p><hr><h2 id="Ansible-标准化学习路径"><a href="#Ansible-标准化学习路径" class="headerlink" title="Ansible 标准化学习路径"></a>Ansible 标准化学习路径</h2><blockquote><p>Ansible 相关的书籍在逐步增多，由于 Ansible 版本迭代更新频率高但学习成本低，个人建议书为辅，官方文档为主</p></blockquote><p>Ansible is an IT automation tool. It can configure systems, deploy software, and orchestrate more advanced IT tasks such as continuous deployments or zero downtime rolling updates.</p><p>Ansible’s main goals are simplicity and ease-of-use. It also has a strong focus on security and reliability, featuring a minimum of moving parts, usage of OpenSSH for transport (with other transports and pull modes as alternatives), and a language that is designed around auditability by humans–even those not familiar with the program.</p><p>We believe simplicity is relevant to all sizes of environments, so we design for busy users of all types: developers, sysadmins, release engineers, IT managers, and everyone in between. Ansible is appropriate for managing all environments, from small setups with a handful of instances to enterprise environments with many thousands of instances.</p><p>Ansible manages machines in an agent-less manner. There is never a question of how to upgrade remote daemons or the problem of not being able to manage systems because daemons are uninstalled. Because OpenSSH is one of the most peer-reviewed open source components, security exposure is greatly reduced. Ansible is decentralized–it relies on your existing OS credentials to control access to remote machines. If needed, Ansible can easily connect with Kerberos, LDAP, and other centralized authentication management systems.</p><p>This documentation covers the current released version of Ansible and also some development version features. For recent features, we note in each section the version of Ansible where the feature was added.</p><p>Ansible releases a new major release of Ansible approximately every two months. The core application evolves somewhat conservatively, valuing simplicity in language design and setup. However, the community around new modules and plugins being developed and contributed moves very quickly, adding many new modules in each release.</p><blockquote><p>Ansible Lightbulb 是 Ansible 官方推荐的入门教材，普通用户大概只需要 10-20 分钟时间即可入门</p></blockquote><p>The Ansible Lightbulb project is an effort to provide a content toolkit and educational reference for effectively communicating and teaching Ansible topics.</p><p>Ansible Lightbulb - <a href="https://github.com/ansible/lightbulb" target="_blank" rel="noopener">https://github.com/ansible/lightbulb</a></p><blockquote><p>Ansible Documentation 是 Ansible 官方文档，我的建议还是对英文不要害怕，多动手查多敲命令去理解</p></blockquote><p>Ansible Documentation - <a href="http://docs.ansible.com/ansible/latest/index.html" target="_blank" rel="noopener">http://docs.ansible.com/ansible/latest/index.html</a></p><blockquote><p>如果大家需要使用 Role 推荐阅读 Ansible Best Practices</p></blockquote><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_best_practices.html" target="_blank" rel="noopener">Ansible Best Practices</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">inventories/</span><br><span class="line">   production/</span><br><span class="line">      hosts               # inventory file for production servers</span><br><span class="line">      group_vars/</span><br><span class="line">         group1.yml       # here we assign variables to particular groups</span><br><span class="line">         group2.yml</span><br><span class="line">      host_vars/</span><br><span class="line">         hostname1.yml    # here we assign variables to particular systems</span><br><span class="line">         hostname2.yml</span><br><span class="line"></span><br><span class="line">   staging/</span><br><span class="line">      hosts               # inventory file for staging environment</span><br><span class="line">      group_vars/</span><br><span class="line">         group1.yml       # here we assign variables to particular groups</span><br><span class="line">         group2.yml</span><br><span class="line">      host_vars/</span><br><span class="line">         stagehost1.yml   # here we assign variables to particular systems</span><br><span class="line">         stagehost2.yml</span><br><span class="line"></span><br><span class="line">library/                  # if any custom modules, put them here (optional)</span><br><span class="line">module_utils/             # if any custom module_utils to support modules, put them here (optional)</span><br><span class="line">filter_plugins/           # if any custom filter plugins, put them here (optional)</span><br><span class="line"></span><br><span class="line">site.yml                  # master playbook</span><br><span class="line">webservers.yml            # playbook for webserver tier</span><br><span class="line">dbservers.yml             # playbook for dbserver tier</span><br><span class="line"></span><br><span class="line">files/                    # here we assign files for simple plays</span><br><span class="line">plays/                    # here we assign plays as the entrance</span><br><span class="line">tasks/                    # here we assign tasks for plays to call</span><br><span class="line"></span><br><span class="line">roles/</span><br><span class="line">    common/               # this hierarchy represents a &quot;role&quot;</span><br><span class="line">        tasks/            #</span><br><span class="line">            main.yml      #  &lt;-- tasks file can include smaller files if warranted</span><br><span class="line">        handlers/         #</span><br><span class="line">            main.yml      #  &lt;-- handlers file</span><br><span class="line">        templates/        #  &lt;-- files for use with the template resource</span><br><span class="line">            ntp.conf.j2   #  &lt;------- templates end in .j2</span><br><span class="line">        files/            #</span><br><span class="line">            bar.txt       #  &lt;-- files for use with the copy resource</span><br><span class="line">            foo.sh        #  &lt;-- script files for use with the script resource</span><br><span class="line">        vars/             #</span><br><span class="line">            main.yml      #  &lt;-- variables associated with this role</span><br><span class="line">        defaults/         #</span><br><span class="line">            main.yml      #  &lt;-- default lower priority variables for this role</span><br><span class="line">        meta/             #</span><br><span class="line">            main.yml      #  &lt;-- role dependencies</span><br><span class="line">        library/          # roles can also include custom modules</span><br><span class="line">        module_utils/     # roles can also include custom module_utils</span><br><span class="line">        lookup_plugins/   # or other types of plugins, like lookup in this case</span><br><span class="line"></span><br><span class="line">    webtier/              # same kind of structure as &quot;common&quot; was above, done for the webtier role</span><br><span class="line">    monitoring/           # &quot;&quot;</span><br><span class="line">    fooapp/               # &quot;&quot;</span><br></pre></td></tr></table></figure><h2 id="基于-Ansible-的开源项目"><a href="#基于-Ansible-的开源项目" class="headerlink" title="基于 Ansible 的开源项目"></a>基于 Ansible 的开源项目</h2><blockquote><p>第一个是 ansible 官方开源项目，其他都是和 ansible 相关的运维平台开源项目，推荐学习和参考</p></blockquote><p>Ansible - <a href="https://github.com/ansible/ansible" target="_blank" rel="noopener">https://github.com/ansible/ansible</a></p><p>Jumpserver - <a href="http://www.jumpserver.org/" target="_blank" rel="noopener">http://www.jumpserver.org/</a> </p><p>OpsManage - <a href="https://github.com/welliamcao/OpsManage" target="_blank" rel="noopener">https://github.com/welliamcao/OpsManage</a> </p><h2 id="Ansible-项目实践"><a href="#Ansible-项目实践" class="headerlink" title="Ansible 项目实践"></a>Ansible 项目实践</h2><blockquote><p>以下内容来自于《基于 ansible 的主机自动化配置管理》项目，基于 ansible 目前可以满足生产环境所有基线要求，相信对大家有一定的参考价值</p></blockquote><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200122143435.png" alt=""></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200122143458.png" alt=""></p><h3 id="ansible-部署"><a href="#ansible-部署" class="headerlink" title="ansible 部署"></a>ansible 部署</h3><blockquote><p>因为生产环境为内外网物理隔离，所有的安装部署都是离线进行的</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install Packages</span></span><br><span class="line">yum install gcc zlib zlib-devel openssl-devel -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install Python</span></span><br><span class="line">tar xf Python-2.7.14.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-2.7.14</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># renew python env</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named six.moves</span></span><br><span class="line">tar xf six-1.11.0.tar.gz </span><br><span class="line"><span class="built_in">cd</span> six-1.11.0</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named packaging.version</span></span><br><span class="line">tar xf packaging-17.1.tar.gz </span><br><span class="line"><span class="built_in">cd</span> packaging-17.1</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named pyparsing</span></span><br><span class="line">tar xf pyparsing-2.2.0.tar.gz </span><br><span class="line"><span class="built_in">cd</span> pyparsing-2.2.0</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named appdirs</span></span><br><span class="line">tar xf appdirs-1.4.3.tar.gz </span><br><span class="line"><span class="built_in">cd</span> appdirs-1.4.3</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install Setuptools</span></span><br><span class="line">unzip setuptools-38.5.2.zip</span><br><span class="line"><span class="built_in">cd</span> setuptools-38.5.2</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install pip</span></span><br><span class="line">tar xf pip-9.0.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> pip-9.0.1</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># pip 离线下载 </span></span><br><span class="line"><span class="comment"># pip download -d DIR -r requirements.txt</span></span><br><span class="line">pip download -d ~/ansible/ ansible</span><br><span class="line"></span><br><span class="line"><span class="comment"># pip 离线安装 </span></span><br><span class="line"><span class="comment"># pip install --no-index --find-links=DIR -r requirements.txt</span></span><br><span class="line">pip install --no-index --find-links=pip-ansible-2.3.3/ -r requirements.txt</span><br><span class="line">pip install --no-index --find-links=pip-ansible-2.5.0/ -r requirements.txt -U</span><br><span class="line"></span><br><span class="line"><span class="comment"># pip 离线安装 pipenv</span></span><br><span class="line">pip install --no-index --find-links=pip-pipenv/ pipenv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 pipenv 创建虚拟环境 </span></span><br><span class="line">mkdir win_ansible</span><br><span class="line"><span class="built_in">cd</span> win_ansible</span><br><span class="line">pipenv shell</span><br><span class="line">pip install --no-index --find-links=pip-ansible-2.5.2/ -r requirements.txt</span><br></pre></td></tr></table></figure><h3 id="ansible-cfg-配置解析"><a href="#ansible-cfg-配置解析" class="headerlink" title="ansible.cfg 配置解析"></a>ansible.cfg 配置解析</h3><blockquote><p>ansible.cfg 不影响执行结果但合理的配置会有效提升效率</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置文件路径（优先级）</span></span><br><span class="line">./ansible.cfg</span><br><span class="line">/etc/ansible/ansible.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件内容 </span></span><br><span class="line">[defaults]</span><br><span class="line"><span class="comment">#inventory = /etc/ansible/hosts</span></span><br><span class="line"><span class="comment">#log_path = /var/log/ansible.log</span></span><br><span class="line">forks = 100 <span class="comment"># 设置并发数 </span></span><br><span class="line">host_key_checking = False <span class="comment"># 不检查 SSH 主机登录的密钥 </span></span><br><span class="line">display_skipped_hosts = False <span class="comment"># 不显示已跳过的主机 </span></span><br><span class="line">retry_files_enabled = False <span class="comment"># 不创建任务失败后的重试文件 </span></span><br><span class="line"><span class="comment"># 按照 1d 设置 setup 缓存，优化执行效率 </span></span><br><span class="line">gathering = smart</span><br><span class="line">fact_caching_timeout = 86400</span><br><span class="line">fact_caching = jsonfile</span><br><span class="line">fact_caching_connection = cachedir</span><br></pre></td></tr></table></figure><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ul><li>服务端操作系统：RHEL 6/7（Windows 不可作为控制端）</li><li>服务端 Python 版本：2.7.14（实测安装完成无需额外调整）</li><li>Ansible 版本：2.3.3.0（实测 2.4 以上版本已不支持 rhel5.5，客户端需 simplejson）</li><li>管理对象：目前主要针对 RHEL 5/6/7（Windows 使用高版本 Ansible）</li><li>基线标准：参考《主机岗配置基线 v1.1.xlsx》</li></ul><blockquote><p>服务端</p></blockquote><ul><li>操作系统版本：RHEL 6/7</li><li>Python 版本：2.7.14</li><li>安装方式：pip 离线安装依赖包</li></ul><blockquote><p>客户端</p></blockquote><ul><li>操作系统版本：RHEL 5/6/7</li><li>非最小模式安装无需做调整</li><li>RHEL5.5 需要安装 simplejson</li></ul><blockquote><p>核心用法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测 ansible 是否可以正常访问主机 </span></span><br><span class="line">ansible-playbook -i hosts playbooks/ping.yml -v</span><br><span class="line"><span class="comment"># 配置好 inventory，执行以下命令创建用户并建立信任关系 </span></span><br><span class="line">ansible-playbook -i hosts playbooks/user/default.yml -v</span><br><span class="line"><span class="comment"># 配置时间同步 / 进程服务 / 基线文件 </span></span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/cfgset.yml -v</span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/cfgset.yml -v --tags=<span class="string">"repo"</span></span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/cfgset.yml -v --skip-tags=<span class="string">"ntp,repo"</span></span><br><span class="line"><span class="comment"># 更新系统软件包和补丁包 </span></span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/pakset.yml -v</span><br><span class="line"><span class="comment"># 修改用户密码 </span></span><br><span class="line">ansible-playbook -i hosts_changepw playbooks/user/changepw.yml -v -e <span class="string">"@userpass.json"</span></span><br><span class="line"><span class="comment"># 备份配置，支持自定义日期命名，默认为 "%Y%m%d"</span></span><br><span class="line">ansible-playbook -i hosts backup/backup.yml -v</span><br><span class="line"><span class="comment"># 恢复配置，支持按日期目录全局或者局部主机恢复 </span></span><br><span class="line">ansible-playbook -i hosts backup/restore.yml -v -e <span class="string">"var_backup_date=20180305"</span></span><br></pre></td></tr></table></figure><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ul><li>服务端操作系统：RHEL 6/7（Windows 不可作为控制端）</li><li>服务端 Python 版本：2.7.14（实测安装完成无需额外调整）</li><li>Ansible 版本：2.5.0（Windows 原生模块支持需要持续更新 Ansible 新版本）</li><li>管理对象：目前主要针对 Windows 7/2008/2012（不支持 xp/2003）</li><li>基线标准：参考《Windows 安全基线》</li></ul><blockquote><p>服务端</p></blockquote><ul><li>操作系统版本：RHEL 6/7</li><li>Python 版本：2.7.14</li><li>安装方式：pip 离线安装依赖包（目前使用 pipenv 切换管理 Linux 和 Windows）</li></ul><blockquote><p>客户端</p></blockquote><ul><li>操作系统版本：Window 7/2008/2012</li><li>WinRM（Windows 7/2008 需要升级至 Powershell v3.0）</li></ul><blockquote><p>核心用法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测 ansible 是否可以正常访问主机 </span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/ping.yml -v</span><br><span class="line"><span class="comment"># 配置好 inventory，执行以下命令创建用户并建立信任关系 </span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/user/default.yml -v</span><br><span class="line"><span class="comment"># 配置时间同步 / 进程服务 / 基线文件 </span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/cfgset.yml -v</span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/cfgset.yml -v --tags=<span class="string">"wsus"</span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/cfgset.yml -v --skip-tags=<span class="string">"ntp,wsus"</span></span><br><span class="line"><span class="comment"># 更新系统软件包和补丁包 </span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/pakset.yml -v</span><br><span class="line"><span class="comment"># 修改用户密码 </span></span><br><span class="line">ansible-playbook -i win_hosts_changepw win_playbooks/user/changepw.yml -v -e <span class="string">"@userpass.json"</span></span><br><span class="line"><span class="comment"># 备份配置，支持自定义日期命名，默认为 "%Y%m%d"</span></span><br><span class="line">ansible-playbook -i win_hosts win_backup/backup.yml -v</span><br><span class="line"><span class="comment"># 恢复配置，支持按日期目录全局或者局部主机恢复 </span></span><br><span class="line">ansible-playbook -i win_hosts win_backup/restore.yml -v -e <span class="string">"var_backup_date=20180305"</span></span><br></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><blockquote><p>很抱歉我暂时不能分享全部信息，但是这并不妨碍技术上的交流，我会逐步分享有价值的可公开代码</p></blockquote><ol><li>遵循 what/why/how 思路，要理解 ansible 能解决什么问题，为什么选择 ansible，怎么使用 ansible 去解决</li><li>Ansible 学习成本低但不等同于没有难度，学习路径推荐参考官方文档并积极实践，官网没有答案要善用 Google 搜索</li><li>Ansible 纯后台模式只解决了部分问题，还有更多需求要通过基于 Ansible 的自动化运维平台来实现，拥抱开源技术不能固步自封</li></ol><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://docs.ansible.com/ansible/latest/index.html" target="_blank" rel="noopener">Ansible Documentation</a></p><p><a href="https://www.cnblogs.com/michael-xiang/p/10462749.html" target="_blank" rel="noopener">Ansible 入门指南 - 学习总结</a></p><p><a href="http://showme.codes/2019-09-19/understand-ansible/" target="_blank" rel="noopener">这样理解 Ansible 更容易</a></p><p><a href="https://anoyi.com/p/62388a4fcbc6" target="_blank" rel="noopener">前世今生：1 小时学会 Ansible</a></p><p><a href="https://lework.github.io/2016/11/19/Ansible-zhuan-ti-wen-zhang-zong-lan/" target="_blank" rel="noopener">Ansible 专题文章总揽</a></p><p><a href="https://www.zsythink.net/archives/tag/ansible/page/6/" target="_blank" rel="noopener">朱双印 - ansible 系列</a></p><p><a href="http://www.cnblogs.com/f-ck-need-u/p/7576137.html#ansible" target="_blank" rel="noopener">骏马金龙 - ansible </a></p><p><a href="https://www.bilibili.com/video/av33611758?from=search&amp;seid=7420958755659258683" target="_blank" rel="noopener">B 站视频 - ansible 教程 - 马哥 2019 全新 ansible 入门到精通</a></p>]]></content>
    
    <summary type="html">
    
      Ansible is Simple IT Automation
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>AdGuard 过滤规则分享</title>
    <link href="https://wsgzao.github.io/post/adguard/"/>
    <id>https://wsgzao.github.io/post/adguard/</id>
    <published>2020-01-21T06:59:49.000Z</published>
    <updated>2020-01-24T02:54:38.815Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200122122954.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我和很多人一样一开始用 Maxthon 傲游浏览器，然后见证了国内第三方浏览器的群雄逐鹿到只剩下 360 和腾讯，现在也基本回归 Google Chrome，广告过滤我也是一路从 AdBlock Plus 到 uBlock Origin 然后是现在的 AdGuard，无论选择哪种广告过滤方案，持续更新的过滤规则始终是核心。</p><blockquote><p>AdGuard 过滤规则分享</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 01 月 21 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/adguard/">https://wsgzao.github.io/post/adguard/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://adguard.com/zh_cn/welcome.html" target="_blank" rel="noopener">AdGuard</a></p><hr><h2 id="为什么要买-AdGuard"><a href="#为什么要买-AdGuard" class="headerlink" title="为什么要买 AdGuard"></a>为什么要买 AdGuard</h2><ol><li>AdBlock Plus(ABP) 大牌免费不香吗？</li><li>uBlock Origin 免费性能好，占用内存低不香吗？</li><li>国内各种 APP 和浏览器扩展横行劫持，无脑安装不也很香吗？</li></ol><blockquote><p>名声在外，全平台支持，懒得折腾，我买 AdGuard</p></blockquote><h2 id="AdGuard-购买记录"><a href="#AdGuard-购买记录" class="headerlink" title="AdGuard 购买记录"></a>AdGuard 购买记录</h2><p>2019 年黑色星期五的时候 ¥187.96 价格购买了 AdGuard 终生 9 设备，貌似买多了</p><p><a href="https://adguard.com/zh_cn/license.html" target="_blank" rel="noopener">https://adguard.com/zh_cn/license.html</a></p><h2 id="广告过滤规则推荐"><a href="#广告过滤规则推荐" class="headerlink" title="广告过滤规则推荐"></a>广告过滤规则推荐</h2><blockquote><p>以下第三方规则可以适用于 AdGuard，AdBlock Plus，uBlock Origin 等</p></blockquote><p>AdGuard 默认的内置规则里很多选择，可以点击订阅自行加载，例如以下几个推荐的：</p><ol><li>EasyList China : 国内网站广告过滤的主规则。<br>链接：<a href="https://easylist-downloads.adblockplus.org/easylistchina.txt" target="_blank" rel="noopener">https://easylist-downloads.adblockplus.org/easylistchina.txt</a></li><li>EasyPrivacy : EasyPrivacy 是隐私保护，不被跟踪。<br>链接：<a href="https://easylist-downloads.adblockplus.org/easyprivacy.txt" target="_blank" rel="noopener">https://easylist-downloads.adblockplus.org/easyprivacy.txt</a></li><li>CJX’s Annoyance List : 过滤烦人的自我推广，并补充 EasyPrivacy 隐私规则。<br>链接：<a href="https://raw.githubusercontent.com/cjx82630/cjxlist/master/cjx-annoyance.txt" target="_blank" rel="noopener">https://raw.githubusercontent.com/cjx82630/cjxlist/master/cjx-annoyance.txt</a></li><li>广告净化器规则 : 支持国内大部分视频网站的广告过滤。<br>链接：<a href="http://tools.yiclear.com/ChinaList2.0.txt" target="_blank" rel="noopener">http://tools.yiclear.com/ChinaList2.0.txt</a></li><li>I don’t care about cookies : 我不关心 Cookie 的问题，屏蔽网站的 cookies 相关的警告。<br>链接：<a href="https://www.i-dont-care-about-cookies.eu/abp/" target="_blank" rel="noopener">https://www.i-dont-care-about-cookies.eu/abp/</a></li></ol><blockquote><p>广告过滤器规则推荐（打开 Adguard -&gt; 设置 -&gt; 内容拦截 -&gt; User rules）</p></blockquote><p>HalfLife，规则合并自 EasylistChina、EasylistLite、CJX’sAnnoyance 合并规则（几乎每天更新)<br><a href="https://gitee.com/halflife/list/raw/master/ad.txt" target="_blank" rel="noopener">https://gitee.com/halflife/list/raw/master/ad.txt</a></p><p>广告净化器扩展官方规则 ChinaListV2.0（可过滤网页视频及应用播放广告）<br><a href="http://tools.yiclear.com/ChinaList2.0.txt" target="_blank" rel="noopener">http://tools.yiclear.com/ChinaList2.0.txt</a><br>// 里面疑似有劫持购物返利规则</p><p>xinggsf，乘风广告过滤规则（含贴吧, 屏蔽电信挟持弹窗）<br><a href="https://raw.githubusercontent.com/xinggsf/Adblock-Plus-Rule/master/ABP-FX.txt" target="_blank" rel="noopener">https://raw.githubusercontent.com/xinggsf/Adblock-Plus-Rule/master/ABP-FX.txt</a><br>// 最近更新日期 2019006111</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200122122936.png" alt=""></p><h2 id="AdGuard-激活和管理"><a href="#AdGuard-激活和管理" class="headerlink" title="AdGuard 激活和管理"></a>AdGuard 激活和管理</h2><p>不要忘记在您的设备上激活此授权码！转到 “许可” 页面，输入此处的授权码并点击 “激活”。如果您需要帮助，可参阅此 <a href="https://kb.adguard.com/en/general/license-key?utm_source=email&amp;utm_campaign=license_purchased_key&amp;utm_medium=transact&amp;utm_content=body#activation" target="_blank" rel="noopener">手册</a></p><p>When you enter the <a href="https://adguard.com/zh_cn/account/main.html" target="_blank" rel="noopener">AdGuard personal account</a> you will see the list of your license keys and their current status</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.v1tx.com/post/best-ad-blockers/" target="_blank" rel="noopener">最好用的广告拦截软件推荐</a></p><p><a href="https://www.runningcheese.com/adblock" target="_blank" rel="noopener">全平台支持，长久有效的广告过滤解决方案</a></p><p><a href="https://zhuanlan.zhihu.com/p/79045237" target="_blank" rel="noopener">Google Chrome 浏览器插件和油猴脚本推荐</a></p><p><a href="https://filterlists.com/" target="_blank" rel="noopener">FilterLists</a></p>]]></content>
    
    <summary type="html">
    
      AdGuard过滤规则分享
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 Monit 替代 Supervisor 自动化管理和监控服务小结</title>
    <link href="https://wsgzao.github.io/post/monit/"/>
    <id>https://wsgzao.github.io/post/monit/</id>
    <published>2020-01-15T06:59:49.000Z</published>
    <updated>2020-01-20T09:32:39.016Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>对于进程的监控最常见的需求就是进程挂了如何被自动拉起来，现在可以由 Kubernetes 等先进的容器化技术来自动化管理，那原来再物理服务器或者虚拟机中的进程有什么好的办法呢？答案就是 Monit/Supervisor 等第三方应用来解决，因为线上环境分别使用 Monit 来监控 Core Logical Service，Supervisor 用在 Codis Dashboard/FE/Proxy 上，使用下来的感受和网上的对比分析报告类似，具体内容会在文章内引用，推荐大家使用 Monit 替代 Supervisor 自动化管理和监控服务。</p><blockquote><p>使用 Monit 替代 Supervisor 自动化管理和监控服务小结</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 01 月 15 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/monit/">https://wsgzao.github.io/post/monit/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://mmonit.com/" target="_blank" rel="noopener">Monit</a><br><a href="http://supervisord.org/" target="_blank" rel="noopener">Supervisor</a></p><hr><h2 id="Monit-介绍"><a href="#Monit-介绍" class="headerlink" title="Monit 介绍"></a>Monit 介绍</h2><blockquote><p>NAME</p></blockquote><p>Monit - utility for monitoring services on a Unix system</p><blockquote><p>SYNOPSIS</p></blockquote><p><strong>monit</strong> [options] <arguments></arguments></p><blockquote><p>DESCRIPTION</p></blockquote><p><strong>Monit</strong> is a utility for managing and monitoring processes, programs, files, directories and filesystems on a Unix system. Monit conducts automatic maintenance and repair and can execute meaningful causal actions in error situations. E.g. Monit can start a process if it does not run, restart a process if it does not respond and stop a process if it uses too much resources. You can use Monit to monitor files, directories and filesystems for changes, such as timestamps changes, checksum changes or size changes.</p><p>Monit is controlled via an easy to configure control file based on a free-format, token-oriented syntax. Monit logs to syslog or to its own log file and notifies you about error conditions via customisable alert messages. Monit can perform various TCP/IP network checks, protocol checks and can utilise SSL for such checks. Monit provides a HTTP(S) interface and you may use a browser to access the Monit program.</p><blockquote><p>WHAT TO MONITOR?</p></blockquote><p>You can use Monit to monitor daemon <strong>processes</strong> or similar programs running on localhost. Monit is particularly useful for monitoring daemon processes, such as those started at system boot time. For instance sendmail, sshd, apache and mysql. In contrast to many other monitoring systems, Monit can act if an error situation should occur, e.g.; if sendmail is not running, monit can start sendmail again automatically or if apache is using too many resources (e.g. if a DoS attack is in progress) Monit can stop or restart apache and send you an alert message. Monit can also monitor process characteristics, such as how much memory or cpu cycles a process is using.</p><p>You can also use Monit to monitor <strong>files</strong>, <strong>directories</strong> and <strong>filesystems</strong> on localhost. Monit can monitor these items for changes, such as timestamps changes, checksum changes or size changes. This is also useful for security reasons - you can monitor the md5 or sha1 checksum of files that should not change and get an alert or perform an action if they should change.</p><p>Monit can monitor <strong>network connections</strong> to various servers, either on localhost or on remote hosts. TCP, UDP and Unix Domain Sockets are supported. Network test can be performed on a protocol level; Monit has built-in tests for the main Internet protocols, such as HTTP, SMTP etc. Even if a protocol is not supported you can still test the server because you can configure Monit to send any data and test the response from the server.</p><p>Monit can be used to test <strong>programs</strong> or scripts at certain times, much like cron, but in addition, you can test the exit value of a program and perform an action or send an alert if the exit value indicates an error. This means that you can use Monit to perform any type of check you can write a script for.</p><p>Finally, Monit can be used to monitor general <strong>system</strong> resources on localhost such as overall CPU usage, Memory and System Load.</p><p><a href="https://mmonit.com/monit/documentation/monit.html" target="_blank" rel="noopener">https://mmonit.com/monit/documentation/monit.html</a></p><h2 id="Supervisor-介绍"><a href="#Supervisor-介绍" class="headerlink" title="Supervisor 介绍"></a>Supervisor 介绍</h2><h1 id="Supervisor-A-Process-Control-System"><a href="#Supervisor-A-Process-Control-System" class="headerlink" title="Supervisor: A Process Control System"></a>Supervisor: A Process Control System</h1><p>Supervisor is a client/server system that allows its users to monitor and control a number of processes on UNIX-like operating systems.</p><p>It shares some of the same goals of programs like <a href="http://supervisord.org/glossary.html#term-launchd" target="_blank" rel="noopener"><em>launchd</em></a>, <a href="http://supervisord.org/glossary.html#term-daemontools" target="_blank" rel="noopener"><em>daemontools</em></a>, and <a href="http://supervisord.org/glossary.html#term-runit" target="_blank" rel="noopener"><em>runit</em></a>. Unlike some of these programs, it is not meant to be run as a substitute for init as “process id 1”. Instead it is meant to be used to control processes related to a project or a customer, and is meant to start like any other program at boot time.</p><p><a href="http://supervisord.org/" target="_blank" rel="noopener">http://supervisord.org/</a></p><h2 id="Monit-VS-Supervisor"><a href="#Monit-VS-Supervisor" class="headerlink" title="Monit VS Supervisor"></a>Monit VS Supervisor</h2><h3 id="Monit-是什么"><a href="#Monit-是什么" class="headerlink" title="Monit 是什么"></a>Monit 是什么</h3><ul><li>Monit 是一个管理和监控 Unix 系统的小型开源组件.</li><li>Monit 可以在出现错误的情况下, 自动维护, 修复和做一些有意义的行为</li></ul><h3 id="为什么选择-Monit"><a href="#为什么选择-Monit" class="headerlink" title="为什么选择 Monit"></a>为什么选择 Monit</h3><p>除了 Monit 还有一些其他的第三方监控方案(eg. Supervisor), 我们考虑选择额 Monit 作为监控的原因有</p><ul><li>超轻量, 稳定, 高可用</li><li>依赖少, 安装配置方便, 尽量减少运维及学习成本(即使没有任何 Monit 基础的人, 都能轻易的读懂大部分监控文件)</li><li>非侵入式, 被监控的程序可以不用知道监控程序的存在(如果使用 Supervisor 监控, 则服务必须从 Supervisor 启动)</li><li>基本功能完备(9 种类型监控, 邮件报警, 支持用户自定义 shell 扩展)</li></ul><h3 id="Supervisor-优缺点"><a href="#Supervisor-优缺点" class="headerlink" title="Supervisor 优缺点"></a>Supervisor 优缺点</h3><p><strong> 优点 </strong></p><ol><li>轻量、特性丰富、内存友好(好客套的优点。。。)</li><li>对被监控进程的状态获取迅速且精确——通过子进程管理，没办法不精确</li></ol><p><strong> 缺点 </strong></p><ol><li>被监控进程必须运行在前台(可以理解为有自己的控制终端)——这也是最为致命的一点</li><li>无法管理依赖，也就是说无法控制服务启动先后顺序</li><li>无法管理被监控进程创建的子进程——重启服务时被监控进程的子进程无法正常退出，隐患大</li><li>无法控制进程失败重试的间隔时间——有些进程需要清理资源，不过这点还好</li></ol><h3 id="Monit-优缺点"><a href="#Monit-优缺点" class="headerlink" title="Monit 优缺点"></a>Monit 优缺点</h3><p><strong> 优点 </strong></p><ol><li>安装配置简单，同样轻量(似乎也是很客套了)</li><li>可以监控前台进程和非前台进程——完美的弥补了 supervisor 的致命缺点</li><li>除了监控进程还能监控文件、文件系统，甚至系统资源，CPU 利用率，内存使用也是可以的</li><li>被监控的进程可以设置依赖，控制启动顺序</li></ol><p><strong> 缺点 </strong></p><ol><li>无法监控没有 pid 文件的进程，如 shell 脚本</li><li>对进程监控的状态感知有延时，即精度不够——采用轮训决定了它无法像 supervisor 一样实时感知被监控进程状态</li></ol><p>这样看起来还是 monit 更为普适一点。</p><p>不过这催生了一个大胆的想法，使用 supervisor 管理容器内多进程，monit 作为一个被监控进程挂在 supervisor 之下。这样对于无法前台运行的程序，就可以通过 monit 监控，而对服务中断感知强烈的则直接挂在 supervisor 之下。看起来似乎是个好办法，有机会试试，哈哈哈。</p><p>从实际容器中运行的表现看，monit 经常出现各种未知异常，而 supervisor 表现得十分稳定。</p><h2 id="Monit-基本用法"><a href="#Monit-基本用法" class="headerlink" title="Monit 基本用法"></a>Monit 基本用法</h2><h3 id="Monit-常用命令"><a href="#Monit-常用命令" class="headerlink" title="Monit 常用命令"></a>Monit 常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># monit -h</span></span><br><span class="line">Usage: monit [options]+ [<span class="built_in">command</span>]</span><br><span class="line">Options are as follows:</span><br><span class="line"> -c file       Use this control file</span><br><span class="line"> -d n          Run as a daemon once per n seconds</span><br><span class="line"> -g name       Set group name <span class="keyword">for</span> monit commands</span><br><span class="line"> -l logfile    Print <span class="built_in">log</span> information to this file</span><br><span class="line"> -p pidfile    Use this lock file <span class="keyword">in</span> daemon mode</span><br><span class="line"> -s statefile  Set the file monit should write state information to</span><br><span class="line"> -I            Do not run <span class="keyword">in</span> background (needed when run from init)</span><br><span class="line"> --id          Print Monit<span class="string">'s unique ID</span></span><br><span class="line"><span class="string"> --resetid     Reset Monit'</span>s unique ID. Use with caution</span><br><span class="line"> -B            Batch <span class="built_in">command</span> line mode (<span class="keyword">do</span> not output tables or colors)</span><br><span class="line"> -t            Run syntax check <span class="keyword">for</span> the control file</span><br><span class="line"> -v            Verbose mode, work noisy (diagnostic output)</span><br><span class="line"> -vv           Very verbose mode, same as -v plus <span class="built_in">log</span> stacktrace on error</span><br><span class="line"> -H [filename] Print SHA1 and MD5 hashes of the file or of stdin <span class="keyword">if</span> the</span><br><span class="line">               filename is omited; monit will <span class="built_in">exit</span> afterwards</span><br><span class="line"> -V            Print version number and patchlevel</span><br><span class="line"> -h            Print this text</span><br><span class="line">Optional commands are as follows:</span><br><span class="line"> start all             - Start all services</span><br><span class="line"> start &lt;name&gt;          - Only start the named service</span><br><span class="line"> stop all              - Stop all services</span><br><span class="line"> stop &lt;name&gt;           - Stop the named service</span><br><span class="line"> restart all           - Stop and start all services</span><br><span class="line"> restart &lt;name&gt;        - Only restart the named service</span><br><span class="line"> monitor all           - Enable monitoring of all services</span><br><span class="line"> monitor &lt;name&gt;        - Only <span class="built_in">enable</span> monitoring of the named service</span><br><span class="line"> unmonitor all         - Disable monitoring of all services</span><br><span class="line"> unmonitor &lt;name&gt;      - Only <span class="built_in">disable</span> monitoring of the named service</span><br><span class="line"> reload                - Reinitialize monit</span><br><span class="line"> status [name]         - Print full status information <span class="keyword">for</span> service(s)</span><br><span class="line"> summary [name]        - Print short status information <span class="keyword">for</span> service(s)</span><br><span class="line"> report [up|down|..]   - Report state of services. See manual <span class="keyword">for</span> options</span><br><span class="line"> quit                  - Kill the monit daemon process</span><br><span class="line"> validate              - Check all services and start <span class="keyword">if</span> not running</span><br><span class="line"> procmatch &lt;pattern&gt;   - Test process matching pattern</span><br></pre></td></tr></table></figure><p>想要让 Monit 可靠的为我们工作, 学习成本非常低, 只需要学习一些 Monit 命令行和配置文件写法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># options - 选项</span></span><br><span class="line">- monit</span><br><span class="line">- monit -t</span><br><span class="line">- monit -c /var/monit/monitrc  <span class="comment"># 指定配置文件</span></span><br><span class="line">- monit -g &lt;groupname&gt; start/stop <span class="comment"># Monit 可以对各个监控分组, 如果需要对某个分组统一操作, 可以用这个命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># arguments - 参数</span></span><br><span class="line">- monit reload</span><br><span class="line">- monit quit</span><br><span class="line">- monit start/stop/restart/monitor/unmonitor &lt;name&gt;/all  <span class="comment"># &lt;name&gt;: 每个监控都有一个独一无二的名字, 具体后面会提到; all: 所有监控服务</span></span><br></pre></td></tr></table></figure><h3 id="Monit-服务监控配置文件格式"><a href="#Monit-服务监控配置文件格式" class="headerlink" title="Monit 服务监控配置文件格式"></a>Monit 服务监控配置文件格式</h3><p>详细配置, 共计 9 种, 所有配置中, 都符合以下规则</p><ul><li>如果指定的 path 不存在, 而且配置块里包含 start 方法, 会调用这个 start 方法</li><li>如果 path 指定的文件类型不对, Monit 不能监控这个项目</li></ul><blockquote><ol><li>Process</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CHECK PROCESS &lt;unique name&gt; &lt;PIDFILE &lt;path&gt; | MATCHING &lt;regex&gt;&gt;</span><br><span class="line"></span><br><span class="line">&lt;path&gt; pid-file 的绝对路径. 不存在 pid-file 文件或者 pid-file 文件没有对应的正在运行的程序, Monit 会执行 start 方法</span><br><span class="line"></span><br><span class="line">&lt;regex&gt; 进程名称的正则表达来监控进程, 可以通过命令行测试正则是否写对了: monit procmatch &quot;regex-pattern&quot;</span><br></pre></td></tr></table></figure><blockquote><ol start="2"><li>File</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CHECK FILE &lt;unique name&gt; PATH &lt;path&gt;</span><br><span class="line"></span><br><span class="line">&lt;path&gt; file 的绝对路径.</span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>Fifo</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CHECK FIFO &lt;unique name&gt; PATH &lt;path&gt;</span><br><span class="line">&lt;path&gt; fifo 的绝对路径.</span><br></pre></td></tr></table></figure><blockquote><ol start="4"><li>Filesystem</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CHECK FILESYSTEM &lt;unique name&gt; PATH &lt;path&gt;</span><br><span class="line">&lt;path&gt; 设备 / 磁盘, 挂载点的路径 或 NFS/CIFS/FUSE 链接字符串. 如果文件系统不可用, Monit 会执行 start 方法</span><br></pre></td></tr></table></figure><blockquote><ol start="5"><li>Directory</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CHECK DIRECTORY &lt;unique name&gt; PATH &lt;path&gt;</span><br><span class="line"></span><br><span class="line">&lt;path&gt; 目录问价的绝对路径</span><br></pre></td></tr></table></figure><blockquote><ol start="6"><li>Remote host</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CHECK HOST &lt;unique name&gt; ADDRESS &lt;host&gt;</span><br><span class="line"></span><br><span class="line">&lt;host&gt; 可以是域名或者 IP 地址. eg: &quot;tildeslash.com&quot; or &quot;64.87.72.95&quot;.</span><br></pre></td></tr></table></figure><blockquote><ol start="7"><li>System</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CHECK SYSTEM &lt;unique name&gt;</span><br><span class="line"></span><br><span class="line">&lt;unique name&gt; 通常来说是本机名称 (可以用 $HOST), 也可以是其他名称. 用于邮件报警或者 M/Monit 的初始化名称</span><br><span class="line"> 这类配置可以监控系统资源(CPU, memory, load average...)</span><br></pre></td></tr></table></figure><blockquote><ol start="8"><li>Program</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CHECK PROGRAM &lt;unique name&gt; PATH &lt;executable file&gt; [TIMEOUT &lt;number&gt; SECONDS]</span><br><span class="line"></span><br><span class="line">&lt;path&gt; 可执行程序或脚本的绝对路径. 允许检查程序退出状态. 如果程序没能在 &lt;number&gt; 秒内执行完成, Monit 会终结这个程序, 默认是 300s</span><br><span class="line">程序的输出会被记录, 用于用户界面或者报警, 默认 512 bytes(可以通过 set limits 修改)</span><br></pre></td></tr></table></figure><blockquote><ol start="9"><li>Network</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CHECK NETWORK &lt;unique name&gt; &lt;ADDRESS &lt;ipaddress&gt; | INTERFACE &lt;name&gt;&gt;</span><br><span class="line"></span><br><span class="line"># &lt;ipaddress&gt; 是被监控的 IPv4/IPv6 网卡地址. 用 eth0 也是可以的</span><br></pre></td></tr></table></figure><p>更多配置信息可以参考 Monit 官方文档和实例</p><p><a href="https://mmonit.com/documentation/" target="_blank" rel="noopener">https://mmonit.com/documentation/</a></p><p><a href="https://mmonit.com/wiki/Monit/ConfigurationExamples" target="_blank" rel="noopener">https://mmonit.com/wiki/Monit/ConfigurationExamples</a></p><h2 id="Monit-配置实践"><a href="#Monit-配置实践" class="headerlink" title="Monit 配置实践"></a>Monit 配置实践</h2><ol><li>创建 templates 模板，利用 python 生成 monit 配置文件</li><li>使用 ansible 推送到目标服务器中</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建通用配置，配置日志，邮件告警</span></span><br><span class="line">vim basic.j2</span><br><span class="line"></span><br><span class="line"><span class="comment"># log to monit.log</span></span><br><span class="line"><span class="built_in">set</span> logfile /var/<span class="built_in">log</span>/monit.log</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> daemon &#123;&#123; monit_poll_interval &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> eventqueue basedir /var/lib/monit/events slots 5000</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> mailserver smtp.xxx.com port 465</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> alert xxx@xxx.com &#123; nonexist, timeout, resource &#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> mail-format &#123;</span><br><span class="line">  from: xxx@xxx.com</span><br><span class="line">  subject: monit alert -- <span class="variable">$SERVICE</span> <span class="variable">$EVENT</span> at <span class="variable">$DATE</span></span><br><span class="line">  message: <span class="variable">$EVENT</span> Service <span class="variable">$SERVICE</span></span><br><span class="line">                Date:        <span class="variable">$DATE</span></span><br><span class="line">                Action:      <span class="variable">$ACTION</span></span><br><span class="line">                Host:        <span class="variable">$HOST</span></span><br><span class="line">                Description: <span class="variable">$DESCRIPTION</span></span><br><span class="line"></span><br><span class="line">           Your faithful employee,</span><br><span class="line">           Monit</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建标准应用监控</span></span><br><span class="line">vim daemon_set.j2</span><br><span class="line"></span><br><span class="line">check process xxx with pidfile /run/xxx/daemon.pid</span><br><span class="line">    start program = <span class="string">"/usr/bin/python2  /bin/xxx restart"</span></span><br><span class="line">    stop program = <span class="string">"/usr/bin/python2 /bin/xxx stop"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> 10 restarts within 10 cycles <span class="keyword">then</span> unmonitor</span><br><span class="line"></span><br><span class="line">check process xxxx with matching xxxx</span><br><span class="line">start program = <span class="string">"/etc/init.d/xxxx start"</span></span><br><span class="line">stop program = <span class="string">"/etc/init.d/xxxx stop"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> 10 restarts within 10 cycles <span class="keyword">then</span> unmonitor</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建非标准应用监控</span></span><br><span class="line">vim logic_service.j2</span><br><span class="line"></span><br><span class="line">check process &#123;&#123; service_name &#125;&#125; with pidfile &#123;&#123; root_dir &#125;&#125;/&#123;&#123; service_name &#125;&#125;/deploy/&#123;&#123; monit_name &#125;&#125;.pid</span><br><span class="line">    start program = <span class="string">"/bin/bash -c'cd &#123;&#123; root_dir &#125;&#125;/&#123;&#123; service_name &#125;&#125;/deploy &amp;&amp; ./start.sh &amp;&gt;start.log '"</span></span><br><span class="line">    stop program = <span class="string">"/bin/bash -c 'cd &#123;&#123; root_dir &#125;&#125;/&#123;&#123; service_name &#125;&#125;/deploy &amp;&amp; ./stop.sh &amp;&gt;stop.log'"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> 5 restarts within 15 cycles <span class="keyword">then</span> unmonitor</span><br><span class="line">    &#123;% <span class="keyword">if</span> memory_usage is defined %&#125;</span><br><span class="line">    <span class="keyword">if</span> total memory usage &gt; &#123;&#123; memory_usage &#125;&#125; <span class="keyword">for</span> 10 cycles <span class="keyword">then</span> restart</span><br><span class="line">    &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://mmonit.com/monit/documentation/monit.html" target="_blank" rel="noopener">Monit Document</a></p><p><a href="https://github.com/freeaquar/notebook/blob/master/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/Monit-%E7%AC%94%E8%AE%B0.md" target="_blank" rel="noopener">Monit 笔记</a></p><p><a href="https://blog.csdn.net/u010039418/article/details/83784195" target="_blank" rel="noopener">Docker 容器内多进程管理——supervisor VS monit</a></p>]]></content>
    
    <summary type="html">
    
      使用Monit替代Supervisor自动化管理和监控服务小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>YAML 入门教程</title>
    <link href="https://wsgzao.github.io/post/yaml/"/>
    <id>https://wsgzao.github.io/post/yaml/</id>
    <published>2020-01-08T06:59:49.000Z</published>
    <updated>2020-01-08T10:52:19.354Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>YAML 是 “YAML Ain’t a Markup Language”（YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：”Yet Another Markup Language”（仍是一种标记语言）。</p><p>YAML 的语法和其他高级语言类似，并且可以简单表达清单、散列表，标量等数据形态。它使用空白符号缩进和大量依赖外观的特色，特别适合用来表达或编辑数据结构、各种配置文件、倾印调试内容、文件大纲（例如：许多电子邮件标题格式和 YAML 非常接近）。</p><p>YAML 的配置文件后缀为 .yml，如：ansible-playbook.yml，Hexo 的配置文件也是_config.yml</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 01 月 09 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/yaml/">https://wsgzao.github.io/post/yaml/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://yaml.org/" target="_blank" rel="noopener">YAML</a></p><hr><h2 id="YAML-简介"><a href="#YAML-简介" class="headerlink" title="YAML 简介"></a>YAML 简介</h2><p>YAML: YAML Ain’t Markup Language</p><p>What It Is: YAML is a human friendly data serialization standard for all programming languages.</p><p>YAML 语言（发音 /ˈjæməl/ ）的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。</p><p>它的基本语法规则如下。</p><ul><li>大小写敏感</li><li>使用缩进表示层级关系</li><li>缩进时不允许使用 Tab 键，只允许使用空格。</li><li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 表示注释，从这个字符一直到行尾，都会被解析器忽略。</span><br></pre></td></tr></table></figure><p>YAML 支持的数据结构有三种。</p><ul><li>对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）</li><li>数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）</li><li>纯量（scalars）：单个的、不可再分的值</li></ul><h2 id="X-分钟速成-Y"><a href="#X-分钟速成-Y" class="headerlink" title="X 分钟速成 Y"></a>X 分钟速成 Y</h2><blockquote><p>其中 Y=yaml</p></blockquote><p>源代码下载： <a href="https://learnxinyminutes.com/docs/files/learnyaml-cn.yaml" target="_blank" rel="noopener">learnyaml-cn.yaml</a></p><p>YAML 是一个数据序列化语言，被设计成人类直接可写可读的。</p><p>它是 JSON 的严格超集，增加了语法显著换行符和缩进，就像 Python。但和 Python 不一样， YAML 根本不容许文字制表符。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># YAML 中的注解看起来像这样。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################</span></span><br><span class="line"><span class="comment"># 标量类型     #</span></span><br><span class="line"><span class="comment">################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 我们的根对象 (它们在整个文件里延续) 将会是一个映射，</span></span><br><span class="line"><span class="comment"># 它等价于在别的语言里的一个字典，哈希表或对象。</span></span><br><span class="line"><span class="attr">key:</span> <span class="string">value</span></span><br><span class="line"><span class="attr">another_key:</span> <span class="string">Another</span> <span class="string">value</span> <span class="string">goes</span> <span class="string">here.</span></span><br><span class="line"><span class="attr">a_number_value:</span> <span class="number">100</span></span><br><span class="line"><span class="comment"># 数字 1 会被解释为数值，而不是一个布尔值。</span></span><br><span class="line"><span class="comment"># 如果你想要的是一个布尔值，使用 true。</span></span><br><span class="line"><span class="attr">scientific_notation:</span> <span class="number">1e+12</span></span><br><span class="line"><span class="attr">boolean:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">null_value:</span> <span class="literal">null</span></span><br><span class="line"><span class="string">key</span> <span class="string">with</span> <span class="attr">spaces:</span> <span class="string">value</span></span><br><span class="line"><span class="comment"># 注意，字符串不必被括在引号中，但也可以被括起来。</span></span><br><span class="line"><span class="attr">however:</span> <span class="string">'A string, enclosed in quotes.'</span></span><br><span class="line"><span class="string">'Keys can be quoted too.'</span><span class="string">:</span> <span class="string">"Useful if you want to put a':'in your key."</span></span><br><span class="line"><span class="string">single</span> <span class="attr">quotes:</span> <span class="string">'have'</span><span class="string">'one'</span><span class="string">'escape pattern'</span></span><br><span class="line"><span class="string">double</span> <span class="attr">quotes:</span> <span class="string">"have many: \", \0, \t, \u263A, \x0d\x0a == \r\n, and more."</span></span><br><span class="line"><span class="comment"># UTF-8/16/32 字符需要被转义 (encoded)</span></span><br><span class="line"><span class="string">Superscript</span> <span class="attr">two:</span> <span class="string">\u00B2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多行字符串既可以写成像一个'文字块'(使用 |)，</span></span><br><span class="line"><span class="comment"># 或像一个'折叠块'(使用'&gt;')。</span></span><br><span class="line"><span class="attr">literal_block:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    This entire block of text will be the value of the'literal_block'key,</span></span><br><span class="line"><span class="string">    with line breaks being preserved.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    The literal continues until de-dented, and the leading indentation is</span></span><br><span class="line"><span class="string">    stripped.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Any lines that are'more-indented'keep the rest of their indentation -</span></span><br><span class="line"><span class="string">        these lines will be indented by 4 spaces.</span></span><br><span class="line"><span class="string"></span><span class="attr">folded_style:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">    This entire block of text will be the value of'folded_style', but this</span></span><br><span class="line"><span class="string">    time, all newlines will be replaced with a single space.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Blank lines, like above, are converted to a newline character.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'More-indented'lines keep their newlines, too -</span></span><br><span class="line"><span class="string">        this text will appear over two lines.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">####################</span></span><br><span class="line"><span class="string"># 集合类型         #</span></span><br><span class="line"><span class="string">####################</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 嵌套是通过缩进完成的。推荐使用 2 个空格的缩进（但非必须）</span></span><br><span class="line"><span class="string"></span><span class="attr">a_nested_map:</span></span><br><span class="line"><span class="attr">  key:</span> <span class="string">value</span></span><br><span class="line"><span class="attr">  another_key:</span> <span class="string">Another</span> <span class="string">Value</span></span><br><span class="line"><span class="attr">  another_nested_map:</span></span><br><span class="line"><span class="attr">    hello:</span> <span class="string">hello</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 映射的键不必是字符串。</span></span><br><span class="line"><span class="number">0.25</span><span class="string">:</span> <span class="string">a</span> <span class="string">float</span> <span class="string">key</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 键也可以是复合型的，比如多行对象 </span></span><br><span class="line"><span class="comment"># 我们用 ? 后跟一个空格来表示一个复合键的开始。</span></span><br><span class="line"><span class="string">?</span> <span class="string">|</span></span><br><span class="line"><span class="string">  This is a key</span></span><br><span class="line"><span class="string">  that has multiple lines</span></span><br><span class="line"><span class="string">: and this is its value</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># YAML 也允许使用复杂键语法表示序列间的映射关系。</span></span><br><span class="line"><span class="string"># 但有些语言的解析器可能会不支持。</span></span><br><span class="line"><span class="string"># 一个例子：</span></span><br><span class="line"><span class="string">? - Manchester United</span></span><br><span class="line"><span class="string">  - Real Madrid</span></span><br><span class="line"><span class="string">: [ 2001-01-01, 2002-02-02 ]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 序列 (等价于列表或数组) 看起来像这样：</span></span><br><span class="line"><span class="string"># 注意'-'算作缩进 </span></span><br><span class="line"><span class="string"></span><span class="attr">a_sequence:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">Item</span> <span class="number">1</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">Item</span> <span class="number">2</span></span><br><span class="line"><span class="bullet">  -</span> <span class="number">0.5</span> <span class="comment"># 序列可以包含不同类型。</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">Item</span> <span class="number">4</span></span><br><span class="line"><span class="attr">  - key:</span> <span class="string">value</span></span><br><span class="line"><span class="attr">    another_key:</span> <span class="string">another_value</span></span><br><span class="line"><span class="bullet">  -</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">This</span> <span class="string">is</span> <span class="string">a</span> <span class="string">sequence</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">inside</span> <span class="string">another</span> <span class="string">sequence</span></span><br><span class="line"><span class="bullet">  -</span> <span class="bullet">-</span> <span class="bullet">-</span> <span class="string">Nested</span> <span class="string">sequence</span> <span class="string">indicators</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">can</span> <span class="string">be</span> <span class="string">collapsed</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 因为 YAML 是 JSON 的超集，你也可以写 JSON 风格的映射和序列：</span></span><br><span class="line"><span class="attr">json_map:</span> <span class="string">&#123;"key":</span> <span class="string">"value"</span><span class="string">&#125;</span></span><br><span class="line"><span class="attr">json_seq:</span> <span class="string">[3,</span> <span class="number">2</span><span class="string">,</span> <span class="number">1</span><span class="string">,</span> <span class="string">"takeoff"</span><span class="string">]</span></span><br><span class="line"><span class="string">and</span> <span class="string">quotes</span> <span class="string">are</span> <span class="attr">optional:</span> <span class="string">&#123;key:</span> <span class="string">[3,</span> <span class="number">2</span><span class="string">,</span> <span class="number">1</span><span class="string">,</span> <span class="string">takeoff]&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#######################</span></span><br><span class="line"><span class="comment"># 其余的 YAML 特性    #</span></span><br><span class="line"><span class="comment">#######################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># YAML 还有一个方便的特性叫'锚'，它能让你很容易在文档中进行文本复用。</span></span><br><span class="line"><span class="comment"># 如下两个键会有相同的值：</span></span><br><span class="line"><span class="attr">anchored_content:</span> <span class="meta">&amp;anchor_name</span> <span class="string">This</span> <span class="string">string</span> <span class="string">will</span> <span class="string">appear</span> <span class="string">as</span> <span class="string">the</span> <span class="string">value</span> <span class="string">of</span> <span class="string">two</span> <span class="string">keys.</span></span><br><span class="line"><span class="attr">other_anchor:</span> <span class="meta">*anchor_name</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 锚也可被用来复制 / 继承属性 </span></span><br><span class="line"><span class="attr">base:</span> <span class="meta">&amp;base</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">Everyone</span> <span class="string">has</span> <span class="string">same</span> <span class="string">name</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The regexp &lt;&lt; is called Merge Key Language-Independent Type.</span></span><br><span class="line"><span class="comment"># 它表明指定映射的所有键值会插入到当前的映射中。</span></span><br><span class="line"></span><br><span class="line"><span class="attr">foo:</span> <span class="meta">&amp;foo</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*base</span></span><br><span class="line"><span class="attr">  age:</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="attr">bar:</span> <span class="meta">&amp;bar</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*base</span></span><br><span class="line"><span class="attr">  age:</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># foo 和 bar 将都含有 name: Everyone has same name</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># YAML 还有标签，你可以用它显示地声明类型。</span></span><br><span class="line"><span class="attr">explicit_string:</span> <span class="type">!!str</span> <span class="number">0.5</span></span><br><span class="line"><span class="comment"># 一些解析器实现特定语言的标签，就像这个针对 Python 的复数类型。</span></span><br><span class="line"><span class="attr">python_complex_number:</span> <span class="type">!!python</span><span class="string">/complex</span> <span class="number">1</span><span class="string">+2j</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 我们也可以在 YAML 的复合键中使用特定语言的标签 </span></span><br><span class="line"><span class="string">?</span> <span class="type">!!python</span><span class="string">/tuple</span> <span class="string">[5,</span> <span class="number">7</span><span class="string">]</span></span><br><span class="line"><span class="string">:</span> <span class="string">Fifty</span> <span class="string">Seven</span></span><br><span class="line"><span class="comment"># 将会是 Python 中的  &#123;(5, 7):'Fifty Seven'&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">####################</span></span><br><span class="line"><span class="comment"># 其余的 YAML 类型 #</span></span><br><span class="line"><span class="comment">####################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 除了字符串和数字，YAML 还能理解其它标量。</span></span><br><span class="line"><span class="comment"># ISO 格式的日期和日期时间文本也可以被解析。</span></span><br><span class="line"><span class="attr">datetime:</span> <span class="number">2001</span><span class="bullet">-12</span><span class="bullet">-15</span><span class="attr">T02:59:43.1Z</span></span><br><span class="line"><span class="attr">datetime_with_spaces:</span> <span class="number">2001</span><span class="bullet">-12</span><span class="bullet">-14</span> <span class="number">21</span><span class="string">:59:43.10</span> <span class="bullet">-5</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2002</span><span class="bullet">-12</span><span class="bullet">-14</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个 !!binary 标签表明这个字符串实际上 </span></span><br><span class="line"><span class="comment"># 是一个用 base64 编码表示的二进制 blob。</span></span><br><span class="line"><span class="attr">gif_file:</span> <span class="type">!!binary</span> <span class="string">|</span></span><br><span class="line"><span class="string">  R0lGODlhDAAMAIQAAP//9/X17unp5WZmZgAAAOfn515eXvPz7Y6OjuDg4J+fn5</span></span><br><span class="line"><span class="string">  OTk6enp56enmlpaWNjY6Ojo4SEhP/++f/++f/++f/++f/++f/++f/++f/++f/+</span></span><br><span class="line"><span class="string">  +f/++f/++f/++f/++f/++SH+Dk1hZGUgd2l0aCBHSU1QACwAAAAADAAMAAAFLC</span></span><br><span class="line"><span class="string">  AgjoEwnuNAFOhpEMTRiggcz4BNJHrv/zCFcLiwMWYNG84BwwEeECcgggoBADs=</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># YAML 还有一个集合类型，它看起来像这样：</span></span><br><span class="line"><span class="string"></span><span class="attr">set:</span></span><br><span class="line">  <span class="string">?</span> <span class="string">item1</span></span><br><span class="line">  <span class="string">?</span> <span class="string">item2</span></span><br><span class="line">  <span class="string">?</span> <span class="string">item3</span></span><br><span class="line"><span class="attr">or:</span> <span class="string">&#123;item1,</span> <span class="string">item2,</span> <span class="string">item3&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 集合只是值为 null 的映射；上面的集合等价于：</span></span><br><span class="line"><span class="attr">set2:</span></span><br><span class="line"><span class="attr">  item1:</span> <span class="literal">null</span></span><br><span class="line"><span class="attr">  item2:</span> <span class="literal">null</span></span><br><span class="line"><span class="attr">  item3:</span> <span class="literal">null</span></span><br><span class="line"></span><br><span class="line"><span class="string">...</span>  <span class="comment"># document end</span></span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://yaml.org/" target="_blank" rel="noopener">YAML official website</a></p><p><a href="http://codebeautify.org/yaml-validator" target="_blank" rel="noopener">Online YAML Validator</a></p><p><a href="https://learnxinyminutes.com/docs/zh-cn/yaml-cn/" target="_blank" rel="noopener">X 分钟速成 Y</a></p><p><a href="https://www.runoob.com/w3cnote/yaml-intro.html" target="_blank" rel="noopener">YAML 入门教程</a></p>]]></content>
    
    <summary type="html">
    
      YAML入门教程
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Jenkins export and import jobs 迁移导出导入任务实践小结</title>
    <link href="https://wsgzao.github.io/post/jenkins-import/"/>
    <id>https://wsgzao.github.io/post/jenkins-import/</id>
    <published>2020-01-06T06:59:49.000Z</published>
    <updated>2020-02-07T03:53:54.904Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我遇到的 Jenkins 迁移项目并非可以通过简单的物理文件复制就可以轻松解决，需要考虑上千个不同项目的 jobs 分离，Jenkins 1.x 和 2.x 大版本兼容性，Jenkins Plugins 插件，Jenkins Credentials 凭证，Jenkins Restrict 节点约束，按 view 分类不同项目的 jobs 等各种因素。这次对 Jenkins 迁移做了大量的研究和实践，希望总结出来的方法能对各位有帮助。</p><blockquote><p>Jenkins export and import jobs 迁移导出导入任务实践小结</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 01 月 06 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/jenkins-import/">https://wsgzao.github.io/post/jenkins-import/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://plugins.jenkins.io/" target="_blank" rel="noopener">Jenkins Plugins Index</a></p><hr><h2 id="export-and-import-jobs-in-Jenkins"><a href="#export-and-import-jobs-in-Jenkins" class="headerlink" title="export and import jobs in Jenkins"></a>export and import jobs in Jenkins</h2><p>Is it possible to exchange jobs between 2 different Jenkins’? I’m searching for a way to export/import jobs.</p><h2 id="Solutions-Answers"><a href="#Solutions-Answers" class="headerlink" title="Solutions/Answers:"></a>Solutions/Answers:</h2><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1:"></a>Solution 1:</h3><p>Jenkins has a rather good wiki, albeit hard to read when you’re new to CI software…</p><p>They offer a simple solution for <a href="https://wiki.jenkins-ci.org/display/JENKINS/Administering+Jenkins#AdministeringJenkins-Moving%2Fcopying%2Frenamingjobs" target="_blank" rel="noopener">moving jobs between servers</a></p><p>The trick probably was the need to reload config from the Jenkins Configuration Page.</p><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution 2:"></a>Solution 2:</h3><p>Probably use jenkins command line is another option, see <a href="https://wiki.jenkins-ci.org/display/JENKINS/Jenkins+CLI" target="_blank" rel="noopener">https://wiki.jenkins-ci.org/display/JENKINS/Jenkins+CLI</a></p><ul><li>create-job: Creates a new job by reading stdin as a configuration XML file.</li><li>get-job: Dumps the job definition XML to stdout</li></ul><p>So you can do</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -jar jenkins-cli.jar -s http://server get-job myjob &gt; myjob.xml</span><br><span class="line">java -jar jenkins-cli.jar -s http://server create-job newmyjob &lt; myjob.xml</span><br></pre></td></tr></table></figure><p>It works fine for me and I am used to store in inside my version control system</p><h3 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution 3:"></a>Solution 3:</h3><p>A one-liner:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s http://OLD_JENKINS/job/JOBNAME/config.xml | curl -X POST &apos;http://NEW_JENKINS/createItem?name=JOBNAME&apos; --header &quot;Content-Type: application/xml&quot; -d @-</span><br></pre></td></tr></table></figure><p>With authentication:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s http:///&lt;USER&gt;:&lt;API_TOKEN&gt;@OLD_JENKINS/job/JOBNAME/config.xml | curl -X POST &apos;http:///&lt;USER&gt;:&lt;API_TOKEN&gt;@NEW_JENKINS/createItem?name=JOBNAME&apos; --header &quot;Content-Type: application/xml&quot; -d @-</span><br></pre></td></tr></table></figure><p>With Crumb, if CSRF is active (<a href="https://stackoverflow.com/questions/38137760/jenkins-rest-api-create-job" target="_blank" rel="noopener">see details here</a>):</p><p>Get crumb with:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ CRUMB_OLD=$(curl -s &apos;http://&lt;USER&gt;:&lt;API_TOKEN&gt;@OLD_JENKINS/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,&quot;:&quot;,//crumb)&apos;)</span><br><span class="line">$ CRUMB_NEW=$(curl -s &apos;http://&lt;USER&gt;:&lt;API_TOKEN&gt;@NEW_JENKINS/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,&quot;:&quot;,//crumb)&apos;)</span><br></pre></td></tr></table></figure><p>Apply crumb with <code>-H CRUMB</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s -H $CRUMB_OLD http:///&lt;USER&gt;:&lt;API_TOKEN&gt;@OLD_JENKINS/job/JOBNAME/config.xml | curl -X POST -H $CRUMB_NEW &apos;http:///&lt;USER&gt;:&lt;API_TOKEN&gt;@NEW_JENKINS/createItem?name=JOBNAME&apos; --header &quot;Content-Type: application/xml&quot; -d @-</span><br></pre></td></tr></table></figure><h3 id="Solution-4"><a href="#Solution-4" class="headerlink" title="Solution 4:"></a>Solution 4:</h3><p>There’s a plugin called <a href="https://wiki.jenkins-ci.org/display/JENKINS/Job+Import+Plugin" target="_blank" rel="noopener">Job Import Plugin</a> that may be what you are looking for. I have used it. It does have issues with importing projects from a server that doesn’t allow anonymous access.</p><p>For Completeness:<br>If you have command line access to both, you can do the procedure already mentioned by Khez for <a href="https://wiki.jenkins-ci.org/display/JENKINS/Administering+Jenkins#AdministeringJenkins-Moving/copying/renamingjobs" target="_blank" rel="noopener">Moving, Copying and Renaming Jenkins Jobs</a>.</p><h3 id="Solution-5"><a href="#Solution-5" class="headerlink" title="Solution 5:"></a>Solution 5:</h3><p>Go to your Jenkins server’s front page, click on REST API at the bottom of the page:</p><blockquote><p>Create Job</p></blockquote><p>To create a new job, post <code>config.xml</code> to this URL with query parameter <code>name=JOBNAME</code>. You need to send a <code>Content-Type: application/xml</code> header. You’ll get <code>200</code> status code if the creation is successful, or <code>4xx/5xx</code> code if it fails. <code>config.xml</code> is the format Jenkins uses to store the project in the file system, so you can see examples of them in the Jenkins home directory, or by retrieving the XML configuration of existing jobs from <code>/job/JOBNAME/config.xml</code>.</p><h3 id="Solution-6"><a href="#Solution-6" class="headerlink" title="Solution 6:"></a>Solution 6:</h3><p>In my Jenkins instance (version 1.548) the configuration file is at:</p><p><code>/var/lib/jenkins/jobs/-the-project-name-/config.xml</code></p><p>Owned by jenkins user and jenkins group with 644 permissions. Copying the file to and from here should work. I haven’t tried changing it directly but have backed-up the config from this spot in case the project needs to be setup again.</p><h3 id="Solution-7"><a href="#Solution-7" class="headerlink" title="Solution 7:"></a>Solution 7:</h3><p><strong><a href="https://wiki.jenkins.io/display/JENKINS/Job+Import+Plugin" target="_blank" rel="noopener">Job Import plugin</a></strong> is the easy way here to import jobs from another Jenkins instance. Just need to provide the URL of the source Jenkins instance. The Remote Jenkins URL can take any of the following types of URLs:</p><ul><li><p><code>http://$JENKINS</code> – get all jobs on remote instance</p></li><li><p><code>http://$JENKINS/job/$JOBNAME</code> – get a single job</p></li><li><p><code>http://$JENKINS/view/$VIEWNAME</code> – get all jobs in a particular view</p></li></ul><h3 id="Solution-8"><a href="#Solution-8" class="headerlink" title="Solution 8:"></a>Solution 8:</h3><p>Thanks to Larry Cai’s answer I managed to create a script to backup all my Jenkins jobs. I created a job that runs this every week. In case someone finds it useful, here it is:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#IFS for jobs with spaces.</span><br><span class="line">SAVEIFS=$IFS</span><br><span class="line">IFS=$(echo -en &quot;\n\b&quot;)</span><br><span class="line">for i in $(java -jar /run/jenkins/war/WEB-INF/jenkins-cli.jar -s http://server:8080/ list-jobs);</span><br><span class="line">do</span><br><span class="line">  java -jar /run/jenkins/war/WEB-INF/jenkins-cli.jar -s http://server:8080/ get-job $&#123;i&#125; &gt; $&#123;i&#125;.xml;</span><br><span class="line">done</span><br><span class="line">IFS=$SAVEIFS</span><br><span class="line">mkdir deploy</span><br><span class="line">tar cvfj &quot;jenkins-jobs.tar.bz2&quot; ./*.xml</span><br></pre></td></tr></table></figure><h3 id="Solution-9"><a href="#Solution-9" class="headerlink" title="Solution 9:"></a>Solution 9:</h3><p>Jenkins export jobs to a directory</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line">   SAVEIFS=$IFS</span><br><span class="line">   IFS=$(echo -en &quot;\n\b&quot;)</span><br><span class="line">   declare -i j=0</span><br><span class="line">   for i in $(java -jar jenkins-cli.jar -s http://server:8080/jenkins list-jobs  --username **** --password ***);</span><br><span class="line">   do</span><br><span class="line">   let &quot;j++&quot;;</span><br><span class="line">   echo $j;</span><br><span class="line">   if [ $j -gt 283 ] // If you have more jobs do it in chunks as it will terminate in the middle of the process. So Resume your job from where it ends.</span><br><span class="line">    then</span><br><span class="line">   java -jar jenkins-cli.jar -s http://lxvbmcbma:8080/jenkins get-job --username **** --password **** $&#123;i&#125; &gt; $&#123;i&#125;.xml;</span><br><span class="line">   echo &quot;done&quot;;</span><br><span class="line">   fi</span><br><span class="line">   done</span><br></pre></td></tr></table></figure><p>Import jobs</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for f in *.xml;</span><br><span class="line">do</span><br><span class="line">echo &quot;Processing $&#123;f%.*&#125; file..&quot;; //truncate the .xml extention and load the xml file for job creation</span><br><span class="line">java -jar jenkins-cli.jar -s http://server:8080/jenkins create-job $&#123;f%.*&#125;  &lt; $f</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="Solution-10"><a href="#Solution-10" class="headerlink" title="Solution 10:"></a>Solution 10:</h3><p>Simple php script worked for me.</p><p><strong>Export:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// add all job codes in the array</span><br><span class="line">$jobs = array(&quot;job1&quot;, &quot;job2&quot;, &quot;job3&quot;);</span><br><span class="line"></span><br><span class="line">foreach ($jobs as $value)</span><br><span class="line">&#123;</span><br><span class="line">    fwrite(STDOUT, $value. &quot; \n&quot;) or die(&quot;Unable to open file!&quot;);</span><br><span class="line">    $path = &quot;http://server1:8080/jenkins/job/&quot;.$value.&quot;/config.xml&quot;;</span><br><span class="line">    $myfile = fopen($value.&quot;.xml&quot;, &quot;w&quot;);</span><br><span class="line">    fwrite($myfile, file_get_contents($path));</span><br><span class="line">    fclose($myfile);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Import:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">// add all job codes in the array</span><br><span class="line">$jobs = array(&quot;job1&quot;, &quot;job2&quot;, &quot;job3&quot;);</span><br><span class="line"></span><br><span class="line">foreach ($arr as $value)</span><br><span class="line">&#123;</span><br><span class="line">    fwrite(STDOUT, $value. &quot; \n&quot;) or die(&quot;Unable to open file!&quot;);</span><br><span class="line">    $cmd = &quot;java -jar jenkins-cli.jar -s http://server2:8080/jenkins/ create-job &quot;.$value.&quot; &lt; &quot;.$value.&quot;.xml&quot;;</span><br><span class="line">    echo exec($cmd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution-11"><a href="#Solution-11" class="headerlink" title="Solution 11:"></a>Solution 11:</h3><p>This does not work for existing jobs, however there is <a href="http://docs.openstack.org/infra/jenkins-job-builder/" target="_blank" rel="noopener">Jenkins job builder</a>.</p><p>This allows one to keep job definitions in yaml files and in a git repo which is very portable.</p><h3 id="Solution-12"><a href="#Solution-12" class="headerlink" title="Solution 12:"></a>Solution 12:</h3><p>For those of us in the Windows world who may or may not have Bash available, here’s my PowerShell port of <strong>Katu</strong> and <strong>Larry Cai</strong>‘s approach. Hope it helps someone.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">##### Config vars #####</span><br><span class="line">$serverUri = &apos;http://localhost:8080/&apos; # URI of your Jenkins server</span><br><span class="line">$jenkinsCli = &apos;C:\Program Files (x86)\Jenkins\war\WEB-INF\jenkins-cli.jar&apos; # Path to jenkins-cli.jar on your machine</span><br><span class="line">$destFolder = &apos;C:\Jenkins Backup\&apos; # Output folder (will be created if it doesn&apos;t exist)</span><br><span class="line">$destFile = &apos;jenkins-jobs.zip&apos; # Output filename (will be overwritten if it exists)</span><br><span class="line">########################</span><br><span class="line"></span><br><span class="line">$work = Join-Path ([System.IO.Path]::GetTempPath()) ([System.IO.Path]::GetRandomFileName())</span><br><span class="line">New-Item -ItemType Directory -Force -Path $work | Out-Null # Suppress output noise</span><br><span class="line">echo &quot;Created a temp working folder: $work&quot;</span><br><span class="line"></span><br><span class="line">$jobs = (java -jar $jenkinsCli -s $serverUri list-jobs)</span><br><span class="line">echo &quot;Found $($jobs.Length) existing jobs: [$jobs]&quot;</span><br><span class="line"></span><br><span class="line">foreach ($j in $jobs)</span><br><span class="line">&#123;</span><br><span class="line">    $outfile = Join-Path $work &quot;$j.xml&quot;</span><br><span class="line">    java -jar $jenkinsCli -s $serverUri get-job $j | Out-File $outfile</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;Saved $($jobs.Length) jobs to temp XML files&quot;</span><br><span class="line"></span><br><span class="line">New-Item -ItemType Directory -Force -Path $destFolder | Out-Null # Suppress output noise</span><br><span class="line">echo &quot;Found (or created) $destFolder folder&quot;</span><br><span class="line"></span><br><span class="line">$destPath = Join-Path $destFolder $destFile</span><br><span class="line">Get-ChildItem $work -Filter *.xml |</span><br><span class="line">    Write-Zip -Level 9 -OutputPath $destPath -FlattenPaths |</span><br><span class="line">    Out-Null # Suppress output noise</span><br><span class="line">echo &quot;Copied $($jobs.Length) jobs to $destPath&quot;</span><br><span class="line"></span><br><span class="line">Remove-Item $work -Recurse -Force</span><br><span class="line">echo &quot;Removed temp working folder&quot;</span><br></pre></td></tr></table></figure><h3 id="Solution-13"><a href="#Solution-13" class="headerlink" title="Solution 13:"></a>Solution 13:</h3><p>It is very easy just download plugin name</p><p><a href="https://wiki.jenkins.io/display/JENKINS/Job+Import+Plugin" target="_blank" rel="noopener">Job Import Plugin</a></p><p>Enter the URL of your Remote Jenkins server and it will import the jobs automatically</p><h3 id="Solution-14"><a href="#Solution-14" class="headerlink" title="Solution 14:"></a>Solution 14:</h3><p>The most easy way, with direct access to the machine is to copy the job folder from first jenkins to another one (you can exclude workspaces – <code>workspace</code> folder), because the whole job configuration is stored in the xml file on the disk.</p><p>Then in the new jenkins just <code>reload configuration</code> in the global settings (admin access is required) should be enough, if not, then you will need to restart Jenkins tool.</p><p>Another way can be to use plugins mentioned above this post.</p><p>edit:<br>– in case you can probably also exclude <code>modules</code> folders</p><h2 id="Jenkins-迁移方案小结"><a href="#Jenkins-迁移方案小结" class="headerlink" title="Jenkins 迁移方案小结"></a>Jenkins 迁移方案小结</h2><blockquote><p>上面列举有 14 种方法居多，但大多数是基于方案 4 进行扩展</p></blockquote><p>上面列举的方案基本已经非常全了，感觉是不是有点眼花？其实归纳总结主要有以下 4 种</p><ol><li>官方的 Moving/copying/renaming jobs，即所谓的物理文件迁移，如果情况复杂此方案不推荐</li><li>基于 Jenkins CLI，该方案需要依赖 jenkins-cli.jar 包括 java 使用范围具有一定局限性，不推荐</li><li>基于类似 Job Import Plugin 插件形式，该类方案普适性较差，不推荐</li><li>基于 Jenkins REST API，核心是获取 <code>&lt;jenkinshost&gt;/job/&lt;jobname&gt;/config.xml</code>，效果最佳</li></ol><h3 id="REST-API"><a href="#REST-API" class="headerlink" title="REST API"></a>REST API</h3><p>Many objects of Jenkins provide the remote access API. They are available at /…/api/ where “…” portion is the object for which you’d like to access.</p><blockquote><p>XML API</p></blockquote><p>Access data exposed in HTML as XML for machine consumption. Schema is also available.<br>You can also specify optional XPath to control the fragment you’d like to obtain (but see below). For example, ../api/xml?xpath=/<em>/</em>[0].</p><p>For XPath that matches multiple nodes, you need to also specify the “wrapper” query parameter to specify the name of the root XML element to be create so that the resulting XML becomes well-formed.</p><p>Similarly exclude query parameter can be used to exclude nodes that match the given XPath from the result. This is useful for trimming down the amount of data you fetch (but again see below). This query parameter can be specified multiple times.</p><p>XPath filtering is powerful, and you can have it only return a very small data, but note that the server still has to build a full DOM of the raw data, which could cause a large memory spike. To avoid overloading the server, consider using the tree parameter, or use the xpath parameter in conjunction with the tree parameter. When used together, the result of the tree parameter filtering is built into DOM, then the XPath is applied to compute the final return value. In this way, you can often substantially reduce the size of DOM built in memory.</p><blockquote><p>JSON API</p></blockquote><p>Access the same data as JSON for JavaScript-based access. tree may be used.</p><blockquote><p>Python API</p></blockquote><p>Access the same data as Python for Python clients. This can be parsed into Python object as eval(urllib.urlopen(“…”).read()) and the resulting object tree is identical to that of JSON. However, when you do this, beware of the security implication. If you are connecting to a non-trusted Jenkins, the server can send you malicious Python programs.</p><p>In Python 2.6 or later you can safely parse this output using ast.literal_eval(urllib.urlopen(“…”).read())</p><p>For more information about remote API in Jenkins, see the documentation.</p><p><a href="https://jenkins.io/redirect/remote-api" target="_blank" rel="noopener">https://jenkins.io/redirect/remote-api</a></p><h3 id="使用-curl-和-Jenkins-REST-API"><a href="#使用-curl-和-Jenkins-REST-API" class="headerlink" title="使用 curl 和 Jenkins REST API"></a>使用 curl 和 Jenkins REST API</h3><blockquote><p>使用 Jenkins REST API 建议关闭 CSRF 防护</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># To retrieve the job config.xml</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/job/&lt;jobname&gt;/config.xml'</span> -u username:API_TOKEN -o &lt;jobname&gt;.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># to use this config to create a new job</span></span><br><span class="line">curl -s -XPOST <span class="string">'&lt;jenkinshost&gt;/createItem?name=&lt;jobname&gt;'</span> -u username:API_TOKEN --data-binary @&lt;jobname&gt;.xml -H <span class="string">"Content-Type:text/xml"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get all jenkins jobs</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/api/json?pretty=true'</span> -u username:API_TOKEN -o jobs.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># get jenkins view</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/view/&lt;viewname&gt;/api/json'</span> -u username:API_TOKEN -o view.json</span><br></pre></td></tr></table></figure><p>Obviously, replace:</p><ul><li>username API_TOKEN with your username and password/API_Token</li><li>jenkinshost with your Jenkins URL</li><li>jobname with the name of the job that you created via the UI</li></ul><p><a href="https://json-csv.com/" target="_blank" rel="noopener">JSON to CSV Converter</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">mkdir config_xml</span><br><span class="line">vim jobs.txt</span><br><span class="line">vim jenkins_jobs_migration.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line">source_jenkins_host=<span class="string">"xxx"</span></span><br><span class="line">source_jenkins_username=<span class="string">"xxx"</span></span><br><span class="line">source_jenkins_password=<span class="string">"xxx"</span></span><br><span class="line"></span><br><span class="line">target_jenkins_host=<span class="string">"xxx"</span></span><br><span class="line">target_jenkins_username=<span class="string">"xxx"</span></span><br><span class="line">target_jenkins_password=<span class="string">"xxx"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">pull</span></span>() &#123;</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> `cat jobs.txt`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;line&#125;</span></span><br><span class="line">        curl -X GET <span class="variable">$&#123;source_jenkins_host&#125;</span>job/<span class="variable">$&#123;line&#125;</span>/config.xml -u <span class="variable">$&#123;source_jenkins_username&#125;</span>:<span class="variable">$&#123;source_jenkins_password&#125;</span> -o config_xml/<span class="variable">$&#123;line&#125;</span>.xml</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">push</span></span>() &#123;</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> `cat jobs.txt`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$line</span></span><br><span class="line">        httprc=$(curl -s -XPOST <span class="variable">$&#123;target_jenkins_host&#125;</span>job/<span class="variable">$&#123;line&#125;</span>/doDelete -u <span class="variable">$&#123;target_jenkins_username&#125;</span>:<span class="variable">$&#123;target_jenkins_password&#125;</span>)</span><br><span class="line">        curl -s -XPOST <span class="variable">$&#123;target_jenkins_host&#125;</span>createItem?name=<span class="variable">$&#123;line&#125;</span> -u <span class="variable">$&#123;target_jenkins_username&#125;</span>:<span class="variable">$&#123;target_jenkins_password&#125;</span> --data-binary @config_xml/<span class="variable">$&#123;line&#125;</span>.xml -H <span class="string">"Content-Type:text/xml"</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    push)</span><br><span class="line">        push</span><br><span class="line">        ;;</span><br><span class="line">    pull)</span><br><span class="line">        pull</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$NAME</span> &#123;pull|push&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h3 id="使用-python-编写-api-jenkins-py-核心逻辑"><a href="#使用-python-编写-api-jenkins-py-核心逻辑" class="headerlink" title="使用 python 编写 api_jenkins.py 核心逻辑"></a>使用 python 编写 api_jenkins.py 核心逻辑</h3><blockquote><p>暂不方便公开</p></blockquote><ol><li>支持读取 context.json 配置文件使用 pipeline.j2 模板自动生成不同类型的 pipeline.xml 导入文件</li><li>支持按 view 或者 job export 导出 job config.xml 配置信息</li><li>支持按 view 或者 job import 导入 job config.xml 配置信息</li></ol><h2 id="Jenkins-Plugin"><a href="#Jenkins-Plugin" class="headerlink" title="Jenkins Plugin"></a>Jenkins Plugin</h2><p>迁移插件可以通过上传 <code>.hpi</code> 一次性搞定，当然你也可用使用 REST API 或者 jenkins-cli</p><p><a href="https://jenkins.io/doc/book/managing/plugins/" target="_blank" rel="noopener">Managing Plugins</a></p><h2 id="Jenkins-Backup"><a href="#Jenkins-Backup" class="headerlink" title="Jenkins Backup"></a>Jenkins Backup</h2><blockquote><p>archive jenkins setting and plugins</p></blockquote><p>大家应该都知道 Jenkins 备份插件目前主要就 2 种选择:</p><ul><li><a href="https://plugins.jenkins.io/backup" target="_blank" rel="noopener">Backup</a></li><li><a href="https://plugins.jenkins.io/periodicbackup" target="_blank" rel="noopener">Periodic Backup</a></li></ul><p>严格意义上来说应该只能选择 Periodic Backup，但是如果是需要定期备份自然离不开编写 Bash 脚本</p><p><a href="https://github.com/sue445/jenkins-backup-script" target="_blank" rel="noopener">jenkins-backup-script</a></p><h2 id="Jenkins-API-Token"><a href="#Jenkins-API-Token" class="headerlink" title="Jenkins API Token"></a>Jenkins API Token</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hudson.model.*</span><br><span class="line"><span class="keyword">import</span> jenkins.model.*</span><br><span class="line"><span class="keyword">import</span> jenkins.security.*</span><br><span class="line"><span class="keyword">import</span> jenkins.security.apitoken.*</span><br><span class="line"></span><br><span class="line"><span class="comment">// you can change the "admin" name</span></span><br><span class="line"><span class="comment">// the false is to explicitely ask to not create a user who does not exist yet</span></span><br><span class="line"><span class="keyword">def</span> user = User.get(<span class="string">"gop.bot@garena.com"</span>, <span class="literal">false</span>)</span><br><span class="line"><span class="keyword">def</span> prop = user.getProperty(ApiTokenProperty.<span class="keyword">class</span>)</span><br><span class="line"><span class="comment">// the name is up to you</span></span><br><span class="line"><span class="keyword">def</span> result = prop.tokenStore.generateNewToken(<span class="string">"token-created-by-script"</span>)</span><br><span class="line">user.save()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result.plainValue</span><br></pre></td></tr></table></figure><p><a href="https://issues.jenkins-ci.org/browse/JENKINS-52339" target="_blank" rel="noopener">New API Token system should allow tokens to be created for service accounts</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://config9.com/apps/jenkins/export-import-jobs-in-jenkins/" target="_blank" rel="noopener">Export/import jobs in Jenkins</a></p><p><a href="https://wiki.jenkins.io/display/JENKINS/Administering+Jenkins#AdministeringJenkins-Moving%2Fcopying%2Frenamingjobs" target="_blank" rel="noopener">Moving/copying/renaming jobs</a></p><p><a href="https://wiki.jenkins.io/display/JENKINS/Jenkins+CLI" target="_blank" rel="noopener">Jenkins CLI</a></p><p><a href="https://support.cloudbees.com/hc/en-us/articles/220857567-How-to-create-a-job-using-the-REST-API-and-cURL-" target="_blank" rel="noopener">How to create a job using the REST API and cURL?</a></p><p><a href="https://wiki.jenkins-ci.org/display/JENKINS/Remote+access+API" target="_blank" rel="noopener">Jenkins Remote access API</a></p>]]></content>
    
    <summary type="html">
    
      Jenkins export and import jobs 迁移导出导入任务实践小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Jenkins Plugins 常用插件推荐</title>
    <link href="https://wsgzao.github.io/post/jenkins-plugins/"/>
    <id>https://wsgzao.github.io/post/jenkins-plugins/</id>
    <published>2019-12-16T06:59:49.000Z</published>
    <updated>2019-12-26T07:43:05.821Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>开源版本的 Jenkins 具有三大能力：Master-Slave 的分布式构建调度能力、Pipeline 编排能力、强大的开源生态（插件）能力。2017 年 4 月，Jenkins 创始人 KK（Kohsuke Kawaguchi ）来到中国，交流中他也明确表示 Jenkins 的成功主要取决于其开源生态系统，Jenkins 有 1400 多个插件可供使用。因为有开源的插件生态系统的存在，Jenkins 要用得好，插件一定是不能少的，需要我们充分发现和使用插件来实现我们的需求，而不是重复造轮子，自己去实现。</p><blockquote><p>Jenkins Plugins 常用插件推荐</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 12 月 16 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/jenkins-plugins/">https://wsgzao.github.io/post/jenkins-plugins/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://plugins.jenkins.io/" target="_blank" rel="noopener">Jenkins Plugins Index</a></p><hr><h2 id="用户及权限"><a href="#用户及权限" class="headerlink" title="用户及权限"></a>用户及权限</h2><p>Jenkins 用户权限管理是 Jenkins Administration 中非常很重要的环节，由于大部分企业都会有自己的域控管理，所以和 LDAP 集成并基于用户组实现权限模型设计与管理是企业级 Jenkins 实践的重要内容。</p><ol><li><a href="https://plugins.jenkins.io/ldap" target="_blank" rel="noopener">LDAP</a> 这个插件允许使用 LDAP 对用户进行认证，LDAP 服务器可以为 Active Directory 或者 OpenLDAP。</li><li><a href="https://plugins.jenkins.io/active-directory" target="_blank" rel="noopener">Active Directory</a> 这个插件允许使用 Active Directory 对用户进行认证，同时结合诸如 Matrix Authorization Strategy 插件，可以识别用户所在的所有用户组，对用户授权进行灵活配置。<br> 基于 Windows Active Directory 进行域管理的企业，推荐采用 Active Directory。</li><li><a href="https://plugins.jenkins.io/github-oauth" target="_blank" rel="noopener">GitHub Authentication</a> 这个插件提供了使用 GitHub 进行用户认证和授权的方案。</li><li><a href="https://plugins.jenkins.io/gitlab-oauth" target="_blank" rel="noopener">Gitlab Authentication</a> 这个插件提供了使用 GitLab 进行用户认证和授权的方案。</li><li><a href="https://plugins.jenkins.io/matrix-auth" target="_blank" rel="noopener">Matrix Authorization Strategy</a> 这个插件提供了基于矩阵的授权策略，支持全局和项目级别的配置。</li><li><a href="https://plugins.jenkins.io/role-strategy" target="_blank" rel="noopener">Role-based Authorization Strategy</a> 这个插件提供了一种基于角色（Role）的用户权限管理策略，支持创建 global 角色、Project 角色、Slave 角色，以及给用户分配这些角色。这款插件是最常用的 Jenkins 权限策略和管理插件。</li></ol><p><a href="https://www.jianshu.com/p/6c274d9b22ad" target="_blank" rel="noopener">Jenkins 自动化部署 - 权限管控篇 (六)</a></p><h2 id="代码管理"><a href="#代码管理" class="headerlink" title="代码管理"></a>代码管理</h2><p>Jenkins 项目中配置 Source Code Management 去下载代码进行构建任务，是非常普遍的应用场景。Jenkins 插件支持很多 SCM 的系统，使用最常见的是 Git 和 SVN。</p><ol><li><a href="https://plugins.jenkins.io/git" target="_blank" rel="noopener">Git</a> 支持使用 Github、GitLab、Gerrit 等系统管理代码仓库。</li><li><a href="https://plugins.jenkins.io/subversion" target="_blank" rel="noopener">Subversion</a> 支持 Subversion 系统管理源代码。</li></ol><h2 id="项目及视图"><a href="#项目及视图" class="headerlink" title="项目及视图"></a>项目及视图</h2><p>Jenkins 中对 Project 和 view 的管理，是用户日常工作中使用很多的功能。</p><ol><li><a href="https://plugins.jenkins.io/cloudbees-folder" target="_blank" rel="noopener">Folder</a> 这个插件支持用户使用目录管理项目，目录支持嵌套，并且支持目录中创建视图。</li><li>List view Jenkins 默认支持 List 类型的视图，用户可以创建 List 视图过滤所关心的项目。</li><li><a href="https://plugins.jenkins.io/sectioned-view" target="_blank" rel="noopener">Sectioned View</a> 这个插件支持一种新的视图，视图可以分为多个部分，每部分可以单独配置显示所选择的项目信息。</li><li><a href="https://plugins.jenkins.io/nested-view" target="_blank" rel="noopener">Nested View</a> 这个插件支持一种新的视图，其表示直接显示项目，而是以目录图标显示所包含的子视图，每个子视图显示所选项目信息。</li><li><a href="https://plugins.jenkins.io/build-pipeline-plugin" target="_blank" rel="noopener">Build Pipeline</a> 这个插件提供了一种 Build Pipeline 视图，用于显示上、下游项目构建的关系。</li></ol><h2 id="构建触发"><a href="#构建触发" class="headerlink" title="构建触发"></a>构建触发</h2><p>Jenkins 支持多种 Build 触发方式，尤其一些自动化触发方式非常有用</p><ol><li>Build periodically，Jenkins 内置功能，可以设置类似 crontab 时间，周期性地自动触发构建。Poll SCM，Jenkins 内置功能，类似 Build periodically，可以设置类似 crontab 时间，不同的是不是直接进行构建，而是周期性地在后台检查所配置的 SCM 有没有更新，只有当有代码更新时才会触发构建。</li><li>Trigger builds remotely (e.g., from scripts)，Jenkins 内置功能，远程触发构建，通过设置 token 可以支持远程脚本中触发 Jenkins 构建。</li><li><a href="https://plugins.jenkins.io/gerrit-trigger" target="_blank" rel="noopener">Gerrit Trigger</a> 这个插件将 Jenkins 集成到 Gerrit code review 中，支持 Jenkins 配置 Gerrit 服务器等信息，实现 Gerrit event 触发 Jenkins 构建。</li><li><a href="https://plugins.jenkins.io/gitlab-plugin" target="_blank" rel="noopener">GitLab</a> 这个插件将 Jenkins 集成到 GitLab web hook 中，支持 Gitlab 分支及 Merge Request 等相关事件触发 Jenkins 构建。</li><li><a href="https://plugins.jenkins.io/github-pullrequest" target="_blank" rel="noopener">GitHub Integration</a> 这个插件将 Jenkins 集成到 GitHub 中，支持 Gitgub 分支及 Pull requests 触发 Jenkins 构建。</li><li><a href="https://plugins.jenkins.io/jira-trigger" target="_blank" rel="noopener">JIRA Trigger</a> 这个插件将 Jenkins 集成到 Jira WebHooks 中，支持 Jira issue 的状态等变化时触发 Jenkins 构建。</li></ol><h2 id="构建参数"><a href="#构建参数" class="headerlink" title="构建参数"></a>构建参数</h2><p>Jenkins 除了支持普通的参数类型（布尔型、字符串型、多行文本型、选择型和文件型 ）外，还有一些插件支持更加丰富实用的参数类型，比如参数间动态关联、多层级参数、隐藏参数等 。</p><ol><li><a href="https://plugins.jenkins.io/nodelabelparameter" target="_blank" rel="noopener">nodelabelparameter</a> 这个插件增加了一个新的参数类型，Node 和 Label，从而使用户通过参数可以选择项目构建运行的节点。<br> 其他插件不一一列举，可以查看插件说明<ul><li><a href="https://plugins.jenkins.io/hidden-parameter" target="_blank" rel="noopener">https://plugins.jenkins.io/hidden-parameter</a></li><li><a href="https://plugins.jenkins.io/extended-choice-parameter" target="_blank" rel="noopener">https://plugins.jenkins.io/extended-choice-parameter</a></li><li><a href="https://plugins.jenkins.io/validating-string-parameter" target="_blank" rel="noopener">https://plugins.jenkins.io/validating-string-parameter</a></li><li><a href="https://plugins.jenkins.io/extensible-choice-parameter" target="_blank" rel="noopener">https://plugins.jenkins.io/extensible-choice-parameter</a></li><li><a href="https://wiki.jenkins.io/display/JENKINS/Active+Choices+Plugin" target="_blank" rel="noopener">https://wiki.jenkins.io/display/JENKINS/Active+Choices+Plugin</a></li></ul></li></ol><h2 id="构建任务及环境"><a href="#构建任务及环境" class="headerlink" title="构建任务及环境"></a>构建任务及环境</h2><p>围绕构建任务，有许多小的插件，却提供了一些实用的功能</p><ol><li><a href="https://plugins.jenkins.io/ws-cleanup" target="_blank" rel="noopener">Workspace Cleanup</a> 这个插件支持在构建前后 删除或者部分删除 workspace</li><li><a href="https://plugins.jenkins.io/description-setter" target="_blank" rel="noopener">description setter</a> 这个插件支持正则表达式匹配构建 log 输出，设置构建的描述</li><li><a href="https://plugins.jenkins.io/build-name-setter" target="_blank" rel="noopener">build-name-setter</a> 这个插件支持设置构建的显示名字，而不是默认的为 #1，#2，……，#buildnum</li><li><a href="https://plugins.jenkins.io/envinject" target="_blank" rel="noopener">Environment Injector</a> 这个插件支持在构建任务的不同阶段插入环境变量，并且在构建结束导出所有的环境变量等功能。</li></ol><h2 id="构建通知"><a href="#构建通知" class="headerlink" title="构建通知"></a>构建通知</h2><p>把构建状态及时地通知用户，是 Jenkins 的一个必不可少的功能。Jenkins 支持多种主动和被动的通知方式。</p><ol><li><a href="https://plugins.jenkins.io/mailer" target="_blank" rel="noopener">Mailer</a> 这个插件支持基本的邮件通知功能，比如构建失败和构建恢复成功可以发送邮件通知给相关人员。</li><li><a href="https://plugins.jenkins.io/email-ext" target="_blank" rel="noopener">Email Extension</a> 这个插件是邮件通知的扩展，支持定制邮件内容，触发条件以及邮件接收者，功能比基本邮件通知要灵活强大的多。</li><li><a href="https://plugins.jenkins.io/slack" target="_blank" rel="noopener">Slack Notification</a> 这个插件支持把构建结果推送到 Slack channel。</li></ol><h2 id="容器化-Slave"><a href="#容器化-Slave" class="headerlink" title="容器化 Slave"></a>容器化 Slave</h2><p>Jenkins 的 Master-Slave 架构实现了分布式构建，可以充分的横向扩展 Slave 来提升构建能力，将 Slave 容器化是目前主流的构建环境标准化、集群化和弹性化的方式。</p><ol><li><a href="https://plugins.jenkins.io/docker-plugin" target="_blank" rel="noopener">https://plugins.jenkins.io/docker-plugin</a> 这个插件可以配置 docker host ，从而动态的提供 Jenkins Agent（Slave），运行构建后再销毁这个 slave。</li><li><a href="https://plugins.jenkins.io/kubernetes" target="_blank" rel="noopener">https://plugins.jenkins.io/kubernetes</a> 这个插件支持利用 Kubernetes cluster 动态的提供 Jenkins Agent（Slave），利用 Kubernetes 调度机制来优化 Jenkins 负载等。</li></ol><h2 id="Admin-相关插件"><a href="#Admin-相关插件" class="headerlink" title="Admin 相关插件"></a>Admin 相关插件</h2><ol><li>Configuration Slicing <a href="https://plugins.jenkins.io/configurationslicing" target="_blank" rel="noopener">https://plugins.jenkins.io/configurationslicing</a> 这个插件支持批量修改项目配置</li><li>Mask Passwords <a href="https://plugins.jenkins.io/mask-passwords" target="_blank" rel="noopener">https://plugins.jenkins.io/mask-passwords</a> 这个插件支持遮挡构建 log 输出的 password 等敏感信息</li><li>Backup <a href="https://plugins.jenkins.io/backup" target="_blank" rel="noopener">https://plugins.jenkins.io/backup</a> 这个插件添加备份功能到 Jenkins management</li></ol><h2 id="个人推荐的通用插件"><a href="#个人推荐的通用插件" class="headerlink" title="个人推荐的通用插件"></a>个人推荐的通用插件</h2><table><thead><tr><th>Name</th><th>Link</th></tr></thead><tbody><tr><td>Google Login Plugin</td><td><a href="https://plugins.jenkins.io/google-login" target="_blank" rel="noopener">https://plugins.jenkins.io/google-login</a></td></tr><tr><td>Role-based Authorization Strategy</td><td><a href="https://plugins.jenkins.io/role-strategy" target="_blank" rel="noopener">https://plugins.jenkins.io/role-strategy</a></td></tr><tr><td>Periodic Backup</td><td><a href="https://plugins.jenkins.io/periodicbackup" target="_blank" rel="noopener">https://plugins.jenkins.io/periodicbackup</a></td></tr><tr><td>Notification</td><td><a href="https://plugins.jenkins.io/notification" target="_blank" rel="noopener">https://plugins.jenkins.io/notification</a></td></tr><tr><td>Git Parameter</td><td><a href="https://plugins.jenkins.io/git-parameter" target="_blank" rel="noopener">https://plugins.jenkins.io/git-parameter</a></td></tr><tr><td>AnsiColor</td><td><a href="https://plugins.jenkins.io/ansicolor" target="_blank" rel="noopener">https://plugins.jenkins.io/ansicolor</a></td></tr><tr><td>SSH Agent</td><td><a href="https://plugins.jenkins.io/git-parameter" target="_blank" rel="noopener">https://plugins.jenkins.io/git-parameter</a></td></tr><tr><td>Build Name and Description Setter</td><td><a href="https://plugins.jenkins.io/build-name-setter" target="_blank" rel="noopener">https://plugins.jenkins.io/build-name-setter</a></td></tr><tr><td>Publish Over SSH</td><td><a href="https://plugins.jenkins.io/publish-over-ssh" target="_blank" rel="noopener">https://plugins.jenkins.io/publish-over-ssh</a></td></tr><tr><td>user build vars</td><td><a href="https://plugins.jenkins.io/build-user-vars-plugin" target="_blank" rel="noopener">https://plugins.jenkins.io/build-user-vars-plugin</a></td></tr><tr><td>Throttle Concurrent Builds</td><td><a href="https://plugins.jenkins.io/throttle-concurrents" target="_blank" rel="noopener">https://plugins.jenkins.io/throttle-concurrents</a></td></tr><tr><td>Active Choices</td><td><a href="https://plugins.jenkins.io/uno-choice" target="_blank" rel="noopener">https://plugins.jenkins.io/uno-choice</a></td></tr><tr><td>Rebuilder</td><td><a href="https://plugins.jenkins.io/rebuild" target="_blank" rel="noopener">https://plugins.jenkins.io/rebuild</a></td></tr></tbody></table><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.jianshu.com/p/a80ed9285537" target="_blank" rel="noopener">Jenkins 自动化部署 - 安装篇 (一)</a></p><p><a href="https://www.cnblogs.com/zndxall/p/8603500.html" target="_blank" rel="noopener">jenkins 常用插件和配置项介绍和使用</a></p>]]></content>
    
    <summary type="html">
    
      Jenkins Plugins常用插件推荐
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>通俗易懂 QPS、TPS、PV、UV、GMV、IP、RPS 的概念解释</title>
    <link href="https://wsgzao.github.io/post/qps/"/>
    <id>https://wsgzao.github.io/post/qps/</id>
    <published>2019-12-09T06:59:49.000Z</published>
    <updated>2019-12-09T08:17:45.141Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关于 QPS、TPS、PV、UV、GMV、IP、RPS 这些词语，看起来好像挺专业。但实际上，我认为是这是每个程序员必懂的知识点了，你可以搞不懂它们怎么计算的，但是你最少要了解它们分别代表什么意思。</p><blockquote><p>通俗易懂 QPS、TPS、PV、UV、GMV、IP、RPS 的概念解释</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 12 月 09 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/qps/">https://wsgzao.github.io/post/qps/</a></p><p><strong> 扩展阅读 </strong></p><hr><h2 id="QPS"><a href="#QPS" class="headerlink" title="QPS"></a>QPS</h2><p>Queries Per Second，每秒查询数。每秒能够响应的查询次数。</p><p>QPS 是对一个特定的查询服务器在规定时间内所处理流量多少的衡量标准，在因特网上，作为域名系统服务器的机器的性能经常用每秒查询率来衡量。每秒的响应请求数，也即是最大吞吐能力。</p><h2 id="TPS"><a href="#TPS" class="headerlink" title="TPS"></a>TPS</h2><p>Transactions Per Second 的缩写，每秒处理的事务数目。一个事务是指一个客户机向服务器发送请求然后服务器做出反应的过程。客户机在发送请求时开始计时，收到服务器响应后结束计时，以此来计算使用的时间和完成的事务个数，最终利用这些信息作出的评估分。</p><p>TPS 的过程包括：客户端请求服务端、服务端内部处理、服务端返回客户端。</p><p>例如，访问一个 Index 页面会请求服务器 3 次，包括一次 html，一次 css，一次 js，那么访问这一个页面就会产生一个 “T”，产生三个 “Q”。</p><h2 id="PV"><a href="#PV" class="headerlink" title="PV"></a>PV</h2><p>Page View 即页面浏览量，通常是衡量一个网络新闻频道或网站甚至一条网络新闻的主要指标。户每一次对网站中的每个页面访问均被记录 1 次。用户对同一页面的多次刷新，访问量累计。</p><p>根据这个特性，刷网站的 PV 就很好刷了。</p><p>与 PV 相关的还有 <strong>RV</strong>，即重复访问者数量 Repeat Visitors。</p><h2 id="UV"><a href="#UV" class="headerlink" title="UV"></a>UV</h2><p>访问数（Unique Visitor）指独立访客访问数，统计 1 天内访问某站点的用户数 (以 cookie 为依据)，一台电脑终端为一个访客。</p><h2 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h2><p>（Internet Protocol）独立 IP 数，是指 1 天内多少个独立的 IP 浏览了页面，即统计不同的 IP 浏览用户数量。同一 IP 不管访问了几个页面，独立 IP 数均为 1；不同的 IP 浏览页面，计数会加 1。IP 是基于用户广域网 IP 地址来区分不同的访问者的，所以，多个用户（多个局域网 IP）在同一个路由器（同一个广域网 IP）内上网，可能被记录为一个独立 IP 访问者。如果用户不断更换 IP，则有可能被多次统计。</p><h2 id="GMV"><a href="#GMV" class="headerlink" title="GMV"></a>GMV</h2><p>是 Gross Merchandise Volume 的简称。只要是订单，不管消费者是否付款、卖家是否发货、是否退货，都可放进 GMV 。</p><h2 id="RPS"><a href="#RPS" class="headerlink" title="RPS"></a>RPS</h2><p>代表吞吐率，即 Requests Per Second 的缩写。吞吐率是服务器并发处理能力的量化描述，单位是 reqs/s，指的是某个并发用户数下单位时间内处理的请求数。<br>某个并发用户数下单位时间内能处理的最大的请求数，称之为最大吞吐率。</p><blockquote><p>有人把 RPS 说等效于 QPS。其实可以看作同一个统计方式，只是叫法不同而已。RPS/QPS，可以使用 apche ab 工具进行测量。</p></blockquote>]]></content>
    
    <summary type="html">
    
      通俗易懂 QPS、TPS、PV、UV、GMV、IP、RPS的概念解释
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>rsync 安装配置实践</title>
    <link href="https://wsgzao.github.io/post/rsync/"/>
    <id>https://wsgzao.github.io/post/rsync/</id>
    <published>2019-12-01T06:59:49.000Z</published>
    <updated>2019-12-04T06:59:05.885Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Rsync 代表 “remote sync”，它是本地和远程主机文件同步工具。它只同步更改的文件，以此实现最小化传输数据。rsync 的使用场景非常丰富，相信大家会经常使用，这里做下简单的总结。</p><blockquote><p>rsync 安装配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 12 月 01 日 - 更新 rsync 常见错误和 lsyncd+rsync 实时同步方案<br>2019 年 05 月 23 日 - 更新 rsync 中文帮助和相关实践配置<br>2019 年 03 月 01 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/rsync/">https://wsgzao.github.io/post/rsync/</a></p><p><strong> 扩展阅读 </strong></p><p>rsync - <a href="https://www.samba.org/rsync/" target="_blank" rel="noopener">https://www.samba.org/rsync/</a></p><hr><h2 id="rsync-简介"><a href="#rsync-简介" class="headerlink" title="rsync 简介"></a>rsync 简介</h2><p>rsync is a file transfer program capable of efficient remote update via a fast differencing algorithm.</p><p>rsync 是类 unix 系统下的数据镜像备份工具，从软件的命名上就可以看出来了 ——remote sync。它的特性如下：</p><ol><li>可以镜像保存整个目录树和文件系统</li><li>可以很容易做到保持原来文件的权限、时间、软硬链接等等</li><li>无须特殊权限即可安装</li><li>优化的流程，文件传输效率高</li><li>可以使用 rsh、ssh 等方式来传输文件，当然也可以通过直接的 socket 连接</li><li>支持匿名传输</li></ol><p>在使用 rsync 进行远程同步时，可以使用两种方式：远程 Shell 方式（用户验证由 ssh 负责）和 C/S 方式（即客户连接远程 rsync 服务器，用户验证由 rsync 服务器负责）。</p><p>无论本地同步目录还是远程同步数据，首次运行时将会把全部文件拷贝一次，以后再运行时将只拷贝有变化的文件（对于新文件）或文件的变化部分（对于原有文件）。</p><h2 id="rsync-源配置文件示例"><a href="#rsync-源配置文件示例" class="headerlink" title="rsync 源配置文件示例"></a>rsync 源配置文件示例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑 rsync 配置文件 </span></span><br><span class="line">vim /etc/rsync.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># /etc/rsyncd: configuration file for rsync daemon mode</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># See rsyncd.conf man page for more options.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># configuration example:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># uid = nobody</span></span><br><span class="line"><span class="comment"># gid = nobody</span></span><br><span class="line"><span class="comment"># use chroot = yes</span></span><br><span class="line"><span class="comment"># max connections = 4</span></span><br><span class="line"><span class="comment"># pid file = /var/run/rsyncd.pid</span></span><br><span class="line"><span class="comment"># exclude = lost+found/</span></span><br><span class="line"><span class="comment"># transfer logging = yes</span></span><br><span class="line"><span class="comment"># timeout = 900</span></span><br><span class="line"><span class="comment"># ignore nonreadable = yes</span></span><br><span class="line"><span class="comment"># dont compress   = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [ftp]</span></span><br><span class="line"><span class="comment">#        path = /home/ftp</span></span><br><span class="line"><span class="comment">#        comment = ftp export area</span></span><br></pre></td></tr></table></figure><p>rsyncd.conf 官方文档请参考 - <a href="https://www.samba.org/ftp/rsync/rsyncd.conf.html" target="_blank" rel="noopener">https://www.samba.org/ftp/rsync/rsyncd.conf.html</a></p><h2 id="rsync-常用参数"><a href="#rsync-常用参数" class="headerlink" title="rsync 常用参数"></a>rsync 常用参数</h2><p>注: 在指定复制源时，路径是否有最后的 “/” 有不同的含义，例如：</p><p>/data  表示将整个 /data 目录复制到目标目录<br>/data/ 表示将 /data/ 目录中的所有内容复制到目标目录</p><p>man rsync 翻译 (rsync 命令中文手册)<br><a href="http://www.cnblogs.com/f-ck-need-u/p/7221713.html" target="_blank" rel="noopener">http://www.cnblogs.com/f-ck-need-u/p/7221713.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line">rsync is a file transfer program capable of efficient remote update via a fast differencing algorithm.</span><br><span class="line"></span><br><span class="line">Usage: rsync [OPTION]... SRC [SRC]... DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST</span><br><span class="line">  or   rsync [OPTION]... SRC [SRC]... rsync://[USER@]HOST[:PORT]/DEST</span><br><span class="line">  or   rsync [OPTION]... [USER@]HOST:SRC [DEST]</span><br><span class="line">  or   rsync [OPTION]... [USER@]HOST::SRC [DEST]</span><br><span class="line">  or   rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]</span><br><span class="line">The <span class="string">':'</span> usages connect via remote shell, <span class="keyword">while</span> <span class="string">'::'</span> &amp; <span class="string">'rsync://'</span> usages connect</span><br><span class="line">to an rsync daemon, and require SRC or DEST to start with a module name.</span><br><span class="line"></span><br><span class="line">Options</span><br><span class="line"> -v, --verbose               increase verbosity</span><br><span class="line">     --info=FLAGS            fine-grained informational verbosity</span><br><span class="line">     --debug=FLAGS           fine-grained debug verbosity</span><br><span class="line">     --msgs2stderr           special output handling <span class="keyword">for</span> debugging</span><br><span class="line"> -q, --quiet                 suppress non-error messages</span><br><span class="line">     --no-motd               suppress daemon-mode MOTD (see manpage caveat)</span><br><span class="line"> -c, --checksum              skip based on checksum, not mod-time &amp; size</span><br><span class="line"> -a, --archive               archive mode; equals -rlptgoD (no -H,-A,-X)</span><br><span class="line">     --no-OPTION             turn off an implied OPTION (e.g. --no-D)</span><br><span class="line"> -r, --recursive             recurse into directories</span><br><span class="line"> -R, --relative              use relative path names</span><br><span class="line">     --no-implied-dirs       don<span class="string">'t send implied dirs with --relative</span></span><br><span class="line"><span class="string"> -b, --backup                make backups (see --suffix &amp; --backup-dir)</span></span><br><span class="line"><span class="string">     --backup-dir=DIR        make backups into hierarchy based in DIR</span></span><br><span class="line"><span class="string">     --suffix=SUFFIX         set backup suffix (default ~ w/o --backup-dir)</span></span><br><span class="line"><span class="string"> -u, --update                skip files that are newer on the receiver</span></span><br><span class="line"><span class="string">     --inplace               update destination files in-place (SEE MAN PAGE)</span></span><br><span class="line"><span class="string">     --append                append data onto shorter files</span></span><br><span class="line"><span class="string">     --append-verify         like --append, but with old data in file checksum</span></span><br><span class="line"><span class="string"> -d, --dirs                  transfer directories without recursing</span></span><br><span class="line"><span class="string"> -l, --links                 copy symlinks as symlinks</span></span><br><span class="line"><span class="string"> -L, --copy-links            transform symlink into referent file/dir</span></span><br><span class="line"><span class="string">     --copy-unsafe-links     only"unsafe"symlinks are transformed</span></span><br><span class="line"><span class="string">     --safe-links            ignore symlinks that point outside the source tree</span></span><br><span class="line"><span class="string">     --munge-links           munge symlinks to make them safer (but unusable)</span></span><br><span class="line"><span class="string"> -k, --copy-dirlinks         transform symlink to a dir into referent dir</span></span><br><span class="line"><span class="string"> -K, --keep-dirlinks         treat symlinked dir on receiver as dir</span></span><br><span class="line"><span class="string"> -H, --hard-links            preserve hard links</span></span><br><span class="line"><span class="string"> -p, --perms                 preserve permissions</span></span><br><span class="line"><span class="string"> -E, --executability         preserve the file'</span>s executability</span><br><span class="line">     --chmod=CHMOD           affect file and/or directory permissions</span><br><span class="line"> -A, --acls                  preserve ACLs (implies --perms)</span><br><span class="line"> -X, --xattrs                preserve extended attributes</span><br><span class="line"> -o, --owner                 preserve owner (super-user only)</span><br><span class="line"> -g, --group                 preserve group</span><br><span class="line">     --devices               preserve device files (super-user only)</span><br><span class="line">     --copy-devices          copy device contents as regular file</span><br><span class="line">     --specials              preserve special files</span><br><span class="line"> -D                          same as --devices --specials</span><br><span class="line"> -t, --<span class="built_in">times</span>                 preserve modification <span class="built_in">times</span></span><br><span class="line"> -O, --omit-dir-times        omit directories from --<span class="built_in">times</span></span><br><span class="line"> -J, --omit-link-times       omit symlinks from --<span class="built_in">times</span></span><br><span class="line">     --super                 receiver attempts super-user activities</span><br><span class="line">     --fake-super            store/recover privileged attrs using xattrs</span><br><span class="line"> -S, --sparse                handle sparse files efficiently</span><br><span class="line">     --preallocate           allocate dest files before writing them</span><br><span class="line"> -n, --dry-run               perform a trial run with no changes made</span><br><span class="line"> -W, --whole-file            copy files whole (without delta-xfer algorithm)</span><br><span class="line"> -x, --one-file-system       don<span class="string">'t cross filesystem boundaries</span></span><br><span class="line"><span class="string"> -B, --block-size=SIZE       force a fixed checksum block-size</span></span><br><span class="line"><span class="string"> -e, --rsh=COMMAND           specify the remote shell to use</span></span><br><span class="line"><span class="string">     --rsync-path=PROGRAM    specify the rsync to run on the remote machine</span></span><br><span class="line"><span class="string">     --existing              skip creating new files on receiver</span></span><br><span class="line"><span class="string">     --ignore-existing       skip updating files that already exist on receiver</span></span><br><span class="line"><span class="string">     --remove-source-files   sender removes synchronized files (non-dirs)</span></span><br><span class="line"><span class="string">     --del                   an alias for --delete-during</span></span><br><span class="line"><span class="string">     --delete                delete extraneous files from destination dirs</span></span><br><span class="line"><span class="string">     --delete-before         receiver deletes before transfer, not during</span></span><br><span class="line"><span class="string">     --delete-during         receiver deletes during the transfer</span></span><br><span class="line"><span class="string">     --delete-delay          find deletions during, delete after</span></span><br><span class="line"><span class="string">     --delete-after          receiver deletes after transfer, not during</span></span><br><span class="line"><span class="string">     --delete-excluded       also delete excluded files from destination dirs</span></span><br><span class="line"><span class="string">     --ignore-missing-args   ignore missing source args without error</span></span><br><span class="line"><span class="string">     --delete-missing-args   delete missing source args from destination</span></span><br><span class="line"><span class="string">     --ignore-errors         delete even if there are I/O errors</span></span><br><span class="line"><span class="string">     --force                 force deletion of directories even if not empty</span></span><br><span class="line"><span class="string">     --max-delete=NUM        don'</span>t delete more than NUM files</span><br><span class="line">     --max-size=SIZE         don<span class="string">'t transfer any file larger than SIZE</span></span><br><span class="line"><span class="string">     --min-size=SIZE         don'</span>t transfer any file smaller than SIZE</span><br><span class="line">     --partial               keep partially transferred files</span><br><span class="line">     --partial-dir=DIR       put a partially transferred file into DIR</span><br><span class="line">     --delay-updates         put all updated files into place at transfer<span class="string">'s end</span></span><br><span class="line"><span class="string"> -m, --prune-empty-dirs      prune empty directory chains from the file-list</span></span><br><span class="line"><span class="string">     --numeric-ids           don'</span>t map uid/gid values by user/group name</span><br><span class="line">     --usermap=STRING        custom username mapping</span><br><span class="line">     --groupmap=STRING       custom groupname mapping</span><br><span class="line">     --chown=USER:GROUP      simple username/groupname mapping</span><br><span class="line">     --timeout=SECONDS       <span class="built_in">set</span> I/O timeout <span class="keyword">in</span> seconds</span><br><span class="line">     --contimeout=SECONDS    <span class="built_in">set</span> daemon connection timeout <span class="keyword">in</span> seconds</span><br><span class="line"> -I, --ignore-times          don<span class="string">'t skip files that match in size and mod-time</span></span><br><span class="line"><span class="string"> -M, --remote-option=OPTION  send OPTION to the remote side only</span></span><br><span class="line"><span class="string">     --size-only             skip files that match in size</span></span><br><span class="line"><span class="string">     --modify-window=NUM     compare mod-times with reduced accuracy</span></span><br><span class="line"><span class="string"> -T, --temp-dir=DIR          create temporary files in directory DIR</span></span><br><span class="line"><span class="string"> -y, --fuzzy                 find similar file for basis if no dest file</span></span><br><span class="line"><span class="string">     --compare-dest=DIR      also compare destination files relative to DIR</span></span><br><span class="line"><span class="string">     --copy-dest=DIR         ... and include copies of unchanged files</span></span><br><span class="line"><span class="string">     --link-dest=DIR         hardlink to files in DIR when unchanged</span></span><br><span class="line"><span class="string"> -z, --compress              compress file data during the transfer</span></span><br><span class="line"><span class="string">     --compress-level=NUM    explicitly set compression level</span></span><br><span class="line"><span class="string">     --skip-compress=LIST    skip compressing files with a suffix in LIST</span></span><br><span class="line"><span class="string"> -C, --cvs-exclude           auto-ignore files the same way CVS does</span></span><br><span class="line"><span class="string"> -f, --filter=RULE           add a file-filtering RULE</span></span><br><span class="line"><span class="string"> -F                          same as --filter='</span>dir-merge /.rsync-filter<span class="string">'</span></span><br><span class="line"><span class="string">                             repeated: --filter='</span>- .rsync-filter<span class="string">'</span></span><br><span class="line"><span class="string">     --exclude=PATTERN       exclude files matching PATTERN</span></span><br><span class="line"><span class="string">     --exclude-from=FILE     read exclude patterns from FILE</span></span><br><span class="line"><span class="string">     --include=PATTERN       don'</span>t exclude files matching PATTERN</span><br><span class="line">     --include-from=FILE     <span class="built_in">read</span> include patterns from FILE</span><br><span class="line">     --files-from=FILE       <span class="built_in">read</span> list of <span class="built_in">source</span>-file names from FILE</span><br><span class="line"> -0, --from0                 all *-from/filter files are delimited by 0s</span><br><span class="line"> -s, --protect-args          no space-splitting; only wildcard special-chars</span><br><span class="line">     --address=ADDRESS       <span class="built_in">bind</span> address <span class="keyword">for</span> outgoing socket to daemon</span><br><span class="line">     --port=PORT             specify double-colon alternate port number</span><br><span class="line">     --sockopts=OPTIONS      specify custom TCP options</span><br><span class="line">     --blocking-io           use blocking I/O <span class="keyword">for</span> the remote shell</span><br><span class="line">     --stats                 give some file-transfer stats</span><br><span class="line"> -8, --8-bit-output          leave high-bit chars unescaped <span class="keyword">in</span> output</span><br><span class="line"> -h, --human-readable        output numbers <span class="keyword">in</span> a human-readable format</span><br><span class="line">     --progress              show progress during transfer</span><br><span class="line"> -P                          same as --partial --progress</span><br><span class="line"> -i, --itemize-changes       output a change-summary <span class="keyword">for</span> all updates</span><br><span class="line">     --out-format=FORMAT     output updates using the specified FORMAT</span><br><span class="line">     --<span class="built_in">log</span>-file=FILE         <span class="built_in">log</span> what we<span class="string">'re doing to the specified FILE</span></span><br><span class="line"><span class="string">     --log-file-format=FMT   log updates using the specified FMT</span></span><br><span class="line"><span class="string">     --password-file=FILE    read daemon-access password from FILE</span></span><br><span class="line"><span class="string">     --list-only             list the files instead of copying them</span></span><br><span class="line"><span class="string">     --bwlimit=RATE          limit socket I/O bandwidth</span></span><br><span class="line"><span class="string">     --outbuf=N|L|B          set output buffering to None, Line, or Block</span></span><br><span class="line"><span class="string">     --write-batch=FILE      write a batched update to FILE</span></span><br><span class="line"><span class="string">     --only-write-batch=FILE like --write-batch but w/o updating destination</span></span><br><span class="line"><span class="string">     --read-batch=FILE       read a batched update from FILE</span></span><br><span class="line"><span class="string">     --protocol=NUM          force an older protocol version to be used</span></span><br><span class="line"><span class="string">     --iconv=CONVERT_SPEC    request charset conversion of filenames</span></span><br><span class="line"><span class="string">     --checksum-seed=NUM     set block/file checksum seed (advanced)</span></span><br><span class="line"><span class="string"> -4, --ipv4                  prefer IPv4</span></span><br><span class="line"><span class="string"> -6, --ipv6                  prefer IPv6</span></span><br><span class="line"><span class="string">     --version               print version number</span></span><br><span class="line"><span class="string">(-h) --help                  show this help (-h is --help only if used alone)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Use"rsync --daemon --help"to see the daemon-mode command-line options.</span></span><br><span class="line"><span class="string">Please see the rsync(1) and rsyncd.conf(5) man pages for full documentation.</span></span><br><span class="line"><span class="string">See http://rsync.samba.org/ for updates, bug reports, and answers</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rsync 常用参数 </span></span><br><span class="line">-v : 展示详细的同步信息 </span><br><span class="line">-a : 归档模式，相当于 -rlptgoD</span><br><span class="line">    -r : 递归目录 </span><br><span class="line">    -l : 同步软连接文件 </span><br><span class="line">    -p : 保留权限 </span><br><span class="line">    -t : 将源文件的 < span class="string">"modify time"</span> 同步到目标机器 <br><span class="line">    -g : 保持文件属组 </span><br><span class="line">    -o : 保持文件属主 </span><br><span class="line">    -D : 和 --devices --specials 一样，保持设备文件和特殊文件 </span><br><span class="line">-z : 发送数据前，先压缩再传输 </span><br><span class="line">-H : 保持硬链接 </span><br><span class="line">-n : 进行试运行，不作任何更改 </span><br><span class="line">-P same as --partial --progress</span><br><span class="line">    --partial : 支持断点续传 </span><br><span class="line">    --progress : 展示传输的进度 </span><br><span class="line">--delete : 如果源文件消失，目标文件也会被删除 </span><br><span class="line">--delete-excluded : 指定要在目的端删除的文件 </span><br><span class="line">--delete-after : 默认情况下，rsync 是先清理目的端的文件再开始数据同步；如果使用此选项，则 rsync 会先进行数据同步，都完成后再删除那些需要清理的文件。</span><br><span class="line">--exclude=PATTERN : 排除匹配 PATTERN 的文件 </span><br><span class="line">--exclude-from=FILE : 如果要排除的文件很多，可以统一写在某一文件中 </span><br><span class="line">-e ssh : 使用 SSH 加密隧道传输 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程 Shell 方式 </span></span><br><span class="line">rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST <span class="comment"># 执行 “推” 操作 </span></span><br><span class="line">or   rsync [OPTION]... [USER@]HOST:SRC [DEST]   <span class="comment"># 执行 “拉” 操作 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程 C/S 方式 </span></span><br><span class="line">rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST                    <span class="comment"># 执行 “推” 操作 </span></span><br><span class="line">or   rsync [OPTION]... SRC [SRC]... rsync://[USER@]HOST[:PORT]/DEST <span class="comment"># 执行 “推” 操作 </span></span><br><span class="line">or   rsync [OPTION]... [USER@]HOST::SRC [DEST]                      <span class="comment"># 执行 “拉” 操作 </span></span><br><span class="line">or   rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]        <span class="comment"># 执行 “拉” 操作 </span></span><br></pre></td></tr></table></figure><h2 id="rsync-同步方式"><a href="#rsync-同步方式" class="headerlink" title="rsync 同步方式"></a>rsync 同步方式</h2><p>Rsync 远程同步主要有两种方式：使用远程 shell（ssh 或 rsh） 或使用 rsync 的 daemon 方式</p><p>rsync 命令和 ssh，scp 命令有点相似。</p><p>我们创建两个测试目录和一些文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mkdir dir1</span><br><span class="line">mkdir dir2</span><br><span class="line">touch dir1/somefile&#123;1..100&#125;</span><br><span class="line"><span class="comment"># dir1 中有 100 文件，dir2 中为空。使用 rsync 把 dir1 内容同步到 dir2，-r 选项代表递归，在同步目录时使用。</span></span><br><span class="line">rsync -r dir1/ dir2</span><br><span class="line"><span class="comment"># 你也可以使用 -a 选项，代表同步所有，包括修改时间、群组、权限、特殊文件、也包括递归。</span></span><br><span class="line">rsync -anv dir1/ dir2</span><br><span class="line"><span class="comment"># 注意上面的 dir1 / 中的 “/” 不能少，它代表同步目录下文件， 如果没有 “/” 代表同步这个目录。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 和远程主机进行同步目录首先，你要确保有远程主机的 SSH 访问权限 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把本地目录同步到远程主机：</span></span><br><span class="line">rsync -a dir1/ root@linux:~/dir2</span><br><span class="line"><span class="comment"># 把远程主机目录同步到本地：</span></span><br><span class="line">rsync -a root@linux:~/dir2/ dir1</span><br></pre></td></tr></table></figure><h3 id="本地文件同步"><a href="#本地文件同步" class="headerlink" title="本地文件同步"></a>本地文件同步</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果没有 desc 目录，会自动创建 </span></span><br><span class="line">rsync -avH /opt/resource/ /tmp/desc/</span><br></pre></td></tr></table></figure><h3 id="远程文件同步-–shell-方式"><a href="#远程文件同步-–shell-方式" class="headerlink" title="远程文件同步 –shell 方式"></a>远程文件同步 –shell 方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从本地传到远端，目标文件会被写成 ssh 登录用户的属组和属主（如下 www）</span></span><br><span class="line">rsync -avH /opt/nginx-1.12.1/ www@172.18.50.125:/tmp/nginx/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 ssh 加密隧道方式传输，保障数据的安全性 </span></span><br><span class="line">rsync -avHe ssh /opt/nginx-1.12.1/ www@172.18.50.125:/tmp/nginx/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从远端传到本地，只要对目标文件有读的权限，就可以同步到本地 </span></span><br><span class="line">rsync -avH www@172.18.50.125:/tmp/nginx/ /tmp/nginx/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果远程服务器 ssh 端口不是默认的 22</span></span><br><span class="line">rsync -avHe <span class="string">"ssh -p 11222"</span> /opt/nginx-1.12.1/ www@172.18.50.125:/tmp/nginx/</span><br></pre></td></tr></table></figure><h3 id="远程文件同步-–daemon-方式"><a href="#远程文件同步-–daemon-方式" class="headerlink" title="远程文件同步 –daemon 方式"></a>远程文件同步 –daemon 方式</h3><blockquote><p>rsync 服务端配置</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建 rsync 服务的目录和配置文件 (可选)</span></span><br><span class="line">mkdir /etc/rsync </span><br><span class="line"><span class="built_in">cd</span> /etc/rsync</span><br><span class="line">touch rsyncd.conf</span><br><span class="line">touch rsyncd.secrets</span><br><span class="line">touch rsyncd.motd</span><br><span class="line">chmod 600 rsyncd.secrets</span><br><span class="line"></span><br><span class="line"><span class="comment">### rsyncd.conf 文件的配置 </span></span><br><span class="line">vim /etc/rsync/rsyncd.conf</span><br><span class="line"><span class="comment"># /etc/rsyncd: configuration file for rsync daemon mode</span></span><br><span class="line"><span class="comment"># See rsyncd.conf man page for more options.</span></span><br><span class="line"><span class="comment"># 传输文件使用的用户和用户组，如果是从服务器 =&gt; 客户端，要保证 www 用户对文件有读取的权限；如果是从客户端 =&gt; 服务端，要保证 www 对文件有写权限。</span></span><br><span class="line">uid = www</span><br><span class="line">gid = www</span><br><span class="line"><span class="comment"># 允许 chroot，提升安全性，客户端连接模块，首先 chroot 到模块 path 参数指定的目录下，chroot 为 yes 时必须使用 root 权限，且不能备份 path 路径外的链接文件 </span></span><br><span class="line">use chroot = yes</span><br><span class="line"><span class="comment"># 只读 </span></span><br><span class="line"><span class="built_in">read</span> only = no</span><br><span class="line"><span class="comment"># 只写 </span></span><br><span class="line">write only = no</span><br><span class="line"><span class="comment"># 设定白名单，可以指定 IP 段（172.18.50.1/255.255.255.0）, 各个 Ip 段用空格分开 </span></span><br><span class="line">hosts allow = 172.18.50.110 172.18.50.111</span><br><span class="line">hosts deny = *</span><br><span class="line"><span class="comment"># 允许的客户端最大连接数 </span></span><br><span class="line">max connections = 4</span><br><span class="line"><span class="comment"># 欢迎文件的路径，非必须 </span></span><br><span class="line">motd file = /etc/rsync/rsyncd.motd</span><br><span class="line"><span class="comment"># pid 文件路径 </span></span><br><span class="line">pid file = /var/run/rsyncd.pid</span><br><span class="line"><span class="comment"># 记录传输文件日志 </span></span><br><span class="line">transfer logging = yes</span><br><span class="line"><span class="comment"># 日志文件格式 </span></span><br><span class="line"><span class="built_in">log</span> format = %t %a %m %f %b</span><br><span class="line"><span class="comment"># 指定日志文件 </span></span><br><span class="line"><span class="built_in">log</span> file = /var/<span class="built_in">log</span>/rsync.log</span><br><span class="line"><span class="comment"># 剔除某些文件或目录，不同步 </span></span><br><span class="line">exclude = lost+found/</span><br><span class="line"><span class="comment"># 设置超时时间 </span></span><br><span class="line">timeout = 900</span><br><span class="line">ignore nonreadable = yes</span><br><span class="line"><span class="comment"># 设置不需要压缩的文件 </span></span><br><span class="line">dont compress   = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模块，可以配置多个，使用如: sate@172.18.50.125::125to110</span></span><br><span class="line">[125to110]</span><br><span class="line"><span class="comment"># 模块的根目录，同步目录，要注意权限 </span></span><br><span class="line">path = /tmp/nginx</span><br><span class="line"><span class="comment"># 是否允许列出模块内容 </span></span><br><span class="line">list = no</span><br><span class="line"><span class="comment"># 忽略错误 </span></span><br><span class="line">ignore errors</span><br><span class="line"><span class="comment"># 添加注释 </span></span><br><span class="line">comment = ftp <span class="built_in">export</span> area</span><br><span class="line"><span class="comment"># 模块验证的用户名称，可使用空格或者逗号隔开多个用户名 </span></span><br><span class="line">auth users = sate</span><br><span class="line"><span class="comment"># 模块验证密码文件 可放在全局配置里 </span></span><br><span class="line">secrets file = /etc/rsync/rsyncd.secrets</span><br><span class="line"><span class="comment"># 剔除某些文件或目录，不同步 </span></span><br><span class="line">exclude = lost+found/ conf/ man/</span><br><span class="line"></span><br><span class="line"><span class="comment">### rsyncd.secrets 文件的配置 </span></span><br><span class="line">cat rsyncd.secrets </span><br><span class="line"><span class="comment"># 用户名: 密码 </span></span><br><span class="line">sate:111111</span><br><span class="line"></span><br><span class="line"><span class="comment">### rsync 启动 </span></span><br><span class="line">rsync --daemon --config=/etc/rsync/rsyncd.conf</span><br></pre></td></tr></table></figure><blockquote><p>rsync 客户端配置</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从 服务端 =&gt; 客户端 同步数据，会提示输入密码 </span></span><br><span class="line">rsync -avzP --delete sate@172.18.50.125::125to110 /tmp/sync/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从 客户端 =&gt; 服务端 同步数据，会提示输入密码 </span></span><br><span class="line">rsync -avzP --delete /tmp/sync/ sate@172.18.50.125::125to110</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注: 如果是 /tmp/sync，则同步 sync 目录；如果 /tmp/sync/，则同步 sync 目录下的文件 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 免密码同步，将密码写到文件，再通过 --password-file 指定该文件，注：该文件的权限必须是 600</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"111111"</span> &gt; /tmp/secrets.file</span><br><span class="line">chmod 600 /tmp/secrets.file</span><br><span class="line">rsync -avzP --delete --password-file=/tmp/secrets.file sate@172.18.50.125::125to110 /tmp/sync/</span><br><span class="line"></span><br><span class="line"><span class="comment"># --exclude 排除文件目录时，如果有多个同名目录的情况 </span></span><br><span class="line"><span class="comment"># 目录结构 </span></span><br><span class="line">tree</span><br><span class="line">.</span><br><span class="line">├── dir1</span><br><span class="line">│   └── <span class="built_in">test</span></span><br><span class="line">│       ├── 3.file</span><br><span class="line">│       ├── 4.file</span><br><span class="line">│       └── 5.file</span><br><span class="line">├── dir2</span><br><span class="line">└── <span class="built_in">test</span></span><br><span class="line">    ├── 1.file</span><br><span class="line">    ├── 2.file</span><br><span class="line">    └── 3.file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 情况一 ： 排除 /test 目录，同步其他目录（同步的是 / tmp/sync/ 下边的文件）</span></span><br><span class="line">rsync -avP --delete --password-file=/tmp/secrets.file --exclude=<span class="built_in">test</span>  /tmp/sync/ sate@172.18.50.125::125to110 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 会发现，该目录下所有 test 目录都被排除了，如果想只排除第一层目录的 test，可以如下（/ 代表所同步目录第一层）：</span></span><br><span class="line">rsync -avP --delete --password-file=/tmp/secrets.file --exclude=/<span class="built_in">test</span>/  /tmp/sync/ sate@172.18.50.125::125to110 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 情况二 ： 和情况一不同的是 同步的 /tmp/sync 这个目录（同步的是 / tmp/sync 目录本身，导致 exclude 后边的参数也会变化）</span></span><br><span class="line">rsync -avP --delete --password-file=/tmp/secrets.file --exclude=/sync/<span class="built_in">test</span>/  /tmp/sync sate@172.18.50.125::125to110</span><br></pre></td></tr></table></figure><h2 id="rsync-简化配置实践"><a href="#rsync-简化配置实践" class="headerlink" title="rsync 简化配置实践"></a>rsync 简化配置实践</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置服务端 rsyncd.conf</span></span><br><span class="line">vim /etc/rsyncd.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> only = no</span><br><span class="line">list = yes</span><br><span class="line">uid = root</span><br><span class="line">gid = root</span><br><span class="line"></span><br><span class="line">[backup]</span><br><span class="line">path= /data/</span><br><span class="line">hosts allow = 10.71.12.0/23</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置服务 </span></span><br><span class="line">systemctl start rsyncd</span><br><span class="line">systemctl <span class="built_in">enable</span> rsyncd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 rsync 客户端 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 backup.sh 同步脚本 </span></span><br><span class="line">vim backup.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">SOURCE=<span class="variable">$1</span></span><br><span class="line">DEST=<span class="variable">$2</span></span><br><span class="line"></span><br><span class="line">CMD=<span class="string">"rsync -ravz --bwlimit=2000 <span class="variable">$1</span> rsync://&#123;&#123;log_server_ip&#125;&#125;:873/backup/<span class="variable">$2</span>"</span></span><br><span class="line"></span><br><span class="line">PROCS=$(pgrep -f <span class="string">"&#123;&#123;log_server_ip&#125;&#125;:873/backup/<span class="variable">$2</span>"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"x"</span> != <span class="string">"x<span class="variable">$PROCS</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">       <span class="built_in">echo</span> <span class="string">"not finished"</span></span><br><span class="line">       <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$CMD</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 crontab</span></span><br><span class="line">vim /etc/crontab</span><br><span class="line">15 * * * * root <span class="built_in">cd</span> /opt/scripts/ &amp;&amp; ./backup.sh /var/<span class="built_in">log</span>/tmp/ 10.71.12.89/$(date +\%Y-\%m)</span><br></pre></td></tr></table></figure><h2 id="rsync-有用的选项和注意事项"><a href="#rsync-有用的选项和注意事项" class="headerlink" title="rsync 有用的选项和注意事项"></a>rsync 有用的选项和注意事项</h2><p>-n 选项，方便你执行 rsync 命令前预览结果，不会真正执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ rsync -n --delete -r . machineB:/home/userB/</span><br><span class="line">deleting superman/xxx</span><br><span class="line">deleting main.c</span><br><span class="line">deleting acclink</span><br></pre></td></tr></table></figure><p>–delete 选项，如果源端没有此文件，那么目的端也别想拥有，删除之。</p><pre><code>rsync -aP --delete source dest</code></pre><p>-P 选项非常有用，它是 -progress 和 -partial 的组合。第一个选项是用来显示传输进度条，第二个选项允许断点续传和增量传输：</p><pre><code>rsync -aP source dest</code></pre><p>-z 选项，压缩传输的文件，对于已经压缩过的文件不建议添加该参数，针对大文件压缩包传输效率会降低 8 倍，且消耗 CPU</p><pre><code>rsync -az source dest</code></pre><p>–bwlimit 选项，限制传输带宽，参数值的默认单位是 KBPS，也就是每秒多少 KB</p><pre><code>rsync -avzP --bwlimit=100 source dest</code></pre><p>–remove-source-files 该选项告诉 rsync 移除 sender 端已经成功传输到 receiver 端的文件 (不包括任何目录文件)。</p><pre><code>rsync -avP --remove-source-files source dest</code></pre><p>rsync 过滤模块比较复杂，建议参考官网和 Google 实例测试<br>–exclude 选项如果只有前者可以单独使用，多个规则需要写多条<br>–include 选项通常需要配合 –exclude 同时使用<br>过滤规则比较多可以写在文件里读取，由于 rsync 不支持正则表达式，复杂的逻辑建议先使用 bash shell 过滤</p><p>Basically, first include all directories, then exclude all files.</p><pre><code>rsync -a --include=&apos;*/&apos; --exclude=&apos;*&apos; source/ destination/</code></pre><p><a href="https://rsync.samba.org/documentation.html" target="_blank" rel="noopener">https://rsync.samba.org/documentation.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/test_backup/gop-live-msdk_api</span><br><span class="line"><span class="built_in">cd</span> data/test_backup/</span><br><span class="line">touch -t 201912020808.20 test1202.txt</span><br><span class="line">touch -t 201912010808.20 test1201.txt</span><br><span class="line">touch -t 201911300808.20 test1130.txt</span><br><span class="line">touch -t 201911290808.20 test1129.txt</span><br><span class="line">touch -t 201911280808.20 test1128.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> data/test_backup/gop-live-msdk_api</span><br><span class="line">touch gop-live-msdk_api-data-2019-12-02_00103  </span><br><span class="line">touch gop-live-msdk_api-data_current</span><br><span class="line">touch gop-live-msdk_api-error-2019-12-02_00103  </span><br><span class="line">touch gop-live-msdk_api-error_current</span><br><span class="line">touch gop-live-msdk_api-data-2019-11-30.tgz</span><br><span class="line"></span><br><span class="line">vim /data/exclude.txt</span><br><span class="line">*_0*</span><br><span class="line">*_current</span><br><span class="line"></span><br><span class="line">vim /data/rsync_backup_mirror_xxx.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">var_src=<span class="string">"/data/test_backup/"</span></span><br><span class="line">var_des=<span class="string">"rsync://xxx:873/backup/"</span></span><br><span class="line"><span class="comment">#rsync -aP --delete --exclude-from '/data/exclude.txt' $&#123;var_src&#125; $&#123;var_des&#125;</span></span><br><span class="line">rsync -aP --exclude-from <span class="string">'/data/exclude.txt'</span> <span class="variable">$&#123;var_src&#125;</span> <span class="variable">$&#123;var_des&#125;</span></span><br></pre></td></tr></table></figure><h2 id="rsync-常见错误"><a href="#rsync-常见错误" class="headerlink" title="rsync 常见错误"></a>rsync 常见错误</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rsync: failed to connect to 192.168.205.135 (192.168.205.135): No route to host (113)</span><br><span class="line">rsync error: error in socket IO (code 10) at clientserver.c(125) [Receiver=3.1.2]</span><br></pre></td></tr></table></figure><p>解决：防火墙问题，放行端口或直接关闭</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@ERROR: auth failed on module rsync_test</span><br><span class="line">rsync error: error starting client-server protocol (code 5) at main.c(1648) [Receiver=3.1.2]</span><br></pre></td></tr></table></figure><p>解决：用户名与密码问题或模块问题，检查用户名与密码是否匹配，服务器端模块是否存在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rsync: read error: Connection reset by peer (104)</span><br><span class="line">rsync error: error in rsync protocol data stream (code 12) at io.c(759) [Receiver=3.1.2]</span><br></pre></td></tr></table></figure><p>解决：服务器端配置文件 /etc/rsyncd.conf 问题，检查配置文件参数是否出错</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><blockquote><p>Rsync+Inotify 文件自动同步，推荐使用 lsyncd+rsync</p></blockquote><p><a href="https://wsgzao.github.io/post/sersync/">sersync 基于 rsync+inotify 实现数据实时同步</a></p><p><a href="https://www.xiebruce.top/919.html" target="_blank" rel="noopener">CentOS7 部署 lsyncd+rsync 实现服务器文件实时同步</a></p><p><a href="https://www.cnblogs.com/f-ck-need-u/p/7220009.html" target="_blank" rel="noopener">rsync (一)：基本命令和用法</a></p><p><a href="https://gist.github.com/ilife5/8c5ba280c0c4f84db78a" target="_blank" rel="noopener">Rsync(Remote Sync)：10 个实用的例子</a></p><p><a href="https://segmentfault.com/a/1190000015669114" target="_blank" rel="noopener">rsync 的使用方法</a></p>]]></content>
    
    <summary type="html">
    
      rsync安装配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Jenkins 学习使用实践</title>
    <link href="https://wsgzao.github.io/post/jenkins/"/>
    <id>https://wsgzao.github.io/post/jenkins/</id>
    <published>2019-11-28T06:59:49.000Z</published>
    <updated>2020-02-07T03:55:15.717Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Jenkins 就不用做多余的介绍了，作为 CI/CD 首选的开源解决方案，持续集成 (Continous Intergration)/ 持续交付 (Continous Delievery)，本文只是用于记录使用 Jenkins 的一些基本操作，Jenkins 官方文档也率先支持中文，相信对大家的学习热情会有积极地促进作用。</p><blockquote><p>Jenkins 学习使用实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 11 月 28 日 - 更新 Jenkins 升级<br>2019 年 02 月 12 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/jenkins/">https://wsgzao.github.io/post/jenkins/</a></p><p><strong> 扩展阅读 </strong></p><p>Jenkins - <a href="https://jenkins.io/zh/" target="_blank" rel="noopener">https://jenkins.io/zh/</a></p><hr><h2 id="Jenkins-简介"><a href="#Jenkins-简介" class="headerlink" title="Jenkins 简介"></a>Jenkins 简介</h2><blockquote><p>构建伟大，无所不能</p></blockquote><p>Jenkins 是开源 CI&amp;CD 软件领导者， 提供超过 1000 个插件来支持构建、部署、自动化，满足任何项目的需要。</p><p>Jenkins 用户手册 - <a href="https://jenkins.io/zh/doc/" target="_blank" rel="noopener">https://jenkins.io/zh/doc/</a></p><p>Jenkins 训练营之基础篇 - <a href="https://ke.qq.com/course/265167" target="_blank" rel="noopener">https://ke.qq.com/course/265167</a><br>Jenkins 训练营之带你玩转 Pipeline - <a href="https://ke.qq.com/course/252785" target="_blank" rel="noopener">https://ke.qq.com/course/252785</a></p><p><a href="https://ke.qq.com/webcourse/index.html#cid=265167&amp;term_id=100312699&amp;taid=1794918372871119&amp;vid=p1423f5tn3g" target="_blank" rel="noopener">https://ke.qq.com/webcourse/index.html#cid=265167&amp;term_id=100312699&amp;taid=1794918372871119&amp;vid=p1423f5tn3g</a></p><p><a href="https://ke.qq.com/webcourse/index.html?cw_id=91852&amp;ac_type=3#cid=252785&amp;term_id=100298102&amp;taid=1707945285114737&amp;type=1024&amp;vid=w1422iqh9q1" target="_blank" rel="noopener">https://ke.qq.com/webcourse/index.html?cw_id=91852&amp;ac_type=3#cid=252785&amp;term_id=100298102&amp;taid=1707945285114737&amp;type=1024&amp;vid=w1422iqh9q1</a></p><h2 id="Jenkins-安装"><a href="#Jenkins-安装" class="headerlink" title="Jenkins 安装"></a>Jenkins 安装</h2><p>Jenkins 项目产生两个发行线，长期支持版本 (LTS) 和每周更新版本。 根据你的组织需求，一个可能比另一个更受欢迎。<br>两个版本都以 .war 文件，原生包，安装程序，和 Docker 容器的形式分发。<br><a href="https://jenkins.io/zh/download/" target="_blank" rel="noopener">https://jenkins.io/zh/download/</a></p><p>这里推荐下载使用 LTS 长期支持版本，以 CentOS 7 作为演示环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Java 8</span></span><br><span class="line">yum install java</span><br><span class="line"></span><br><span class="line"><span class="comment"># Jenkins stable version</span></span><br><span class="line">sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo</span><br><span class="line">sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key</span><br><span class="line">yum install jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment"># start jenkins</span></span><br><span class="line">service jenkins start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化配置向导 </span></span><br><span class="line">http://192.168.56.103:8080/</span><br><span class="line"></span><br><span class="line">cat /var/lib/jenkins/secrets/initialAdminPassword</span><br><span class="line">5224fc83b6d84cc2be69a18c53309ea4</span><br><span class="line"></span><br><span class="line">Install suggested plugins</span><br><span class="line"></span><br><span class="line"> 是否创建管理员账户或者跳过</span><br></pre></td></tr></table></figure><h2 id="Jenkins-升级"><a href="#Jenkins-升级" class="headerlink" title="Jenkins 升级"></a>Jenkins 升级</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份 jenkins.war</span></span><br><span class="line"><span class="built_in">cd</span> /usr/lib/jenkins</span><br><span class="line">cp jenkins.war jenkins.war.bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止 jenkins 服务</span></span><br><span class="line">service jenkins stop</span><br><span class="line">rm jenkins.war</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载最新稳定版 jenkins.war，国内镜像地址可以选择清华 tuna</span></span><br><span class="line">wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/jenkins/war-stable/latest/jenkins.war</span><br><span class="line">service jenkins start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关于插件升级，注意版本是否兼容以及是否要求重启</span></span><br></pre></td></tr></table></figure><h2 id="Jenkins-入门"><a href="#Jenkins-入门" class="headerlink" title="Jenkins 入门"></a>Jenkins 入门</h2><h3 id="主要的-Job-类型"><a href="#主要的-Job-类型" class="headerlink" title="主要的 Job 类型"></a>主要的 Job 类型</h3><p>Freestyle project<br>自由风格项目，Jenkins 最主要的项目类型</p><p>Maven Project<br>Maven 项目专用，类似 Freestyle，更简单</p><p>Multi-configuration project<br>多配置项目，适合需要大量不同配置 (环境，平台等) 构建</p><p>Pipeline<br>流水线项目，适合使用 pipeline(workflow)插件功能构建流水线任务，或者使用 Freestyle project 不容易实现的复杂任务</p><p>Multibranch Pipeline<br>多分支流水线项目，根据 SCM 仓库中的分支创建多个 Pipeline 项目</p><h3 id="Freestyle-项目"><a href="#Freestyle-项目" class="headerlink" title="Freestyle 项目"></a>Freestyle 项目</h3><p>General<br>项目基本配置<br>项目名字，描述，参数，禁用项目，并发构建，限制构建默认 node 等等</p><p>Source code Management<br>代码库信息，支持 Git，Subversion 等</p><p>Build Triggers<br>构建触发方式<br>周期性构建，Poll SCM，远程脚本触发构建，其他项目构建结束后触发等</p><p>Build Environment<br>构建环境相关设置<br>构建前删除 workspace，向 Console 输出添加时间戳，设置构建名称，插入环境变量等</p><p>Build<br>项目构建任务<br>添加 1 个或者多个构建步骤</p><p>Post-build Actions<br>构建后行为<br>Artifact 归档，邮件通知，发布单元测试报告，触发下游项目等等</p><h3 id="规范项目必要配置"><a href="#规范项目必要配置" class="headerlink" title="规范项目必要配置"></a>规范项目必要配置</h3><p>本规范尤其适用于较多项目共用同一 Jenkins 的场景</p><ul><li>项目命名规范</li><li>设置项目描述</li><li>设置历史构建清理规则</li><li>设置构建节点 Label</li><li>邮件通知</li></ul><h3 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h3><blockquote><p>注意 Jenkins 备份策略，建议结合 rsync 备份远端</p></blockquote><table><thead><tr><th>Name</th><th>Link</th></tr></thead><tbody><tr><td>Google Login Plugin</td><td><a href="https://plugins.jenkins.io/google-login" target="_blank" rel="noopener">https://plugins.jenkins.io/google-login</a></td></tr><tr><td>Role-based Authorization Strategy</td><td><a href="https://plugins.jenkins.io/role-strategy" target="_blank" rel="noopener">https://plugins.jenkins.io/role-strategy</a></td></tr><tr><td>Periodic Backup</td><td><a href="https://plugins.jenkins.io/periodicbackup" target="_blank" rel="noopener">https://plugins.jenkins.io/periodicbackup</a></td></tr><tr><td>Notification</td><td><a href="https://plugins.jenkins.io/notification" target="_blank" rel="noopener">https://plugins.jenkins.io/notification</a></td></tr><tr><td>Git Parameter</td><td><a href="https://plugins.jenkins.io/git-parameter" target="_blank" rel="noopener">https://plugins.jenkins.io/git-parameter</a></td></tr><tr><td>AnsiColor</td><td><a href="https://plugins.jenkins.io/ansicolor" target="_blank" rel="noopener">https://plugins.jenkins.io/ansicolor</a></td></tr><tr><td>SSH Agent</td><td><a href="https://plugins.jenkins.io/git-parameter" target="_blank" rel="noopener">https://plugins.jenkins.io/git-parameter</a></td></tr><tr><td>Build Name and Description Setter</td><td><a href="https://plugins.jenkins.io/build-name-setter" target="_blank" rel="noopener">https://plugins.jenkins.io/build-name-setter</a></td></tr><tr><td>Publish Over SSH</td><td><a href="https://plugins.jenkins.io/publish-over-ssh" target="_blank" rel="noopener">https://plugins.jenkins.io/publish-over-ssh</a></td></tr><tr><td>user build vars</td><td><a href="https://plugins.jenkins.io/build-user-vars-plugin" target="_blank" rel="noopener">https://plugins.jenkins.io/build-user-vars-plugin</a></td></tr><tr><td>Throttle Concurrent Builds</td><td><a href="https://plugins.jenkins.io/throttle-concurrents" target="_blank" rel="noopener">https://plugins.jenkins.io/throttle-concurrents</a></td></tr><tr><td>Active Choices</td><td><a href="https://plugins.jenkins.io/uno-choice" target="_blank" rel="noopener">https://plugins.jenkins.io/uno-choice</a></td></tr><tr><td>Rebuilder</td><td><a href="https://plugins.jenkins.io/rebuild" target="_blank" rel="noopener">https://plugins.jenkins.io/rebuild</a></td></tr></tbody></table><p><a href="https://wsgzao.github.io/post/jenkins-plugins/">Jenkins Plugins 常用插件推荐</a></p><h3 id="创建第一个-Job"><a href="#创建第一个-Job" class="headerlink" title="创建第一个 Job"></a>创建第一个 Job</h3><p>安装 Timestamper 插件<br>系统管理 - 插件管理 - 可用插件，搜索到 timestamper 点击 Install without restart</p><p>新建一个 Freestyle 类型的 Job</p><ul><li>General 项目名称: My-first-freestyle-demo</li><li>Build Environment 构建环境: 勾选 Add timestamps to the Console Output</li><li>Build 构建: 屏幕打印出 “这是我的第一个 Jenkins Job, oops” </li><li>Post-build Actions 构建后操作: 无</li><li>点击立刻构建</li><li>找到控制台输出</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Console Output</span><br><span class="line">14:40:59 Started by user admin</span><br><span class="line">14:40:59 Building <span class="keyword">in</span> workspace /var/lib/jenkins/workspace/My-first-freestyle-demo</span><br><span class="line">14:41:00 [My-first-freestyle-demo] $ /bin/sh -xe /tmp/jenkins3737737887278720679.sh</span><br><span class="line">14:41:00 + <span class="built_in">echo</span> <span class="string">'这是我的第一个 Jenkins Job, oops'</span></span><br><span class="line">14:41:00 这是我的第一个 Jenkins Job, oops </span><br><span class="line">14:41:00 Finished: SUCCESS</span><br></pre></td></tr></table></figure><h2 id="Jenkins-Pipeline-介绍"><a href="#Jenkins-Pipeline-介绍" class="headerlink" title="Jenkins Pipeline 介绍"></a>Jenkins Pipeline 介绍</h2><p>Pipeline，简而言之，就是一套运行于 Jenkins 上的工作流框架，将原本独立 运行于单个或者多个节点的任务连接起来，实现单个任务难以完成的复杂流程编排与可视化。</p><p>Pipeline 是 Jenkins2.X 最核心的特性，帮助 Jenkins 实现从 CI 到 CD 与 DevOps 的转变</p><blockquote><p>什么是 Jenkins Pipeline?</p></blockquote><p>Jenkins Pipeline 是一组插件，让 Jenkins 可以实现持续交付管道的落地和实施。持续交付管道 (CD Pipeline) 是将软件从版本控制阶段到交付给用户或客户的完 整过程的自动化表现。软件的每一次更改 (提交到源代码管理系统) 都要经过一个复杂的过程才能被发布。</p><p>Pipeline 提供了一组可扩展的工具，通过 Pipeline Domain Specific Language(DSL) syntax 可以达到 Pipeline as Code 的目的</p><p>Pipeline as Code:Jenkinsfile 存储在项目的源代码库</p><blockquote><p>Jenkins Pipeline 核心概念</p></blockquote><p>Stage<br>– 阶段，一个 Pipeline 可以划分为若干个 Stage，每个 Stage 代表一组操作，例如: “Build”, “Test”, “Deploy” 。<br>– 注意，Stage 是一个逻辑分组的概念，可以跨多个 Node。 </p><p>Node<br>– 节点，一个 Node 就是一个 Jenkins 节点，或者是 Master，或者是 Agent，是执行 Step 的具体 运行环境。</p><p>Step<br>– 步骤，Step 是最基本的操作单元，小到创建一个目录，大到构建一个 Docker 镜像，由各类 Jenkins Plugin 提供，例如: sh ‘make’</p><blockquote><p>为什么要用 Pipeline?</p></blockquote><ul><li>代码: Pipeline 以代码的形式实现，通常被检入源代码控制，使团队能够编辑，审查和迭代其 CD 流程。</li><li>可持续性: Jenkins 重启或者中断后都不会影响 Pipeline Job。</li><li>停顿: Pipeline 可以选择停止并等待人工输入或批准，然后再继续 Pipeline 运行。</li><li>多功能: Pipeline 支持现实世界的复杂 CD 要求，包括 fork/join 子进程，循环和 并行执行工作的能力。</li><li>可扩展: Pipeline 插件支持其 DSL 的自定义扩展以及与其他插件集成的多个选项。</li></ul><blockquote><p>Pipeline 和 Freestyle 的区别</p></blockquote><p>Freestyle:<br>– 上游 / 下游 Job 调度，如 BuildJob -&gt;TestJob -&gt; DeployJob<br>– 在 DSL Job 里面调度多个子 Job(利用 Build Flow plugin)</p><p>Pipeline:<br>– 单个 Job 中完成所有的任务编排<br>– 全局视图</p><blockquote><p>Pipeline 会取代 Freestyle 么?</p></blockquote><ul><li>Pipeline 一定会取代 Build Flow 插件</li><li>会，当你希望做到 Pipeline as code 的时候</li><li>会，当你独立运行一组 Job 没有特殊价值或者意义的时候</li><li>会，当你可以从 Multibranch Pipeline 受益的时候</li><li>会，当你希望获取类似于 TravisCI 风格的工作流的时候</li></ul><h3 id="Jenkins-Pipeline-入门"><a href="#Jenkins-Pipeline-入门" class="headerlink" title="Jenkins Pipeline 入门"></a>Jenkins Pipeline 入门</h3><p>Pipeline 脚本是由 Groovy 语言实现<br>– 无需专门学习 Groovy</p><p>Pipeline 支持两种语法<br>– Declarative 声明式(在 Pipeline plugin 2.5 中引入)<br>– Scripted Pipeline 脚本式</p><p>如何创建基本的 Pipeline<br>– 直接在 Jenkins Web UI 网页界面中输入脚本<br>– 通过创建一个 Jenkinsfile 可以检入项目的源代码管理库</p><p>最佳实践<br>– 通常推荐在 Jenkins 中直接从源代码控制 (SCM) 中载入 Jenkinsfile Pipeline</p><h3 id="快速创建一个简单的-Pipeline"><a href="#快速创建一个简单的-Pipeline" class="headerlink" title="快速创建一个简单的 Pipeline"></a>快速创建一个简单的 Pipeline</h3><ol><li>新建 Job: Jenkins -&gt; 新建 -&gt; 输入 Job 名称: “My-first-pipeline-demo” -&gt; 选择 Pipeline -&gt; 点击 “OK”</li><li>配置: 在 Pipeline -&gt; Script 文本输入框中输入下列语句，点击 ”保存”</li><li>立即构建</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">'Build'</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">'Build'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">'Test'</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">'Test'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">'Deploy'</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">'Deploy'</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Jenkins-忘记密码怎么办"><a href="#Jenkins-忘记密码怎么办" class="headerlink" title="Jenkins 忘记密码怎么办"></a>Jenkins 忘记密码怎么办</h2><p>如果权限设置错误，或者忘记密码，导致 admin 自己都无法登陆 Jenkins 怎么办?</p><ul><li>命令行停止 Jenkins;</li><li>先备份 $JENKINS_HOME 中的 config.xml;</li><li>用编辑器打开 $JENKINS_HOME 中的 config.xml;</li><li>将 &lt; useSecurity&gt;true 元素中的 true 改为 false;</li><li>将 &lt; authorizationStrategy &gt; 和 &lt; securityRealm &gt; 元素的内容删掉; </li><li>命令行启动 Jenkins。</li></ul><h2 id="Ansible-Jenkins-API-Token-使用技巧"><a href="#Ansible-Jenkins-API-Token-使用技巧" class="headerlink" title="Ansible Jenkins API Token 使用技巧"></a>Ansible Jenkins API Token 使用技巧</h2><p>Jenkins REST API 提供了 API token，使得可以在程序中使用 API token 进行认证（而不是使用你真实的密码）。</p><p>API token 可以在用户个人设置界面查看<br>到用户→用户 id→设置页面，在 API Token 区域点击 Show API token 按钮，便可查看 API token，同时还可以更改 API token<br>相应的 URL 是<br>http://&lt;JENKINS_URL&gt;/user/<userid>/configure</userid></p><p>Manage Jenkins jobs by using Jenkins REST API</p><p>jenkins_job_facts – Get facts about Jenkins jobs<br><a href="https://docs.ansible.com/ansible/latest/modules/jenkins_job_facts_module.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/modules/jenkins_job_facts_module.html</a></p><p>jenkins_job – Manage jenkins jobs<br><a href="https://docs.ansible.com/ansible/latest/modules/jenkins_job_module.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/modules/jenkins_job_module.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python-jenkins package</span></span><br><span class="line">pip install python-jenkins lxml</span><br><span class="line"></span><br><span class="line"><span class="comment"># jenkins_job_facts.yml</span></span><br><span class="line">---</span><br><span class="line">- hosts: all</span><br><span class="line">  gather_facts: no</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: Get host info</span><br><span class="line">      local_action:</span><br><span class="line">        module: jenkins_job_facts</span><br><span class="line">        url: https://xxx</span><br><span class="line">        user: xxx</span><br><span class="line">        token: xxx</span><br><span class="line">        glob: <span class="string">'*mh_kg*'</span></span><br><span class="line">      register: my_jenkins_job_facts</span><br><span class="line"></span><br><span class="line">    - debug:</span><br><span class="line">        msg: <span class="string">"&#123;&#123;my_jenkins_job_facts&#125;&#125;"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># shell awk</span></span><br><span class="line">cat reg | grep <span class="string">'"name"'</span> | awk -F <span class="string">'"'</span> <span class="string">'&#123;print $4&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># jenkins_job_delete.yml</span></span><br><span class="line">---</span><br><span class="line">- hosts: all</span><br><span class="line">  gather_facts: no</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">    - name: Delete <span class="built_in">jobs</span></span><br><span class="line">      local_action:</span><br><span class="line">        module: jenkins_job</span><br><span class="line">        url: xxx</span><br><span class="line">        user: xxx</span><br><span class="line">        token: xxx</span><br><span class="line">        name: <span class="string">"&#123;&#123; item &#125;&#125;"</span></span><br><span class="line">        state: absent</span><br><span class="line">      loop: </span><br><span class="line">        - gop_live___mh_kg_garena_auth_nginx_static_files</span><br><span class="line">        - gop_live___mh_kg_nginx_reload</span><br><span class="line">        - gop_live___mh_kg_nginx_update_config</span><br><span class="line">        - gop_live___mh_kg_restart_service</span><br><span class="line">        - gop_live___mh_kg_setup_server</span><br><span class="line">        - gop_live___mh_kg_stop_service</span><br><span class="line">        - gop_live_mh_kg_app_point</span><br><span class="line">        - gop_live_mh_kg_game_service</span><br><span class="line">        - gop_live_mh_kg_payment_center_backend</span><br><span class="line">        - gop_live_mh_kg_sso_website</span><br></pre></td></tr></table></figure><h2 id="Jenkins-迁移"><a href="#Jenkins-迁移" class="headerlink" title="Jenkins 迁移"></a>Jenkins 迁移</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建迁移脚本</span></span><br><span class="line">vim jenkins_jobs_migration.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> -r line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$line</span></span><br><span class="line">curl -s --user &lt;name&gt;:&lt;token&gt; https://&lt;<span class="built_in">source</span>-jenkins-url&gt;/job/<span class="variable">$line</span>/config.xml | curl -XPOST --user &lt;name&gt;:&lt;token&gt; https://&lt;target-jenkins-url&gt;/createItem?name=<span class="variable">$line</span> --header <span class="string">"Content-Type: application/xml"</span> -d @-</span><br><span class="line"><span class="keyword">done</span> &lt; jobs.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建需要迁移的 jobs</span></span><br><span class="line">vim jobs.txt</span><br><span class="line">gop_k8s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行迁移脚本</span></span><br><span class="line">chmod +x jenkins_jobs_migration.sh</span><br><span class="line">./jenkins_jobs_migration.sh</span><br><span class="line">gop_k8s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查迁移后的 jobs 兼容性</span></span><br></pre></td></tr></table></figure><h2 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h2><blockquote><p>官方手册永远是你的最佳参考内容</p></blockquote><p>Jenkins 用户手册 - <a href="https://jenkins.io/zh/doc/" target="_blank" rel="noopener">https://jenkins.io/zh/doc/</a></p><p><a href="http://www.51niux.com/?cate=46" target="_blank" rel="noopener">Jenkins</a></p><p><a href="https://blog.mafeifan.com/Jenkins/" target="_blank" rel="noopener">Jenkins2 系列</a></p><p><a href="https://www.linuxba.com/archives/tag/jenkins" target="_blank" rel="noopener">《Jenkins 2.x 实践指南》读书笔记</a></p><p><a href="https://www.w3cschool.cn/jenkins/" target="_blank" rel="noopener">Jenkins 中文文档</a></p><p><a href="http://www.eryajf.net/2415.html" target="_blank" rel="noopener">Jenkins 入门系列笔记汇总整理</a></p><p><a href="http://www.kekefund.com/2019/09/01/devops-step3-controller/" target="_blank" rel="noopener">中控平台 jenkins</a></p><p><a href="https://www.cnblogs.com/kevingrace/p/8076488.html" target="_blank" rel="noopener">Jenkins 日常运维笔记 - 主目录 / 主备模式 / 迁移 / job 覆盖 / maven 构建 / 日志处理</a></p>]]></content>
    
    <summary type="html">
    
      Jenkins学习使用实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>MacBook macOS 从小白到入门</title>
    <link href="https://wsgzao.github.io/post/macbook/"/>
    <id>https://wsgzao.github.io/post/macbook/</id>
    <published>2019-11-21T08:59:49.000Z</published>
    <updated>2019-11-22T09:59:37.477Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://i.v2ex.co/y2JB0IAD.png" alt=""></p><p>这里做下 MacBook macOS 从小白到入门的持续更新记录</p><blockquote><p>MacBook macOS 从小白到入门</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 11 月 21 日 - 增加 macOS 生产力工具链推荐<br>2019 年 03 月 16 日 - 更新 macOS vim 语法高亮的设置方法<br>2019 年 02 月 28 日 - 更新 macOS 开启关闭 SIP<br>2019 年 01 月 24 日 - 增加开启 HiDPI 和解决黑屏问题<br>2018 年 10 月 19 日 - 更新升级 macOS Mojave 后的各种小问题解决方法<br>2018 年 07 月 25 日 - 补充细节<br>2018 年 07 月 05 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/macbook/">https://wsgzao.github.io/post/macbook/</a></p><p><strong> 扩展阅读 </strong></p><p>Awesome Mac - <a href="http://wangchujiang.com/awesome-mac/index.zh.html" target="_blank" rel="noopener">http://wangchujiang.com/awesome-mac/index.zh.html</a><br>BestApp - <a href="https://github.com/hzlzh/Best-App" target="_blank" rel="noopener">https://github.com/hzlzh/Best-App</a><br><a href="https://github.com/Louiszhai/tool" target="_blank" rel="noopener">开发效率提升：Mac 生产力工具链推荐</a></p><hr><h2 id="System-Preferences"><a href="#System-Preferences" class="headerlink" title="System Preferences"></a>System Preferences</h2><blockquote><p>在任何的操作系统中，首先你需要做一件事就是更新系统，点击窗口左上角的  &gt; 关于本机 &gt; 软件更新 。此外，如果这是一部新的电脑，你还需要到系统设置进行一些适当调整。如何调整，取决于个人喜好。</p></blockquote><h3 id="触控板"><a href="#触控板" class="headerlink" title="触控板"></a>触控板</h3><p>系统设置 &gt; 触控板</p><p>光标与点击</p><ul><li>轻拍来点按</li><li>辅助点按</li><li>查找</li><li>三指拖移</li></ul><p>滚动缩放</p><ul><li>默认全选</li></ul><p>更多手势</p><ul><li>默认全选</li></ul><h3 id="Dock"><a href="#Dock" class="headerlink" title="Dock"></a>Dock</h3><p>置于屏幕上的位置：左边<br>设置 Dock 图标更小（大小随个人喜好）</p><ul><li>自动显示和隐藏 Dock</li></ul><h3 id="Finder"><a href="#Finder" class="headerlink" title="Finder"></a>Finder</h3><p>Finder &gt; 显示</p><ul><li>显示标签页栏</li><li>显示路径栏</li><li>显示状态栏</li><li>自定工具栏 &gt; 去除所有按钮，仅剩搜索栏</li></ul><p>Finder &gt; 偏好设置</p><p>通用</p><ul><li>开启新 Finder 窗口时打开：HOME「用户名」目录</li></ul><p>边栏</p><ul><li>添加 HOME「用户名」目录 和 创建代码文件目录</li><li>将 共享的(shared) 和 标记(tags) 目录去掉</li></ul><h3 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h3><ul><li>去掉蓝牙等无需经常使用的图标</li><li>将电池显示设置为百分比</li></ul><h3 id="Spotlight"><a href="#Spotlight" class="headerlink" title="Spotlight"></a>Spotlight</h3><ul><li>去掉字体和书签与历史记录等不需要的内容</li><li>设置合适的快捷键</li></ul><h3 id="互联网帐户"><a href="#互联网帐户" class="headerlink" title="互联网帐户"></a>互联网帐户</h3><ul><li>添加 iCloud 用户，同步日历，联系人和 Find my mac 等等</li></ul><h3 id="English"><a href="#English" class="headerlink" title="English"></a>English</h3><p>Trackpad</p><ul><li>Tap to click</li></ul><p>Accessibility -&gt; Mouse &amp; Trackpad -&gt; Trackpad Options</p><ul><li>Enable dragging | three finger drag</li></ul><p>Language &amp; Region</p><ul><li>Time format | 24-Hour Time</li><li>click add button | Chinese, Simplified</li></ul><p>Language &amp; Region -&gt; Keyboard Preferences -&gt; Shortcuts -&gt; Input Sources</p><ul><li>Select the previous input source</li></ul><p>Display -&gt; Arrangement</p><ul><li>Drag the graphics and just make what you want</li><li>if the display rotates 90 degrees then change Rotation to 90° or 270° and click confirm button to save</li></ul><h2 id="Mac-键盘快捷键"><a href="#Mac-键盘快捷键" class="headerlink" title="Mac 键盘快捷键"></a>Mac 键盘快捷键</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191122174620.png" alt=""></p><table><thead><tr><th style="text-align:center">Symbol</th><th style="text-align:center">Key</th></tr></thead><tbody><tr><td style="text-align:center">&#8984;</td><td style="text-align:center">Command Key</td></tr><tr><td style="text-align:center">&#8963;</td><td style="text-align:center">Control Key</td></tr><tr><td style="text-align:center">&#8997;</td><td style="text-align:center">Option Key</td></tr><tr><td style="text-align:center">&#8679;</td><td style="text-align:center">Shift Key</td></tr></tbody></table><blockquote><p>我自己常用的快捷键</p></blockquote><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>Command(⌘)-C</td><td>复制</td></tr><tr><td>Command(⌘)-V</td><td>粘贴</td></tr><tr><td>Command(⌘)-Z</td><td>撤销</td></tr><tr><td>Command(⌘)-Option-V</td><td>剪切粘贴</td></tr><tr><td>Command(⌘)-A</td><td>全选</td></tr><tr><td>Command(⌘)-F</td><td>查找</td></tr><tr><td>Command(⌘)-S</td><td>保存</td></tr><tr><td>Command(⌘)-W</td><td>关闭当前窗口</td></tr><tr><td>Command(⌘)- 空格键</td><td>聚焦</td></tr><tr><td>Command(⌘)- 方向左键</td><td>后退</td></tr><tr><td>Command(⌘)- 方向右键</td><td>前进</td></tr><tr><td>Control-A</td><td>移至行或段落的开头</td></tr><tr><td>Control-E</td><td>移至行或段落的末尾</td></tr><tr><td>Control - 空格键</td><td>切换输入法（需要手动设置）</td></tr><tr><td>Control-Command-Q</td><td>系统自带锁屏快捷键</td></tr><tr><td>Option-Command-C</td><td>复制文件路径，当然也可以直接拖拽到命令行</td></tr></tbody></table><p><a href="https://support.apple.com/zh-cn/HT201236" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201236</a></p><h2 id="Mac-Soft"><a href="#Mac-Soft" class="headerlink" title="Mac Soft"></a>Mac Soft</h2><p>Homebrew - Mac 下必备的包管理工具<br><a href="https://brew.sh/" target="_blank" rel="noopener">https://brew.sh/</a></p><p>Alfred - Mac 下被无数人安利的效率工具，虽然我觉得 Spotlight 暂时够用了<br><a href="https://www.alfredapp.com/" target="_blank" rel="noopener">https://www.alfredapp.com/</a></p><p>Mounty for NTFS - 免费的 NTFS 支持软件<br><a href="http://enjoygineering.com/mounty/" target="_blank" rel="noopener">http://enjoygineering.com/mounty/</a><br><a href="https://www.seagate.com/sg/en/support/software/paragon/#downloads" target="_blank" rel="noopener">Seagate</a></p><p>Sougou Input - 陪伴大家多年的搜狗输入法<br><a href="https://pinyin.sogou.com/mac/" target="_blank" rel="noopener">https://pinyin.sogou.com/mac/</a></p><p>Youdao Dict - 网易开发的老牌翻译工具<br><a href="http://cidian.youdao.com/index-mac.html" target="_blank" rel="noopener">http://cidian.youdao.com/index-mac.html</a></p><p>Adobe Reader - Adobe 官方免费的 PDF 阅读工具<br><a href="https://get.adobe.com/reader/" target="_blank" rel="noopener">https://get.adobe.com/reader/</a></p><p>Clearview - 支持 PDF, EPUB, CHM, MOBI 的免费阅读器<br><a href="https://itunes.apple.com/app/clearview/id557090104?mt=12&amp;ls=1" target="_blank" rel="noopener">https://itunes.apple.com/app/clearview/id557090104?mt=12&amp;ls=1</a></p><p>Evernote - 轻量级的在线笔记类应用内<br><a href="https://evernote.com/" target="_blank" rel="noopener">https://evernote.com/</a></p><p>Dropbox - 最佳的实时同步工具之一<br><a href="https://www.dropbox.com/" target="_blank" rel="noopener">https://www.dropbox.com/</a></p><p>eZip - 国人编写的转为 macOS 而设计的压缩软件，代替 Keka<br><a href="https://ezip.awehunt.com/" target="_blank" rel="noopener">https://ezip.awehunt.com/</a></p><p>Mac 迅雷 - 支持协议多广告也多，FOLX、Free Download Manager、qBittorrent 都可以作为备选方案<br><a href="http://mac.xunlei.com/" target="_blank" rel="noopener">http://mac.xunlei.com/</a></p><p>百度网盘 - 国内的网盘共享基本只剩下百度一家独大了，有时候迅雷离线无法下载可以尝试<br><a href="https://pan.baidu.com/" target="_blank" rel="noopener">https://pan.baidu.com/</a></p><p>IINA - 国人编写的开源视频播放器<br><a href="https://lhc70000.github.io/iina/" target="_blank" rel="noopener">https://lhc70000.github.io/iina/</a></p><p>Snipaste - 或许是最好的截图软件，愿意每年付 12 元推荐 Xnip<br><a href="https://zh.snipaste.com/" target="_blank" rel="noopener">https://zh.snipaste.com/</a></p><p>FileZilla - 免费开源的 FTP/SFTP 应用<br><a href="https://filezilla-project.org/download.php?type=client" target="_blank" rel="noopener">https://filezilla-project.org/download.php?type=client</a></p><p>Clipy - 记录多条粘贴板小工具<br><a href="https://github.com/Clipy/Clipy" target="_blank" rel="noopener">https://github.com/Clipy/Clipy</a></p><p>Spectacle - 快速调整程序窗口位置的效率工具<br><a href="https://www.spectacleapp.com/" target="_blank" rel="noopener">https://www.spectacleapp.com/</a></p><p>Sourcetree - 图形化 Git 管理工具<br><a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener">https://www.sourcetreeapp.com/</a></p><p>Microsoft Remote Desktop - Mac 下的微软 RDP 远程桌面登录工具<br><a href="https://itunes.apple.com/us/app/microsoft-remote-desktop-10/id1295203466?mt=12" target="_blank" rel="noopener">https://itunes.apple.com/us/app/microsoft-remote-desktop-10/id1295203466?mt=12</a></p><p>VirtualBox - 免费的虚拟机工具<br><a href="http://www.oracle.com/technetwork/server-storage/virtualbox/downloads/index.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/server-storage/virtualbox/downloads/index.html</a></p><p>PostMan - 免费强大的 HTTP 调试工具<br><a href="https://www.getpostman.com/" target="_blank" rel="noopener">https://www.getpostman.com/</a></p><p>VMware OS Optimization Tool - VMware 开发的 Windows 虚拟机优化工具<br><a href="https://labs.vmware.com/flings/vmware-os-optimization-tool" target="_blank" rel="noopener">https://labs.vmware.com/flings/vmware-os-optimization-tool</a></p><h3 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h3><p><a href="https://docs.brew.sh/Installation" target="_blank" rel="noopener">https://docs.brew.sh/Installation</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install xcode first</span></span><br><span class="line">https://itunes.apple.com/us/app/xcode/id497799835</span><br><span class="line"></span><br><span class="line"><span class="comment"># install homebrew</span></span><br><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># install packages</span></span><br><span class="line">brew tap dteoh/sqa</span><br><span class="line">brew install zsh</span><br><span class="line">brew install wget</span><br><span class="line">brew install git</span><br><span class="line"><span class="comment"># default install is python3 now, if you need python2 just run `brew install python2`</span></span><br><span class="line">brew install python</span><br></pre></td></tr></table></figure><h3 id="iTerm2-zsh-Oh-My-Zsh"><a href="#iTerm2-zsh-Oh-My-Zsh" class="headerlink" title="iTerm2 + zsh + Oh My Zsh"></a>iTerm2 + zsh + Oh My Zsh</h3><p>iTerm2<br><a href="https://www.iterm2.com/" target="_blank" rel="noopener">https://www.iterm2.com/</a></p><p>Oh My Zsh<br><a href="http://ohmyz.sh/" target="_blank" rel="noopener">http://ohmyz.sh/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install latest zsh zsh-syntax-highlighting</span></span><br><span class="line">brew install zsh zsh-syntax-highlighting</span><br><span class="line"><span class="comment"># 修改默认 shell，在 /etc/shells 文件中加入如下一行</span></span><br><span class="line">vi /etc/shells</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/zsh</span><br><span class="line"><span class="comment"># 然后运行命令切换 shell</span></span><br><span class="line">chsh -s /usr/<span class="built_in">local</span>/bin/zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># install oh-my-zsh</span></span><br><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改主题为 agnoster，增加一行 zsh-syntax-highlighting</span></span><br><span class="line">vi ~/.zshrc</span><br><span class="line"></span><br><span class="line">ZSH_THEME=<span class="string">"agnoster"</span></span><br><span class="line"><span class="built_in">source</span> /usr/<span class="built_in">local</span>/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可选增加 visual studio code 命令行 code 支持 zsh</span></span><br><span class="line"><span class="keyword">function</span> code &#123;</span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$#</span> = 0 ]]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        open -a <span class="string">"Visual Studio Code"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">local</span> argPath=<span class="string">"<span class="variable">$1</span>"</span></span><br><span class="line">        [[ <span class="variable">$1</span> = /* ]] &amp;&amp; argPath=<span class="string">"<span class="variable">$1</span>"</span> || argPath=<span class="string">"<span class="variable">$PWD</span>/<span class="variable">$&#123;1#./&#125;</span>"</span></span><br><span class="line">        open -a <span class="string">"Visual Studio Code"</span> <span class="string">"<span class="variable">$argPath</span>"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决 Too many files open error</span></span><br><span class="line"><span class="built_in">ulimit</span> -n 10000</span><br><span class="line"><span class="built_in">ulimit</span> -u 2048</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新环境变量</span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 powerline 字体</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git</span><br><span class="line"><span class="built_in">cd</span> fonts</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><blockquote><p>配置 iTerm2 主题，主题可以从 iterm2colorschemes 下载</p></blockquote><p><a href="https://iterm2colorschemes.com/" target="_blank" rel="noopener">https://iterm2colorschemes.com/</a></p><ol><li>Download iTerm2 color you like</li><li>Open iTerm2 that we already downloaded at the first section</li><li>Go to iTerm2 &gt; Preferences &gt; Profiles &gt; Colors Tab</li><li>Click Color Presets at the bottom right</li><li>Click Import</li><li>Select the *.itermcolors file</li><li>Select the * from Load Presets</li></ol><p>在 Keys -&gt; Hotkey 中设置 <code>command + i</code> 快速显示和隐藏 iTerm<br>在 Profiles -&gt; Default -&gt; Colors -&gt; Load Presets 导入主题，作为默认颜色，我的主题是 <code>3024 Night</code><br>在 Profiles -&gt; Text -&gt; Change Font 调整字体 / 大小 / 颜色等，我的字体是 <code>18pt Ubuntu Mono derivative Powerline</code></p><p>macOS 使用笔记：终端配置 - <a href="http://lizhiqiang.me/mac_terminal/" target="_blank" rel="noopener">http://lizhiqiang.me/mac_terminal/</a><br>打造 Mac 下高颜值好用的终端环境 - <a href="https://blog.biezhi.me/2018/11/build-a-beautiful-mac-terminal-environment.html" target="_blank" rel="noopener">https://blog.biezhi.me/2018/11/build-a-beautiful-mac-terminal-environment.html</a></p><blockquote><p>macOS vim 语法高亮的设置方法</p></blockquote><p>打开 terminal 复制 /usr/share/vim/vimrc 到家目录下并重命名为 “.vimrc”, 然后编辑该文件，增加以下几行：</p><p>VimConfig - <a href="https://vimconfig.com/" target="_blank" rel="noopener">https://vimconfig.com/</a><br>My .vimrc - <a href="https://chrisyeh96.github.io/2017/12/18/vimrc.html" target="_blank" rel="noopener">https://chrisyeh96.github.io/2017/12/18/vimrc.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/vim/vimrc ~/.vimrc</span><br><span class="line"><span class="built_in">set</span> ai                  <span class="string">"auto indenting</span></span><br><span class="line"><span class="string">set ruler"</span> show the cursor position</span><br><span class="line"><span class="built_in">set</span> hlsearch            <span class="string">"highlight the last searched term</span></span><br><span class="line"><span class="string">set history=1000"</span> keep 1000 lines of <span class="built_in">history</span></span><br><span class="line">syntax on               <span class="string">"syntax highlighting</span></span><br><span class="line"><span class="string">filetype plugin on"</span> use the file <span class="built_in">type</span> plugins</span><br></pre></td></tr></table></figure><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><p><img src="http://wx4.sinaimg.cn/large/7207510dgy1fxgwknz69qg20jg0b5hdz.gif" alt=""></p><h3 id="升级-macOS-Mojave-新版卡顿黑屏和字体发虚解决方案"><a href="#升级-macOS-Mojave-新版卡顿黑屏和字体发虚解决方案" class="headerlink" title="升级 macOS Mojave 新版卡顿黑屏和字体发虚解决方案"></a>升级 macOS Mojave 新版卡顿黑屏和字体发虚解决方案</h3><blockquote><p>输入文字卡顿</p></blockquote><p>如果你的 Mac 已经更新至 macOS Mojave，在输入文字时经常卡顿，频繁出现小风车，那很有可能是搜狗输入法造成的，只需将它升级至最新的 4.8.0 版本，即可完美解决。</p><blockquote><p>字体发虚</p></blockquote><p>升级 macOS Mojave 新系统后，苹果默认关闭了子像素抗锯齿，导致字体变细锯齿增多。<br>解决字体渲染过细，打开终端，输入：</p><pre><code>defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO</code></pre><p>重启应用比如 VS Code 后即可看到效果</p><blockquote><p>开启 HiDPI</p></blockquote><p>如果外接显示器字体模糊，可以使用 Scale Resolutions<br>Display Override PropertyList File Parser and Generator with HiDPI support</p><p><a href="https://comsysto.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/" target="_blank" rel="noopener">https://comsysto.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/</a></p><p>Enable HiDPI on OS X - <a href="https://github.com/syscl/Enable-HiDPI-OSX" target="_blank" rel="noopener">https://github.com/syscl/Enable-HiDPI-OSX</a></p><blockquote><p>解决唤醒时黑屏只看见鼠标的问题</p></blockquote><p>先关机，然后开机快速同时点击 Command + S 按键进入 single-user 单用户模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/sbin/fsck -fy</span><br><span class="line">/sbin/mount -uw /</span><br><span class="line">rm -f /Library/Preferences/com.apple.loginwindow.plist</span><br><span class="line">rm -f /var/db/.AppleUpgrade</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="解决-Command-Q-经常误按"><a href="#解决-Command-Q-经常误按" class="headerlink" title="解决 Command+Q 经常误按"></a>解决 Command+Q 经常误按</h3><p>Slow Quit Apps</p><p>A macOS app that adds a global delay of 1 second to the Cmd-Q shortcut. In other words, you have to hold down Cmd-Q for 1 second before an application will quit.</p><p>When the delay is active, an overlay is drawn at the center of the screen.</p><p><a href="https://github.com/dteoh/SlowQuitApps" target="_blank" rel="noopener">https://github.com/dteoh/SlowQuitApps</a></p><p>brew cask install slowquitapps</p><p>运行程序按照提示授权后重启应用并设置开机自启动即可享受 1s 延迟关闭提醒，如果觉得时间不够长可以自己设定</p><h3 id="提示应用程序被破坏无法打开"><a href="#提示应用程序被破坏无法打开" class="headerlink" title="提示应用程序被破坏无法打开"></a>提示应用程序被破坏无法打开</h3><blockquote><p>SOLVED: “Application” is damaged and can’t be opened in macOS Sierra</p></blockquote><pre><code>sudo spctl --master-disable</code></pre><p>输入密码重新打开 System Preferences &gt; Security &amp; Privacy &gt; General 即可看到之前隐藏的“Anywhere”<br><a href="https://www.santoshsrinivas.com/disable-gatekeeper-in-macos-sierra/" target="_blank" rel="noopener">https://www.santoshsrinivas.com/disable-gatekeeper-in-macos-sierra/</a></p><blockquote><p>macOS High Seirra 提示 “已损坏，打不开，您应该将它移至垃圾篓”</p></blockquote><p>这是因为在系统偏好设置的 “安全性与隐私” 里面的 “允许从以下位置下载的应用” 没有选中“任何来源”，解决方法如下：</p><ol><li>打开终端，然后输入以下命令：sudo spctl –master-disable</li><li>然后回车，输入系统密码并回车（这里输入密码不会显示，输完密码直接回车即可），如果没有提示即操作成功。</li><li>打开系统偏好设置的 “安全性与隐私”，查看“允许从以下位置下载的应用” 是否选中的是“任何来源”，如果选中说明操作成功。这时再打开软件安装就没有已损坏的提示的了。</li></ol><h3 id="Mac-开启关闭-SIP"><a href="#Mac-开启关闭-SIP" class="headerlink" title="Mac 开启关闭 SIP"></a>Mac 开启关闭 SIP</h3><p>S1. 查看 SIP 状态<br>在终端中输入 csrutil status，就可以看到是 enabled 还是 disabled。</p><p>S2. 关闭 SIP</p><ol><li>重启 MAC，按住 cmd+R 直到屏幕上出现苹果的标志和进度条，进入 Recovery 模式；</li><li>在屏幕最上方的工具栏找到实用工具（左数第 3 个），打开终端，输入：csrutil disable；</li><li>关掉终端，重启 mac；</li><li>重启以后可以在终端中查看状态确认。</li></ol><p>S3. 开启 SIP<br>与关闭的步骤类似，只是在 S2 中输入 csrutil enable 即可。</p><h3 id="更改-Apple-ID-国家或地区"><a href="#更改-Apple-ID-国家或地区" class="headerlink" title="更改 Apple ID 国家或地区"></a>更改 Apple ID 国家或地区</h3><blockquote><p>区域在国内即使身在国外也看不到你需要的很多东东，建议修改</p></blockquote><p><a href="https://support.apple.com/zh-cn/ht201389" target="_blank" rel="noopener">https://support.apple.com/zh-cn/ht201389</a></p><h3 id="USB-Type-C-耳机"><a href="#USB-Type-C-耳机" class="headerlink" title="USB Type-C 耳机"></a>USB Type-C 耳机</h3><ol><li>插入耳机至任意 USB Type-C 接口</li><li>System Preferences -&gt; Sound -&gt; Output -&gt; 选择识别到的耳机设备即可</li></ol><h3 id="Macbook-外置键盘如何更改设置"><a href="#Macbook-外置键盘如何更改设置" class="headerlink" title="Macbook 外置键盘如何更改设置"></a>Macbook 外置键盘如何更改设置</h3><p>option 改成 command（win 版键盘下的四个方块图标按键）<br>command 改成 option</p><p><a href="https://jingyan.baidu.com/article/363872ec2185346e4aa16f61.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/363872ec2185346e4aa16f61.html</a></p><h3 id="配置从命令提示行启动-vscode"><a href="#配置从命令提示行启动-vscode" class="headerlink" title="配置从命令提示行启动 vscode"></a>配置从命令提示行启动 vscode</h3><p>安装 Visual Studio Code，打开命令面板（按 F1 或 command + shift + p）输入 Shell 命令找到 Shell 命令: 在 PATH 中安装 “code” 命令。命令执行完成之后，重启终端工具使新的 $PATH 可用。现在，您可以简单地在终端中任意文件夹下输入‘code .’来编辑该文件夹下的文件了。</p><h3 id="Git-Ignore"><a href="#Git-Ignore" class="headerlink" title="Git Ignore"></a>Git Ignore</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个新文件 ~/.gitignore ，并将以下内容添加进去，这样全部 git 仓库将会忽略以下内容所提及的文件。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Folder view configuration files</span></span><br><span class="line">.DS_Store</span><br><span class="line">Desktop.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># Thumbnail cache files</span></span><br><span class="line">._*</span><br><span class="line">Thumbs.db</span><br><span class="line"></span><br><span class="line"><span class="comment"># Files that might appear on external disks</span></span><br><span class="line">.Spotlight-V100</span><br><span class="line">.Trashes</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compiled Python files</span></span><br><span class="line">*.pyc</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compiled C++ files</span></span><br><span class="line">*.out</span><br><span class="line"></span><br><span class="line"><span class="comment"># Application specific files</span></span><br><span class="line">venv</span><br><span class="line">node_modules</span><br><span class="line">.sass-cache</span><br><span class="line"></span><br><span class="line"><span class="comment"># Temp File</span></span><br><span class="line">*.swp</span><br><span class="line">*.swa</span><br><span class="line">*.swo</span><br><span class="line"></span><br><span class="line"><span class="comment"># github merge file</span></span><br><span class="line">*.orig</span><br><span class="line"></span><br><span class="line"><span class="comment">#vscode </span></span><br><span class="line">.vscode</span><br></pre></td></tr></table></figure><h3 id="禁止-DS-store-生成"><a href="#禁止-DS-store-生成" class="headerlink" title="禁止. DS_store 生成"></a>禁止. DS_store 生成</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 禁止 .DS_store 生成，打开“终端”，复制黏贴下面的命令，回车执行，重启 Mac 即可生效。</span></span><br><span class="line">defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE</span><br><span class="line"><span class="comment"># 恢复 .DS_store 生成</span></span><br><span class="line">defaults delete com.apple.desktopservices DSDontWriteNetworkStores</span><br><span class="line"><span class="comment"># 刪除已存在的. DS_Store</span></span><br><span class="line">sudo find . -name <span class="string">".DS_Store"</span> -depth -<span class="built_in">exec</span> rm &#123;&#125; \;</span><br></pre></td></tr></table></figure><h3 id="ssh-相关"><a href="#ssh-相关" class="headerlink" title="ssh 相关"></a>ssh 相关</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -bash: warning: setlocale: LC_CTYPE: cannot change locale (UTF-8): No such file or directory</span></span><br><span class="line"><span class="comment"># 禁止 OpenSSH 客户端从 OS X/Linux/Unix 桌面发送 LC_* 变量</span></span><br><span class="line">vi /etc/ssh/ssh_config</span><br><span class="line"><span class="comment">#SendEnv LANG LC_*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># port forwarding</span></span><br><span class="line">ssh -p 22202 wangao@127.0.0.1</span><br><span class="line">ssh -p 22202 wangao@127.0.0.1 -X</span><br><span class="line">scp -P 22202 -r sysctl.sh sysctl.d/ wangao@127.0.0.1:/tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># ssh tunnel for one-time</span></span><br><span class="line">ssh -t -A wangao@xx.xx.xx.xx ssh wangao@10.65.32.60</span><br><span class="line"></span><br><span class="line"><span class="comment"># config ssh tunnel to make easy connect everyday</span></span><br><span class="line">vim ~/.ssh/config</span><br><span class="line"></span><br><span class="line">StrictHostKeyChecking no</span><br><span class="line">CheckHostIP no</span><br><span class="line"></span><br><span class="line">Host 10.71.12.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_NC_MAIN -W %h:%p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Host 10.71.13.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_NC_MAIN -W %h:%p</span><br><span class="line"></span><br><span class="line">Host 10.71.14.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_NC_MAIN -W %h:%p</span><br><span class="line"></span><br><span class="line">Host 10.71.15.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_NC_MAIN -W %h:%p</span><br><span class="line"></span><br><span class="line">Host bastion_GOP_SG_NC_MAIN</span><br><span class="line">  HostName 8.8.8.8</span><br><span class="line">  port 22</span><br><span class="line">  User wangao</span><br></pre></td></tr></table></figure><hr><p>题图 - 苹果 2015 新春广告<a href="http://www.apple.com/cn/start-something-new/#film-holiday" target="_blank" rel="noopener">《老唱片》</a></p>]]></content>
    
    <summary type="html">
    
      MacBook macOS 从小白到入门
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>圈外同学个人发展战略课程</title>
    <link href="https://wsgzao.github.io/post/quanwai/"/>
    <id>https://wsgzao.github.io/post/quanwai/</id>
    <published>2019-11-21T06:59:49.000Z</published>
    <updated>2019-11-21T07:46:29.948Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>圈外同学是什么？各位可以自行通过搜索引擎来了解，这篇文章主要是转载了圈外同学的个人发展战略课程，如果觉得内容实在希望进一步学习，可以直接打开圈外同学官网咨询。</p><blockquote><p>圈外同学个人发展战略课程</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 11 月 21 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/quanwai/">https://wsgzao.github.io/post/quanwai/</a></p><p><strong> 扩展阅读 </strong></p><p>授权转载自圈外同学 - <a href="https://www.iquanwai.com/" target="_blank" rel="noopener">https://www.iquanwai.com/</a></p><hr><h2 id="个人发展战略课程简介"><a href="#个人发展战略课程简介" class="headerlink" title="个人发展战略课程简介"></a>个人发展战略课程简介</h2><p>你好，欢迎来到圈外同学《个人发展战略》的课程，我是孙圈圈，这是我的笔名，原名叫孙园媛。在你开始听课之前，我想先给你做个测试，是关于个人发展的 9 道是非题，看看你能答对多少，然后我再告诉你为什么这么做。如果你怕记不住，可以拿手机或纸笔记录一下答案。</p><ol><li>我对现在的工作没什么热情，应该是因为我不够擅长</li><li>我认同 “以大多数人的努力程度之低，根本达不到拼天赋”</li><li>做技术的，应该专注在做技术上，其他能力不重要</li><li>时代变化太快，我需要紧密关注和学习应对所有变化，避免被淘汰</li><li>我觉得自己好像没什么天赋</li><li>学习一个领域的知识，应该从概念开始，全面地学习</li><li>多学点知识，一定会有用的</li><li>工作让我感觉很心累，肯定是工作量太大了</li><li>很难坚持学习、阅读、健身这类事情，是因为不够自律</li></ol><p>现在，我来公布答案了，你先记录下来，再看答案。</p><p>答案是以上说法全部错误。</p><p>实际上，这些问题，都是我经常碰到的，无论是我的读者、用户还是团队的年轻人，在这些问题上都有很大的认识误区。很多人在职业发展和个人提升方面的无策略、无方法程度，让我感到惊讶。</p><p>但跟很多人聊过之后，我发现，我之所以认识到这些，其实是因为我自身职业的优势，使我具备企业、管理者、咨询顾问、教育创业者四种视角。而这种角度，恰好是大多数人所不具备的。</p><p>企业视角：<br>我曾经在全球排名第一的人力资源咨询公司，美世咨询（Mercer），工作了八年多，为 7 个行业、几十家头部企业，设计人才发展战略。如果你在航空、消费品、互联网等等行业的一些头部公司，很可能我设计过的薪资和晋升体系就直接影响到你了（我希望你不要顺着 wifi 掐死我）。我设计的人才管理体系，直接影响到的职场人士有数百万。而一般人并没有这样的咨询经历，无法看到各类企业的全局。</p><p>管理者视角：<br>一方面，因为此前做咨询的缘故，接触的都是各大企业的高管，因此，我能够知道管理者在想什么，他们如何看待人才。另一方面，我自己也有过很多年带团队的经验，而且我带过的人，都比相同岗位起点的同龄人薪资高出 2-3 倍，所以在这方面有切身体会。</p><p>咨询师视角：<br>作为咨询顾问，最重要的能力就是解决问题。所以我养成了一个习惯，就是每当面临问题的时候，用结构化的方式去解决。比如个人规划，很多人不知道应该如何规划，那我就会将个人类比企业，将企业战略规划的框架进行改良，变成个人规划方法，然后在使用过程中不断完善，最终形成适合自己的方法论。所以，职业发展、自我认知、个人提升等话题，我都可以摸索出一套套实操性较强的方法论，而较少陷入困扰。</p><p>教育创业者视角：<br>我是在线商学院【圈外同学】的创始人，同时也是我们平台上的老师之一，教授过几十门课程。目前有几十万人都上过我们的课程，数万人进入到我们的商学院培养项目。在商学院项目学员里，97% 的学员认为课程对他们带来了明显改变，仅仅 3 个月学习后就有 19% 的人实现了顺利转行跳槽或升职加薪。</p><p>我还写过一本个人发展类的干货畅销书，叫《请停止无效努力：如何用正确的方法快速进阶》，黄色封面，人称 “小黄书”，豆瓣评分是 8.4 分，差不多是同类书籍万分之一的水平。所以，我知道应该怎么教。</p><p>正因为这些特殊的视角，我在个人发展方面习以为常的认知，或许在他人看来，却是颠覆性的。</p><p>但是，我们现在不得不拥有这样的认知，掌握正确的发展方法论了。</p><p>我前公司有过一个调研数据：<br>10 年前，一个人在一家公司所待的时间是 3-4 年，而现在，一个人在一家公司平均只会待 1 年多。</p><p>在这种情况下，企业没有任何动力培养人才，只在公司平均待 1 年多，培养好之后还来不及给公司做贡献就走了，对企业来说根本不划算，更何况外部环境竞争激烈，培养人才所需要的时间，企业根本耗不起。所以，企业越来越倾向于用现成的人。而当所有企业都想用现成人才的时候，其实就是企业将过去所承担的人才培养成本，逐渐转移到了个人身上。</p><p>个人从现在开始，不得不开始培养自己，进入到所谓的终身学习状态。这正是知识付费兴起的大背景之一。</p><p>但是，从未有人教过我们，离开了学校这种应试教育的地方，在职场中应该如何正确地学习和提升。所以，大家一窝蜂买知识付费课程，一窝蜂去学英语，一窝蜂去考证，最后发现好像没用，于是陷入了焦虑和迷茫。</p><p>这个大背景，是我从 2 年多前开始创业做圈外的初衷。</p><p>圈外目前有一些 4-6 个月的体系化学习项目，也有针对单项能力的特训营，进入门槛都相对高，也并非适合每个人的发展阶段。所以我希望通过这个非常短的课程，普及一些基本的职业发展和提升方法，不再让一些毫无专业基础的成功学老师误导我们，每个人都应该有自己的发展策略，当好自己的 CEO。</p><p>好了，那这门课程到底如何帮你呢？</p><p>我会分为 4 个维度、6 节内容来展开叙述：</p><p>一、诊断现状</p><p>1）一个模型，帮你找到真正热爱的工作：分析个人和工作匹配的要素有哪些，知道自己为什么会不喜欢一份工作，以及怎么找到跟自己匹配的工作。</p><p>2）四大要素，决定了你的市场价值：分析应该把时间花在什么要素上面，才能有市场价值的提升，并不是所有努力都有效</p><p>二、发现潜能</p><p>3）四类迹象，发现你的隐藏能力：找到自己的天赋，也就是隐藏的能力，才能事半功倍</p><p>三、学习提升</p><p>4）三种方法，将知识内化成能力：知识是死的，能力才能盘活它</p><p>5）三大系统，让学习不靠意志力：靠意志力学习是不可能的，需要依靠三大系统</p><p>四、规划未来</p><p>6）三个建议，让你不做 “定制化人才：如何找到不变的因素，应对未来的加速变化，避免成为企业定制化人才</p><p>课程只有 6 小节，但不是听完就算，我会在每小节给你一个作业，让你进行练习。我们的班主任，也会在微信群里发起很多讨论，跟同学一起帮助你，如果你有什么困惑，欢迎 “骚扰” 他们。</p><p>我们每个人遇到的问题和烦恼看似不同，但你要知道，你不是这个世界上第一个遇到这些问题的人。人才发展这个话题，本身就是一门科学，已经有很多前人帮你研究过这些问题了，你需要做的，不是自己慢慢摸索、重新造轮子，而是找到最科学的方法，进行学习。</p><h2 id="一个模型，帮你找到真正热爱的工作"><a href="#一个模型，帮你找到真正热爱的工作" class="headerlink" title="一个模型，帮你找到真正热爱的工作"></a>一个模型，帮你找到真正热爱的工作</h2><p><strong> 本节学习收获：</strong> 掌握冰山模型的用法，能够用它来分析自己跟工作的匹配度，从而做出正确的职业选择，并能精准找到自己喜欢并有成就感的工作。</p><p>“我感觉目前的工作状态不是我最想要的，做得也还行，但没有太多成就感，也不知道未来发展会怎么样…… 想有一份真正热爱并且有前途的工作，但不知道应该做什么，感觉很迷茫。”</p><p>这段话，要么是我们当下的状态，要么是曾经有过的状态。</p><p>刚工作发现不喜欢想转行、到了新岗位发现不胜任想提升、人到中年发现这个工作的天花板等等，都是常态。<strong> 因为我们对自己的事业有期许，但当下的工作可能无法承载这样的期许，所以会觉得 “不喜欢”“很迷茫”。</strong></p><p>可是，“不喜欢”“很迷茫” 只是一种情绪，情绪背后的原因是什么呢？我们喜欢、又有前途的工作到底在哪里呢？这节课，我给你介绍一个模型，然后用它来帮你做好职业选择和定位，让你不再迷茫。</p><p>这个模型称为冰山模型，你可能听过，但我还是会简单介绍一下，然后告诉你这个模型有哪些妙用，用好它，差不多可以解决你一半以上的学习和发展问题。</p><p>冰山模型是美国著名心理学家麦克利兰提出来的，它全面地描述了一个人的个体素质要素，也就是说，<strong> 你跟一个岗位是不是匹配、匹配程度如何、市场薪资值多少，都是这个模型可以解释的，几乎所有大公司都会用它来进行人才招聘和培养。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121153338.png" alt=""></p><p><strong> 第一部分，知识和技能 </strong></p><p><strong> 冰山模型从上到下有很多要素，最上面的要素是知识和技能。</strong></p><p>知识，就是我们在学习和实践中获得的认知和经验，比如财务知识、人力资源知识等等，包括我们现在学习的冰山模型，也属于知识。这跟你大学所学的专业、常看的书、从事的工作、甚至业余爱好都有关系。</p><p>技能是指你所具备的某项专门技术，比如骑自行车、编程、使用 Excel 等等。</p><p>一个人的知识和技能是可以后也是非常显性，容易看出来的。所以，我们称为冰山上的部分。</p><p>知识技能跟工作之间的关系是什么呢？简单来说，<strong> 如果你的工作中有很多陌生的内容，觉得每天都信息量很大、来不及接收，感到慌乱和焦虑，很可能就是你的知识技能跟岗位不匹配。</strong> 但这不是什么大问题，因为知识和技能比较容易补齐，上上课、看看书、跟资深同事学，一段时间之后就能提升。</p><p><strong> 第二部分，能力 </strong></p><p><strong> 冰山模型中间的要素是能力，或叫通用能力，比如学习和思考能力、人际交往能力等。</strong> 相对知识和技能来说，能力高低不是一眼就能看出来的。比如，一个人的创新能力到底如何，很难用一个证书、几道题目来考察，而需要看他在处理很多问题时候的行为。</p><p>能力跟知识技能最大的区别在于：<strong> 知识和技能属于特定领域，而能力则更多是通用领域的。</strong> 比如，知识会分财务、人力资源、金融等等，但是 “创新” 这样的能力，是适用于任何领域的，一旦掌握，是能够迁移的。</p><p>那么，<strong> 如果能力不匹配，在工作中会如何呢？工作效率、沟通效率较低，面对复杂的问题无从下手，缺乏成就感，力不从心。</strong> 能力的培养周期相对长一些，一般要几个月时间，我们后面几节会讲方法。</p><p><strong> 第三部分，价值观、性格、动机 </strong></p><p><strong> 冰山模型最底下包括价值观、性格特质、动机。这些要素在成年之后很难被改变 </strong>，它们会受基因、家庭教育、童年经历等等的影响。简单介绍一下各个要素：</p><p><strong> 价值观是你判断事物的标准 </strong>，比如说，当你在择业的时候，自由和稳定产生了冲突，你选择哪个、放弃哪个；在事业和家庭产生冲突的时候，你怎么处理，等等。<strong> 如果你在工作中经常陷入矛盾和纠结，对所做的事情很难发自内心地认同，很可能就是价值观上不匹配 </strong>，比如你做自媒体，公司为了赚钱让你写一些低俗内容，但你觉得那对用户没有价值。</p><p><strong> 性格特质则是个人的行为偏好 </strong>，比如，你是偏内向还是外向，更关注宏观还是细节，等等。<strong> 如果你在工作中发现，自己好像工作量没有很大，但却觉得心累，很有可能是性格不匹配 </strong>。比如，你是内向性格的人，是从独处中获得能量，但你做了一份每天都要不断跟陌生人沟通的工作。</p><p>至于动机，其实动机的分类方法有很多，最常见的是麦克利兰的理论，分为成就动机、权力动机和亲和动机。成就动机的人，喜欢挑战；权力动机的人，希望影响他人；而亲和动机的人，希望维持更好的团队关系。<strong> 如果你感觉自己没有动力，做事提不起劲儿来，那很可能就是现在的工作跟你的动机不匹配 </strong>，比如你明明是成就感动机，喜欢一定挑战，但你的工作却高度重复。</p><p>好了，我们讲完整个冰山模型，现在你知道了，<strong> 工作跟伴侣是一样的，“匹配” 比 “优秀” 重要 </strong>，而你跟一份工作的匹配要素，其实就是冰山模型中的要素。所以，我们 <strong> 感觉一份工作不喜欢，有可能是缺乏知识技能导致的慌乱和焦虑、缺乏能力导致的挫败和低效、价值观不匹配导致的矛盾和纠结、动机不匹配导致的没热情，或者性格特质不匹配导致的心累。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121153405.png" alt=""></p><p>而且，所有匹配要素里面，冰山底层的隐性要素起到了更大的作用，就像找伴侣一样，尽管看起来表面条件差不多，但你就是对一个人有感觉而对另一个人没有，这就是冰山底层的隐性要素在发挥作用。</p><p>所以，知道了这个模型，你就可以分析了，如果目前的工作自己不是很喜欢，那么到底是哪里不喜欢。</p><p>好了，现在我们分析的是现有岗位是否喜欢，那么假如我现在是销售，发现并不喜欢，想要转行做互联网运营，面对这样一个陌生岗位，不知道自己是否匹配，这时候应该怎么办呢？或者说，我不喜欢销售工作，但我面对运营、产品经理、市场分析等等这些可能感兴趣的岗位，不知道该去哪一个，又该怎么办呢？<strong> 这世界上有几千种岗位，我们总不能全都干一遍然后再选。</strong></p><p>其实很简单，你 <strong> 把目标岗位用冰山模型分析一下 </strong>，就可以了。</p><p>具体该怎么做呢？分成四步：</p><p><strong> 第一步，先确定一个你要分析的岗位。</strong></p><p>比如你有一个目标岗位，那么很简单，就用这个岗位来分析自己是不是匹配。但如果你没有，可以先从自己的相关经验出发，框定你能做的几个岗位，一个个分析。这里 <strong> 教你一个技巧 </strong>，比如你在某个行业做技术服务，但目前的工作不喜欢，想要换，可又不知道自己能换什么，这时候可以去领英等等这类招聘平台去搜索，就 <strong> 搜这个行业的技术服务岗位，然后会出来一堆人，你看这些人的履历，看看他们后来都去了哪里，你就知道潜在的方向了 </strong>。而且，<strong> 这个方法也能帮你判断，未来你要去的这个行业和岗位，到底有没有前途 </strong>，这些原先做该岗位的人，后面的出路是什么。</p><p><strong> 第二步，在招聘网站上，搜索这个岗位的招聘要求。</strong></p><p>这时候，你会搜到很多公司对这个岗位的招聘要求，找出几份不同的招聘需求。因为不同公司会有自己的细分要求，为了提取出共性要求，你可以尽可能多看几份，找到共性。</p><p><strong> 第三步，按照冰山模型，综合分析这些招聘需求。</strong></p><p>你会发现，<strong> 招聘需求基本上也是按照冰山模型来写的 </strong>，以新媒体运营岗位来说，有对知识的要求，比如传播学或文学专业毕业、了解内容营销的知识、熟悉新媒体平台；有对技能的要求，比如精通公众号排版工具使用；也有对能力的要求，比如文案写作能力、用户思维、学习能力等等；最后，还有对性格特质、动机等等的要求，比如细心、热爱挑战等等。把它们汇总在一起，就可以得到这份岗位的需求模型了。</p><p><strong> 第四步，按照岗位需求模型，与自己进行对比。</strong></p><p>岗位需求模型已经出来了，那么自己就可以对照一下，自己到底是不是符合，是否应该换工作或转行。当然，我们很难找到完全匹配的工作，<strong> 如果是冰山底层的因素不匹配，那么不太建议选择这个职业，因为这些要素后天很难改变；但如果是知识、技能方面不匹配，未必不能选，因为大部分知识和技能都是可以后天学习的 </strong>，只是看你是否愿意投入时间罢了。</p><p>我们平时看一份工作，大都是看冰山表层，比如职责、薪资、办公环境、学历、专业等等因素，可最终你这份工作能不能做好、是否有成就感，其实是很多隐性要素所决定的，今天的内容，其实是把你对工作的感觉给表述出来了，被分解成了你的性格特质、动机、价值观，也就避免了我们一个个去尝试然后看喜不喜欢。</p><p>我一直认为，<strong> 搞明白 “我应该选择什么样的工作”，比 “我应该如何在别人认为的好工作里面成功”，要重要得多 </strong>。毕竟，<strong> 想要让自己获得成就感和满足感，就不应该把它绑在别人的记分牌上 </strong>。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121153423.png" alt=""></p><p>好了，今天我们讲了冰山模型，你会发现，<strong> 它不只是能用在职业选择方面，还可以用在其他很多方面 </strong>，比如今天稍微提到一点的伴侣选择，还有子女教育，很多父母都给孩子报很多培训班，但孩子时间有限，所以应该选什么培训班呢？是教孩子背背单词和儿歌，还是开发思维的课程呢？如果你知道了冰山模型，相信会有答案。</p><p>所以，我想告诉你的是，<strong> 我们所学习的每个方法论和模型，都不是只能解决一个问题 </strong>，而是可以解决几百甚至几千个问题，<strong> 查理芒格在《穷查理宝典》里面提到，掌握一定数量的思维模型，能解决这世上 90% 的问题 </strong>。你会发现，同样的知识量，如果你能用知识解决更多问题，那你的学习投入产出比就是最高的。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121153441.png" alt=""></p><p>好了，正如我们刚才说的，<strong> 冰山模型有很多作用，除了帮你匹配工作，其实它还可以用来衡量你的市场价值，也就是薪资 </strong>。公司会通过简历、面试来考察候选人在冰山模型各个要素的表现情况，来确定对方的薪资。</p><h2 id="四大要素，决定了你的市场价值"><a href="#四大要素，决定了你的市场价值" class="headerlink" title="四大要素，决定了你的市场价值"></a>四大要素，决定了你的市场价值</h2><p><strong> 本节学习收获：</strong> 明确冰山模型各个要素的投入产出比，从而更好地分配自己的时间，让自己变得更值钱；同时，理解不同类型的岗位所对应的门槛和天花板，帮助择业</p><p>我们都会发现，同样学校、同样专业的两个人，在毕业几年之后，薪资差异可能非常大。大家起点差不多、毕业时间差不多、每天投入的工作时间也差不多，但最后产出却不一样，到底是什么原因呢？我们自己的时间应该要投入在哪里，才能最大化我们的市场价值也就是薪资呢？今天我们用科学的方法做个分析。</p><p>首先，薪资，也就是一个人的市场价值，无非是跟内部和外部两类因素相关。外部就是机遇、运气、选择等等；而内部，其实就是我们在冰山模型各个要素上的表现，我们的知识技能越多、能力越强、价值观 / 性格特质 / 动机跟所做的事情越匹配，你的市场价值就越高。</p><p>所以，抛开运气、选择这些很难掌控的因素不谈，我们今天从内部角度，也就是冰山模型的各个要素，来聊聊市场价值怎么提升。</p><p>说具体方法之前，我们先得有一个认识，那就是 <strong> 整个冰山模型越往下的要素，越难培养、越难发现 </strong>，比如学一个知识，冰山模型，我跟你讲一下马上就知道，但是提升一种能力，比如解决问题的能力，那不是听讲就行的。可是呢，<strong> 也因为越往下的要素越难，相对也越能成为竞争优势 </strong>。同时，你应该也发现了，这几个要素并不是独立的，<strong> 冰山下面的要素会影响上面的要素 </strong>。举例来说，一个人的知识储备有多少，跟 ta 的学习能力、动机等等都非常相关。如果你的学习和思考能力更强、并以追求真理作为价值观，知识储备就会更高。根据研究，冰山底层的要素中，光个性特质就能够解释员工绩效差异的 35%，而 <strong> 冰山底层的因素加起来，差不多决定了一个人的 70%</strong>。</p><p>好了，有了这个认知，我们接下来挨个分析，<strong> 把时间投入在不同的要素上，会有什么结果 </strong>。</p><p><strong> 首先是投入到知识。</strong></p><p>我们可能觉得知识很值钱，毕竟 “知识付费” 嘛。但说实话，单纯用知识很难赚钱。</p><p>为什么呢？</p><p>其一，当今社会，<strong> 你想知道什么，网上搜索就可以了，可替代性太高 </strong>。比如说，你就算把百科全书背下来，最后可能还得靠卖记忆力课程赚钱，而没法通过这个知识直接赚钱。</p><p>其二，<strong> 知识跟思维，是有差别的 </strong>。有句古语叫 <strong>“学富五车”</strong>，出自《庄子・天下》，形容一个人知识渊博，但那时候不是纸质书、是用竹简的，而且车也是马车，不是火车，所以 <strong> 五车竹简能装多少知识呢？最多十几二十万字，也就一本书。</strong> 所以，现代社会，随便一个人，知识储备都超过孔子、老子、亚里士多德。但你为什么还在学他们呢？因为知识跟思维是不一样的，你学的是他们的思维。而思维是一种能力，用知识解释以及解决问题的能力。</p><p>所以，你会发现，<strong> 单纯的知识储备，如果不能结合思维能力去解决一些具体问题，是很难提升你的市场价值的 </strong>。</p><p><strong> 第二种选择是投入到技能。</strong></p><p>有一些职业是有专业门槛的，比如程序员、设计师，这属于技能型岗位，因为这些岗位有一个进入门槛，往往会让人觉得非常有安全感。反过来，像是做销售、市场、运营类工作的人，或者大学学习经管这种万金油专业的同学，常常会觉得 “哎呀，我没有一技之长，好没安全感”。</p><p>但实际上，<strong> 门槛高，不代表天花板也高，毕竟没人想要一直拿每个工作的门槛工资 </strong>，我们是往上看的。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121153547.png" alt=""></p><p><strong> 技能的定价如何？天花板在哪里呢？取决于该技能的稀缺性。</strong></p><p>10 多年前，很多大企业都会给有 CPA 证书的人支付一个叫做 Market Premium（市场溢价）的额外工资，因为这个技能当时相对稀缺，所以公司需要支付溢价才能招到人。可是，这个技能的市场价格高，就会有很多人进入到这个领域，人才供需逐渐稳定，那么溢价就消失了。程序员岗位也一样，在移动互联网红利期的时候，行业增长快，所以对程序员的需求非常旺盛，而市场供给还没来得及跟上，所以带来了程序员的高工资。但是，这两年红利消失，增长放缓，对程序员的需求就会下降，可供给没有下降，所以会导致工资水平上不去，但因为不能降薪，所以很多公司规定的工作时间越来越长，以此来变相降薪，“996 事件” 的爆发跟这个趋势有很大关系。</p><p>当然，那些有管理技能、商业思维、能解决复杂问题的程序员，薪资依然很高，但他们已经不单单是靠技能吃饭了，而是具备了很高的能力。</p><p><strong> 一个很有意思的现象，在圈外的付费学员中，工作 5 年以下的人群技术人员占比不高，但是 5 年以上的人群中，就有特别多技术人员 </strong>。因为他们发现技能带来的薪资提升是有天花板的，所以需要提升管理能力、解决问题的能力，来获得更高的职业回报、突破发展瓶颈。</p><p>所以，<strong> 技能在稀缺的时期很值钱，一旦行业变动、人才供给增多，市场价值就会下跌，不得不学习新的技能。</strong></p><p><strong> 第三种选择是投入到能力。</strong></p><p>有一些岗位，<strong> 对技能没有特殊要求，看起来好像门槛不高，但薪资天花板却很高，而且薪资范围很宽 </strong>，例如互联网运营、产品经理、项目经理、还有大多数的管理岗位。厉害的产品经理像上亿年薪的张小龙，而一般的产品经理可能月薪才一万，他们的薪资差异并不在于技能的不同，比如谁画的产品原型图更好，而是能力高低。所以，<strong> 这些岗位也被称为是能力导向型岗位 </strong>。</p><p>圈外商学院有一位深圳的学员，在一家传统行业的 500 强企业做工程师，带公司内部的一些技术项目。工作 5 年，薪资一万多，他觉得支撑不了家庭未来的需要，想要晋升，但他发现，公司的部门经理都在 35-45 岁之间，而自己才 27 岁，还需要熬很多年，于是纠结要不要投身互联网。但他也担心跨行会不会成功，以及不知道如何着手。后来他在圈外学了近半年，知道了不同行业所需要的很多能力是相通的，所以坚定了信心，而且找到圈外的朋友了解目标岗位的情况，最后在一家互联网大厂拿到了项目管理的 offer，薪资翻了倍。他后来跟大家分享的时候提到，<strong> 面试中问了很多如何带团队、带项目的问题，都是课程里面学过的 </strong>。当然，想要了解他的故事，可以跟班主任要文章链接，他太太有在圈外公众号写过一篇文章，提到过这段经历。</p><p>所以，<strong> 能力提升是可以跨行业跨职业的，一旦积累到一定高度，哪怕行业不行，换个地方一样可以值钱 </strong>。</p><p><strong> 第四种选择是投入到冰山模型底层的自我发现。</strong></p><p>冰山底部的性格特质、动机、价值观这些要素，虽然难以改变和发现，但是，<strong> 如果我们对自己能有一个清晰的认识，然后找到跟这些要素相匹配的工作，其实也能大大提升我们的市场价值 </strong>。</p><p>比如说，我是一个高成就动机的人，在亲和动机方面比较弱，从这个角度看，咨询公司就非常适合我，因为工作挑战大、容易有成就感。但如果我去某个注重关系和家庭氛围的国有企业，那我就会感到不适，最终很难得到提升。环境其实是一种外部驱动力，你选到了适合的地方，自然成长效率就会更高。所谓 “橘生淮南则为橘，生于淮北则为枳”。</p><p>好了，从上面的四种选择我们可以看到，从长期来说，<strong> 想要提升自己的市场价值，把大多数时间花在提升能力和认识自己冰山底层要素上面，是最好的选择 </strong>。但事实上，<strong> 大多数人是怎么做的呢？每天打开各种学习产品、不断学很多碎片化知识，练习一些并不稀缺的技能、考各种几个月就能拿下来的证 </strong>，最后收入还是上不去，反而会觉得很挫败。</p><p><strong> 为什么我们大多数人会做出这样的选择呢？</strong></p><p><strong> 第一，知识和技能的学习最容易。</strong> 它们的获得门槛很低，听一堂课、学一个知识，这是几乎所有人都能做到的事情。而能力就不一样了，需要持续投入、刻意练习。<strong> 人们总是倾向于做容易的事情，而不是正确的事情。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121153605.png" alt=""></p><p><strong> 第二，受限于目前岗位的定位。</strong> 前面有提到，其实一些岗位的性质，本身就是技能导向型的，对你没什么能力要求，只需要表格做得越快越好、流程越熟练越好。而人都是有惰性的，在这种岗位要求下，也就没有动力去提升眼前岗位不需要、但长远更有价值的能力了。所以有时候我会说：<strong> 你选的不是一份工作，而是一个天花板。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121153616.png" alt=""></p><p><strong> 第三，没有看清楚工作的本质。</strong> 很多人以为值钱的是知识和经验，但并非如此。本质来说，<strong> 任何工作都是在解决问题 </strong>，营销解决的是如何让用户知道我们的产品、HR 解决的是如何让公司有充足的人才供给等等，往大了说，不仅我们的工作，<strong> 一家公司也是在解决某类用户问题 </strong>，滴滴解决打不到车的问题，饿了么解决不想出门吃饭的问题，等等。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121153627.png" alt=""></p><p>既然本质是解决问题，所以你单有一个知识就是没用的。你会背很多营销理论，但没法帮公司宣传和卖出更多产品，就是没价值的。</p><p>好了，我们现在知道了，要花时间去认识自己和提升能力。</p><p>关于认识自己，圈外商学院里有这个课程，但自我认知是一个持续的、慢慢发现的过程，课程也只是供参考，我们这次先不展开。</p><p>关于提升能力，这是任何职业阶段的人都应该去做的，而且你投入了就一定会有回报。</p><p>但你有没有发现，<strong> 同样两个人，都培养自己的某项能力，比如结构化思维，一个人很快就能提升，但另一个人好像努力了很久也没有太大效果？</strong> 这跟我们每个人的天赋有关，我 <strong> 下一节课告诉你，关于天赋的一些研究成果，以及大多数人对天赋的误解，并且会帮你找出自己的天赋 </strong>，让你能够更快速地提升能力，进入发展快车道。</p><p>好，今天这节课，我们知道了：</p><p><strong> 知识容易获取跟习得，如果不能用它解决问题，几乎就没什么竞争力；</strong></p><p><strong> 技能有进入门槛，其市场价值取决于稀缺程度，但长期来说，所有技能都会走向供需平衡，高收入不可持续；</strong></p><p><strong> 能力可迁移，并且对知识和技能也有很大促进，值得我们多投入；</strong></p><p><strong> 而每个人的性格、动机和价值观不同，所以做不同的工作，也会有产出的不同。</strong></p><p>总之来说，我们的时间应该多投入在后两者上面，但现实是大多数人都在提升前两者。<strong> 我们的时间，永远应该花在正确的事情上，而不是容易的事情上。</strong></p><h2 id="四类迹象，发现你的隐藏能力"><a href="#四类迹象，发现你的隐藏能力" class="headerlink" title="四类迹象，发现你的隐藏能力"></a>四类迹象，发现你的隐藏能力</h2><p><strong> 本节学习收获：</strong> 掌握 SIGN 模型，从而找到自己的天赋，并借此进入发展快车道</p><p><strong> 我还在咨询公司的时候，带过两个相似起点、但结局完全不同的顾问。</strong></p><p>A 顾问大学是学行政管理的，实习期间执行力很强，自己做实习生团队的小头目，但有个很大的问题，她总是点状思考，没有框架。虽然后来我还是争取破格留下了她，但是，我一直担心她未来上升会有瓶颈。</p><p>入职不到一年的时候，我有次让她写份报告，做好了大量修改的心理准备，但我惊讶地发现，结构竟然非常清晰，丝毫不比其他人差。</p><p>后来我问她：你为什么一下子进步了呢？她说：我不知道，好像某天突然顿悟了。</p><p>另一个是 T 顾问，她之前在甲方工作过很短时间。转行过来以后，她的表现跟 A 顾问很像，执行力不错，但常常找不到思路。</p><p>本来以为她也能像 A 顾问一样成长起来，所以我经常带她讨论，一起复盘。</p><p>经过一段时间，她的思维能力有所进步，但是，涉及到新问题，还是不得要领。之后一年，T 顾问每天加班到深夜，觉得很难撑下去，就离开咨询公司回到了甲方。</p><p>当时我一直不明白，两个人的差异在哪里。后来，随着我管理经验增多，加之对人才发展领域更加了解，才找到了答案。结合我们这一节课的主题，相信你也猜到了，答案跟天赋有关。</p><p>优势心理学之父唐纳德・克里夫顿博士，曾经带领团队进行了一项长达 50 年、基于 200 万人的研究。研究表明，<strong> 虽然成功的道路有千万条，但成功人士基本上都遵循了一个原则，就是将自身天赋发挥到了极致。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121153725.png" alt=""></p><p>更重要的是，他指出：<strong> 天赋并不是少数人的专属，每个人都有自己的天赋。</strong></p><p>这里的天赋是什么呢？<strong> 天赋就是隐藏的能力，让一个人可以在同样起点的情况下，更加快速地成长。</strong></p><p>也就是说，在某个领域内天赋高的人与该领域里的一般人，他们的努力与水平之间的关系，类似于图片里的两条实线。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121153808.png" alt=""></p><p>但是我们大多数人，往往以为天赋 = 能力，以为天赋是那条虚线，以为只要有天赋，不需要努力就可以达成结果。实际上，<strong> 天赋只是个催化剂，是加快反应的。</strong> 可以说，天赋是一种隐藏能力，是否能够转化为显性的能力，则是需要后天刻意练习的。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121153825.png" alt=""></p><p>这也就解释了开头那个故事，为什么 A 顾问可以进步得这么迅速，因为系统化思维并非她天生的弱势，只是她之前专业和实习里面，没有让她刻意练习的机会，所以展现不出来。</p><p>而 T 顾问呢？天赋上欠缺系统化思维，后天的练习确实可以起到作用，但没有 A 顾问那么快进步，时间一长，对比身边人，很容易沮丧挫败，从而没有动力去提升。</p><p>当然，A 顾问的事业就一定会比 T 顾问更成功吗？不是，因为世界上不是只有这一份工作。事实上，T 顾问回到甲方后，工作做得很不错。</p><p>所以，找到你的天赋，并且培养它，发挥它，就能够让你事半功倍地获得提升，而且，你做事会更有成就感。</p><p>好了，你肯定很想知道：我的天赋是什么呢？我有什么隐藏能力呢？</p><p><strong> 接下来我给你一个探索方法，让你更快发现自己的天赋。</strong></p><p><strong> 天赋有四个表现，简称为 “SIGN”，可以帮你在日常生活和工作中发现它：</strong></p><p><strong> 表现一：自我效能（Self-efficacy）</strong></p><p>字母 S 对应的表现是 Self-efficacy，自我效能。它的意思是对于某些任务，你的信心很强，觉得自己肯定能做好。</p><p>比如，每当面对细节琐碎的事情时，还没开始，我就觉得自己做不好，但每当要我去解决一个难题时，我会充满信心。</p><p>所以，<strong> 当你对某类事非常有信心，觉得自己可以做成功，这就是天赋的其中一个表现。</strong></p><p><strong> 表现二：本能（Instinct）</strong></p><p>字母 I 对应的表现是 Instinct，本能。意思是当你还没有开始做这件事的时候，你就迫不及待地想要尝试了。</p><p>比如，当我决定要开发课程、教给别人的时候，我会感到异常兴奋，会思考很多方法，会想如何让学员更愿意以及更容易掌握这些内容。</p><p>所以，<strong> 那些让你迫不及待、跃跃欲试的事情，可能意味着你天赋的所在。</strong></p><p><strong> 表现三：成长（Growth）</strong></p><p>字母 G 对应的表现是 Growth，成长。正如前面提到的天赋曲线那样，你发现自己学得很快，相同的时间投入，会带来更多的成长。</p><p>比如，当我为了搞清楚某个商业模式，去阅读大量相关资料的时候，一上午对我来说，就跟 20 分钟一样。</p><p><strong> 如果在某个领域，你一接触就明显比别人进步得要快一些，这也是天赋给你的一个信号。</strong></p><p><strong> 表现四：满足（Needs）</strong></p><p>字母 N 对应的是 Needs，也就是满足。<strong> 做完这件事之后，就算感到疲劳和困倦，你依然会有满足感。</strong> 比如，之前做咨询的时候，每次给客户汇报方案、被各种问题砸过来的时候，我都累到不想再继续了，然而结束之后，又觉得充满了成就感。杨丽萍说 “跳舞就是跳舞最好的回报”，描述的就是这种感受。</p><p>以上就是天赋的四个表现，了解到天赋的表现之后，你就可以开始有意识地去挖掘了。当然，你 <strong> 总结出这些事件之后，还需要再次提炼共性 </strong>，比如我总结出这些事件的共性是数据分析，那么说明我的数据分析方面有很大天赋，所以就可以着力培养，以成为自己的核心竞争力。我曾经写过一篇文章，描述我利用自己的优势，挑选客户，成为晋升最快咨询顾问的故事，感兴趣的话可以跟班主任要链接。</p><p>好了，讲完这些，你可能还是有个疑问：这些事件我要怎么发现呢？因为 <strong> 我们对自己的行为太熟悉，日常工作生活可能很难发现符合 SIGN 的特征，所以这里给两个方法，分别是向自己提问和向他人提问 </strong>：</p><p><strong>1. 问自己 </strong></p><p>你可以通过问自己一些问题，帮自己找到符合天赋表现的事件。</p><p>当然，问题还是围绕天赋的四个特征 SIGN。</p><p><strong> 第一类问题：自我效能 S 相关 </strong></p><p>你认为，自己能够教别人什么？或者，别人常常向你请教什么？</p><p>你跟他人聊天的时候，倾向聊什么？以及，聊什么话题你会更有自信？</p><p>你在做什么事情的时候，不会感到焦虑和担心？</p><p><strong> 第二类问题：本能 I 相关 </strong></p><p>你在做什么事情的时候，很少拖延？</p><p>长时间休假后，你最想念工作的哪个方面、哪个内容？</p><p>你宁愿放弃休息时间，也要做的事情，是什么？</p><p><strong> 第三类问题：成长 / 专注 G 相关 </strong></p><p>有什么事情，让你沉浸其中忘记吃饭 / 睡觉？</p><p>你在做什么事情的时候，会暂时忘记刷社交网络？</p><p>你在做什么事情的时候，不容易感到疲倦和厌烦？</p><p><strong> 第四类问题：满足 N 相关 </strong></p><p>过去的工作和生活中，有什么让你获得巨大的成就感和满足感？</p><p><strong>2. 问他人 </strong></p><p>我们之前说过，天赋是天生的、下意识的，所以很多时候，你很难辨别出来。但是从别人的角度，他们跟自己有对比，会更容易帮你辨别。</p><p>所以，你可以 <strong> 把这些基于 SIGN 模型的问题，发给你亲近的朋友或者同事，让他们帮你回答：</strong></p><p>你觉得，我身上有什么不同于别人的特质？</p><p>你最欣赏或者佩服我的方面是什么？</p><p>在你看来，我做什么事情的时候，看起来最兴奋？</p><p>你曾经看到我做过哪件事情，让你印象深刻？</p><p>在以下这些方面，你觉得我哪些更加擅长？思维方式：条理清晰、逻辑严密、脑洞很大、专注专业；沟通协调：化解冲突、争取资源、知人善任；计划执行：执行力强、追求完美、目标导向，等等。</p><p><strong> 你会发现，你眼中的自己，和别人眼中的自己，常常有很大的差异。</strong></p><p>好了，关于天赋的方法，我们了解到这里。</p><p>我们都应该听过一句话 <strong>“大多数人的努力程度之低，根本达不到拼天赋”，这并不正确。</strong> 虽然这句话是为了安慰我们不要怪先天条件，而要靠后天努力，初衷是好的 <strong>。但天赋不是达到一定程度之后才发挥作用的东西，而是一个在起点就发挥作用的因素 </strong>，它让你快速掌握某项能力，而快速掌握之后产生的成就感和信心，又会让你继续下去，从而形成一个良性循环。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121153842.png" alt=""></p><p>这里顺便说一下，<strong> 努力固然重要，但没有方法的、无效的努力反而会让你丧失信心，是有害的。</strong> 实际上，我自己是很努力的，可关键问题是，我们都是一天 24 小时，无非是有人工作学习 8 小时、有人工作学习 16 小时，最多也是 2 倍的差异，可最后不同人的市场价值、能达到的高度，远远不是 2 倍，而是 200 倍、20000 倍，而那些最成功的人，也并非智商超群、天赋异禀，那是什么因素导致的差异呢？方法一定是其中很关键的因素。</p><p>所以我一直强调努力要有方法，而 <strong> 这些方法，并不需要你自己去摸索，前人早有很多总结，你只需要站在他们的肩膀上就可以 </strong> 了，就像今天所讲到的天赋一样。这也是我做圈外、做这门课程的原因，初衷之一，就是希望自己作为人才发展领域的专业人士，能够把这些研究和正确的方法，教给更多人，让我们付出同样时间的前提下，能有更多的效果和产出。</p><h2 id="三种方法，将知识内化成能力"><a href="#三种方法，将知识内化成能力" class="headerlink" title="三种方法，将知识内化成能力"></a>三种方法，将知识内化成能力</h2><p><strong> 本节学习收获：</strong> 掌握将所学知识内化成能力的 3 个方法，盘活你脑中的知识</p><p>在课程正式开始之前，我先提个问题，我们第一节课介绍了冰山模型，在这几天里，你有没有用它来解决过问题呢？</p><p>如果没有的话，那么冰山模型对你来说，就是没有用的 <strong>“惰性知识”，它只是待在你的脑海里，在一些明明可以发挥作用的场合，却不能及时被调取出来，白白占据了你大脑的内存 </strong>。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154001.png" alt=""></p><p>陈铭在《奇葩说》中举过一个例子，很好地解释了知识和能力的关系。他说：</p><p>水在零度的时候会结冰，这是一个知识，是对外部客观规律的归纳和总结。在未来的时间中，我在什么时候、把什么味道的水、变成什么味道的冰棒、卖给谁，叫做 <strong> 智慧和能力，它是指对知识的处理和运用 </strong>。</p><p>我在咨询公司的时候，很多客户都在自己所在的行业里摸爬滚打了几十年，行业知识和经验肯定比工作几年的咨询顾问丰富，但为什么我们能帮他解决问题、收取那么高的咨询费呢？这也是因为，咨询顾问掌握的是一套思维方式和思维能力，能够更好地用知识来解决问题，发挥每个知识的最大效用。</p><p>所以，如果你只是知道冰山模型这个概念，但在实际的工作和生活中用不上它，没能让它成为自己思维的一部分，那就是没用的。那么，<strong> 究竟该怎么做，才能让知识内化成能力，让自己的能力快速提升呢？今天给你三个方法：1. 掌握 20% 的核心；2. 知识和问题互相靠；3. 做系统化训练。</strong></p><p><strong>1. 掌握 20% 的核心 </strong></p><p>做咨询的时候，需要快速地在 1 周之内了解一个行业。很多人会觉得：咨询顾问很聪明，学习能力超强。</p><p>但在我看来，只是因为他们能够拿到优质信息资源、所以掌握了那个领域的核心而已，倘若把这个核心教给任何一个智商尚可的人，他们也可以做到。</p><p>不信的话，回想一下我们大学的考试，虽然 <strong> 一学期的课很复杂，但大多数人也是用考前一周的时间去突击的 </strong>，只要抓住了核心，最后的考试成绩其实不会差。</p><p>我们常说的 “二八原则”，其实这里也适用：<strong> 一个领域 20% 的核心内容，能够解决这个领域 80% 的问题。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154015.png" alt=""></p><p>所以，掌握这 20% 的核心，就是我们快速提升的关键。无论是知识也好，能力也罢，想要快速提升，都是如此。<strong> 那什么是 20% 的核心呢？</strong></p><p>分享一个故事。我在刚做咨询顾问的时候，有一次被项目经理狠批：你 PPT 为什么做得那么难看？有没有审美？</p><p>当时非常沮丧，因为熬了无数个夜晚做出来的方案，最后却得到这样的评价。所以我下决心去美化一下 PPT。</p><p>先说结果：项目经理周五说的这话，我在后面周一的时候，PPT 就全改了，彻底把她惊到了。后来这个事儿在公司广为流传，大概是：一个学习能力超强而且超级拼命的顾问，用 2 天时间提升了 100 页 PPT 的逼格。</p><p>怎么做到的？其实很简单，我当时就是 <strong> 拿了一些高手的 PPT，跟我自己的做对比，然后再问这些高手请教经验，最后找出了 PPT 美观的三个关键点 </strong>：1）饱和度；2）边框；3）行间距。然后我把自己的 PPT 做了三个改动：1）把原先填充颜色改成半透明；2）把表格的边框改细；3）把字的行间距拉到 1.5 倍。这样改好，结合配色一点调整，逼格就高很多。</p><p><strong> 这三点，其实就是让咨询 PPT 变得更加美观的那 20% 核心。</strong></p><p>当然，比起真正的 PPT 高手来说，我差得远，但我并不靠做 PPT 谋生，这 20% 已经够用了。</p><p>上面说的是技能，其实能力也是一样的。比如，我们经常说一个人思维混乱，然后觉得思维混乱是个很大的事情，感觉一辈子都提升不了。但实际上，<strong> 大部分的思维混乱，都是因为缺乏结构化思维，而结构化思维只要掌握三个特征就可以，包括主题鲜明、归类分组、逻辑递进，不管写作、演讲还是会议发言，做到这三点就可以显得思路很清晰。</strong> 按照一定的方法论来训练，根据天赋不同，2 周到 2 个月不等，就能有明显改变。这不是我瞎说，我写过文章、开过课程，按这个方式训练的没有一万也有八千。之所以取得这样的效果，是因为结构化思维属于思维的 20% 核心，而我说的 3 个特征，又是结构化思维的 20% 核心。</p><p>但是，<strong> 每个领域里面，哪些是那 20% 的核心，其实是需要这个领域的专家来指点的 </strong>，因为在你对这个领域一无所知的情况下，你没有方向，绕一大圈也不知道门在哪里，等终于入门了才发现走了不少弯路。<strong> 大多数的成功人士，都很擅长找 “师傅”</strong>，他们都在自己的传记当中提到，受谁谁谁的启发和提携。而我理解的 <strong> 好师傅所起到的作用，除了提供资源之外，另一个重大作用就在于，他们会告诉你，一个领域里面最核心的是什么，从而让你快速入门 </strong>。而我所认为的好书、好课程，除了需要大而全的教科书之外，也应该是这样的定位，不是把所有理论都照搬过来，而应该帮助读者和学员找到那 20%，至于入门之后他是否需要或者愿意深度提升，那是他自己的选择。</p><p>关于 20%，圈外的公众号里面会有一些文章，涵盖了一些常见能力领域，这些文章都是提取了该领域里 20% 左右的核心，可以在班主任那里获取文章链接。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154057.png" alt=""></p><p><strong>2. 知识和问题互相靠 </strong></p><p>我们经常有一种感觉，平时明明学了很多知识，但在遇到问题的时候，苦思冥想，试图从记忆里找知识来解决问题，可就是想不出来，没有任何思路。但是，也有极少数人，学一个知识，就可以举一反三地解决很多问题。</p><p>实际上，<strong> 之所以在解决问题的时候想不起用什么知识，是因为知识和问题之间是脱节的，他们是分别存储的 </strong>。</p><p>比如你学习了马斯洛五层次需求的知识，你在学这个知识的时候，就没想过它可以用来解决什么样的问题，只是知道了一个概念，那么当你遇到团队管理问题的时候，自然也想不起来能用这个知识解决，也就是说，你的问题很难把你脑中的知识调用出来。这种现象，是造成我们所学的知识无法内化成能力的关键原因。</p><p>那么，<strong> 如何让知识和问题链接起来、解决问题的时候可以轻易调用知识呢？答案是：知识向问题靠，以及问题向知识靠。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154112.png" alt=""></p><p>先说 <strong> 知识向问题靠，就是说，每看到一个知识的时候，就去思考这个知识可以用来解决什么问题。</strong></p><p>比如，你学习了马斯洛的五层次需求，就马上思考一下它可以用来解决什么问题。因为这个知识讲的是人类的需求，而我们跟任何人相处其实都需要知道对方的需求。所以你就会想到，它可以用来管理下属（分析他们的需求层次，并据此激励他们），也可以用来找另一半（分析你自己所处的需求层次，从而确定你需要什么样的人），还可以用来分析奢侈品为什么可以卖那么贵（买奢侈品，满足的不只是物质需求，还有被人尊重的需求等等）。</p><p>这就是知识向问题靠。</p><p>而 <strong> 问题向知识靠呢？就是当你遇到问题的时候，抛弃第一反应，不要先按照自己的思维定式来解决，而要去想有什么方法论模型可以用。</strong></p><p>为什么不能按照第一反应的方式解决呢？因为在我们碰到问题的时候，我们的下意识第一反应，是未经思考的，是在遵循我们过去的模式，但如果我们处理所有问题都靠过去的模式，那么刚刚学习的新知识、新解决方案，要怎么才能掌握呢？所以，试着抛开思维定式，用你学到的知识去解决，这样一来，你的知识就会被不断盘活，你解决问题的能力会越来越强。</p><p><strong> 具体怎么落地呢？分享我的做法。</strong> 当我看书或者学习课程看到一个很有用的理论或者模型，我会记下来，然后思考至少 3 个用该模型解决问题的场景，也一起记下来。下次当我遇到一些难题的时候，我不会下意识反应，而是翻一下这个笔记，对照一下，哪些方法模型能解决这个问题，如果是笔记中没有的场景，这个问题是某个模型的新场景，我就补充进去。长此以往，积累了很多知识和问题之间的链接，自己解决问题的能力也得到了极大提升。</p><p><strong>3. 系统化训练 </strong></p><p><strong> 为什么说要系统化训练呢？一方面，不同的能力并不是相互割裂的，它们之间是有关联的。</strong> 比如说，你要提升自己的演讲能力。而演讲要做得好，首先需要结构化思维，你得表达清晰；在此基础上，你需要会讲故事，能够打动听众，而讲故事也是一种能力。再比如说，很多人说我表达不清晰，那我就去学表达，但表达其实本质上是大脑在说话，大多数人表达不清晰，并不是因为表达能力的问题，而是本身思维就不清晰，所以思维和表达得一起提升。所以说，能力的训练是需要系统化的，因为它们本身相互关联。</p><p><strong> 另一方面，能力需要刻意练习，而刻意练习需要时间。</strong> 我在前面说到的结构化思维的例子，虽然已经帮你挑出那 20% 最关键的部分了，但它也不是一蹴而就的，也是个系统提升。比如，1 个月的计划中，先是每天练习讲三段式，再是练习提炼主题，然后是积累结构，基本上每天是不间断的。</p><p>这样的系统训练需要一段时间的，但很多时候 <strong> 我们的习惯，是高估几天的变化，而低估几个月的变化 </strong>，所以很难坚持系统化训练。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154128.png" alt=""></p><p>比如说减肥，你这周有兴致就跑步 2 次，下周有兴致就节食 1 次，再下一周从外卖改自己做饭，之后再参加了几次减肥训练营。你会发现，几个月之后，也不会有什么变化。因为减肥是个系统工程，你得有一个 3 个月计划，按照计划，今天跑步、明天健身房，同时辅助饮食调整。</p><p>学习是一样的，今天学点结构化思维，明天练一下演讲，很难有真正的提升。知识的学习是大脑增加了一段记忆，但能力的提升是行为和思维方式发生改变，而行为和思维方式是短时间内很难改变的。</p><p>所以，<strong> 圈外商学院里面，针对能力提升的学习，只做系统化学习项目 </strong>，包括课程、练习及反馈，也有线上线下学习社群，整个学习持续 4-8 个月。效果如何呢？我在开学的时候，会寄给大家一封入学欢迎信，要求大家在毕业的时候给我回信。我收到过上百封回信，以及近千个微信消息，都提到说，<strong> 原以为几个月很长，但真正结束后，回头看，没有想到几个月可以有这些改变 </strong>。</p><p>好了，总结一下，今天提到了将知识内化成能力的三个方法：掌握核心的 20%、知识和问题互相靠以及系统化训练。具体到我们的行动中，如果我们有需要提升的能力，<strong> 首先要先找到专业人士，了解这个领域的核心 20% 是什么，先去学习那 20%；然后在学习过程中，思考各个知识点的应用场景，并记录下来，遇到问题再返回去找；最后，能力提升是个系统性过程，所以需要坚持至少 1 个月。</strong></p><p>我经常用开车来打比方，你拿着一本开车指南然后背下来，里面的知识背得再熟，一点价值都没有；你把指南里的知识落地，真正上车然后开起来，才是有价值的。知识不能被内化成能力，就像守着一本开车指南却不会开车一样，除了浪费大脑内存之外，毫无意义。互联网时代，我们要记住一句话：<strong> 大脑不单是用来记忆的，更是用来思考的。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154147.png" alt=""></p><p>好了，现在我们知道了如何通过学习将知识内化成能力，但学习说到底是一件反人性的事情，很难坚持，更何况是要系统化训练。实际上，<strong> 学习这件事，如果纯靠意志力，的确是不可持续的 </strong>，那如何能够让自己坚持学习呢？这个领域有什么样的研究和方法呢？我们将在下节课揭晓。<strong> 这个方法不仅对学习有用，对任何需要坚持的正面行为，比如健身，都会非常有用。</strong></p><h2 id="三大系统，让学习不靠意志力"><a href="#三大系统，让学习不靠意志力" class="headerlink" title="三大系统，让学习不靠意志力"></a>三大系统，让学习不靠意志力</h2><p><strong> 本节学习收获：</strong> 学会掌控自己的三类方法，让你不靠意志力，也能坚持学习</p><p>我们经常会听到诸如此类：如果坚持每天背 20 个单词，一年词汇量就接近 8000 了，基本是托福的词汇量；如果坚持每天写 2000 字，两个月就 12 万字了，就可以出一本书。</p><p>我们都知道这个积少成多、长期坚持的道理，但是，有多少人真正坚持得了呢？</p><p>上节课我们提到，能力提升比知识学习更难，当然，因为难所以才有价值，如果非常简单，就没什么竞争力了。但是，这么难的事情，要怎么才能坚持呢？</p><p>靠意志力吗？我们都是这么想的，所以经常会说 “xx 很自律”“xx 意志力惊人”。</p><p>但实际上，<strong> 因为人的意志力是有限的，任何让自己坚持的事情，都会消耗它，从而让你感觉非常累。比如你会发现，如果我们一段时间工作压力很大，就会更容易放弃健身等等良好习惯，因为我们的意志力在坚持工作这方面已经耗费光了，所以就没有多余的意志力用在坚持健身上了。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154255.png" alt=""></p><p><strong> 学习也是一样，当你坚持学习的时候，不是 “学习” 这件事情累着你，而是 “坚持” 这件事情累着你了，因为意志力会耗费大量能量。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154306.png" alt=""></p><p>而且在 <strong> 移动互联网时代，我们会发现，自己的意志力好像越来越薄弱。</strong> 以前高中时期，能坚持学习 2 个小时，但现在看 1 小时书，就觉得如坐针毡。很简单，因为我们面对的诱惑更多了，游戏、短视频、微博等等这些，都比学习的诱惑力更大，只要我们脑子里有这些东西，就需要不断耗费我们的意志力来抵制他们，才能最终坚持学习，所以我们才会很累。</p><p><strong> 威尔海姆・霍夫曼（Wilhelm Hofmann）主持的一项研究表明，人们醒着的时候，把大约 1/4 的时间用来抵制欲望。</strong> 而这个研究是在 BP 机时代做的，近二十年间，移动互联网兴起带来的诱惑，比如游戏、短视频、段子等等，比过去上千年的诱惑加起来还要多，所以 <strong> 我们每天需要抵制更多欲望。这也是为什么，我们常常觉得，没做什么事情，也会感到很心累的原因。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154323.png" alt=""></p><p>好了，诱惑那么多，意志力又不够用，那怎么办呢？今天我们就从行为改变的方法论角度，来讲讲，如何不纯靠意志力来学习。这个方法，不只是适用于学习，还适用于其他任何有点 “反人性” 的事情，比如健身、跑步等等。</p><p>心理学家早就对我们的大脑做过研究，学界普遍认为，<strong> 人类大脑内部有两个系统：理性和感性。</strong></p><p><strong> 感性跟情感有关，是天性和本能。而理性则跟理智有关，让我们能够深思熟虑。我们决定做任何事情的时候，都是这两部分在起作用。</strong></p><p>比如说，你在刷抖音，感性会告诉你 “视频很有趣，继续刷吧，你会很快乐”，而理性却告诉你 “别刷了，要去学习，否则将来没有前途”。</p><p>理性和感性是你的内部因素，而做一件事情还有外部因素的影响，这就是情境。关于情境我打个比方，如果你周围都是胖子，那么你变胖的概率会大大增加。如果你周围人都爱学习，那么你也会变得更爱学习。</p><p>所以，总结来说，<strong> 如果要让我们能够坚持做一件事情，比如学习，并不是只能靠意志力的，其实有三个关键因素：理性上知道要学习、情感上愿意去学习、情境上制造适合学习的场景 </strong>。接下来，我们从这三个方面去展开，看看有哪些方法，能让我们坚持做成一些事情，而不是白天堕落，晚上后悔然后发誓，第二天继续这个堕落、后悔和发誓的循环。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154339.png" alt=""></p><p><strong>1. 发挥理性的作用：树立明确目标 </strong></p><p>假设我让你追一只猫，如果我跟你说：“目标在东北方向！” 你能快速找到吗？很难。</p><p>但如果跟你说：“目标在东北方向一公里处的圈外办公室！” 那你更有可能会找到。</p><p>所以，我们的目标需要足够明确。</p><p>比如，你跟自己下了无数次决心：要多看书，不能再不学无术了。然后呢？你继续刷剧去了。但如果你跟自己说：每天晚上睡前看 10 分钟书。那么，你更有可能会做到。</p><p>所以，当你有明确目标的时候，同样的事情会有完全不一样的效果，你会更容易坚持。</p><p>这里给个数据，在圈外商学院的课程内，会有一个模块是专门用来写学习目标的。我们曾经做过一个数据分析，分析那些写目标的和不写目标的人，最后课程完成率有没有差异。最后的结果是，写目标的人的完成率是没有写的人的 1.5 倍。</p><p><strong> 所以，给自己一个明确的目标，是你坚持学习的第一步。</strong></p><p><strong>2. 发挥感性的作用：利用情绪冲动 </strong></p><p>比如，如果我讲很多大道理，从理性的角度去说服你，应该给希望工程捐钱以支持失学儿童，你可能很难做出改变。但是，如果我给你一张失学儿童的照片，看到她渴望学校的眼神，你可能会被触动，然后做出了捐款行为。这就是情绪的力量。</p><p>为什么化妆品、医美等等这样的产品，都在不断煽动女性对衰老的恐惧，因为恐惧是一种情绪，会让你有冲动付费。</p><p>而 <strong> 能够促进你行为的情绪不只是恐惧，其实有很多种，比如愧疚感、认同感、成就感，等等。</strong> 这里我给你建议几个利用情感的方法，用圈外过去所做的很多尝试为例 ——</p><p><strong> 方法 1 - 截止日期的紧迫感：</strong></p><p>豆瓣 9.4 分英剧《黑镜》的编剧查理・布洛克，收到过很多邮件，都是问他，怎么写出这么好的剧本。他回复大家说：<strong>“不要谈什么天分、运气，你需要的是一个截稿日，以及一个不交稿就能打爆你狗头的人，然后你就会被自己的才华吓到。”</strong></p><p>圈外商学院的课程，有个规定：在 30 天之内学完，你可以终身永久回看，而且可以看最新版本，因为我们课程会不断迭代；但如果你 30 天之内没有学完，课程就会关闭，哪怕你付了钱。很多人抱怨这个政策，但我们一直没改，因为我们看过数据，截止日前 3 天大家都在拼命学习和写作业，如果取消这个截止日期，谁会去马上学一个终身有效、没有截止日期的课程呢？</p><p><strong> 所以，deadline 是第一生产力。</strong></p><p><strong> 方法 2 - 比较产生的焦虑感：</strong></p><p>举个我自己的例子，其实我在创业之前也纠结了很久，不知道自己能力是不是足够，总觉得没有准备好。当时我的好朋友，也是现在圈外的联合创始人杰西，就跟我说 “你看你都这么大年纪了，现在创始人都很年轻，你再不创业就老了”，后来我就一咬牙出来了，也才有了现在的圈外同学。</p><p>顺便说一句，我现在经常给很多人一个建议：<strong> 你需要一个在关键时刻踹你一脚的人，因为人都是有惰性的。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154357.png" alt=""></p><p><strong> 方法 3 - 鼓励带来的成就感：</strong></p><p>在圈外，我们曾经做过一个对比，早期的产品是没有班主任服务的，也没有助教，那时候的完课率只有百分之十几。后来我们先尝试了给学员分班级、配备班主任，主要就是根据学员的学习情况鼓励他们，那时候还没有助教、学习游戏，但是完课率直接提升到了百分之五十多，基本就是社群和班主任鼓励的作用。</p><p>当然，其他还有很多情感很有用，比如对未来的期待感，如果你是想从传统行业到互联网行业，想通过学习来实现，那么有一个已经成功转型、而且实现了 2 倍涨薪的人来告诉你，他是通过学习来实现的，然后给了你他的 3 个月学习计划，你是不是很有信心学习呢？</p><p><strong>3. 发挥情境的作用：创造学习环境 </strong></p><p>好了，理性和情感说完，最后说说情境的作用。</p><p>还记得我们前面举的例子吗？如果你周围的人都是胖子，那你减肥的成功率会低很多。</p><p>这很容易理解，<strong> 人是社会动物，我们会观察周围人的行为来调整自己的行为。</strong></p><p>最简单的，你去一个陌生的社交场合，你会多说话还是少说话、多吃还是少吃呢？大多数人的做法是，看周围人怎么做。</p><p>学习也是一样的，很多人都发现，跟一群人一起讨论学习，会更容易坚持。</p><p>原因很简单，爱学习爱思考的人并不多，现实生活中，大多数人都在看娱乐八卦，如果你在学习，会觉得自己很突兀。但是 <strong> 到了学习社群就不一样了，大家都在学习，你也会模仿其他人 </strong>，这也是为什么，圈外的课程都有线上线下社群的原因，就是为了有这样一个氛围。</p><p>情境里除了同伴因素以外，还有其他因素。举个例子，如果你比较容易被抖音干扰学习，那你把手机锁起来，制造一个专注的环境，这个问题就解决了。所以，<strong> 如果想让你不看电视，最好的方法是别买电视；如果想让你少刷朋友圈，最好的办法是把小红点功能关掉，甚至，把朋友圈关掉；如果想让你别再剁手，最好的方法是把淘宝卸了，或者把信用卡额度冻结了。</strong></p><p><strong> 如果可以用环境，就不要用你的意志力来抵制欲望。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154411.png" alt=""></p><p>好了，我们总结一下，学习这件事，是不能纯靠意志力的，因为意志力非常有限，非常耗费能量。所以，你得利用自己的理性和感性两大系统，结合情境，让你愿意学习：首先利用你的理性系统，设定非常清晰量化的目标；然后，利用自己的情绪冲动，包括焦虑感、成就感等等，去促进学习；最后，还要让自己处于一个适合学习的情境。</p><p>2018 年 10 月，在中国拥有近五千万职场用户的 LinkedIn (领英)，做了一个调研，发布了一份 <strong>《职场人转折点报告》。报告中有个有趣的发现：每月收入低于 3000 元的职场人加班时间最长，而相较之下，每月收入大于 4 万元的职场人学习时间最长。</strong> 可以看出，能提升我们市场价值的，可能不是加班，而是学习。所以，希望你在掌握了这些方法之后，可以坚持学习提升。</p><p>到这里，我们的课程已经完成了 5 小节，如果你走到了这里，恭喜你，因为大部分人可能会在前面几天放弃。</p><p>之前的几小节，我们讲了如何选择适合的工作，选了工作之后如何投入时间以获得最大化价值，同时还给出了提升能力的方法，以及告诉你如何坚持学习提升。你有没有想过这些问题，<strong> 为什么我们现在都在说要终身学习呢？以及，为什么个人要自己花钱花时间学习呢？为什么企业越来越不愿意培养人了？不仅不愿意培养人，招来人干了几年之后，甚至会裁人 </strong>，导致我身边 35 岁的中年人每天都很焦虑，生怕遭遇中年失业。</p><h2 id="三个建议，让你不做-“定制化人才”"><a href="#三个建议，让你不做-“定制化人才”" class="headerlink" title="三个建议，让你不做 “定制化人才”"></a>三个建议，让你不做 “定制化人才”</h2><p><strong> 本节学习收获：</strong> 学会 3 个 “不变应万变” 的方法，避免成为 “企业定制化人才”。</p><p>我的一位中学同学，在某个耳熟能详的大外企做工程师。工作 10 年，接受了很多公司培训，还经常有国外出差的机会，自己的表现也一直都属于中上游。3 年前，他所在的业务开始缩减人员，最近一个关系好的同事也离开公司去创业了，他也觉得自己要做些改变，打算转行。</p><p>但是，信心满满地投了几十份简历，几乎没什么回音。唯一拿到的一个 offer，对方公司开出的薪酬只有现在的 70%。</p><p>照理说，我这位同学也算是大公司的优秀人才，怎么出了公司，竟然找不到合适的工作呢？</p><p>《国富论》里亚当・斯密提到的一个扣针工厂的例子：<strong> 一个工人无论如何努力，一天也生产不了 20 枚扣针，但有了分工之后，经过前后十几道工序，每人每天平均可以生产 48000 枚扣针。</strong> 这就是专业化分工的高效性！</p><p>任何一家公司，从老板的角度肯定是要提高效率、多赚钱，所以必然走向专业化分工，<strong> 把一个工作切成很多块，每个人都终日重复其中某一块，这样能提高效率、降低风险，同时也降低对人的依赖。</strong></p><p>但是，这对人才来说是灾难性的。因为亚当・斯密也说过 <strong>“如果一个人的全部心思都用在一只扣针的十几分之一时，见识必然有限”。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154525.png" alt=""></p><p>精细化分工的结果是，你成为了一个企业定制化人才，极端一点说，就像一颗螺丝钉，尺寸和材质只能用在一个产品上，挪到别处去，就成了废铁，被这个产品牢牢困住。</p><p>这是我那位同学之所以跳槽失败的原因。</p><p><strong> 那么，我们要如何避免被定制化呢？</strong></p><p>从我过去帮助 7 个行业的近百家头部企业设计人才管理体系的经验来说，我给你三个建议 <strong>。第一，调整主体，给自己定好发展方向；第二，提升能力，让自己成为横向可迁移的人才；第三，提升认知高度，让自己成为纵向可拓展的人才。</strong></p><p><strong>1、调整主体，给自己定好发展方向 </strong></p><p>我之前公司做的一个调研数据很有意思：<strong>10 年前，一个人在一家公司所待的时间是 3-4 年，而现在，一个人在一家公司平均只会待 1 年多 **</strong>。**</p><p><strong> 这是人才侧的数据，而从企业来说，我 10 多年前刚做咨询的时候，企业做战略规划都是 5 年甚至 10 年，而现在，能够拿得出清晰 3 年战略的企业，已经不多了。而中国企业的平均寿命不到 3 年。</strong></p><p>在这种情况下，<strong> 企业没有任何动力培养人才 </strong>，一方面人才只在公司平均待 1 年多，培养好之后还来不及给公司提供足够多的贡献，对企业来说根本不划算；另一方面，外部环境竞争激烈，培养人才所需要的时间，企业根本耗不起。所以，企业越来越倾向于用现成的人。而当所有企业都想用现成人才的时候，其实就是企业将过去所承担的人才培养成本，逐渐转移到了个人身上。</p><p><strong> 在这种趋势下，个人不可能把安全感寄托于企业。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154538.png" alt=""></p><p>所以，我们现在倡导所谓 “终身学习”，不是因为人们这两年突然爱学习了，是因为学习变成了生存下去所必须做的事情。企业定制化人才越来越没有竞争力，只有主动学习、提升能力才能适应时代。</p><p>怎么转移主体呢？听起来好像很虚，如何落地？很简单，<strong> 当你进入一家公司的时候，就要想好：如果我离开这里，还能干嘛？</strong> 就像我前面课程所说的，你去领英等等招聘网站上，搜索一下这个职位出去的人都在做什么，就知道将来是否有出路了。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154554.png" alt=""></p><p><strong>2、提升能力，让自己成为横向可迁移的人才 </strong></p><p>亚马逊创始人贝佐斯曾说：“人们常问我，未来十年，什么会改变；人们几乎从来不曾问我，未来十年，什么不会变。”</p><p>他觉得，这个世界不管怎么变，都很难想象，人们有一天会希望物品价格越高越好，物流速度越慢越好。所以，这两个因素就是不变的因素，做好这些，比每天追逐变化要有效得多。</p><p><strong> 作为人才也是一样，要想不被企业定制化，让自己成为万能零件，不受环境影响，也是要找到那些不变的因素。</strong></p><p><strong> 那对我们来说，什么是那个不变的因素呢？就是我们之前课程提到的，可迁移能力。</strong></p><p>当然，<strong> 不同发展阶段的能力要求有不同 </strong>。在很多公司内部，针对不同阶段的员工，都会有不同的能力模型，晋升以及招聘的时候就是用这一套标准来筛人的，而且各家公司其实有很多共性，这就是可迁移能力。</p><p><strong> 如果是职场新人 </strong>，要成为资深员工或者主管，需要具备：独立思考的能力、多任务高效工作的能力、清晰表达的能力、基础的人际拓展能力。</p><p><strong> 如果到了要带一个小团队、或者在公司内部管理一些项目的阶段 </strong>，则需要具备：解决复杂问题和创新的思维能力、辅导和激励下属让团队提升效率的能力、在公开场合演讲表达能力、处理复杂人际冲突的沟通能力。</p><p><strong> 而如果是成为管理者，开始带整个部门的时候，需要具备的能力包括 </strong>：在思维方面，掌握战略思维以及理性的经济学思维；在效率方面，需要掌握一些运营和财务的知识，更好地配置资源；同时，需要掌握营销思维，贯穿在工作全流程中；最后，在人际方面，需要全面的领导力。</p><p><strong>3、提升认知高度，让自己成为纵向可拓展的人才 </strong></p><p>上面讲的是提升可迁移能力，这样不局限在某个垂直领域。<strong> 而除了横向可迁移之外，还得纵向可迁移 </strong>，也就是说，提升自己的认知高度。就像亚当・斯密所说的，如果你全部精力都在某个产品的某个工序，见识一定是有限的，所以你得跳出这道工序，了解整个产品。</p><p><strong> 你需要去思考：</strong></p><ul><li><strong> 这个行业和公司的关键成功要素是什么？</strong></li><li><strong> 对用户对社会的价值是什么？</strong></li><li><strong> 你所在的部门和岗位，对公司的核心价值是什么？</strong></li></ul><p>从更加宏观的角度去看问题，至少成为一个比螺丝钉更大的零件。</p><p>而且在职场，职位越高，对专业的要求会降低，而对战略全局观、商业敏感度和领导力的要求是越来越高的。</p><p>那如何去提高这些能力呢？</p><p>大多数人的第一选择是去读个 MBA，领英在 2017 年的报告显示：高达 79% 的职场白领都想过读 MBA。但实际上，去读的只占中国职场人比例的不到 1%。几十万的学费、2 年的时间，都是极大的机会成本。</p><p><strong> 好了，总结一下这节课程，要想不成为 “定制化人才”，我们需要：第一，调整主体，给自己定好发展方向；第二，提升能力，让自己成为横向可迁移的人才；第三，提升认知高度，让自己成为纵向可拓展的人才。</strong></p><p><strong> 到这里呢，你已经完成了这个课程的学习。</strong></p><p><strong> 我们稍微总结一下：</strong> 首先我们学习了冰山模型，知道了自己为什么会不喜欢一份工作，以及怎么找到跟自己匹配的工作；接着，继续从冰山模型出发，分析应该把时间花在什么要素上面，才能有市场价值的提升，我们得出了提升能力的结论；然后我们通过两小节讲了能力如何提升，首先是找到自己的天赋，也就是隐藏的能力，其次是掌握 3 个方法、将学到的知识内化成能力；而要做到这些，离不开对学习的坚持，坚持学习很难，而意志力又很有限，所以要掌握理性、感性和情境三类方法。最后，关于如何应对未来的加速变化，答案是不要成为企业定制化人才。</p><p>通过这 6 小节课程，我想要告诉你的是：无论你对未来迷茫也好、遇到发展瓶颈也好，其实都是有解决方案的。<strong> 社会发展到今天，你所遇到的几乎每个问题，这个世界上都有人曾经成功解决过它，我们要做的，就是去学习 **</strong>，没有太多的问题需要我们重复造轮子。** 克林顿曾提到，世界上几乎每个问题都已经在某个地方被某个人解决，我们的挑战是找到那些有效的解决方案。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154610.png" alt=""></p><p><strong> 马斯洛说：“教育是让一个人成为最好版本的自己”</strong>，给自己一个机会，用几个月的时间，真正用正确的方法，来训练一下自己，看看自己最好的状态到底是什么样的！</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191121154624.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      圈外同学个人发展战略课程
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 后台运行任务 nohup 结合 &amp; 用法以及如何精准查找进程并 kill 后台任务实践</title>
    <link href="https://wsgzao.github.io/post/nohup/"/>
    <id>https://wsgzao.github.io/post/nohup/</id>
    <published>2019-11-15T06:59:49.000Z</published>
    <updated>2019-11-15T12:01:34.699Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>nohup 为什么要跟着 &amp; 一起使用，不知道大家有没有思考过其中的小区别，另外很多人会推崇使用 screen，但是实际生产环境应用场景有限我就不展开了。这次实际遇到的问题主要是因为使用 crontab 调用了多个不同的 nohup 后台执行任务，然而代码逻辑中出现对相同文件的占用导致任务进程产生冲突使得 system load 负载达到 600 之高，需要 kill 任务时也不能盲目操作，需要杀掉的进程多且进程名与其它正常的进程名字有交集，需要合理运用 pstree 找到问题的源头。</p><blockquote><p>Linux 后台运行任务 nohup 结合 &amp; 用法以及如何精准查找进程并 kill 后台任务实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 11 月 15 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/nohup/">https://wsgzao.github.io/post/nohup/</a></p><p><strong> 扩展阅读 </strong></p><hr><h2 id="nohup-介绍"><a href="#nohup-介绍" class="headerlink" title="nohup 介绍"></a>nohup 介绍</h2><p>用途：不挂断地运行命令。</p><p>语法：nohup Command [Arg …] [　&amp; ]</p><ul><li>无论是否将 nohup 命令的输出重定向到终端，输出都将附加到当前目录的 nohup.out 文件中。</li><li>如果当前目录的 nohup.out 文件不可写，输出重定向到 $HOME/nohup.out 文件中。</li><li>如果没有文件能创建或打开以用于追加，那么 Command 参数指定的命令不可调用。</li></ul><p>退出状态：该命令返回下列出口值：</p><ul><li>126 可以查找但不能调用 Command 参数指定的命令。</li><li>127 nohup 命令发生错误或不能查找由 Command 参数指定的命令。否则 nohup 命令的退出状态是 Command 参数指定命令的退出状态。</li></ul><h2 id="nohup-和-amp-的关系"><a href="#nohup-和-amp-的关系" class="headerlink" title="nohup 和 &amp; 的关系"></a>nohup 和 &amp; 的关系</h2><p>使用 <code>nohup</code> 运行程序:</p><ul><li>输出重定向，默认重定向到当前目录下 nohup.out 文件</li><li>使用 Ctrl + C 发送 SIGINT 信号，程序关闭</li><li>关闭 Shell Session 发送 SIGHUP 信号，程序免疫</li></ul><p>使用 <code>&amp;</code> 运行程序：</p><ul><li>程序转入后台运行</li><li>结果会输出到终端</li><li>使用 Ctrl + C 发送 SIGINT 信号，程序免疫</li><li>关闭 Shell session 发送 SIGHUP 信号，程序关闭</li></ul><h2 id="nohup-和-amp-使用实例"><a href="#nohup-和-amp-使用实例" class="headerlink" title="nohup 和 &amp; 使用实例"></a>nohup 和 &amp; 使用实例</h2><blockquote><p>一般两个一起组合使用不会受 Ctrl C 和 Shell 关闭的影响：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最简单的后台运行 </span></span><br><span class="line">nohup <span class="built_in">command</span> &amp;</span><br><span class="line"><span class="comment"># 输出默认重定向到当前目录下 nohup.out 文件 </span></span><br><span class="line">nohup python main.py &amp;  </span><br><span class="line"><span class="comment"># 自定义输出文件 (标准输出和错误输出合并到 main.log)</span></span><br><span class="line">nohup python main.py &gt;&gt; main.log 2&gt;&amp;1 &amp; </span><br><span class="line"><span class="comment"># 与上一个例子相同作用的简写方法 </span></span><br><span class="line">nohup python main.py &amp;&gt; main.log &amp;</span><br><span class="line"><span class="comment"># 不记录输出信息 </span></span><br><span class="line">nohup python main.py &amp;&gt; /dev/null &amp;</span><br><span class="line"><span class="comment"># 不记录输出信息并将程序的进程号写入 pidfile.txt 文件中，方便后续杀死进程 </span></span><br><span class="line">nohup python main.py &amp;&gt; /dev/null &amp; <span class="built_in">echo</span> $! &gt; pidfile.txt</span><br></pre></td></tr></table></figure><p>由于使用 nohup 时，会自动将输出写入 nohup.out 文件中，如果文件很大的话，nohup.out 就会不停的增大，我们可以利用 Linux 下一个特殊的文件 /dev/null 来解决这个问题，这个文件就相当于一个黑洞，任何输出到这个文件的东西都将消失 只保留输出错误信息 nohup command &gt;/dev/null 2&gt;log &amp; 所有信息都不要 nohup command &gt;/dev/null 2&gt;&amp;1 &amp;</p><p>这里解释一下后面的 2&gt;&amp;1 。 这涉及到 Linux 的重定向，其中 0、1、2 分别是标准输入、标准输出、标准错误输出，用来指定需要重定向的标准输入输出。默认情况下是标出输出，也就是 1 。例如我们而上文提到的 2&gt;&amp;1 是 将错误信息重定向到标准输出。</p><p>还有就是如果不想让程序输出，Linux 下有一个 /dev/null 的特殊文件，就像一个黑洞，所有输出到这个文件的信息全部会消失，如果你不需要输出日志，这样做就不会导致输出日志文件越来越大，占用存储空间的问题了</p><blockquote><p>其他相关命令</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 结束当前任务 </span><br><span class="line">ctrl+c</span><br><span class="line"># 将一个正在前台执行的命令放到后台，并且处于暂停状态 </span><br><span class="line">ctrl+z</span><br><span class="line"># 查看任务，返回任务编号 和 进程号 </span><br><span class="line">jobs -l</span><br><span class="line"># 将一个在后台暂停的命令，变成在后台继续执行。如果后台中有多个命令，可以用 bg %jobnumber 将选中的命令调出。</span><br><span class="line">bg %jobnumber</span><br><span class="line"># 将后台中的命令调至前台继续运行。如果后台中有多个命令，可以用 fg %jobnumber（是命令编号，不是进程号）将选中的命令调出 </span><br><span class="line">fg %jobnumber</span><br></pre></td></tr></table></figure><blockquote><p>编写一个测试脚本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="keyword">for</span> ((i=1; i&lt;1000; i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    d=`date <span class="string">'+%Y-%m-%d %H:%M:%S'</span>`</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$d</span> print <span class="variable">$&#123;i&#125;</span>"</span></span><br><span class="line">    sleep 2s</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="查找后台运行程序"><a href="#查找后台运行程序" class="headerlink" title="查找后台运行程序"></a>查找后台运行程序</h2><ol><li>已知 pid 进程号当然最好了</li><li>使用 <code>ps -ef</code> 或者 <code>ps -aux</code> 结合 <code>grep</code> 过滤</li><li>使用 <code>pstree -p</code> 确认复杂进程树结构</li><li>使用 <code>lsof -i:80</code> 查端口获得进程号</li><li>使用 <code>netstat -anp | grep 80</code> 查端口获得进程号，推荐使用 <code>lsof</code></li></ol><h2 id="杀死后台运行程序"><a href="#杀死后台运行程序" class="headerlink" title="杀死后台运行程序"></a>杀死后台运行程序</h2><h3 id="kill"><a href="#kill" class="headerlink" title="kill"></a>kill</h3><p>kill 命令用来删除执行中的程序或工作。kill 可将指定的信息送至程序。预设的信息为 SIGTERM (15), 可将指定程序终止。若仍无法终止该程序，可使用 SIGKILL (9) 信息尝试强制删除程序，即 kill -9。程序或工作的编号可利用 ps 指令或 job 指令查看。</p><p>语法<br>kill(选项)(参数)</p><p>选项<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-a：当处理当前进程时，不限制命令名和进程号的对应关系；</span><br><span class="line">-l &lt; 信息编号 & gt;：若不加 & lt; 信息编号 & gt; 选项，则 - l 参数会列出全部的信息名称；</span><br><span class="line">-p：指定 kill 命令只打印相关进程的进程号，而不发送任何信号；</span><br><span class="line">-s &lt; 信息名称或编号 & gt;：指定要送出的信息；</span><br><span class="line">-u：指定用户。</span><br></pre></td></tr></table></figure></p><p>参数<br>进程或作业识别号：指定要删除的进程或作业。</p><p>实例<br>列出所有信号名称：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> kill -l</span><br><span class="line"> 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL</span><br><span class="line"> 5) SIGTRAP      6) SIGABRT      7) SIGBUS       8) SIGFPE</span><br><span class="line"> 9) SIGKILL     10) SIGUSR1     11) SIGSEGV     12) SIGUSR2</span><br><span class="line">13) SIGPIPE     14) SIGALRM     15) SIGTERM     16) SIGSTKFLT</span><br><span class="line">17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP</span><br><span class="line">21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU</span><br><span class="line">25) SIGXFSZ     26) SIGVTALRM   27) SIGPROF     28) SIGWINCH</span><br><span class="line">29) SIGIO       30) SIGPWR      31) SIGSYS      34) SIGRTMIN</span><br><span class="line">35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3  38) SIGRTMIN+4</span><br><span class="line">39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12</span><br><span class="line">47) SIGRTMIN+13 48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14</span><br><span class="line">51) SIGRTMAX-13 52) SIGRTMAX-12 53) SIGRTMAX-11 54) SIGRTMAX-10</span><br><span class="line">55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7  58) SIGRTMAX-6</span><br><span class="line">59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-1  64) SIGRTMAX</span><br></pre></td></tr></table></figure></p><p>只有第 9 种信号 (SIGKILL) 才可以无条件终止进程，其他信号进程都有权利忽略，下面是常用的信号：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HUP     1    终端断线 </span><br><span class="line">INT     2    中断（同 Ctrl + C）</span><br><span class="line">QUIT    3    退出（同 Ctrl + \）</span><br><span class="line">TERM   15    终止 </span><br><span class="line">KILL    9    强制终止 </span><br><span class="line">CONT   18    继续（与 STOP 相反， fg/bg 命令）</span><br><span class="line">STOP   19    暂停（同 Ctrl + Z）</span><br></pre></td></tr></table></figure></p><p>先用 ps 查找进程，然后用 kill 杀掉：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep vim</span><br><span class="line">root      3268  2884  0 16:21 pts/1    00:00:00 vim install.log</span><br><span class="line">root      3370  2822  0 16:21 pts/0    00:00:00 grep vim</span><br><span class="line"></span><br><span class="line">kill 3268</span><br><span class="line">kill 3268</span><br><span class="line">-bash: kill: (3268) - 没有那个进程 </span><br></pre></td></tr></table></figure></p><h3 id="killall"><a href="#killall" class="headerlink" title="killall"></a>killall</h3><p>killall 和 pill 命令差不多都是使用进程的名称来杀死进程，使用此指令可以杀死一组同名进程。我们可以使用 kill 命令杀死指定进程 PID 的进程，如果要找到我们需要杀死的进程，我们还需要在之前使用 ps 等命令再配合 grep 来查找进程，而 killall 把这两个过程合二为一，是一个很好用的命令。</p><p>语法<br>killall(选项)(参数)</p><p>选项<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-e：对长名称进行精确匹配；</span><br><span class="line">-l：忽略大小写的不同；</span><br><span class="line">-p：杀死进程所属的进程组；</span><br><span class="line">-i：交互式杀死进程，杀死进程前需要进行确认；</span><br><span class="line">-l：打印所有已知信号列表；</span><br><span class="line">-q：如果没有进程被杀死。则不输出任何信息；</span><br><span class="line">-r：使用正规表达式匹配要杀死的进程名称；</span><br><span class="line">-s：用指定的进程号代替默认信号 “SIGTERM”；</span><br><span class="line">-u：杀死指定用户的进程。</span><br></pre></td></tr></table></figure></p><p>参数<br>进程名称：指定要杀死的进程名称。</p><p>实例<br>杀死所有同名进程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall vi</span><br></pre></td></tr></table></figure></p><h3 id="使用-pstree-查找和杀死复杂进程"><a href="#使用-pstree-查找和杀死复杂进程" class="headerlink" title="使用 pstree 查找和杀死复杂进程"></a>使用 pstree 查找和杀死复杂进程</h3><p>常见的 3 个 kill 命令</p><ul><li>kill</li><li>pkill</li><li>killall</li></ul><p>搭配查找进程命令</p><ul><li>pidof</li><li>pstree</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 已知进程号，启动时输出后台运行程序的进程号，然后读取进程号杀死后台程序：</span></span><br><span class="line"><span class="built_in">kill</span> -9 `cat pidfile.txt`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进程数量较多且有规律，不和其他正常进程冲突 </span></span><br><span class="line">killall 进程名 </span><br><span class="line"><span class="built_in">kill</span> -9 $(pidof 进程名)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进程数量多，规律不明显，混了正常进程 </span></span><br><span class="line">pstree -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复杂点的情况比如像我遇到的真实案例 </span></span><br><span class="line">|-crond(127436)-+-crond(138887)---bash(138892)---bash(138895)---grep(140604)</span><br><span class="line">|               |-crond(139310)---bash(139323)---bash(139324)---python(139431)</span><br><span class="line">|               |-crond(139311)---bash(139325)---bash(139331)---python(139452)</span><br><span class="line">|               |-crond(139312)---bash(139318)---bash(139319)---python(139442)</span><br><span class="line">|               |-crond(139313)---bash(139317)---bash(139320)---python(139444)</span><br><span class="line">|               |-crond(139314)---bash(139329)---bash(139340)---python(139443)</span><br><span class="line">|               |-crond(139315)---bash(139327)---bash(139339)---grep(140768)</span><br><span class="line">|               |-crond(139651)---bash(139660)---bash(139661)---python(139915)</span><br><span class="line">|               |-crond(139652)---bash(139664)---bash(139666)---python(139916)</span><br><span class="line">|               |-crond(139653)---bash(139663)---bash(139665)---python(139914)</span><br><span class="line">|               |-crond(139654)---bash(139675)---bash(139683)---python(139918)</span><br><span class="line">|               |-crond(139655)---bash(139668)---bash(139677)---python(139913)</span><br><span class="line">|               `-crond(139656)---bash(139669)---bash(139682)---grep(139780)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果你喜欢用 grep 也没有问题，多设置几个过滤条件语句组合在一起即可 </span></span><br><span class="line">ps -ef | grep <span class="string">'python'</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span> |xargs <span class="built_in">kill</span> -9</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://woodenrobot.me/2019/07/04/Linux-%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E4%BB%BB%E5%8A%A1-nohup-%E5%92%8C/" target="_blank" rel="noopener">Linux 后台运行任务 nohup 和 &amp;</a></p><p><a href="https://www.2daygeek.com/kill-terminate-a-process-in-linux-using-kill-pkill-killall-command/" target="_blank" rel="noopener">3 Easy Ways to Kill or Terminate a Process on Linux</a></p>]]></content>
    
    <summary type="html">
    
      Linux后台运行任务nohup结合&amp;用法以及如何精准查找进程并kill后台任务实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Nginx 基础知识从小白到入门</title>
    <link href="https://wsgzao.github.io/post/nginx/"/>
    <id>https://wsgzao.github.io/post/nginx/</id>
    <published>2019-11-12T06:59:49.000Z</published>
    <updated>2019-11-13T11:00:28.776Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Nginx 现在几乎是众多大型网站的必用技术，大家应该都知道 <a href="https://www.nginx.com/blog/nginx-joins-f5/" target="_blank" rel="noopener">Nginx 被 F5 收购</a> 的大事件，章亦春也在专心维护 OpenResty 项目构建和谐家园，无论你选择 Nginx 还是 OpenResty，都需要对 Nginx 有一个比较全面的了解，日后才能做到事半功倍。本文以开发者必备的 Nginx 基础知识为主，在参考文章中罗列了目前比较优秀的 Nginx 和 OpenResty 参考教程，希望对大家有帮助。</p><blockquote><p>Nginx 基础知识从小白到入门</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 11 月 12 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/nginx/">https://wsgzao.github.io/post/nginx/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://nginx.org/" target="_blank" rel="noopener">nginx.org</a></p><p><a href="https://www.nginx.com/" target="_blank" rel="noopener">NGINX Plus</a></p><p><a href="https://openresty.org/" target="_blank" rel="noopener">OpenResty</a></p><hr><h2 id="Nginx-基础知识"><a href="#Nginx-基础知识" class="headerlink" title="Nginx 基础知识"></a>Nginx 基础知识</h2><blockquote><p>Nginx 是什么？</p></blockquote><p>Nginx 是一个 web 服务器，主要处理客户端和服务器的请求分发。</p><blockquote><p>特点和优势</p></blockquote><ol><li>高并发</li><li>热部署</li><li>快</li><li>低功耗</li><li>热部署</li></ol><blockquote><p>使用和扩展</p></blockquote><p>开源免费的 Nginx 与商业版 Nginx Plus，与之对应的是免费 OpenResty 与商业版 OpenResty</p><ul><li>开源版 <a href="https://nginx.org/" target="_blank" rel="noopener">nginx.org</a></li><li>商业版 <a href="https://www.nginx.com/" target="_blank" rel="noopener">NGINX Plus</a></li><li>阿里巴巴 <a href="https://tengine.taobao.org/" target="_blank" rel="noopener">Tengine</a></li><li>开源版 <a href="https://openresty.org/" target="_blank" rel="noopener">OpenResty</a></li><li>商业版 <a href="https://openresty.com/" target="_blank" rel="noopener">OpenResty</a></li></ul><blockquote><p>陶辉《深入理解 Nginx》作者在极客时间上的讲义 PDF 已经介绍的非常详细了，如果觉得课程不错可以选择购买尽量少走弯路</p></blockquote><p><a href="https://github.com/russelltao/geektime-nginx" target="_blank" rel="noopener">极客时间：nginx 核心知识 100 讲配置文件与代码分享</a></p><h2 id="nginx-正向代理与反向代理"><a href="#nginx-正向代理与反向代理" class="headerlink" title="nginx 正向代理与反向代理"></a>nginx 正向代理与反向代理</h2><blockquote><p>为了便于理解，首先先来了解一下一些基础知识，nginx 是一个高性能的反向代理服务器那么什么是反向代理呢？</p></blockquote><p>代理是在服务器和客户端之间假设的一层服务器，代理将接收客户端的请求并将它转发给服务器，然后将服务端的响应转发给客户端。</p><p>不管是正向代理还是反向代理，实现的都是上面的功能。</p><p>如果你对 <a href="https://wsgzao.github.io/post/osi/">OSI 七层模型与 TCP/IP 四层模型</a> 不是很熟悉可以再回顾下</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191113180648.png" alt=""></p><blockquote><p>正向代理</p></blockquote><p>正向代理（forward）意思是一个位于客户端和原始服务器 (origin server) 之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标 (原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。</p><p>正向代理是为我们服务的，即为客户端服务的，客户端可以根据正向代理访问到它本身无法访问到的服务器资源。</p><p>正向代理对我们是透明的，对服务端是非透明的，即服务端并不知道自己收到的是来自代理的访问还是来自真实客户端的访问。</p><blockquote><p>反向代理</p></blockquote><p>反向代理（Reverse Proxy）方式是指以代理服务器来接受 internet 上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 internet 上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。</p><p>反向代理是为服务端服务的，反向代理可以帮助服务器接收来自客户端的请求，帮助服务器做请求转发，负载均衡等。</p><p>反向代理对服务端是透明的，对我们是非透明的，即我们并不知道自己访问的是代理服务器，而服务器知道反向代理在为他服务。</p><h2 id="nginx-基本配置"><a href="#nginx-基本配置" class="headerlink" title="nginx 基本配置"></a>nginx 基本配置</h2><p>安装 nginx 时通常需要编译自己需要的模块，可以<a href="https://wsgzao.github.io/post/rpmbuild/">使用 rpmbuild 制作 Nginx 的 RPM 包</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">main                                # 全局配置</span><br><span class="line"></span><br><span class="line">events &#123;                            # nginx 工作模式配置</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;                                # http 设置</span><br><span class="line">    ....</span><br><span class="line"></span><br><span class="line">    server &#123;                        # 服务器主机配置</span><br><span class="line">        ....</span><br><span class="line">        location &#123;                    # 路由配置</span><br><span class="line">            ....</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location path &#123;</span><br><span class="line">            ....</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location otherpath &#123;</span><br><span class="line">            ....</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        ....</span><br><span class="line"></span><br><span class="line">        location &#123;</span><br><span class="line">            ....</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    upstream name &#123;                    # 负载均衡配置</span><br><span class="line">        ....</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果想要生成 nginx 规范配置，可以参考<a href="https://nginxconfig.io/" target="_blank" rel="noopener">nginxconfig.io</a></p><p>下面是 <code>nginx</code> 一些配置中常用的内置全局变量，你可以在配置的任何位置使用它们。</p><table><thead><tr><th>变量名</th><th>功能</th></tr></thead><tbody><tr><td><code>$host</code></td><td>请求信息中的 <code>Host</code>，如果请求中没有 <code>Host</code> 行，则等于设置的服务器名</td></tr><tr><td><code>$request_method</code></td><td>客户端请求类型，如 <code>GET</code>、<code>POST</code></td></tr><tr><td><code>$remote_addr</code></td><td>客户端的 <code>IP</code> 地址</td></tr><tr><td><code>$args</code></td><td>请求中的参数</td></tr><tr><td><code>$content_length</code></td><td>请求头中的 <code>Content-length</code> 字段</td></tr><tr><td><code>$http_user_agent</code></td><td>客户端 agent 信息</td></tr><tr><td><code>$http_cookie</code></td><td>客户端 cookie 信息</td></tr><tr><td><code>$remote_addr</code></td><td>客户端的 IP 地址</td></tr><tr><td><code>$remote_port</code></td><td>客户端的端口</td></tr><tr><td><code>$server_protocol</code></td><td>请求使用的协议，如 <code>HTTP/1.0</code>、<code>HTTP/1.1\</code></td></tr><tr><td><code>$server_addr</code></td><td>服务器地址</td></tr><tr><td><code>$server_name</code></td><td>服务器名称</td></tr><tr><td><code>$server_port</code></td><td>服务器的端口号</td></tr></tbody></table><h2 id="nginx-负载均衡"><a href="#nginx-负载均衡" class="headerlink" title="nginx 负载均衡"></a>nginx 负载均衡</h2><p>Upstream 指定后端服务器地址列表，在 server 中拦截响应请求，并将请求转发到 Upstream 中配置的服务器列表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">upstream balanceServer &#123;</span><br><span class="line">    server 10.1.22.33:12345;</span><br><span class="line">    server 10.1.22.34:12345;</span><br><span class="line">    server 10.1.22.35:12345;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    server_name  fe.server.com;</span><br><span class="line">    listen 80;</span><br><span class="line">    location /api &#123;</span><br><span class="line">        proxy_pass http://balanceServer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的配置只是指定了 nginx 需要转发的服务端列表，并没有指定分配策略。</p><p>默认情况下采用的是轮询策略，将所有客户端请求轮询分配给服务端。这种策略是可以正常工作的，但是如果其中某一台服务器压力太大，出现延迟，会影响所有分配在这台服务器下的用户。</p><h2 id="nginx-常用命令"><a href="#nginx-常用命令" class="headerlink" title="nginx 常用命令"></a>nginx 常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 快速关闭 Nginx，可能不保存相关信息，并迅速终止 web 服务</span></span><br><span class="line">nginx -s stop</span><br><span class="line"><span class="comment"># 平稳关闭 Nginx，保存相关信息，有安排的结束 web 服务</span></span><br><span class="line">nginx -s quit</span><br><span class="line"><span class="comment"># 因改变了 Nginx 相关配置，需要重新加载配置而重载</span></span><br><span class="line">nginx -s reload</span><br><span class="line"><span class="comment"># 重新打开日志文件</span></span><br><span class="line">nginx -s reopen</span><br><span class="line"><span class="comment"># 为 Nginx 指定一个配置文件，来代替缺省的</span></span><br><span class="line">nginx -c filename</span><br><span class="line"><span class="comment"># 不运行，而仅仅测试配置文件。nginx 将检查配置文件的语法的正确性，并尝试打开配置文件中所引用到的文件</span></span><br><span class="line">nginx -t</span><br><span class="line"><span class="comment">#  显示 nginx 的版本</span></span><br><span class="line">nginx -v</span><br><span class="line"><span class="comment"># 显示 nginx 的版本，编译器版本和配置参数</span></span><br><span class="line">nginx -V</span><br><span class="line"><span class="comment"># 格式换显示 nginx 配置参数</span></span><br><span class="line">2&gt;&amp;1 nginx -V | xargs -n1</span><br><span class="line">2&gt;&amp;1 nginx -V | xargs -n1 | grep lua</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><blockquote><p>以上内容只是 nginx 的冰山一角，我个人推荐大家跟着官方文档或者类似极客时间的教程学习，可以少走很多弯路</p></blockquote><p><a href="https://nginx.org/en/docs/" target="_blank" rel="noopener">nginx documentation</a></p><p><a href="http://www.conardli.top/blog/article/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E5%A4%87%E7%9A%84nginx%E7%9F%A5%E8%AF%86.html" target="_blank" rel="noopener">前端开发者必备的 nginx 知识</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzA4Nzg5Nzc5OA==&amp;mid=2651674303&amp;idx=1&amp;sn=b34cbf009aac5f901ce81a65df06359f&amp;chksm=8bcb9516bcbc1c006ff36cd7a8a83d40c7b24143d0c76fc15f61bbb2c210355615125aa95d94&amp;mpshare=1&amp;scene=1&amp;srcid=1031DJIgeaaQj5fafJbAc3mg#rd" target="_blank" rel="noopener">百万并发下 Nginx 的优化之道</a></p><p><a href="http://openresty.org/download/agentzh-nginx-tutorials-zhcn.html" target="_blank" rel="noopener">agentzh 的 Nginx 教程</a></p><p><a href="https://moonbingbing.gitbooks.io/openresty-best-practices/content/index.html" target="_blank" rel="noopener">OpenResty 最佳实践</a></p><blockquote><p>以下为极客时间专栏</p></blockquote><p><a href="https://time.geekbang.org/course/intro/138" target="_blank" rel="noopener">Nginx 核心知识 100 讲</a></p><p><a href="https://github.com/russelltao/geektime-nginx" target="_blank" rel="noopener">极客时间：nginx 核心知识 100 讲配置文件与代码分享</a></p><p><a href="https://time.geekbang.org/column/intro/186" target="_blank" rel="noopener">OpenResty 从入门到实战</a></p>]]></content>
    
    <summary type="html">
    
      Nginx基础知识从小白到入门
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
</feed>
