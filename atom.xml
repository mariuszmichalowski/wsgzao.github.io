<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HelloDog</title>
  
  <subtitle>Keep Calm and Carry On</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wsgzao.github.io/"/>
  <updated>2020-09-06T13:01:20.057Z</updated>
  <id>https://wsgzao.github.io/</id>
  
  <author>
    <name>wsgzao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 GitHub 和 Hexo 搭建免费静态 Blog</title>
    <link href="https://wsgzao.github.io/post/hexo/"/>
    <id>https://wsgzao.github.io/post/hexo/</id>
    <published>2020-09-06T09:40:07.000Z</published>
    <updated>2020-09-06T13:01:20.057Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://i.v2ex.co/5bb7J7NT.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>习惯自己写 Blog 的朋友一定不会陌生 Wordpress，或许也曾在新浪博客和 QQ 空间留过脚印，但静心认真思考一下，似乎我们又总是向往更加简单自由的写作方式。GitHub 给我们提供了一个无限的空间，我们需要珍惜使用，而 Hexo 的出现从某种意义上来说代替了 Jekyll，让我们可以更专注于写作本身。本文主要介绍自己的实践心得并不断完善内容，衍生知识和原理推荐大家认真阅读官网的手册，其它推荐参考内容链接在文中也会标注出来。</p><blockquote><p><a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="noopener">阮一峰 - 喜欢写 Blog 的人，会经历三个阶段</a></p></blockquote><p>第一阶段，刚接触 Blog，觉得很新鲜，试着选择一个免费空间来写。<br>第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。<br>第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 09 月 06 日 - 更新 macOS 下部署 Hexo 5.0 步骤，重构文章内容<br>2015 年 11 月 18 日 - 推荐 iissnan 的主题，完善细节内容<br>2015 年 09 月 03 日 - 完善 Windows 10 安装 Hexo 中的细节<br>2015 年 03 月 22 日 - 更新 Windows 下 Hexo 3.0 安装和升级，感谢<a href="http://akarin.xyz" target="_blank" rel="noopener">@机智的阿卡林酱</a><br>2015 年 03 月 10 日 - 增加 Hexo 3.0 降级 2.8<br>2014 年 12 月 19 日 - 完善内容<br>2014 年 12 月 09 日 - 更新 Hexo 配置修改部分<br>2014 年 06 月 19 日 - 更新全部基础架构，待完善配置修改部分<br>2014 年 06 月 17 日 - 更新部分 Hexo 建站过程，待完善<br>2014 年 05 月 29 日 - 撰写初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/hexo/">https://wsgzao.github.io/post/hexo/</a></p><hr><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p><strong> 注意 </strong> 本文主要针对 <code>Windows</code> 平台和 <code>Hexo 5.x</code></p><h3 id="了解-Hexo"><a href="#了解-Hexo" class="headerlink" title="了解 Hexo"></a>了解 Hexo</h3><blockquote><p>A fast, simple &amp; powerful blog framework</p></blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br><a href="http://hexo.io/" target="_blank" rel="noopener">hexo.io</a></p><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><p><a href="https://windows.github.com/" target="_blank" rel="noopener">GitHub Windows</a></p><p>简单可依赖，安装完成后依据提示操作即可，So Easy</p><h3 id="安装-Node-JS"><a href="#安装-Node-JS" class="headerlink" title="安装 Node.JS"></a>安装 Node.JS</h3><p><a href="http://nodejs.org/" target="_blank" rel="noopener">Node.JS</a></p><p><strong> 注意 </strong> 安装完成后添加 Path 环境变量，使 <code>npm</code> 命令生效。新版已经会自动配置 Path</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;C:\Program Files\nodejs\node_modules\npm</span><br></pre></td></tr></table></figure><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>配置好 <code>GitHub</code> 家目录后，双击桌面上的 <code>Git Shell</code>，输入 <code>npm</code> 命令即可安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果命令无法运行，可以尝试更换 taobao 的 npm 源</span></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># macOS 首次安装 hexo-cli 会出现权限报错</span></span><br><span class="line">npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line">npm WARN checkPermissions Missing write access to /usr/<span class="built_in">local</span>/lib/node_modules</span><br><span class="line">npm ERR! code EACCES</span><br><span class="line">npm ERR! syscall access</span><br><span class="line">npm ERR! path /usr/<span class="built_in">local</span>/lib/node_modules</span><br><span class="line">npm ERR! errno -13</span><br><span class="line">npm ERR! Error: EACCES: permission denied, access <span class="string">'/usr/local/lib/node_modules'</span></span><br><span class="line">npm ERR!  [Error: EACCES: permission denied, access <span class="string">'/usr/local/lib/node_modules'</span>] &#123;</span><br><span class="line">npm ERR!   errno: -13,</span><br><span class="line">npm ERR!   code: <span class="string">'EACCES'</span>,</span><br><span class="line">npm ERR!   syscall: <span class="string">'access'</span>,</span><br><span class="line">npm ERR!   path: <span class="string">'/usr/local/lib/node_modules'</span></span><br><span class="line">npm ERR! &#125;</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! The operation was rejected by your operating system.</span><br><span class="line">npm ERR! It is likely you <span class="keyword">do</span> not have the permissions to access this file as the current user</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! If you believe this might be a permissions issue, please double-check the</span><br><span class="line">npm ERR! permissions of the file and its containing directories, or try running</span><br><span class="line">npm ERR! the <span class="built_in">command</span> again as root/Administrator.</span><br><span class="line"></span><br><span class="line">npm ERR! A complete <span class="built_in">log</span> of this run can be found <span class="keyword">in</span>:</span><br><span class="line">npm ERR!     /Users/oxwang/.npm/_logs/2020-09-06T08_50_44_338Z-debug.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用以下命令修改权限解决</span></span><br><span class="line">sudo chown -R `whoami` ~/.npm</span><br><span class="line">sudo chown -R `whoami` /usr/<span class="built_in">local</span>/lib/node_modules</span><br></pre></td></tr></table></figure><h2 id="Hexo-初始化配置"><a href="#Hexo-初始化配置" class="headerlink" title="Hexo 初始化配置"></a>Hexo 初始化配置</h2><h3 id="Hexo-官方步骤"><a href="#Hexo-官方步骤" class="headerlink" title="Hexo 官方步骤"></a>Hexo 官方步骤</h3><blockquote><p>简单几步就可以在本地执行，还有一些插件需要和第三方主题搭配使用</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><h3 id="创建-Hexo-文件夹"><a href="#创建-Hexo-文件夹" class="headerlink" title="创建 Hexo 文件夹"></a>创建 Hexo 文件夹</h3><p>安装完成后，根据自己喜好建立目录（如 <code>E:\kuaipan\GitHub\hexo</code>），进入 <code>Git Shell</code> 切换到该路径下 <code>E:\kuaipan\GitHub\hexo</code> 执行以下指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</span></span><br><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建完成后，指定文件夹的目录如下</span></span><br><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── scripts</span><br><span class="line">├── <span class="built_in">source</span></span><br><span class="line">|      ├── _drafts</span><br><span class="line">|      └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><h3 id="安装-Hexo-插件"><a href="#安装-Hexo-插件" class="headerlink" title="安装 Hexo 插件"></a>安装 Hexo 插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked@0.2 --save</span><br><span class="line">npm install hexo-renderer-stylus@0.2 --save</span><br><span class="line">npm install hexo-generator-feed@1 --save</span><br><span class="line">npm install hexo-generator-sitemap@1 --save</span><br></pre></td></tr></table></figure><h3 id="本地查看效果"><a href="#本地查看效果" class="headerlink" title="本地查看效果"></a>本地查看效果</h3><p>继续执行以下命令，成功后可登录 <code>localhost:4000</code> 查看效果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></p><h3 id="Hexo-简写命令"><a href="#Hexo-简写命令" class="headerlink" title="Hexo 简写命令"></a>Hexo 简写命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="comment"># 生成文章，或者 source\_posts 手动编辑 </span></span><br><span class="line">hexo s <span class="comment"># 本地发布预览效果</span></span><br><span class="line">hexo g <span class="comment"># 生成 public 静态文件</span></span><br><span class="line"> 最后我选择手动同步更新至 GitHub</span><br></pre></td></tr></table></figure><h2 id="部署静态网页到-GitHub"><a href="#部署静态网页到-GitHub" class="headerlink" title="部署静态网页到 GitHub"></a>部署静态网页到 GitHub</h2><h3 id="注册设置-GitHub"><a href="#注册设置-GitHub" class="headerlink" title="注册设置 GitHub"></a>注册设置 GitHub</h3><ol><li>登录<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>，注册自定义用户名如 <code>wsgzao</code></li><li>在主页右下角创建 <code>New repository</code>，name 必须和用户名一致如 <code>wsgzao.github.io</code></li><li>首次创建耐心等待 10 分钟左右审核，之后即可访问静态主页如<a href="https://wsgzao.github.io">https://wsgzao.github.io</a></li></ol><h3 id="同步内容至-GitHub"><a href="#同步内容至-GitHub" class="headerlink" title="同步内容至 GitHub"></a>同步内容至 GitHub</h3><ol><li>下载<a href="https://windows.github.com/" target="_blank" rel="noopener">GitHub Windows</a></li><li>设置 <code>Local path</code> 如 <code>E:\ 快盘 \ GitHub\</code></li><li>运行 <code>Git Shell</code> 切换到如 <code>E:\ 快盘 \ GitHub\hexo</code> 路径下</li><li>执行 <code>hexo g</code> 命令生成 <code>public</code> 文件夹</li><li>把生成的内容全部拷贝到 <code>Local path</code> 或其子目录</li><li>运行 <code>GitHub</code> 确认修改信息后执行右上角的 <code>Sync</code> 同步</li><li>最后访问主页观察效果</li></ol><p><a href="https://pages.github.com/" target="_blank" rel="noopener">https://pages.github.com/</a></p><h2 id="域名和-DNS"><a href="#域名和-DNS" class="headerlink" title="域名和 DNS"></a>域名和 DNS</h2><h3 id="域名推荐"><a href="#域名推荐" class="headerlink" title="域名推荐"></a>域名推荐</h3><blockquote><p>GoDaddy makes registering Domain Names fast, simple, and affordable.</p></blockquote><p>【推荐理由】两个字“靠谱”，支持支付宝，附优惠码链接</p><p><a href="http://www.godaddy.com/" target="_blank" rel="noopener">http://www.godaddy.com/</a><br><a href="http://www.gdcodecoupon.com/" target="_blank" rel="noopener">http://www.gdcodecoupon.com/</a></p><h3 id="DNS-推荐"><a href="#DNS-推荐" class="headerlink" title="DNS 推荐"></a>DNS 推荐</h3><blockquote><p>致力于为您提供最稳定、最安全的域名解析服务</p></blockquote><p>【推荐理由】依然是两个字“靠谱”，感谢他们一直以来对于公益的坚持</p><p><a href="https://www.dnspod.cn/" target="_blank" rel="noopener">https://www.dnspod.cn/</a></p><h3 id="设置-CNAME"><a href="#设置-CNAME" class="headerlink" title="设置 CNAME"></a>设置 CNAME</h3><ol><li>在 Github 的网站目录下创建 <code>CNAME</code> 文件</li><li>填写自己的域名如 <code>hellodog.com</code>，保存结束</li><li>登录 DNSPod，先添加域名，然后添加记录，设置如下</li></ol><table><thead><tr><th>主机记录</th><th>记录类型</th><th>线路类型</th><th>记录值</th><th>MX 优先级</th><th>TTL</th></tr></thead><tbody><tr><td>@</td><td>CNAME</td><td>默认</td><td>wsgzao.github.io.</td><td>-</td><td>10</td></tr><tr><td>www</td><td>CNAME</td><td>默认</td><td>wsgzao.github.io.</td><td>-</td><td>10</td></tr></tbody></table><h2 id="Hexo-配置修改"><a href="#Hexo-配置修改" class="headerlink" title="Hexo 配置修改"></a>Hexo 配置修改</h2><blockquote><p>告诉自己为什么要选择 Hexo</p></blockquote><h3 id="知识储备"><a href="#知识储备" class="headerlink" title="知识储备"></a>知识储备</h3><ol><li>勤学勤练 Markdown</li></ol><blockquote><p>本地 + 云端备份数据是一种习惯</p></blockquote><p>Markdown 学习路径 - <a href="https://wsgzao.github.io/post/markdown/">https://wsgzao.github.io/post/markdown/</a></p><ol start="2"><li>使用性感的文本编辑器</li></ol><blockquote><p>工欲善其事必先利其器</p></blockquote><ul><li>Notepad2</li><li>Visual Studio Code</li></ul><h3 id="Hexo-主题"><a href="#Hexo-主题" class="headerlink" title="Hexo 主题"></a>Hexo 主题</h3><blockquote><p>选择主题建议遵循 <code>KISS</code> 原则</p></blockquote><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo Themes</a></p><p><a href="https://github.com/next-theme/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a></p><p><a href="https://github.com/fluid-dev/hexo-theme-fluid" target="_blank" rel="noopener">hexo-theme-fluid</a></p><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ol><li>修改配置文件时注意 <code>YAML</code> 语法，参数 <code>冒号:</code> 后一定要留 <code>空格</code></li><li>中文乱码请修改文件编码格式为 <code>UTF-8</code></li><li><a href="https://hexo.io/zh-cn/docs/migration.html" target="_blank" rel="noopener">如何迁移至 Hexo</a></li></ol><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo 官方中文文档</a></p>]]></content>
    
    <summary type="html">
    
      持续更新Hexo的摸索过程，记录生活的点滴
    
    </summary>
    
      <category term="Hexo" scheme="https://wsgzao.github.io/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Markdown 学习路径</title>
    <link href="https://wsgzao.github.io/post/markdown/"/>
    <id>https://wsgzao.github.io/post/markdown/</id>
    <published>2020-09-05T02:36:01.000Z</published>
    <updated>2020-09-07T02:31:08.461Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://i.v2ex.co/3CAMX9Z2.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Markdown 是一种轻量级的标记语言，流行程度已经得到了 GitHub 和 Stack Overflow 的广泛支持，作为普通人我们也可以轻松上手，结合 Hexo 我们可以十分优雅的分享知识。</p><p>对比 2014 年我写 Markdown 推广文章的时候，目前国内主流的站点基本都开始支持 Markdown 语法，从一开始的简书和 SegmentFault 到后起之秀的知乎和掘金等平台都在鼓励大家积极学习和使用 Markdown，我相信掌握 Markdown 书写习惯一定会对大家有所帮助。</p><blockquote><p>简单易读专注内容，我选 Markdown</p></blockquote><hr><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2020 年 09 月 05 日 - 更新内容<br>2014 年 12 月 10 日 - 撰写初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/markdown/">https://wsgzao.github.io/post/markdown/</a></p><hr><h2 id="学习路径"><a href="#学习路径" class="headerlink" title="学习路径"></a>学习路径</h2><blockquote><p>学 + 不断练习使用就会了</p></blockquote><p><a href="https://sspai.com/post/25137" target="_blank" rel="noopener">认识与入门 Markdown</a></p><p><a href="https://www.jianshu.com/p/q81RER" target="_blank" rel="noopener">献给写作者的 Markdown 新手指南</a></p><p><a href="https://segmentfault.com/markdown" target="_blank" rel="noopener">Markdown 编辑器语法指南</a></p><h2 id="Markdown-在线编辑器"><a href="#Markdown-在线编辑器" class="headerlink" title="Markdown 在线编辑器"></a>Markdown 在线编辑器</h2><p><a href="https://stackedit.io/app#" target="_blank" rel="noopener">StackEdit</a></p><p><a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="noopener">Cmd Markdown 编辑阅读器</a></p>]]></content>
    
    <summary type="html">
    
      在实践中轻轻松松学习Markdown
    
    </summary>
    
      <category term="Hexo" scheme="https://wsgzao.github.io/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>一亩三分地题库 + 新手上路答案</title>
    <link href="https://wsgzao.github.io/post/1point3acres/"/>
    <id>https://wsgzao.github.io/post/1point3acres/</id>
    <published>2020-08-21T08:40:53.000Z</published>
    <updated>2020-08-23T09:24:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>注册一亩三分地之后需要答题完成新手认证，虽然题目不难但想一次通过还是需要花一点时间，我在网上搜索到了相关答案，整理转载下留给需要的同志们参考，一亩三分地题库 + 新手上路答案</p><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2020 年 08 月 21 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/1point3acres/">https://wsgzao.github.io/post/1point3acres/</a></p><h2 id="答题类型"><a href="#答题类型" class="headerlink" title="答题类型"></a>答题类型</h2><ol><li>一亩三分地 新手上路 网站规则 - 满分 5 大米(适用于所有用户)</li><li>一亩三分地 考试中心 满分 95 大米(只适用于 2019 年之后注册的新人)</li><li>一亩三分地 每日答题 题库</li></ol><h2 id="网站规则-满分-5-大米"><a href="#网站规则-满分-5-大米" class="headerlink" title="网站规则 - 满分 5 大米"></a>网站规则 - 满分 5 大米</h2><ol><li><p>一亩三分地发帖可以选择内容用 hide 进行隐藏。隐藏方式：[hide=200]隐藏的内容 [/hide] 下面哪个选项 hi‍‌‌‌‌‌‌‌‍‍‍‌‌‌‍‌‌‌‌‌de 正确。 (1.0 分)<br><strong>A. 两人第一次华山论剑，争的是荣名与 [hide=188]《九阴真经》[/hide]；</strong><br>B. 第二次在桃花岛过招，是为了郭靖与 [hide=188]欧阳克 [\hide]争婚。<br>C. 第三次海上相斗，生死只隔一线，但 (hide=188) 洪七公 (\ hide) 手下尚自容让；<br>D. 现下第四次恶战，[hide188]才是各出全力 [/hide]，再无半点留情。<br>E. 洪七公伸指疾点欧阳锋背心 [hide=188]“凤尾穴”(/hide)，要迫他松手。</p></li><li><p>为什么一亩三分地除了租房广告找室友、学有飞友工友、本地版聚等少数版块之外，绝大多数板块都不允许拉群？ (1.0 分)<br>A. 地里信息是公开的，全部回复每个人都可以看到。而群里的信息，作为新入群的同学是无法看到历史消息的，并且无法查找<br>B. 公开自己的微信，将来可能会被人人肉或者骚扰<br>C. 地里的信息永远存在，有些群很可能不活跃甚至不存在了，里面的讨论也就消失了<br><strong>D. 以上全都理解并接受 </strong></p></li><li><p>在下面哪些板块里留微信号等各种联系方式，事后可以要求版主删除？ (1.0 分)<br>A. 如果发在求职类板块里，可以删除，我的隐私你得尊重啊<br>B. 如果发在留学类板块里，可以删除，毕竟我年少不懂事嘛<br>C. 如果发在非正事、无聊帖子里，可以删除，毕竟没啥营养啊<br><strong>D. 绝大多数板块禁止留微信、拉群，如果你非要发出来，那就永远不删。另外，私下联系建议发站内信。</strong></p></li><li><p>为什么我们不鼓励用谐音或者各种拐弯抹角的说法来指代公司或者学校名称？比如：“湾区某元音开头和结尾公司” (1.0 分)<br>A. 也许有什么顾虑吧<br>B. 这样不好玩<br><strong>C. 写成这样子，别人看不懂，也搜不到。如果别人也这样写，你也看不懂、搜不到。信息没法分享和交流。</strong><br>D. 不知道</p></li><li><p>下面哪个说法是错误的？ (1.0 分)<br>A. 连续超过 14 天不登录，每天扣一个大米，直到大米数 = 100<br><strong>B. 抖包袱版看帖，不会消耗积分 </strong><br>C. 可以消耗积分更改用户名（网站右上角设置 -&gt;个人资料 -&gt;更改用户名）<br>D. 看到干货帖子和回复，给作者加分，不会消耗我的积分<br>E. 每日签到、每日答题都可以拿到积分奖励<br>F. 手机 app 里也可以每日签到，好方便！<br>G. 给地里官方 app 五星好评，可以拿加分奖励: <a href="http://www.1point3acres.com/bbs/thread\-446981\-1\-1.html" target="_blank" rel="noopener">www.1point3acres.com/bbs/thread\-446981\-1\-1.html</a><br>H. 在手工加分的帖子里，多次回复骗取积分，会被系统检测到，积分扣除 + 额外扣分！<br>I. 网站上方导航栏 -&gt; 道具中心，可以兑换匿名卡，把自己的帖子匿名。</p></li></ol><h2 id="网站规则-满分-95-大米"><a href="#网站规则-满分-95-大米" class="headerlink" title="网站规则 - 满分 95 大米"></a>网站规则 - 满分 95 大米</h2><ol><li><p>一亩三分地里有哪些方面的信息？ (5.0 分)<br><strong>A. 美国大学各专业录取信息<br>B. 美国和中国公司面试题目<br>C. 买房买车租‍‌‌‌‌‌‌‌‍‍‍‌‌‌‍‌‌‌‌‌房等生活信息<br>D. 移民签证 H1B 等信息<br>E. 公开课、刷题、做项目<br>F. 八卦我司版：美国公司评价（各公司员工发帖）<br>G. 抖包袱版：各公司工资 offer 的详细数目<br>H. 缘来如此版可以发帖征友<br>I. 职场达人：中美职场和职业发展话题<br>J. TOEFL/GRE 考试信息 </strong></p></li><li><p>一亩三分地有积分限制，请戳这里阅读《攒积分和消耗积分完全指南》然后回答：下面哪些说法正确？ (10.0 分)<br><strong>A. 认真做考卷，很容易拿到满分<br>B. 每日签到（网站右上方），奖励 1 颗大米<br>C. 每日答题（网站右上方），答对了奖励 1 颗大米，答错了消耗 1 颗<br>D. 设置头像，奖励一颗大米（只能获得一次）<br>E. 验证邮箱，奖励一颗大米（只能获得一次）<br>F. 管理员每日选择 2-3 个干货帖子全站置顶，大家会奖励给你大米<br>G. 分享面经、录取信息、工资数目等干货，或者积极参与讨论<br>H. 积极参与论坛各种活动，比如给地里官方 app 五星好评<br>I. 《攒积分和消耗积分完全指南》里有更多获取积分方法的说明<br>J. 积分变更记录在网站右上角设置 -&gt;积分里能找到（2019 年 3 月 2 日之前的部分记录不显示，之后的全显示）</strong></p></li><li><p>一亩三分地发帖可以选择内容进行隐藏。举个例子：<br>黄蓉哭了一会，抽抽噎噎的道：“我听爹爹说过，洪老前辈有一套武功，当真是天下无双、古今独步，甚至全真教的王重阳也忌惮三分，叫做…… 叫做…… 咦，我怎么想不起来啦，明明刚才我还记得的，我想求他教你，这套拳法叫做…… 叫做……”其实她哪里知道，全是信口胡吹。洪七公在树顶上听她苦苦思索，实在忍不住了，喝道：“叫做‘[hide=200]降龙十八掌 [/hide]’！”说着一跃而下。上述段落里，“降龙十八掌”五个字被隐藏，只有积分&gt;=200 分的用户才能看到。<br>隐藏方式：[hide=200]隐藏的内容 [/hide] 注意不要添加多余的空格！第二个 hide 前面的斜线别弄反方向！下面隐藏的内容哪个被 188 分正确隐藏？真相只有一个！ (10.0 分)<br>A. 柯南的名字是 [hide=188]工藤新一 [\hide]<br>B. 柯南的名字是 [hide]工藤新一 [/hide=188]<br><strong>C. 柯南的名字是 [hide=188]工藤新一 [/hide]</strong><br>D. 柯南的名字是 [hide=188]工藤新一 [\ hide]<br>E. 柯南的名字是 [hide=188]工藤新一{\hide}<br>F. 柯南的名字是 (hide=188) 工藤新一(\hide)</p></li><li><p>在论坛发 slack 群、qq 群、微信群等任何站外讨论方式，会如何？ (10.0 分)<br>A. 如果发在本地版聚、租房找室友、飞友学友工友版块，是允许的<br>B. 如果发在求职、面经、申请类板块里，都会被删帖扣分<br>C. 举报这些群，可能得到加分奖励<br><strong>D. 以上都正确 </strong></p></li><li><p>下面哪种情况，管理员会按照你的要求，进行删帖？ (10.0 分)<br>A. 问了问题，得到了答案，然后我过河拆桥，删帖让其他人看不到<br>B. 尽管地里不允许，但是我到处留微信号，然后说隐私暴露要求删帖<br>C. 发帖赚到了积分，看到了有权限设置的内容，然后反悔<br><strong>D. 这些情况全都不删帖！</strong></p></li><li><p>你的一亩三分地账号很宝贵，在别的网站，考完托福你就离开了，申请完了你也不会再去。但是在一亩三分地，拿到录取以后，你找实习要回来，找全职工作要回来，申请 OPT 要回来，等 H1b 签证和绿卡要回来，甚至工作几年后要跳槽你也要回来看求职信息 - 随着地里的壮大，你会经常回来。<br>下面哪些方法可以保护你的账号？ (10.0 分)<br><strong>A. 给账号设置复杂密码，并且只在一亩三分地使用该密码。<br>B. 把地里的邮件放入白名单以免被判定为垃圾邮件而导致收不到密码重设等重要信息（地里从来不发广告）。<br>C. 绑定微信。如果账号有异常，会被系统要求扫码登录，而且扫码登录比输入密码方便。<br>D. 管理好用来注册账号的电子邮箱，如果连邮箱都没了，那就惨了。。。</strong><br>E. 别那么多有的没的，我爱咋地就咋地。</p></li><li><p>下面哪些发帖行为，值得鼓励和倡导？ (10.0 分)<br>A. 随便发就是了，反正有版主和管理员给调整<br><strong>B. 读一下各个版块的置顶信息，了解网站规则。<br>C. 发帖之前，先浏览有哪些版块，帖子要发在对应的板块里。</strong><br>D. 帖子设置回复可见，大家必须回复才能看到，然后一堆人发“顶”<br><strong>E. 帖子标题最好能用一句话概括主要内容，方便大家阅读<br>F. 地里很多帖子有分类设置，方便大家查找，发帖确保分类信息设置合理 </strong><br>G. 很多帖子有权限设置，我积分不够，到处发“看不到啊”、“积分不够啊”，水掉论坛</p></li><li><p>新人积分不够。下面哪些做法正确？ (5.0 分)<br><strong>A. 分享干货、签到答题、参加活动等，争取早日攒够积分。</strong><br>B. 到处发帖抱怨积分不够、看不到，没准会有帮助呢。<br>C. 想各种办法绕开积分限制，比如要求楼主私下把信息发给我<br>D. 注册个小号，相互加分（嘿嘿，地里有后台系统检测哦）</p></li><li><p>下面哪些方式，可以获得积分奖励？ (5.0 分)<br><strong>A. 分享干货，无论是录取信息、面经题目、工资数据，还是各种生活经验。</strong><br>B. 在帖子里给别人加分，告诉对方给我加回来。<br><strong>C. 认真参与网站里的讨论，贡献我的看法和信息 </strong><br>D. 没有分享干货，但是可以缠着别人要积分<br><strong>E. 干货帖子被全站置顶或者公众号推出，至少拿 100 分，很多帖子拿到 200+</strong><br>F. 我有信息可以分享，但是大家来给我加分吧，谁加了分我私下里发给你</p></li><li><p>一亩三分地里可以购买 VIP 通行证，位于网站上方导航栏 -&gt; VIP。关于 VIP，下面哪些说法正确？ (10.0 分)<br><strong>A. VIP 可以瞬间解锁地里有权限的帖子，获得阅读权限<br>B. VIP 下载附件不扣积分，不受权限限制<br>C. VIP 用户可以自由搜索，不扣积分 </strong><br>D. VIP 是“免责金牌”，在地里不受规则约束，可以为所欲为<br><strong>E. VIP 获得的只是阅读帖子权限，网站有的功能仍需积分（可以攒大米或者购买蓝莓）<br>F. VIP 收入用来支付一亩三分地运营和发展的必要花费；我的打赏能支持一亩三分地做的更好 </strong></p></li><li><p>下面哪种行为，在地里会被扣光积分，甚至封号？ (10.0 分)<br><strong>A. 戾气十足、人身攻击<br>B. 种种手段恶意刷分<br>C. 软硬广告或导流吸粉<br>D. 造谣或者发钓鱼贴<br>E. 多人共享账号<br>F. 违反版规，胡乱跨版发帖，到处留邮箱或微信号<br>G. 购买了 VIP 通行证，作为付费用户，违反网站规则。</strong></p></li></ol><h2 id="每日答题题库"><a href="#每日答题题库" class="headerlink" title="每日答题题库"></a>每日答题题库</h2><p>【题目】 公司之间级别对应，如下哪个是错误的？<br>Google T5 = Facebook E5/6<br>Uber Sr II = Lyft T6<br>Amazon L7 = Facebook E6<br>✓ Facebook L6 = Facebook E6</p><p>【题目】一亩三分地发帖可以选择内容用 hide 进行隐藏。隐藏方式：[hide=200]隐藏的内容 [/hide] 下面哪个选项 hide 正确。<br>✓ A. 两人第一次华山论剑，争的是荣名与 [hide=188]《九阴真经》[/hide]；<br>B. 第二次在桃花岛过招，是为了郭靖与 [hide=188]欧阳克 [\hide]争婚。<br>C. 第三次海上相斗，生死只隔一线，但 (hide=188) 洪七公 (\ hide) 手下尚自容让；<br>D. 现下第四次恶战，[hide188]才是各出全力 [/hide]，再无半点留情。<br>E. 洪七公伸指疾点欧阳锋背心 [hide=188]“凤尾穴”(/hide)，要迫他松手。</p><p>【题目】为什么一亩三分地除了租房广告找室友、学有飞友工友、本地版聚等少数版块之外，绝大多数板块都不允许拉群？<br>A. 地里信息是公开的，全部回复每个人都可以看到。而群里的信息，作为新入群的同学是无法看到历史消息的，并且无法查找<br>B. 公开自己的微信，将来可能会被人人肉或者骚扰<br>C. 地里的信息永远存在，有些群很可能不活跃甚至不存在了，里面的讨论也就消失了<br>✓ D. 以上全都理解并接受</p><p>【题目】在下面哪些板块里留微信号等各种联系方式，事后可以要求版主删除？<br>A. 如果发在求职类板块里，可以删除，我的隐私你得尊重啊<br>B. 如果发在留学类板块里，可以删除，毕竟我年少不懂事嘛<br>C. 如果发在非正事、无聊帖子里，可以删除，毕竟没啥营养啊<br>✓ D. 绝大多数板块禁止留微信、拉群，如果你非要发出来，那就永远不删。另外，私下联系建议发站内信。</p><p>【题目】为什么我们不鼓励用谐音或者各种拐弯抹角的说法来指代公司或者学校名称？ 比如：“湾区某元音开头和结尾公司”，你能猜到是哪家吗？<br>A. 也许有什么顾虑吧<br>B. 这样不好玩<br>✓ C. 写成这样子，别人看不懂，也搜不到。如果别人也这样写，你也看不懂、搜不到。信息没法分享和交流。<br>D. 不知道</p><p>【题目】下面哪个说法是错误的？<br>A. 连续超过 14 天不登录，每天扣一个大米，直到大米数 = 100<br>✓ B. 抖包袱版看帖，不会消耗积分<br>C. 可以消耗积分更改用户名（网站右上角设置 -&gt;个人资料 -&gt;更改用户名）<br>D. 看到干货帖子和回复，给作者加分，不会消耗我的积分 E. 每日签到、每日答题都可以拿到积分奖励<br>F. 手机 app 里也可以每日签到，好方便！<br>G. 给地里官方 app 五星好评，可以拿加分奖励: <a href="http://www.1point3acres.com/bbs/thread\-446981\-1\-1.html" target="_blank" rel="noopener">www.1point3acres.com/bbs/thread\-446981\-1\-1.html</a> H. 在手工加分的帖子里，多次回复骗取积分，会被系统检测到，积分扣除 + 额外扣分！<br>I. 网站上方导航栏 -&gt; 道具中心，可以兑换匿名卡，把自己的帖子匿名。</p><p>【题目】 下面哪个情况，不会消耗你的积分？<br>超过 14 天不登录<br>使用论坛搜索<br>下载附件<br>✓ 看到干货帖子和精华回复，给作者加分！</p><p>【题目】 下面哪个州，没有 income tax?<br>✓ Nevada<br>New York<br>Nebraska<br>Massachusetts</p><p>【题目】 下面哪个州，有 state income tax<br>Tennessee<br>Alaska<br>Washington<br>✓ Mississippi</p><p>【题目】 求内推如何作死？<br>一下子叫好多人给内推同一家公司<br>别人回复慢了就抱怨<br>简历上撒谎<br>✓ 这些都会作死</p><p>【题目】 下面哪种方法，可以妥妥拿到积分？<br>上传头像<br>每日签到（需绑定微信）<br>分享干货<br>✓ 这些全都可以</p><p>【题目】 回答别人的私信提问还需要消耗我 5 大米怎么办？<br>✓ 直接在版面回答，这样大家都能看见</p><p>【题目】 下面哪种行为，在地里会被扣光积分，甚至封号？<br>✓ 这些全都会</p><p>【题目】一亩三分地发帖可以用 hide 语法隐藏内容。下面哪个写法正确？<br>✓ 柯南的名字是 [hide=200]工藤新一 [/hide]<br>柯南的名字是 [hide=200]工藤新一 [\hide]<br>柯南的名字是 [hide=200]工藤新一 [hide]<br>柯南的名字是 [hide=200]工藤新一 [/hide=200]</p><p>【题目】 在 Linkedin 上求内推如何作死<br>看也不看对方情况，直接扔简历要求内推，国人必须帮助国人啊<br>写模板内容要求内推，不论男女都叫学姐<br>也不自我介绍，就要求对方介绍公司情况<br>✓ 这些都会作死</p><p>【题目】一亩三分地鼓励如何发面经？<br>遇到有人留邮箱，私下发面经的，点举报<br>积分隐藏 [hide==188]内容 [/hide]<br>✓ 以上都正确</p><p>【题目】 下面哪个大学在华盛顿州？<br>Washington University<br>✓ University of Washington<br>George Washington University<br>Washington College</p><p>【题目】下面哪个大学不在 Virginia/DC 附近<br>✓ Washington and Jefferson College<br>Trinity Washington University<br>George Washington University<br>Washington and Lee University</p><p>【题目】 下面哪个州，对公司友好，所以吸引了美国很多公司注册？<br>加利福尼亚<br>✓ 特拉华<br>佛罗里达<br>纽约</p><p>【题目】 下面哪个州，有 state income tax<br>South Dakota<br>Wyoming<br>✓ North Dakota<br>Tennessee</p><p>【题目】 下面哪个州，没有 state income tax<br>New York<br>New Jersey<br>✓ New Hampshire<br>New Mexico</p><p>【题目】 下面哪个州，没有 state income tax?<br>✓ Florida<br>Georgia<br>Hawaii<br>Idahoda</p><p>【题目】 下面哪个州，没有 state income tax?<br>Alabama<br>✓ Alaska<br>Arizona<br>Arkansas</p><p>【题目】下面哪个州冬天最暖和？<br>Minnesota<br>✓ Oklahoma<br>Michigan<br>Massachusetts</p><p>【题目】下面哪个大学实际上不存在？<br>University of California, San Francisco<br>University of Massachusetts, Dartmouth<br>✓ University of Michigan, Twin City<br>University of Nevada, Las Vegas</p><p>【题目】下面哪所大学所在城市不是波士顿？<br>✓ Boston College<br>Berklee College Of Music<br>Northeastern University<br>Boston University</p><p>【题目】下面哪个说法错误？<br>伊利诺伊大学在芝加哥有校区<br>✓ 芝加哥是美国著名的雨城<br>美国西北大学在芝加哥有校区<br>芝加哥 skydeck 上可以看到四个州</p><p>【题目】 Which company is the largest single✓site employer in the US?<br>Walmart<br>Ford<br>Costco<br>✓ Disney World</p><p>【题目】 下面哪种方法，可以妥妥拿到积分？<br>分享干货<br>上传头像<br>每日签到（需绑定微信）<br>✓ 这些全都可以</p><p>【题目】 下面哪家公司的总部不在西雅图<br>亚马逊<br>阿拉斯加航空公司<br>星巴克<br>✓ 波音</p><p>【题目】 给论坛 ios 或者安卓手机应用留评价如何获取 50 大米？<br>留 5 星评价<br>截屏作为证据<br>上传到第一个大区的”官方开发版“<br>✓ 以上步骤都需要</p><p>【题目】 地里发帖可以隐藏内容。假如要设置 200 积分以上才可以看到，下面哪个语法正确？<br>[hide]想要隐藏的内容 [/hide]<br>[hide=200 ]想要隐藏的内容 [/hide]<br>✓ [hide=200]想要隐藏的内容 [/hide]<br>[hide=200]想要隐藏的内容 [hide]</p><p>【题目】 地里面经数目最多的是哪家公司？<br>Facebook<br>Google<br>✓ Amazon<br>Uber</p><p>【题目】 Negotiate 工资的时候，哪种做法有利于得到更大的包裹？<br>拿地里抖包袱版的工资数字要对方 match<br>直接告诉对方自己目前薪酬，让对方看着良心办<br>开一个天价，谈不拢就散伙<br>✓ 精读地里谈工资宝典，知己知彼，百战不殆</p><p>【题目】 which state is University of Miami located?<br>California<br>Nevada<br>✓ Florida<br>Ohio</p><p>【题目】 下面哪个城市没有 SUNY（纽约州立大学）校区？<br>Albany<br>Buffalo<br>✓ Fulton<br>Stony Brook</p><p>【题目】 下面哪个州里有 Disney World？<br>✓ Florida<br>New York<br>North Carolina<br>Texas</p><p>【题目】 下面哪所大学所在城市不是波士顿？<br>✓ MIT<br>Boston University<br>Northeastern University<br>Emerson College</p><p>【题目】 关于旧金山市中心描述，下面哪个不正确？<br>走路得看着路，很多流浪汉，地上屎尿一不小心会踩上<br>车里一定不要放东西，但即使不放，也可能被砸车玻璃<br>Uber/Airbnb/Pinterest/Twitter 等著名科技公司都在 SOMA 区<br>✓ 旧金山创业公司很多，被称为“硅谷”</p><p>【题目】 一亩三分地是哪年创立的？<br>✓ 2009<br>2011<br>2013<br>2015</p><p>【题目】 下面哪个州在美国西海岸<br>VirginiaNorth<br>DakotaMaine<br>✓ Washington</p><p>【题目】 which state is University of Miami located?<br>Ohio<br>✓ Florida<br>Nevada<br>California</p><p>【题目】 加州大学有多个分校，下面哪个成立时间最短？<br>UC Davis<br>✓ UC Merced<br>UC Riverside<br>UC Santa Cruz</p><p>【题目】 下面哪个专业，不是 STEM，OPT 没法延期？<br>会计学以前不是，现在很多学校 stem 获批<br>数据科学<br>EECS<br>✓ 教育学</p><p>【题目】 哪种选校策略最合理？<br>按照排名高低选，谁高谁就好<br>交给中介选，反正不想操心<br>所有学校都申，蒙中哪个算哪个<br>✓ 根据自己下一步职业和学业目标，参考地里数据和成功率，认真斟酌</p><p>【题目】 一亩三分地是谁创立的？<br>✓ Warald<br>俞敏洪<br>李大辉<br>徐小平</p><p>【题目】 下面几个州，哪个离美国首都最远？<br>Maryland<br>Delaware<br>✓ North Carolina<br>Virginia</p><p>【题目】 地里数据科学类职位面经放在在什么版最合理？<br>数据科学版<br>美国面经版数据科学分类<br>✓ 数科面经版<br>找工求职版</p><p>【题目】 下面哪个公司总部在圣地亚哥？<br>✓ Qualcomm<br>AMD<br>Nvidia<br>Netflix</p><p>【题目】 下面哪种情况，管理员会按照你的要求，进行删帖？<br>问了问题，得到了答案，然后我过河拆桥，删帖让其他人看不到<br>发帖赚到了积分，看到了有权限设置的内容，然后反悔<br>尽管地里不允许，但是我到处留微信号，然后说隐私暴露要求删帖<br>✓ 这些情况全都不删帖！</p><p>【题目】 Miami University 在哪个城市<br>Miami, Florida<br>Las Vegas, Nevada<br>✓ Oxford, Ohio<br>Los Angeles, California</p><p>【题目】 想找室友或者当房东，帖子发在哪里？<br>✓ 租房广告 | 找室友版<br>房地产版<br>生活版<br>面经版</p><p>【题目】 在论坛发 slack 群，qq 群，微信群，任何站外讨论方式，会如何？<br>如果发在求职面经大区，申请大区，都会被删帖扣分<br>举报这些群，可能得到加分奖励<br>✓ 以上都正确<br>如果发在版聚，或者本地版块，是允许的</p><p>【题目】 下面哪类版块，可以拉群，而且不会被警告扣分？<br>录取结果汇报<br>求职、面经<br>内推<br>✓ 学友工友、找室友或者版聚本地</p><p>【题目】下面哪个说法错误？<br>雪城大学尽管在纽约州，但是离纽约城很远！<br>✓ 中国驻纽约领事馆位于法拉盛中国城，周围全是好吃的！<br>哥伦比亚大学离纽约中央公园很近<br>纽约州立大学石溪分校学费很便宜</p><p>【题目】 下面哪个学术会议不是机器学习领域的？<br>CVPR<br>ICML<br>SIGKDD<br>✓ ICSE</p><p>【题目】 下面哪个童话故事不是安徒生写的<br>✓ 尼尔斯骑鹅旅行记<br>冰雪女王<br>卖火柴的小女孩<br>国王的新装</p><p>【题目】 下面哪个作家是英国人？<br>✓Charles Dickens<br>Ernest Hemingway<br>Victor Hugo<br>Alexander Pushkin</p><p>【题目】 income tax on wages<br>✓North Dakota<br>South Dakota<br>Wyoming<br>Teness…</p><p>【题目】 下面哪个 machine learning 的模型不是 supervised<br>Logistic regression<br>✓Clustering<br>SVM<br>Decision Tree</p><p>【题目】 Apollo 11 是哪一年登月的？<br>1969</p><p>【题目】 下面哪个公司的 streaming service 不是会员 subscription 付费模式运营的？<br>✓tubi</p><p>【题目】 著名篮球运动员姚明效力的 NBA 球队是休斯敦火箭队。取名 “ 火箭队” 是因为休斯敦是美国著名的?<br>钢城<br>汽车城<br>✓ 宇航工业城<br>电影城</p><p>【题目】 音乐家贝多芬出生于哪国？<br>✓ 德国<br>法国<br>意大利<br>英国</p><p>【题目】 下面哪个 Ivy League，离东海岸最远？<br>Brown<br>Dartmouth<br>Princeton<br>✓ Cornell</p><p>【题目】 美国哪个州没有夏令时？<br>南达科他州<br>爱荷华州<br>✓亚利桑那州<br>阿肯色州</p><p>【题目】 下面哪部作品是喜剧？<br>麦克白<br>李尔王<br>✓仲夏夜之梦<br>哈姆雷特</p><p>【题目】 下面哪个公司总部不在湾区？<br>google<br>✓snapchat<br>facebook<br>Apple</p><p>【题目】 下面哪所纽约高校坐落于中央公园附近？<br>Fordham University<br>New York University<br>New York Institute of Technology<br>✓Columbia University</p><p><a href="https://chrome.google.com/webstore/detail/%E4%B8%80%E4%BA%A9%E4%B8%89%E5%88%86%E5%9C%B0%E6%AF%8F%E6%97%A5%E7%AD%94%E9%A2%98%E5%8A%A9%E6%89%8B/dggkjnoiinakdepkighcnnpjcjldplob/related?hl=zh-CN" target="_blank" rel="noopener">一亩三分地每日答题助手</a></p>]]></content>
    
    <summary type="html">
    
      一亩三分地题库+新手上路答案
    
    </summary>
    
      <category term="生活 | Life" scheme="https://wsgzao.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
  </entry>
  
  <entry>
    <title>MacBook macOS 从小白到入门</title>
    <link href="https://wsgzao.github.io/post/macbook/"/>
    <id>https://wsgzao.github.io/post/macbook/</id>
    <published>2020-08-18T08:59:49.000Z</published>
    <updated>2020-09-07T15:41:55.549Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://i.v2ex.co/y2JB0IAD.png" alt=""></p><p>这里做下 MacBook macOS 从小白到入门的持续更新记录</p><blockquote><p>MacBook macOS 从小白到入门</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 08 月 18 日 - 增加 uTools/macOS 小助手 / 腾讯柠檬清理 / 超级右键 iRightMouse / 射手影音 / Apifox<br>2020 年 03 月 10 日 - 增加 eZip/PicGo/GifCapture/iShot<br>2019 年 11 月 21 日 - 增加 macOS 生产力工具链推荐<br>2019 年 03 月 16 日 - 更新 macOS vim 语法高亮的设置方法<br>2019 年 02 月 28 日 - 更新 macOS 开启关闭 SIP<br>2019 年 01 月 24 日 - 增加开启 HiDPI 和解决黑屏问题<br>2018 年 10 月 19 日 - 更新升级 macOS Mojave 后的各种小问题解决方法<br>2018 年 07 月 25 日 - 补充细节<br>2018 年 07 月 05 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/macbook/">https://wsgzao.github.io/post/macbook/</a></p><p><strong> 扩展阅读 </strong></p><p>Awesome Mac - <a href="http://wangchujiang.com/awesome-mac/index.zh.html" target="_blank" rel="noopener">http://wangchujiang.com/awesome-mac/index.zh.html</a><br>BestApp - <a href="https://github.com/hzlzh/Best-App" target="_blank" rel="noopener">https://github.com/hzlzh/Best-App</a><br><a href="https://github.com/Louiszhai/tool" target="_blank" rel="noopener">开发效率提升：Mac 生产力工具链推荐</a></p><hr><h2 id="MacBook-Pro-Essentials"><a href="#MacBook-Pro-Essentials" class="headerlink" title="MacBook Pro Essentials"></a>MacBook Pro Essentials</h2><blockquote><p>苹果官方编写的 macOS 使用手册，首次打开 Books 时就会出现，非常推荐大家阅读</p></blockquote><p><a href="https://support.apple.com/en-sg/guide/macbook-pro/welcome/mac" target="_blank" rel="noopener">MacBook Pro Essentials</a></p><p><a href="https://support.apple.com/zh-cn/guide/macbook-pro/" target="_blank" rel="noopener">macOS 使用手册</a></p><h2 id="System-Preferences"><a href="#System-Preferences" class="headerlink" title="System Preferences"></a>System Preferences</h2><blockquote><p>在任何的操作系统中，首先你需要做一件事就是更新系统，点击窗口左上角的  &gt; 关于本机 &gt; 软件更新 。此外，如果这是一部新的电脑，你还需要到系统设置进行一些适当调整。如何调整，取决于个人喜好。</p></blockquote><h3 id="触控板"><a href="#触控板" class="headerlink" title="触控板"></a>触控板</h3><p>系统设置 &gt; 触控板</p><p>光标与点击</p><ul><li>轻拍来点按</li><li>辅助点按</li><li>查找</li><li>三指拖移</li></ul><p>滚动缩放</p><ul><li>默认全选</li></ul><p>更多手势</p><ul><li>默认全选</li></ul><h3 id="Dock"><a href="#Dock" class="headerlink" title="Dock"></a>Dock</h3><p>置于屏幕上的位置：左边<br>设置 Dock 图标更小（大小随个人喜好）</p><ul><li>自动显示和隐藏 Dock</li></ul><h3 id="Finder"><a href="#Finder" class="headerlink" title="Finder"></a>Finder</h3><p>Finder &gt; 显示</p><ul><li>显示标签页栏</li><li>显示路径栏</li><li>显示状态栏</li><li>自定工具栏 &gt; 去除所有按钮，仅剩搜索栏</li></ul><p>Finder &gt; 偏好设置</p><p>通用</p><ul><li>开启新 Finder 窗口时打开：HOME「用户名」目录</li></ul><p>边栏</p><ul><li>添加 HOME「用户名」目录 和 创建代码文件目录</li><li>将 共享的(shared) 和 标记(tags) 目录去掉</li></ul><h3 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h3><ul><li>去掉蓝牙等无需经常使用的图标</li><li>将电池显示设置为百分比</li></ul><h3 id="Spotlight"><a href="#Spotlight" class="headerlink" title="Spotlight"></a>Spotlight</h3><ul><li>去掉字体和书签与历史记录等不需要的内容</li><li>设置合适的快捷键</li></ul><h3 id="互联网帐户"><a href="#互联网帐户" class="headerlink" title="互联网帐户"></a>互联网帐户</h3><ul><li>添加 iCloud 用户，同步日历，联系人和 Find my mac 等等</li></ul><h3 id="English"><a href="#English" class="headerlink" title="English"></a>English</h3><p>Trackpad</p><ul><li>Tap to click</li></ul><p>Accessibility -&gt; Mouse &amp; Trackpad -&gt; Trackpad Options</p><ul><li>Enable dragging | three finger drag</li></ul><p>Language &amp; Region</p><ul><li>Time format | 24-Hour Time</li><li>click add button | Chinese, Simplified</li></ul><p>Language &amp; Region -&gt; Keyboard Preferences -&gt; Shortcuts -&gt; Input Sources</p><ul><li>Select the previous input source</li></ul><p>Display -&gt; Arrangement</p><ul><li>Drag the graphics and just make what you want</li><li>if the display rotates 90 degrees then change Rotation to 90° or 270° and click confirm button to save</li></ul><p>Extensions -&gt; Touch Bar</p><ul><li>Customise </li></ul><p>Sound -&gt; Output</p><ul><li>Show volume in menu bar</li></ul><h2 id="Mac-键盘快捷键"><a href="#Mac-键盘快捷键" class="headerlink" title="Mac 键盘快捷键"></a>Mac 键盘快捷键</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191122174620.png" alt=""></p><table><thead><tr><th style="text-align:center">Symbol</th><th style="text-align:center">Key</th></tr></thead><tbody><tr><td style="text-align:center">&#8984;</td><td style="text-align:center">Command Key</td></tr><tr><td style="text-align:center">&#8963;</td><td style="text-align:center">Control Key</td></tr><tr><td style="text-align:center">&#8997;</td><td style="text-align:center">Option Key</td></tr><tr><td style="text-align:center">&#8679;</td><td style="text-align:center">Shift Key</td></tr></tbody></table><blockquote><p>我自己常用的快捷键</p></blockquote><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>Command(⌘)-C</td><td>复制</td></tr><tr><td>Command(⌘)-V</td><td>粘贴</td></tr><tr><td>Command(⌘)-Z</td><td>撤销</td></tr><tr><td>Command(⌘)-Option-V</td><td>剪切粘贴</td></tr><tr><td>Command(⌘)-A</td><td>全选</td></tr><tr><td>Command(⌘)-F</td><td>查找</td></tr><tr><td>Command(⌘)-S</td><td>保存</td></tr><tr><td>Command(⌘)-W</td><td>关闭当前窗口</td></tr><tr><td>Command(⌘)- 空格键</td><td>聚焦</td></tr><tr><td>Command(⌘)- 方向左键</td><td>后退</td></tr><tr><td>Command(⌘)- 方向右键</td><td>前进</td></tr><tr><td>Control-A</td><td>移至行或段落的开头</td></tr><tr><td>Control-E</td><td>移至行或段落的末尾</td></tr><tr><td>Control - 空格键</td><td>切换输入法（需要手动设置）</td></tr><tr><td>Control-Command-Q</td><td>系统自带锁屏快捷键</td></tr><tr><td>Option-Command-C</td><td>复制文件路径，当然也可以直接拖拽到命令行</td></tr></tbody></table><p><a href="https://support.apple.com/zh-cn/HT201236" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201236</a></p><h2 id="Mac-Soft"><a href="#Mac-Soft" class="headerlink" title="Mac Soft"></a>Mac Soft</h2><p>Homebrew - Mac 下必备的包管理工具<br><a href="https://brew.sh/" target="_blank" rel="noopener">https://brew.sh/</a></p><p>Alfred - Mac 下被无数人安利的效率工具，虽然我觉得 Spotlight 暂时够用了<br><a href="https://www.alfredapp.com/" target="_blank" rel="noopener">https://www.alfredapp.com/</a></p><p>uTools - 国人开发基于插件式的轻量级工具集软件<br><a href="https://u.tools/" target="_blank" rel="noopener">https://u.tools/</a></p><p>macOS 小助手(mac 常用命令集合)<br><a href="https://macwk.com/soft/macos-assistant-macwk" target="_blank" rel="noopener">https://macwk.com/soft/macos-assistant-macwk</a></p><p>腾讯柠檬清理 - 腾讯官方出品的 macOS 清理工具，代替旧版 Mac 管家<br><a href="https://lemon.qq.com/" target="_blank" rel="noopener">https://lemon.qq.com/</a></p><p>Mounty for NTFS - 免费的 NTFS 支持软件<br><a href="http://enjoygineering.com/mounty/" target="_blank" rel="noopener">http://enjoygineering.com/mounty/</a><br><a href="https://www.seagate.com/sg/en/support/software/paragon/#downloads" target="_blank" rel="noopener">Seagate</a></p><p>Sougou Input - 陪伴大家多年的搜狗输入法<br><a href="https://pinyin.sogou.com/mac/" target="_blank" rel="noopener">https://pinyin.sogou.com/mac/</a></p><p>Visual Studio Code - 代替 JetBrains 重型武器<br><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p><p>Youdao Dict - 网易开发的老牌翻译工具<br><a href="http://cidian.youdao.com/index-mac.html" target="_blank" rel="noopener">http://cidian.youdao.com/index-mac.html</a></p><p>Adobe Reader - Adobe 官方免费的 PDF 阅读工具<br><a href="https://get.adobe.com/reader/" target="_blank" rel="noopener">https://get.adobe.com/reader/</a></p><p>Clearview - 支持 PDF, EPUB, CHM, MOBI 的免费阅读器<br><a href="https://itunes.apple.com/app/clearview/id557090104?mt=12&amp;ls=1" target="_blank" rel="noopener">https://itunes.apple.com/app/clearview/id557090104?mt=12&amp;ls=1</a></p><p>Evernote - 轻量级的在线笔记类应用内<br><a href="https://evernote.com/" target="_blank" rel="noopener">https://evernote.com/</a></p><p>Dropbox - 最佳的实时同步工具之一<br><a href="https://www.dropbox.com/" target="_blank" rel="noopener">https://www.dropbox.com/</a></p><p>eZip - 国人编写的转为 macOS 而设计的压缩软件，代替 Keka<br><a href="https://ezip.awehunt.com/" target="_blank" rel="noopener">https://ezip.awehunt.com/</a></p><p>Mac 迅雷 - 支持协议多广告也多，FOLX、Free Download Manager、qBittorrent 都可以作为备选方案<br><a href="http://mac.xunlei.com/" target="_blank" rel="noopener">http://mac.xunlei.com/</a></p><p>百度网盘 - 国内的网盘共享基本只剩下百度一家独大了，有时候迅雷离线无法下载可以尝试<br><a href="https://pan.baidu.com/" target="_blank" rel="noopener">https://pan.baidu.com/</a></p><p>IINA - 国人编写的开源视频播放器，备选重新复活的射手影音<br><a href="https://lhc70000.github.io/iina/" target="_blank" rel="noopener">https://lhc70000.github.io/iina/</a></p><p>射手影音 - 2016 年后时隔 3 年打磨的产品，虽然我认为已经有 IINA 这样更好的开源播放器<br><a href="https://splayer.org/" target="_blank" rel="noopener">https://splayer.org/</a></p><p>PicGo - 国人开发的开源图片上传工具，我 Blog 中使用的图片就是基于 GitHub 的图床<br><a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo</a></p><p>GifCapture - 开源的 GIF 录制工具<br><a href="https://github.com/onmyway133/GifCapture" target="_blank" rel="noopener">https://github.com/onmyway133/GifCapture</a></p><p>iShot - 或许是最好的截图软件，超越了 Snipaste 和 Xnip<br><a href="https://apps.apple.com/cn/app/ishot-%E6%88%AA%E5%9B%BE-%E9%95%BF%E6%88%AA%E5%9B%BE-%E6%A0%87%E6%B3%A8%E5%B7%A5%E5%85%B7/id1485844094?mt=12" target="_blank" rel="noopener">https://apps.apple.com/cn/app/ishot-%E6%88%AA%E5%9B%BE-%E9%95%BF%E6%88%AA%E5%9B%BE-%E6%A0%87%E6%B3%A8%E5%B7%A5%E5%85%B7/id1485844094?mt=12</a></p><p>超级右键 iRightMouse - 通过增加右键功能极大地方便 UI 界面下的各种操作<br><a href="https://apps.apple.com/cn/app/irightmouse-%E8%B6%85%E7%BA%A7%E5%8F%B3%E9%94%AE/id1497428978?mt=12" target="_blank" rel="noopener">https://apps.apple.com/cn/app/irightmouse-%E8%B6%85%E7%BA%A7%E5%8F%B3%E9%94%AE/id1497428978?mt=12</a></p><p>FileZilla - 免费开源的 FTP/SFTP 应用<br><a href="https://filezilla-project.org/download.php?type=client" target="_blank" rel="noopener">https://filezilla-project.org/download.php?type=client</a></p><p>Clipy - 记录多条粘贴板小工具<br><a href="https://github.com/Clipy/Clipy" target="_blank" rel="noopener">https://github.com/Clipy/Clipy</a></p><p>rectangle - 代替 Spectacle 快速调整程序窗口位置的效率工具<br><a href="https://github.com/rxhanson/Rectangle" target="_blank" rel="noopener">https://github.com/rxhanson/Rectangle</a></p><p>Fliqlo - 极简的时钟屏保<br><a href="https://fliqlo.com/" target="_blank" rel="noopener">https://fliqlo.com/</a></p><p>Sourcetree - 图形化 Git 管理工具<br><a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener">https://www.sourcetreeapp.com/</a></p><p>Microsoft Remote Desktop - Mac 下的微软 RDP 远程桌面登录工具<br><a href="https://itunes.apple.com/us/app/microsoft-remote-desktop-10/id1295203466?mt=12" target="_blank" rel="noopener">https://itunes.apple.com/us/app/microsoft-remote-desktop-10/id1295203466?mt=12</a></p><p>PostMan - 免费强大的 HTTP 调试工具<br><a href="https://www.getpostman.com/" target="_blank" rel="noopener">https://www.getpostman.com/</a></p><p>Apifox = Postman + Swagger + Mock 可能是比 Postman 更好用的接口管理平台<br><a href="https://www.apifox.cn/" target="_blank" rel="noopener">https://www.apifox.cn/</a></p><p>网易 MuMu - Android 模拟器<br><a href="https://mumu.163.com/" target="_blank" rel="noopener">https://mumu.163.com/</a></p><p>VirtualBox - 免费的虚拟机工具，付费类的产品包括 VMware Fusion 和 Parallels<br><a href="http://www.oracle.com/technetwork/server-storage/virtualbox/downloads/index.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/server-storage/virtualbox/downloads/index.html</a></p><p>VMware OS Optimization Tool - VMware 开发的 Windows 虚拟机优化工具<br><a href="https://labs.vmware.com/flings/vmware-os-optimization-tool" target="_blank" rel="noopener">https://labs.vmware.com/flings/vmware-os-optimization-tool</a></p><p>Docker Desktop - 如果说之前人人都要懂一点 VM 虚拟机，那么现在就是人人都应该了解一点 Docker 容器<br><a href="https://www.docker.com/products/docker-desktop" target="_blank" rel="noopener">https://www.docker.com/products/docker-desktop</a></p><h3 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h3><p><a href="https://docs.brew.sh/Installation" target="_blank" rel="noopener">https://docs.brew.sh/Installation</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install xcode command line tools</span></span><br><span class="line">xcode-select --install</span><br><span class="line"></span><br><span class="line"><span class="comment"># install homebrew</span></span><br><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># install packages</span></span><br><span class="line">brew tap dteoh/sqa</span><br><span class="line">brew install zsh</span><br><span class="line">brew install wget</span><br><span class="line">brew install git</span><br><span class="line"><span class="comment"># default install is python3 now, if you need python2 just run `brew install python2`</span></span><br><span class="line">brew install python</span><br></pre></td></tr></table></figure><h3 id="iTerm2-zsh-Oh-My-Zsh"><a href="#iTerm2-zsh-Oh-My-Zsh" class="headerlink" title="iTerm2 + zsh + Oh My Zsh"></a>iTerm2 + zsh + Oh My Zsh</h3><p>iTerm2<br><a href="https://www.iterm2.com/" target="_blank" rel="noopener">https://www.iterm2.com/</a></p><p>Oh My Zsh<br><a href="http://ohmyz.sh/" target="_blank" rel="noopener">http://ohmyz.sh/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install latest zsh zsh-syntax-highlighting</span></span><br><span class="line">brew install zsh zsh-syntax-highlighting</span><br><span class="line"><span class="comment"># 修改默认 shell，在 /etc/shells 文件中加入如下一行</span></span><br><span class="line">vi /etc/shells</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/zsh</span><br><span class="line"><span class="comment"># 然后运行命令切换 shell</span></span><br><span class="line">chsh -s /usr/<span class="built_in">local</span>/bin/zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># install oh-my-zsh</span></span><br><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改主题为 agnoster，增加一行 zsh-syntax-highlighting</span></span><br><span class="line">vi ~/.zshrc</span><br><span class="line"></span><br><span class="line">ZSH_THEME=<span class="string">"agnoster"</span></span><br><span class="line"><span class="built_in">source</span> /usr/<span class="built_in">local</span>/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可选增加 visual studio code 命令行 code 支持 zsh</span></span><br><span class="line"><span class="keyword">function</span> code &#123;</span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$#</span> = 0 ]]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        open -a <span class="string">"Visual Studio Code"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">local</span> argPath=<span class="string">"<span class="variable">$1</span>"</span></span><br><span class="line">        [[ <span class="variable">$1</span> = /* ]] &amp;&amp; argPath=<span class="string">"<span class="variable">$1</span>"</span> || argPath=<span class="string">"<span class="variable">$PWD</span>/<span class="variable">$&#123;1#./&#125;</span>"</span></span><br><span class="line">        open -a <span class="string">"Visual Studio Code"</span> <span class="string">"<span class="variable">$argPath</span>"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决 Too many files open error</span></span><br><span class="line"><span class="built_in">ulimit</span> -n 10000</span><br><span class="line"><span class="built_in">ulimit</span> -u 2048</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新环境变量</span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 powerline 字体</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git</span><br><span class="line"><span class="built_in">cd</span> fonts</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><blockquote><p>配置 iTerm2 主题，主题可以从 iterm2colorschemes 下载</p></blockquote><p><a href="https://iterm2colorschemes.com/" target="_blank" rel="noopener">https://iterm2colorschemes.com/</a></p><ol><li>Download iTerm2 color you like</li><li>Open iTerm2 that we already downloaded at the first section</li><li>Go to iTerm2 &gt; Preferences &gt; Profiles &gt; Colors Tab</li><li>Click Color Presets at the bottom right</li><li>Click Import</li><li>Select the *.itermcolors file</li><li>Select the * from Load Presets</li></ol><p>在 Keys -&gt; Hotkey 中设置 <code>command + i</code> 快速显示和隐藏 iTerm<br>在 Profiles -&gt; Default -&gt; Colors -&gt; Load Presets 导入主题，作为默认颜色，我的主题是 <code>3024 Night</code><br>在 Profiles -&gt; Text -&gt; Change Font 调整字体 / 大小 / 颜色等，我的字体是 <code>18pt Ubuntu Mono derivative Powerline</code></p><p>如果 VScode 打开终端 iterm2 乱码可以打开设置搜索 font 修改为以下参数即可解决<br>Editor: Font Family<br>Meslo LG M for Powerline,Menlo, Monaco, ‘Courier New’, monospace</p><p>macOS 使用笔记：终端配置 - <a href="http://lizhiqiang.me/mac_terminal/" target="_blank" rel="noopener">http://lizhiqiang.me/mac_terminal/</a><br>打造 Mac 下高颜值好用的终端环境 - <a href="https://blog.biezhi.me/2018/11/build-a-beautiful-mac-terminal-environment.html" target="_blank" rel="noopener">https://blog.biezhi.me/2018/11/build-a-beautiful-mac-terminal-environment.html</a></p><blockquote><p>macOS vim 语法高亮的设置方法</p></blockquote><p>打开 terminal 复制 /usr/share/vim/vimrc 到家目录下并重命名为 “.vimrc”, 然后编辑该文件，增加以下几行：</p><p>VimConfig - <a href="https://vimconfig.com/" target="_blank" rel="noopener">https://vimconfig.com/</a><br>My .vimrc - <a href="https://chrisyeh96.github.io/2017/12/18/vimrc.html" target="_blank" rel="noopener">https://chrisyeh96.github.io/2017/12/18/vimrc.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/vim/vimrc ~/.vimrc</span><br><span class="line"><span class="built_in">set</span> ai                  <span class="string">"auto indenting</span></span><br><span class="line"><span class="string">set ruler"</span> show the cursor position</span><br><span class="line"><span class="built_in">set</span> hlsearch            <span class="string">"highlight the last searched term</span></span><br><span class="line"><span class="string">set history=1000"</span> keep 1000 lines of <span class="built_in">history</span></span><br><span class="line">syntax on               <span class="string">"syntax highlighting</span></span><br><span class="line"><span class="string">filetype plugin on"</span> use the file <span class="built_in">type</span> plugins</span><br></pre></td></tr></table></figure><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><h3 id="iTerm2-常见问题"><a href="#iTerm2-常见问题" class="headerlink" title="iTerm2 常见问题"></a>iTerm2 常见问题</h3><ol><li>iTerm2 默认使用 dash 改用 zsh 解决方法：<code>chsh -s /bin/zsh</code></li><li>iTerm2 zsh 切换回原来的 dash：<code>chsh -s /bin/bash</code></li><li>卸载 <code>oh my zsh</code>，在命令行输入：<code>uninstall_oh_my_zsh</code></li><li>路径前缀的 XX@XX 太长，缩短问题：</li></ol><p>编辑 <code>~/.oh-my-zsh/themes/agnoster.zsh-theme</code> 主体文件，将里面的 <code>build_prompt</code> 下的 <code>prompt_context</code> 字段在前面加 <code>#</code> 注释掉即可</p><h3 id="升级-macOS-Mojave-新版卡顿黑屏和字体发虚解决方案"><a href="#升级-macOS-Mojave-新版卡顿黑屏和字体发虚解决方案" class="headerlink" title="升级 macOS Mojave 新版卡顿黑屏和字体发虚解决方案"></a>升级 macOS Mojave 新版卡顿黑屏和字体发虚解决方案</h3><blockquote><p>输入文字卡顿</p></blockquote><p>如果你的 Mac 已经更新至 macOS Mojave，在输入文字时经常卡顿，频繁出现小风车，那很有可能是搜狗输入法造成的，只需将它升级至最新的 4.8.0 版本，即可完美解决。</p><blockquote><p>字体发虚</p></blockquote><p>升级 macOS Mojave 新系统后，苹果默认关闭了子像素抗锯齿，导致字体变细锯齿增多。<br>解决字体渲染过细，打开终端，输入：</p><pre><code>defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO</code></pre><p>重启应用比如 VS Code 后即可看到效果</p><blockquote><p>开启 HiDPI</p></blockquote><p>如果外接显示器字体模糊，可以使用 Scale Resolutions<br>Display Override PropertyList File Parser and Generator with HiDPI support</p><p><a href="https://comsysto.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/" target="_blank" rel="noopener">https://comsysto.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/</a></p><p>Enable HiDPI on OS X - <a href="https://github.com/syscl/Enable-HiDPI-OSX" target="_blank" rel="noopener">https://github.com/syscl/Enable-HiDPI-OSX</a></p><blockquote><p>解决唤醒时黑屏只看见鼠标的问题</p></blockquote><p>先关机，然后开机快速同时点击 Command + S 按键进入 single-user 单用户模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/sbin/fsck -fy</span><br><span class="line">/sbin/mount -uw /</span><br><span class="line">rm -f /Library/Preferences/com.apple.loginwindow.plist</span><br><span class="line">rm -f /var/db/.AppleUpgrade</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="解决-Command-Q-经常误按"><a href="#解决-Command-Q-经常误按" class="headerlink" title="解决 Command+Q 经常误按"></a>解决 Command+Q 经常误按</h3><p>Slow Quit Apps</p><p>A macOS app that adds a global delay of 1 second to the Cmd-Q shortcut. In other words, you have to hold down Cmd-Q for 1 second before an application will quit.</p><p>When the delay is active, an overlay is drawn at the center of the screen.</p><p><a href="https://github.com/dteoh/SlowQuitApps" target="_blank" rel="noopener">https://github.com/dteoh/SlowQuitApps</a></p><p>brew cask install slowquitapps</p><p>运行程序按照提示授权后重启应用并设置开机自启动即可享受 1s 延迟关闭提醒，如果觉得时间不够长可以自己设定</p><h3 id="提示应用程序被破坏无法打开"><a href="#提示应用程序被破坏无法打开" class="headerlink" title="提示应用程序被破坏无法打开"></a>提示应用程序被破坏无法打开</h3><blockquote><p>SOLVED: “Application” is damaged and can’t be opened in macOS Sierra</p></blockquote><pre><code>sudo spctl --master-disable</code></pre><p>输入密码重新打开 System Preferences &gt; Security &amp; Privacy &gt; General 即可看到之前隐藏的“Anywhere”<br><a href="https://www.santoshsrinivas.com/disable-gatekeeper-in-macos-sierra/" target="_blank" rel="noopener">https://www.santoshsrinivas.com/disable-gatekeeper-in-macos-sierra/</a></p><blockquote><p>macOS High Seirra 提示 “已损坏，打不开，您应该将它移至垃圾篓”</p></blockquote><p>这是因为在系统偏好设置的 “安全性与隐私” 里面的 “允许从以下位置下载的应用” 没有选中“任何来源”，解决方法如下：</p><ol><li>打开终端，然后输入以下命令：sudo spctl –master-disable</li><li>然后回车，输入系统密码并回车（这里输入密码不会显示，输完密码直接回车即可），如果没有提示即操作成功。</li><li>打开系统偏好设置的 “安全性与隐私”，查看“允许从以下位置下载的应用” 是否选中的是“任何来源”，如果选中说明操作成功。这时再打开软件安装就没有已损坏的提示的了。</li></ol><h3 id="macOS-开启关闭-SIP"><a href="#macOS-开启关闭-SIP" class="headerlink" title="macOS 开启关闭 SIP"></a>macOS 开启关闭 SIP</h3><p>S1. 查看 SIP 状态<br>在终端中输入 csrutil status，就可以看到是 enabled 还是 disabled。</p><p>S2. 关闭 SIP</p><ol><li>重启 MAC，按住 cmd+R 直到屏幕上出现苹果的标志和进度条，进入 Recovery 模式；</li><li>在屏幕最上方的工具栏找到实用工具（左数第 3 个），打开终端，输入：csrutil disable；</li><li>关掉终端，重启 mac；</li><li>重启以后可以在终端中查看状态确认。</li></ol><p>S3. 开启 SIP<br>与关闭的步骤类似，只是在 S2 中输入 csrutil enable 即可。</p><h3 id="更改-Apple-ID-国家或地区"><a href="#更改-Apple-ID-国家或地区" class="headerlink" title="更改 Apple ID 国家或地区"></a>更改 Apple ID 国家或地区</h3><blockquote><p>区域在国内即使身在国外也看不到你需要的很多东东，建议修改</p></blockquote><p><a href="https://support.apple.com/zh-cn/ht201389" target="_blank" rel="noopener">https://support.apple.com/zh-cn/ht201389</a></p><h3 id="USB-Type-C-耳机"><a href="#USB-Type-C-耳机" class="headerlink" title="USB Type-C 耳机"></a>USB Type-C 耳机</h3><ol><li>插入耳机至任意 USB Type-C 接口</li><li>System Preferences -&gt; Sound -&gt; Output -&gt; 选择识别到的耳机设备即可</li></ol><h3 id="Macbook-外置键盘如何更改设置"><a href="#Macbook-外置键盘如何更改设置" class="headerlink" title="Macbook 外置键盘如何更改设置"></a>Macbook 外置键盘如何更改设置</h3><p>option 改成 command（win 版键盘下的四个方块图标按键）<br>command 改成 option</p><p><a href="https://jingyan.baidu.com/article/363872ec2185346e4aa16f61.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/363872ec2185346e4aa16f61.html</a></p><h3 id="配置从命令提示行启动-vscode"><a href="#配置从命令提示行启动-vscode" class="headerlink" title="配置从命令提示行启动 vscode"></a>配置从命令提示行启动 vscode</h3><p>安装 Visual Studio Code，打开命令面板（按 F1 或 command + shift + p）输入 Shell 命令找到 Shell 命令: 在 PATH 中安装 “code” 命令。命令执行完成之后，重启终端工具使新的 $PATH 可用。现在，您可以简单地在终端中任意文件夹下输入‘code .’来编辑该文件夹下的文件了。</p><h3 id="Git-Ignore"><a href="#Git-Ignore" class="headerlink" title="Git Ignore"></a>Git Ignore</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个新文件 ~/.gitignore ，并将以下内容添加进去，这样全部 git 仓库将会忽略以下内容所提及的文件。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Folder view configuration files</span></span><br><span class="line">.DS_Store</span><br><span class="line">Desktop.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># Thumbnail cache files</span></span><br><span class="line">._*</span><br><span class="line">Thumbs.db</span><br><span class="line"></span><br><span class="line"><span class="comment"># Files that might appear on external disks</span></span><br><span class="line">.Spotlight-V100</span><br><span class="line">.Trashes</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compiled Python files</span></span><br><span class="line">*.pyc</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compiled C++ files</span></span><br><span class="line">*.out</span><br><span class="line"></span><br><span class="line"><span class="comment"># Application specific files</span></span><br><span class="line">venv</span><br><span class="line">node_modules</span><br><span class="line">.sass-cache</span><br><span class="line"></span><br><span class="line"><span class="comment"># Temp File</span></span><br><span class="line">*.swp</span><br><span class="line">*.swa</span><br><span class="line">*.swo</span><br><span class="line"></span><br><span class="line"><span class="comment"># github merge file</span></span><br><span class="line">*.orig</span><br><span class="line"></span><br><span class="line"><span class="comment">#vscode </span></span><br><span class="line">.vscode</span><br></pre></td></tr></table></figure><h3 id="禁止-DS-store-生成"><a href="#禁止-DS-store-生成" class="headerlink" title="禁止. DS_store 生成"></a>禁止. DS_store 生成</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 禁止 .DS_store 生成，打开“终端”，复制黏贴下面的命令，回车执行，重启 Mac 即可生效。</span></span><br><span class="line">defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE</span><br><span class="line"><span class="comment"># 恢复 .DS_store 生成</span></span><br><span class="line">defaults delete com.apple.desktopservices DSDontWriteNetworkStores</span><br><span class="line"><span class="comment"># 刪除已存在的. DS_Store</span></span><br><span class="line">sudo find . -name <span class="string">".DS_Store"</span> -depth -<span class="built_in">exec</span> rm &#123;&#125; \;</span><br></pre></td></tr></table></figure><h3 id="ssh-相关"><a href="#ssh-相关" class="headerlink" title="ssh 相关"></a>ssh 相关</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -bash: warning: setlocale: LC_CTYPE: cannot change locale (UTF-8): No such file or directory</span></span><br><span class="line"><span class="comment"># 禁止 OpenSSH 客户端从 OS X/Linux/Unix 桌面发送 LC_* 变量</span></span><br><span class="line">vi /etc/ssh/ssh_config</span><br><span class="line"><span class="comment">#SendEnv LANG LC_*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># port forwarding</span></span><br><span class="line">ssh -p 22202 wangao@127.0.0.1</span><br><span class="line">ssh -p 22202 wangao@127.0.0.1 -X</span><br><span class="line">scp -P 22202 -r sysctl.sh sysctl.d/ wangao@127.0.0.1:/tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># ssh tunnel for one-time</span></span><br><span class="line">ssh -t -A wangao@xx.xx.xx.xx ssh wangao@10.65.32.60</span><br><span class="line"></span><br><span class="line"><span class="comment"># config ssh tunnel to make easy connect everyday</span></span><br><span class="line">vim ~/.ssh/config</span><br><span class="line"></span><br><span class="line">StrictHostKeyChecking no</span><br><span class="line">CheckHostIP no</span><br><span class="line"></span><br><span class="line">Host 10.71.12.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_NC_MAIN -W %h:%p</span><br><span class="line"></span><br><span class="line">Host 10.71.13.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_NC_MAIN -W %h:%p</span><br><span class="line"></span><br><span class="line">Host 10.71.14.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_NC_MAIN -W %h:%p</span><br><span class="line"></span><br><span class="line">Host 10.71.15.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_NC_MAIN -W %h:%p</span><br><span class="line"></span><br><span class="line">Host bastion_GOP_SG_NC_MAIN</span><br><span class="line">  HostName 8.8.8.8</span><br><span class="line">  port 22</span><br><span class="line">  User wangao</span><br></pre></td></tr></table></figure><hr><p>题图 - 苹果 2015 新春广告<a href="http://www.apple.com/cn/start-something-new/#film-holiday" target="_blank" rel="noopener">《老唱片》</a></p>]]></content>
    
    <summary type="html">
    
      MacBook macOS 从小白到入门
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Docker 容器时间如何与宿主机同步问题解决方案小结</title>
    <link href="https://wsgzao.github.io/post/docker-localtime/"/>
    <id>https://wsgzao.github.io/post/docker-localtime/</id>
    <published>2020-08-13T06:59:49.000Z</published>
    <updated>2020-08-17T02:09:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>如果在启动 Docker 容器的过程中没有单独配置 localtime，很可能造成 Docker 容器时间与主机时间不一致的情况，比如 UTC 和 CST 相差 8 小时，换句话来说就是容器时间与北京时间相差 8 个小时。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 08 月 13 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/docker-localtime/">https://wsgzao.github.io/post/docker-localtime/</a></p><hr><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>问题：容器时间与北京时间相差 8 个小时</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看主机时间 </span></span><br><span class="line">[root@localhost ~]<span class="comment"># date</span></span><br><span class="line">2020 年 07 月 27 日 星期三 22:42:44 CST</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看容器时间 </span></span><br><span class="line"><span class="comment"># docker exec -it &lt;containerid&gt; /bin/sh</span></span><br><span class="line">root@b43340ecf5ef:/<span class="comment"># date</span></span><br><span class="line">Wed Jul 27 14:43:31 UTC 2020</span><br></pre></td></tr></table></figure><p>原因：宿主机设置了时区，而 Docker 容器并没有设置，导致两者相差 8 小时</p><p>可以发现，他们相隔了 8 小时</p><p>CST 应该是指（China Shanghai Time，东八区时间）<br>UTC 应该是指（Coordinated Universal Time，标准时间）<br>所以，这 2 个时间实际上应该相差 8 个小时</p><p>所以，必须统一两者的时区</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="docker-run-添加时间参数"><a href="#docker-run-添加时间参数" class="headerlink" title="docker run 添加时间参数"></a>docker run 添加时间参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-v /etc/localtime:/etc/localtime</span><br><span class="line"></span><br><span class="line"># 实例 1</span><br><span class="line">docker run -p 3306:3306 --name mysql -v /etc/localtime:/etc/localtime</span><br><span class="line"></span><br><span class="line"># 实例 2</span><br><span class="line">docker run \</span><br><span class="line">    --detach \</span><br><span class="line">    --restart always \</span><br><span class="line">    --name &apos;scribe&apos; \</span><br><span class="line">    --publish 11315:11315 \</span><br><span class="line">    --mount type=bind,source=/data/gop/,destination=/data/gop/,consistency=consistent \</span><br><span class="line">    -v /etc/localtime:/etc/localtime \</span><br><span class="line">    wsgzao/facebook-scribe</span><br></pre></td></tr></table></figure><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法 1</span></span><br><span class="line"><span class="comment"># 添加时区环境变量，亚洲，上海 </span></span><br><span class="line">ENV TimeZone=Asia/Shanghai</span><br><span class="line"><span class="comment"># 使用软连接，并且将时区配置覆盖 / etc/timezone</span></span><br><span class="line">RUN ln -snf /usr/share/zoneinfo/<span class="variable">$TimeZone</span> /etc/localtime &amp;&amp; <span class="built_in">echo</span> <span class="variable">$TimeZone</span> &gt; /etc/timezone</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2</span></span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">"Asia/shanghai"</span> &gt; /etc/timezone</span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">RUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><h3 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一种方式 (推荐)：</span></span><br><span class="line"><span class="attr">environment:</span></span><br><span class="line"><span class="attr">  TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 第二种方式：</span></span><br><span class="line"><span class="attr">environment:</span></span><br><span class="line">  <span class="string">SET_CONTAINER_TIMEZONE=true</span></span><br><span class="line">  <span class="string">CONTAINER_TIMEZONE=Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三种方式：</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">/etc/timezone:/etc/timezone</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">/etc/localtime:/etc/localtime</span></span><br></pre></td></tr></table></figure><h3 id="宿主机直接执行命令给某个容器同步时间"><a href="#宿主机直接执行命令给某个容器同步时间" class="headerlink" title="宿主机直接执行命令给某个容器同步时间"></a>宿主机直接执行命令给某个容器同步时间</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法 1：直接在宿主机操作 </span></span><br><span class="line">docker cp /etc/localtime 【容器 ID 或者 NAME】:/etc/localtime</span><br><span class="line">docker cp -L /usr/share/zoneinfo/Asia/Shanghai 【容器 ID 或者 NAME】:/etc/localtime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法 2：登录容器同步时区 timezone</span></span><br><span class="line">ln -sf /usr/share/zoneinfo/Asia/Singapore /etc/localtime</span><br></pre></td></tr></table></figure><p>在完成后，再通过 date 命令进行查看当前时间<br>但是，在容器中运行的程序的时间不一定能更新过来，比如在容器运行的 mysql 服务，在更新时间后，通过 sql 查看 mysql 的时间</p><pre><code>select now() from dual;</code></pre><p>可以发现，时间并没有更改过来<br>这时候必须要重启 mysql 服务或者重启 docker 容器，mysql 才能读取到更改过后的时间</p>]]></content>
    
    <summary type="html">
    
      Docker容器时间如何与宿主机同步问题解决方案小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Redis(Codis) 分布式集群部署实践</title>
    <link href="https://wsgzao.github.io/post/codis/"/>
    <id>https://wsgzao.github.io/post/codis/</id>
    <published>2020-07-13T06:59:49.000Z</published>
    <updated>2020-07-14T03:50:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190724154111.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Codis 3.x 稳定版本已经很久没更新了，虽然有缺点也称不上完美但确实可以有效解决横向扩展问题。Redis 5.0 因为所谓的 <code>政治正确</code> 把 master-slave 名字修改为 master-replica 上了开源社区热议排行榜，客户端 SDK 的 API 完全兼容 redis-cluster 在 <code>Redis 6.0</code> 官方推出 <code>redis-cluster-proxy</code> 集群代理方案前成本很高，目前也需要等待社区验证新方案的稳定性，所以大家在选择 Redis 集群方案的时候除了自研和 <code>Codis</code> 或者 <code>Pika</code> 以外依然没有太多的选择余地。我们使用 Codis 的原因也很简单，Redis 主从模式内存从 128GB 一路增加到 1TB 后硬件终于受不鸟了，要么像数据库借鉴 “拆” 的奥义做到庖丁解牛一般，不然摆在眼前的路基本只剩下相对成熟可靠的 Codis。本文分享了 Redis 高可用技术解决方案选型的参考文章和 Codis 集群搭建的过程，希望对大家有帮助。</p><blockquote><p>Redis(Codis)分布式集群部署实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 07 月 13 日 - 增加 Codis HA 搭建方案，codis-dashboard 迁移和 codis-server 扩容心得<br>2020 年 06 月 21 日 - 增加 Codis 手动编译安装<br>2019 年 07 月 23 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/codis/">https://wsgzao.github.io/post/codis/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://redis.io/" target="_blank" rel="noopener">Redis</a><br><a href="https://github.com/CodisLabs/codis" target="_blank" rel="noopener">Codis</a><br><a href="https://github.com/Qihoo360/pika" target="_blank" rel="noopener">Pika</a></p><hr><h2 id="Codis-简介"><a href="#Codis-简介" class="headerlink" title="Codis 简介"></a>Codis 简介</h2><p>Codis 是一个分布式 Redis 解决方案, 对于上层的应用来说, 连接到 Codis Proxy 和连接原生的 Redis Server 没有显著区别 (<a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/unsupported_cmds.md" target="_blank" rel="noopener">不支持的命令列表</a>), 上层应用可以像使用单机的 Redis 一样使用, Codis 底层会处理请求的转发, 不停机的数据迁移等工作, 所有后边的一切事情, 对于前面的客户端来说是透明的, 可以简单的认为后边连接的是一个内存无限大的 Redis 服务。</p><blockquote><p>Compared with Twemproxy and Redis Cluster</p></blockquote><table><thead><tr><th></th><th>Codis</th><th>Twemproxy</th><th>Redis Cluster</th></tr></thead><tbody><tr><td>resharding without restarting cluster</td><td>Yes</td><td>No</td><td>Yes</td></tr><tr><td>pipeline</td><td>Yes</td><td>Yes</td><td>No</td></tr><tr><td>hash tags for multi-key operations</td><td>Yes</td><td>Yes</td><td>Yes</td></tr><tr><td>multi-key operations while resharding</td><td>Yes</td><td>-</td><td>No(<a href="http://redis.io/topics/cluster-spec#multiple-keys-operations" target="_blank" rel="noopener">details</a>)</td></tr><tr><td>Redis clients supporting</td><td>Any clients</td><td>Any clients</td><td>Clients have to support cluster protocol</td></tr></tbody></table><p>“Resharding” means migrating the data in one slot from one redis server to another, usually happens while increasing/decreasing the number of redis servers.</p><blockquote><p>为什么要选择 Codis</p></blockquote><p>Redis 获得动态扩容 / 缩容的能力，增减 redis 实例对 client 完全透明、不需要重启服务，不需要业务方担心 Redis 内存爆掉的问题. 也不用担心申请太大, 造成浪费. 业务方也不需要自己维护 Redis.</p><p>Codis 支持水平扩容 / 缩容，扩容可以直接界面的 “Auto Rebalance” 按钮，缩容只需要将要下线的实例拥有的 slot 迁移到其它实例，然后在界面上删除下线的 group 即可。</p><p><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/tutorial_zh.md" target="_blank" rel="noopener">Codis 使用文档</a><br><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/FAQ_zh.md" target="_blank" rel="noopener">Codis FAQ</a><br><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/unsupported_cmds.md" target="_blank" rel="noopener">Codis 不支持的命令列表</a><br><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/redis_change_zh.md" target="_blank" rel="noopener">redis 修改部分（增加若干指令）</a><br><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/benchmark.md" target="_blank" rel="noopener">Performance (Benchmark)</a></p><h2 id="Codis-架构"><a href="#Codis-架构" class="headerlink" title="Codis 架构"></a>Codis 架构</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190724162130.png" alt=""></p><p>集群配置前需要了解架构，集群分片主要分三种：</p><ol><li>客户端分片：这个需要自己开发，对客户端要求严格，集群很难扩容</li><li>代理端分片：如 codis，对客户端几乎无要求，集群容易扩容</li><li>服务端分片：如 redis 集群，需要智能客户端支持集群协议的，集群容易扩容</li></ol><p>Codis 3.x 由以下组件组成：</p><ul><li><p><strong>Codis Server</strong>：基于 redis-3.2.8 分支开发。增加了额外的数据结构，以支持 slot 有关的操作以及数据迁移指令。具体的修改可以参考文档 <a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/redis_change_zh.md" target="_blank" rel="noopener">redis 的修改</a>。</p></li><li><p><strong>Codis Proxy</strong>：客户端连接的 Redis 代理服务, 实现了 Redis 协议。 除部分命令不支持以外(<a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/unsupported_cmds.md" target="_blank" rel="noopener">不支持的命令列表</a>)，表现的和原生的 Redis 没有区别（就像 Twemproxy）。</p><ul><li>对于同一个业务集群而言，可以同时部署多个 codis-proxy 实例；</li><li>不同 codis-proxy 之间由 codis-dashboard 保证状态同步。</li></ul></li><li><p><strong>Codis Dashboard</strong>：集群管理工具，支持 codis-proxy、codis-server 的添加、删除，以及据迁移等操作。在集群状态发生改变时，codis-dashboard 维护集群下所有 codis-proxy 的状态的一致性。</p><ul><li>对于同一个业务集群而言，同一个时刻 codis-dashboard 只能有 0 个或者 1 个；</li><li>所有对集群的修改都必须通过 codis-dashboard 完成。</li></ul></li><li><p><strong>Codis Admin</strong>：集群管理的命令行工具。</p><ul><li>可用于控制 codis-proxy、codis-dashboard 状态以及访问外部存储。</li></ul></li><li><p><strong>Codis FE</strong>：集群管理界面。</p><ul><li>多个集群实例共享可以共享同一个前端展示页面；</li><li>通过配置文件管理后端 codis-dashboard 列表，配置文件可自动更新。</li></ul></li><li><p><strong>Storage</strong>：为集群状态提供外部存储。</p><ul><li>提供 Namespace 概念，不同集群的会按照不同 product name 进行组织；</li><li>目前仅提供了 Zookeeper、Etcd、Fs 三种实现，但是提供了抽象的 interface 可自行扩展。</li></ul></li></ul><h2 id="Codis-部署"><a href="#Codis-部署" class="headerlink" title="Codis 部署"></a>Codis 部署</h2><p>Codis 官方的 GitHub 教程已经写的比较详细了，这里重点分享 Ansible 自动化部署方案</p><ol><li>基于官方的简化版 ansible 一键部署 codis</li><li>基于组件的模块化 ansible 部署 codis</li></ol><p><a href="https://www.cnblogs.com/zhoujinyi/p/9249873.html" target="_blank" rel="noopener">Redis Codis 部署安装</a></p><p><a href="https://www.cnblogs.com/zhoujinyi/p/9950105.html" target="_blank" rel="noopener">使用 codis-admin 搭建 codis 集群</a></p><p><a href="https://www.mgchen.com/0/0/s_/Codis.html" target="_blank" rel="noopener">Codis 3.x 集群搭建与使用</a></p><h2 id="Codis-手动编译安装"><a href="#Codis-手动编译安装" class="headerlink" title="Codis 手动编译安装"></a>Codis 手动编译安装</h2><h3 id="安装-Go-运行环境"><a href="#安装-Go-运行环境" class="headerlink" title="安装 Go 运行环境"></a>安装 Go 运行环境</h3><p><a href="https://golang.org/doc/install" target="_blank" rel="noopener">Getting Started</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install package</span></span><br><span class="line">yum install -y net-tools vim telnet wget git gcc autoconf automake m4 </span><br><span class="line"></span><br><span class="line"><span class="comment"># download</span></span><br><span class="line">wget https://dl.google.com/go/go1.13.12.linux-amd64.tar.gz</span><br><span class="line"><span class="comment">#tar -C /usr/local -xzf go$VERSION.$OS-$ARCH.tar.gz</span></span><br><span class="line">tar -C /usr/<span class="built_in">local</span> -xzf go1.13.12.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># config env</span></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line">go version</span><br><span class="line">go version go1.13.12 linux/amd64</span><br></pre></td></tr></table></figure><h3 id="编译-Codis"><a href="#编译-Codis" class="headerlink" title="编译 Codis"></a>编译 Codis</h3><blockquote><p>以 Codis 为例，官方步骤可能有坑</p></blockquote><p><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/tutorial_zh.md" target="_blank" rel="noopener">Codis 使用文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置编译环境，在 / etc/profile 文件中输入下面三行</span></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin</span><br><span class="line"><span class="built_in">export</span> GOPATH=/usr/<span class="built_in">local</span>/codis/gopath</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOPATH</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载 Codis 源码</span></span><br><span class="line">mkdir -p <span class="variable">$GOPATH</span>/src/github.com/CodisLabs</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$_</span> &amp;&amp; git <span class="built_in">clone</span> https://github.com/CodisLabs/codis.git -b release3.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 redis 依赖，以免报 jemalloc 版本等错误(Codis 官方遗漏的步骤)</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/CodisLabs/codis/extern/redis-3.2.11/deps</span><br><span class="line">make hiredis jemalloc linenoise lua geohash-int</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 Codis 源代码，直接通过 make 编译，可以看到如下输出：</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/CodisLabs/codis</span><br><span class="line">make</span><br><span class="line">===============================================================================</span><br><span class="line">go build -i -o bin/codis-dashboard ./cmd/dashboard</span><br><span class="line">go build -i -tags <span class="string">"cgo_jemalloc"</span> -o bin/codis-proxy ./cmd/proxy</span><br><span class="line">go build -i -o bin/codis-admin ./cmd/admin</span><br><span class="line">go build -i -o bin/codis-ha ./cmd/ha</span><br><span class="line">go build -i -o bin/codis-fe ./cmd/fe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看编译后的版本</span></span><br><span class="line">cat bin/version</span><br><span class="line">version = 2018-11-04 16:22:35 +0800 @de1ad026e329561c22e2a3035fbfe89dc7fef764 @3.2.2-12-gde1ad02</span><br><span class="line">compile = 2020-06-17 06:39:48 -0400 by go version go1.13.12 linux/amd64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝 codis bin</span></span><br><span class="line">mkdir -p /opt/codis/&#123;config,bin&#125;</span><br><span class="line">cp -r <span class="variable">$GOPATH</span>/src/github.com/CodisLabs/codis/bin /opt/codis</span><br><span class="line">cp -r <span class="variable">$GOPATH</span>/src/github.com/CodisLabs/codis/config /opt/codis</span><br></pre></td></tr></table></figure><h3 id="Codis-手动安装"><a href="#Codis-手动安装" class="headerlink" title="Codis 手动安装"></a>Codis 手动安装</h3><p>dashboard.toml</p><ol><li>调整为 zookeeper，强依赖</li><li>保持多个 instance 的 product_name 唯一性</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/codis/config</span><br><span class="line"><span class="comment"># dashboard.toml</span></span><br><span class="line">vim dashboard.toml</span><br><span class="line"><span class="comment">#coordinator_name = "filesystem"</span></span><br><span class="line"><span class="comment">#coordinator_addr = "/tmp/codis"</span></span><br><span class="line">coordinator_name = <span class="string">"zookeeper"</span></span><br><span class="line">coordinator_addr = <span class="string">"127.0.0.1:2181"</span></span><br><span class="line">product_name = <span class="string">"codis-demo"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">##################################################</span></span><br><span class="line"><span class="comment">#                                                #</span></span><br><span class="line"><span class="comment">#                  Codis-Dashboard               #</span></span><br><span class="line"><span class="comment">#                                                #</span></span><br><span class="line"><span class="comment">##################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set Coordinator, only accept "zookeeper" &amp; "etcd" &amp; "filesystem".</span></span><br><span class="line"><span class="comment"># for zookeeper/etcd, coorinator_auth accept "user:password"</span></span><br><span class="line"><span class="comment"># Quick Start</span></span><br><span class="line"><span class="comment">#coordinator_name = "filesystem"</span></span><br><span class="line"><span class="comment">#coordinator_addr = "/tmp/codis"</span></span><br><span class="line">coordinator_name = <span class="string">"zookeeper"</span></span><br><span class="line">coordinator_addr = <span class="string">"127.0.0.1:2181"</span></span><br><span class="line"><span class="comment">#coordinator_auth = ""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set Codis Product Name/Auth.</span></span><br><span class="line">product_name = <span class="string">"codis-demo"</span></span><br><span class="line">product_auth = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set bind address for admin(rpc), tcp only.</span></span><br><span class="line">admin_addr = <span class="string">"0.0.0.0:18080"</span></span><br></pre></td></tr></table></figure><p>proxy.toml</p><ol><li>调整为 zookeeper，强依赖</li><li>保持多个 instance 的 product_name 唯一性</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">product_name = <span class="string">"codis-demo"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##################################################</span></span><br><span class="line"><span class="comment">#                                                #</span></span><br><span class="line"><span class="comment">#                  Codis-Proxy                   #</span></span><br><span class="line"><span class="comment">#                                                #</span></span><br><span class="line"><span class="comment">##################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set Codis Product Name/Auth.</span></span><br><span class="line">product_name = <span class="string">"codis-demo"</span></span><br><span class="line">product_auth = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set auth for client session</span></span><br><span class="line"><span class="comment">#   1. product_auth is used for auth validation among codis-dashboard,</span></span><br><span class="line"><span class="comment">#      codis-proxy and codis-server.</span></span><br><span class="line"><span class="comment">#   2. session_auth is different from product_auth, it requires clients</span></span><br><span class="line"><span class="comment">#      to issue AUTH &lt;PASSWORD&gt; before processing any other commands.</span></span><br><span class="line">session_auth = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set bind address for admin(rpc), tcp only.</span></span><br><span class="line">admin_addr = <span class="string">"0.0.0.0:11080"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set bind address for proxy, proto_type can be "tcp", "tcp4", "tcp6", "unix" or "unixpacket".</span></span><br><span class="line">proto_type = <span class="string">"tcp4"</span></span><br><span class="line">proxy_addr = <span class="string">"0.0.0.0:19000"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set jodis address &amp; session timeout</span></span><br><span class="line"><span class="comment">#   1. jodis_name is short for jodis_coordinator_name, only accept "zookeeper" &amp; "etcd".</span></span><br><span class="line"><span class="comment">#   2. jodis_addr is short for jodis_coordinator_addr</span></span><br><span class="line"><span class="comment">#   3. jodis_auth is short for jodis_coordinator_auth, for zookeeper/etcd, "user:password" is accepted.</span></span><br><span class="line"><span class="comment">#   4. proxy will be registered as node:</span></span><br><span class="line"><span class="comment">#        if jodis_compatible = true (not suggested):</span></span><br><span class="line"><span class="comment">#          /zk/codis/db_&#123;PRODUCT_NAME&#125;/proxy-&#123;HASHID&#125; (compatible with Codis2.0)</span></span><br><span class="line"><span class="comment">#        or else</span></span><br><span class="line"><span class="comment">#          /jodis/&#123;PRODUCT_NAME&#125;/proxy-&#123;HASHID&#125;</span></span><br><span class="line">jodis_name = <span class="string">""</span></span><br><span class="line">jodis_addr = <span class="string">""</span></span><br><span class="line">jodis_auth = <span class="string">""</span></span><br><span class="line">jodis_timeout = <span class="string">"20s"</span></span><br><span class="line">jodis_compatible = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set datacenter of proxy.</span></span><br><span class="line">proxy_datacenter = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set max number of alive sessions.</span></span><br><span class="line">proxy_max_clients = 1000</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set max offheap memory size. (0 to disable)</span></span><br><span class="line">proxy_max_offheap_size = <span class="string">"1024mb"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set heap placeholder to reduce GC frequency.</span></span><br><span class="line">proxy_heap_placeholder = <span class="string">"256mb"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Proxy will ping backend redis (and clear 'MASTERDOWN' state) in a predefined interval. (0 to disable)</span></span><br><span class="line">backend_ping_period = <span class="string">"5s"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set backend recv buffer size &amp; timeout.</span></span><br><span class="line">backend_recv_bufsize = <span class="string">"128kb"</span></span><br><span class="line">backend_recv_timeout = <span class="string">"30s"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set backend send buffer &amp; timeout.</span></span><br><span class="line">backend_send_bufsize = <span class="string">"128kb"</span></span><br><span class="line">backend_send_timeout = <span class="string">"30s"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set backend pipeline buffer size.</span></span><br><span class="line">backend_max_pipeline = 20480</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set backend never read replica groups, default is false</span></span><br><span class="line">backend_primary_only = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set backend parallel connections per server</span></span><br><span class="line">backend_primary_parallel = 1</span><br><span class="line">backend_replica_parallel = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set backend tcp keepalive period. (0 to disable)</span></span><br><span class="line">backend_keepalive_period = <span class="string">"75s"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set number of databases of backend.</span></span><br><span class="line">backend_number_databases = 16</span><br><span class="line"></span><br><span class="line"><span class="comment"># If there is no request from client for a long time, the connection will be closed. (0 to disable)</span></span><br><span class="line"><span class="comment"># Set session recv buffer size &amp; timeout.</span></span><br><span class="line">session_recv_bufsize = <span class="string">"128kb"</span></span><br><span class="line">session_recv_timeout = <span class="string">"30m"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set session send buffer size &amp; timeout.</span></span><br><span class="line">session_send_bufsize = <span class="string">"64kb"</span></span><br><span class="line">session_send_timeout = <span class="string">"30s"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Make sure this is higher than the max number of requests for each pipeline request, or your client may be blocked.</span></span><br><span class="line"><span class="comment"># Set session pipeline buffer size.</span></span><br><span class="line">session_max_pipeline = 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set session tcp keepalive period. (0 to disable)</span></span><br><span class="line">session_keepalive_period = <span class="string">"75s"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set session to be sensitive to failures. Default is false, instead of closing socket, proxy will send an error response to client.</span></span><br><span class="line">session_break_on_failure = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set metrics server (such as http://localhost:28000), proxy will report json formatted metrics to specified server in a predefined period.</span></span><br><span class="line">metrics_report_server = <span class="string">""</span></span><br><span class="line">metrics_report_period = <span class="string">"1s"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set influxdb server (such as http://localhost:8086), proxy will report metrics to influxdb.</span></span><br><span class="line">metrics_report_influxdb_server = <span class="string">""</span></span><br><span class="line">metrics_report_influxdb_period = <span class="string">"1s"</span></span><br><span class="line">metrics_report_influxdb_username = <span class="string">""</span></span><br><span class="line">metrics_report_influxdb_password = <span class="string">""</span></span><br><span class="line">metrics_report_influxdb_database = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set statsd server (such as localhost:8125), proxy will report metrics to statsd.</span></span><br><span class="line">metrics_report_statsd_server = <span class="string">""</span></span><br><span class="line">metrics_report_statsd_period = <span class="string">"1s"</span></span><br><span class="line">metrics_report_statsd_prefix = <span class="string">""</span></span><br></pre></td></tr></table></figure><p>redis.conf</p><ol><li>每台机器创建两个 redis 实例，对应端口 6379 和 6380</li><li>按需求修改 redis.conf 配置文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建 codis data 目录</span></span><br><span class="line">mkdir -p /opt/codis/data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 6379 的配置文件：</span></span><br><span class="line">cp redis.conf redis-6379.conf</span><br><span class="line">vim redis-6379.conf</span><br><span class="line"><span class="comment"># 修改如下内容</span></span><br><span class="line">protected-mode no</span><br><span class="line">port 6379</span><br><span class="line">pidfile <span class="string">"/opt/codis/data/redis_6379.pid"</span></span><br><span class="line">logfile <span class="string">"/opt/codis/data/redis_6379.log"</span></span><br><span class="line">dbfilename <span class="string">"dump_6379.rdb"</span></span><br><span class="line">dir <span class="string">"/opt/codis/data"</span></span><br><span class="line"><span class="comment"># 创建 6380 的配置文件</span></span><br><span class="line">cp redis-6379.conf redis-6380.conf </span><br><span class="line">sed -i <span class="string">'s/6379/6380/g'</span> redis-6380.conf</span><br></pre></td></tr></table></figure><p>sentinel.conf</p><ol><li>如果只是 test 可以不配置</li><li>线上环境做 HA 建议分布在 3 台不同节点</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim sentinel.conf</span><br><span class="line"></span><br><span class="line">dir <span class="string">"/opt/codis/data"</span></span><br><span class="line">daemonize yes</span><br><span class="line">loglevel notice</span><br><span class="line">logfile <span class="string">"/opt/codis/data/setinel.log"</span></span><br></pre></td></tr></table></figure><p>Codis 启停脚本</p><ol><li>测试环境可以使用 nohup 在后台运行</li><li>线上环境建议使用 <code>Supervisord</code> 或者 <code>Monit</code> 来管理</li><li>注意这里最后一个 fe 参数是你要访问的前端地址，但是因为 zookeeper 已经占用了 8080 端口，所以你可以改成别的端口。而且为了你在任何地址都可以访问，你可以设置监听 ip 为 0.0.0.0，因为 FE 是不用密码的，所以端口最好设置一个不常见的，避免被不怀好意的人看到前端页面之后对你的 codis 集群做出不好的事情，或者通过防火墙和 SSO 限制访问</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建 codis log 目录</span></span><br><span class="line">mkdir -p /opt/codis/data</span><br><span class="line"><span class="built_in">cd</span> /opt/codis</span><br><span class="line"></span><br><span class="line"><span class="comment"># start_dashboard.sh</span></span><br><span class="line">nohup ./bin/codis-dashboard --ncpu=1 --config=config/dashboard.toml --<span class="built_in">log</span>=<span class="built_in">log</span>/dashboard.log --<span class="built_in">log</span>-level=WARN &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># start_proxy.sh</span></span><br><span class="line">nohup ./bin/codis-proxy --ncpu=1 --config=config/proxy.toml --<span class="built_in">log</span>=<span class="built_in">log</span>/proxy.log --<span class="built_in">log</span>-level=WARN &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># start_server.sh</span></span><br><span class="line">./bin/codis-server config/redis-6379.conf</span><br><span class="line">./bin/codis-server config/redis-6380.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># start_fe.sh (可选，如果 8080 被占用需要修改端口)</span></span><br><span class="line">nohup ./bin/codis-fe --ncpu=1 --<span class="built_in">log</span>=<span class="built_in">log</span>/fe.log --<span class="built_in">log</span>-level=WARN --zookeeper=127.0.0.1:2181 --listen=0.0.0.0:8081 &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># start_sentinel.sh (可选)</span></span><br><span class="line">./bin/codis-server config/sentinel.conf --sentinel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录 codis-fe</span></span><br><span class="line">http://192.168.184.131:8081/<span class="comment">#codis-demo</span></span><br><span class="line"><span class="comment"># 添加 codis-proxy</span></span><br><span class="line">New Proxy: 192.168.184.131:11080</span><br><span class="line"><span class="comment"># 添加 codis-server，注意先添加 group，再添加 server 分配到相应 group。Data Center 可以留空</span></span><br><span class="line">New Group: 1</span><br><span class="line">Add Server:</span><br><span class="line">192.168.184.131:6379 to 1</span><br><span class="line">192.168.184.131:6380 to 1</span><br><span class="line"><span class="comment"># 点击扳手图标会自动设置 SLAVEOF，当然线上环境的配置就会复杂些</span></span><br><span class="line">Auto-Rebalance: Rebalance All Slots</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 好的，基本上到这，一个 Codis Demo 搭建过程基本就算完成了。如果你还需要主从，也可以通过增加三个节点然后通过 FE 操作，它自动就可以帮助你做好主从同步。线上环境需要考虑 HA 是否采用 Sentinel 以及还是主从切换。</span></span><br></pre></td></tr></table></figure><h3 id="codis-命令行"><a href="#codis-命令行" class="headerlink" title="codis 命令行"></a>codis 命令行</h3><blockquote><p>具体用法在上面的步骤中已经列出，使用命令行可以方便自动化运维管理</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check codis/bin</span></span><br><span class="line"><span class="built_in">cd</span> /data/codis/bin</span><br><span class="line">assets</span><br><span class="line">codis-admin</span><br><span class="line">codis-dashboard</span><br><span class="line">codis-fe</span><br><span class="line">codis-ha</span><br><span class="line">codis-proxy</span><br><span class="line">codis-server</span><br><span class="line">redis-benchmark</span><br><span class="line">redis-cli</span><br><span class="line">redis-sentinel</span><br><span class="line">version</span><br><span class="line"></span><br><span class="line"><span class="comment"># codis-dashboard</span></span><br><span class="line">./codis-dashboard -h</span><br><span class="line">Usage:</span><br><span class="line">codis-dashboard [--ncpu=N] [--config=CONF] [--<span class="built_in">log</span>=FILE] [--<span class="built_in">log</span>-level=LEVEL] [--host-admin=ADDR] [--pidfile=FILE] [--zookeeper=ADDR|--etcd=ADDR|--filesystem=ROOT] [--product_name=NAME] [--product_auth=AUTH] [--remove-lock]</span><br><span class="line">codis-dashboard  --default-config</span><br><span class="line">codis-dashboard  --version</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">--ncpu=N                    <span class="built_in">set</span> runtime.GOMAXPROCS to N, default is runtime.NumCPU().</span><br><span class="line">-c CONF, --config=CONF      run with the specific configuration.</span><br><span class="line">-l FILE, --<span class="built_in">log</span>=FILE         <span class="built_in">set</span> path/name of daliy rotated <span class="built_in">log</span> file.</span><br><span class="line">--<span class="built_in">log</span>-level=LEVEL           <span class="built_in">set</span> the <span class="built_in">log</span>-level, should be INFO,WARN,DEBUG or ERROR, default is INFO.</span><br><span class="line"></span><br><span class="line"><span class="comment"># codis-fe</span></span><br><span class="line">./codis-fe -h</span><br><span class="line">Usage:</span><br><span class="line">codis-fe [--ncpu=N] [--<span class="built_in">log</span>=FILE] [--<span class="built_in">log</span>-level=LEVEL] [--assets-dir=PATH] [--pidfile=FILE] (--dashboard-list=FILE|--zookeeper=ADDR [--zookeeper-auth=USR:PWD]|--etcd=ADDR [--etcd-auth=USR:PWD]|--filesystem=ROOT) --listen=ADDR</span><br><span class="line">codis-fe  --version</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">--ncpu=N                        <span class="built_in">set</span> runtime.GOMAXPROCS to N, default is runtime.NumCPU().</span><br><span class="line">-d FILE, --dashboard-list=FILE  <span class="built_in">set</span> list of dashboard, can be generated by codis-admin.</span><br><span class="line">-l FILE, --<span class="built_in">log</span>=FILE             <span class="built_in">set</span> path/name of daliy rotated <span class="built_in">log</span> file.</span><br><span class="line">--<span class="built_in">log</span>-level=LEVEL               <span class="built_in">set</span> the <span class="built_in">log</span>-level, should be INFO,WARN,DEBUG or ERROR, default is INFO.</span><br><span class="line">--listen=ADDR                   <span class="built_in">set</span> the listen address.</span><br><span class="line"></span><br><span class="line"><span class="comment"># codis-proxy</span></span><br><span class="line">./codis-proxy -h</span><br><span class="line">Usage:</span><br><span class="line">codis-proxy [--ncpu=N [--max-ncpu=MAX]] [--config=CONF] [--<span class="built_in">log</span>=FILE] [--<span class="built_in">log</span>-level=LEVEL] [--host-admin=ADDR] [--host-proxy=ADDR] [--dashboard=ADDR|--zookeeper=ADDR [--zookeeper-auth=USR:PWD]|--etcd=ADDR [--etcd-auth=USR:PWD]|--filesystem=ROOT|--fillslots=FILE] [--<span class="built_in">ulimit</span>=NLIMIT] [--pidfile=FILE] [--product_name=NAME] [--product_auth=AUTH] [--session_auth=AUTH]</span><br><span class="line">codis-proxy  --default-config</span><br><span class="line">codis-proxy  --version</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">--ncpu=N                    <span class="built_in">set</span> runtime.GOMAXPROCS to N, default is runtime.NumCPU().</span><br><span class="line">-c CONF, --config=CONF      run with the specific configuration.</span><br><span class="line">-l FILE, --<span class="built_in">log</span>=FILE         <span class="built_in">set</span> path/name of daliy rotated <span class="built_in">log</span> file.</span><br><span class="line">--<span class="built_in">log</span>-level=LEVEL           <span class="built_in">set</span> the <span class="built_in">log</span>-level, should be INFO,WARN,DEBUG or ERROR, default is INFO.</span><br><span class="line">--<span class="built_in">ulimit</span>=NLIMIT             run <span class="string">'ulimit -n'</span> to check the maximum number of open file descriptors.</span><br><span class="line"></span><br><span class="line"><span class="comment"># codis-admin</span></span><br><span class="line">./codis-admin -h</span><br><span class="line">Usage:</span><br><span class="line">codis-admin [-v] --proxy=ADDR [--auth=AUTH] [config|model|stats|slots]</span><br><span class="line">codis-admin [-v] --proxy=ADDR [--auth=AUTH]  --start</span><br><span class="line">codis-admin [-v] --proxy=ADDR [--auth=AUTH]  --shutdown</span><br><span class="line">codis-admin [-v] --proxy=ADDR [--auth=AUTH]  --<span class="built_in">log</span>-level=LEVEL</span><br><span class="line">codis-admin [-v] --proxy=ADDR [--auth=AUTH]  --fillslots=FILE [--locked]</span><br><span class="line">codis-admin [-v] --proxy=ADDR [--auth=AUTH]  --reset-stats</span><br><span class="line">codis-admin [-v] --proxy=ADDR [--auth=AUTH]  --forcegc</span><br><span class="line">codis-admin [-v] --dashboard=ADDR           [config|model|stats|slots|group|proxy]</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --shutdown</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --reload</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --<span class="built_in">log</span>-level=LEVEL</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --slots-assign   --beg=ID --end=ID (--gid=ID|--offline) [--confirm]</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --slots-status</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --list-proxy</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --create-proxy   --addr=ADDR</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --online-proxy   --addr=ADDR</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --remove-proxy  (--addr=ADDR|--token=TOKEN|--pid=ID)       [--force]</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --reinit-proxy  (--addr=ADDR|--token=TOKEN|--pid=ID|--all) [--force]</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --proxy-status</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --list-group</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --create-group   --gid=ID</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --remove-group   --gid=ID</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --resync-group  [--gid=ID | --all]</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --group-add      --gid=ID --addr=ADDR [--datacenter=DATACENTER]</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --group-del      --gid=ID --addr=ADDR</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --group-status</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --replica-groups --gid=ID --addr=ADDR (--<span class="built_in">enable</span>|--<span class="built_in">disable</span>)</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --promote-server --gid=ID --addr=ADDR</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --sync-action    --create --addr=ADDR</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --sync-action    --remove --addr=ADDR</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --slot-action    --create --sid=ID --gid=ID</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --slot-action    --remove --sid=ID</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --slot-action    --create-some  --gid-from=ID --gid-to=ID --num-slots=N</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --slot-action    --create-range --beg=ID --end=ID --gid=ID</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --slot-action    --interval=VALUE</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --slot-action    --disabled=VALUE</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --rebalance     [--confirm]</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --sentinel-add   --addr=ADDR</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --sentinel-del   --addr=ADDR [--force]</span><br><span class="line">codis-admin [-v] --dashboard=ADDR            --sentinel-resync</span><br><span class="line">codis-admin [-v] --remove-lock               --product=NAME (--zookeeper=ADDR [--zookeeper-auth=USR:PWD]|--etcd=ADDR [--etcd-auth=USR:PWD]|--filesystem=ROOT)</span><br><span class="line">codis-admin [-v] --config-dump               --product=NAME (--zookeeper=ADDR [--zookeeper-auth=USR:PWD]|--etcd=ADDR [--etcd-auth=USR:PWD]|--filesystem=ROOT) [-1]</span><br><span class="line">codis-admin [-v] --config-convert=FILE</span><br><span class="line">codis-admin [-v] --config-restore=FILE       --product=NAME (--zookeeper=ADDR [--zookeeper-auth=USR:PWD]|--etcd=ADDR [--etcd-auth=USR:PWD]|--filesystem=ROOT) [--confirm]</span><br><span class="line">codis-admin [-v] --dashboard-list                           (--zookeeper=ADDR [--zookeeper-auth=USR:PWD]|--etcd=ADDR [--etcd-auth=USR:PWD]|--filesystem=ROOT)</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">-a AUTH, --auth=AUTH</span><br><span class="line">-x ADDR, --addr=ADDR</span><br><span class="line">-t TOKEN, --token=TOKEN</span><br><span class="line">-g ID, --gid=ID</span><br></pre></td></tr></table></figure><h2 id="Codis-常见问题"><a href="#Codis-常见问题" class="headerlink" title="Codis 常见问题"></a>Codis 常见问题</h2><p>在官方文档中列举了 2 个案例，<a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/tutorial_zh.md#25-codis-admin%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7" target="_blank" rel="noopener">Codis Admin（命令行工具）</a></p><p><strong> 注意：使用 codis-admin 是十分危险的。</strong></p><h3 id="codis-dashboard-异常退出的修复"><a href="#codis-dashboard-异常退出的修复" class="headerlink" title="codis-dashboard 异常退出的修复"></a>codis-dashboard 异常退出的修复</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># codis-dashboard 无法启动，并提示:</span></span><br><span class="line">[ERROR] store: acquire lock of codis-demo failed</span><br><span class="line">[error]: zk: node already exists</span><br></pre></td></tr></table></figure><p>当 codis-dashboard 启动时，会在外部存储上存放一条数据，用于存储 dashboard 信息，同时作为 LOCK 存在。当 codis-dashboard 安全退出时，会主动删除该数据。当 codis-dashboard 异常退出时，由于之前 LOCK 未安全删除，重启往往会失败。因此 codis-admin 提供了强制删除工具：</p><ol><li>确认 codis-dashboard 进程已经退出（<strong> 很重要 </strong>）；</li><li>运行 codis-admin 删除 LOCK：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./bin/codis-admin --remove-lock --product=codis-demo --zookeeper=127.0.0.1:2181</span><br></pre></td></tr></table></figure><h3 id="codis-proxy-异常退出的修复"><a href="#codis-proxy-异常退出的修复" class="headerlink" title="codis-proxy 异常退出的修复"></a>codis-proxy 异常退出的修复</h3><p>通常 codis-proxy 都是通过 codis-dashboard 进行移除，移除过程中 codis-dashboard 为了安全会向 codis-proxy 发送 <code>offline</code> 指令，成功后才会将 proxy 信息从外部存储中移除。如果 codis-proxy 异常退出，该操作会失败。此时可以使用 codis-admin 工具进行移除：</p><ol><li>确认 codis-proxy 进程已经退出（<strong> 很重要 </strong>）；</li><li>运行 codis-admin 删除 proxy：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./bin/codis-admin --dashboard=127.0.0.1:18080 --remove-proxy --addr=127.0.0.1:11080 --force</span><br></pre></td></tr></table></figure><p>选项 <code>--force</code> 表示，无论 <code>offline</code> 操作是否成功，都从外部存储中将该节点删除。所以操作前，一定要确认该 codis-proxy 进程已经退出。</p><h3 id="codis-dashboard-和-codis-proxy-迁移小技巧"><a href="#codis-dashboard-和-codis-proxy-迁移小技巧" class="headerlink" title="codis-dashboard 和 codis-proxy 迁移小技巧"></a>codis-dashboard 和 codis-proxy 迁移小技巧</h3><p>负责过 codis-fe/dashboard 迁移，也做过正常的 codis-server scale-out 横向扩容，踩过不少坑其中有 2 点需要提醒下大家</p><p>如果 codis-dashboard 使用 <code>Supervisord</code> 或者 <code>Monit</code> 来管理，需要注意添加 <code>--remove-lock</code> 参数，原因上面已经写过了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># codis-dashboard --remove-lock</span></span><br><span class="line">/data/codis/bin/codis-dashboard --remove-lock --config=/data/codis/config/dashboard.toml --<span class="built_in">log</span>=/data/codis/<span class="built_in">log</span>/codis-dashboard.log --<span class="built_in">log</span>-level=DEBUG</span><br></pre></td></tr></table></figure><p>需要注意搭建 codis-proxy 时是否有添加 <code>--dashboard</code> 参数，因为添加后启动 proxy 就会主动加入对应 IP 的 dashboard，如果不添加这个参数则需要通过 dashboard UI 或者 codis-admin 命令行添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># codis-proxy --dashboard</span></span><br><span class="line">/data/codis/bin/codis-proxy --config=/data/codis/config/proxy-auth.toml --<span class="built_in">log</span>=/data/codis/<span class="built_in">log</span>/codis-proxy-auth.log --<span class="built_in">log</span>-level=DEBUG --dashboard=10.71.14.112:18092 --ncpu=8</span><br></pre></td></tr></table></figure><h2 id="Codis-Zookeeper-数据结构"><a href="#Codis-Zookeeper-数据结构" class="headerlink" title="Codis Zookeeper 数据结构"></a>Codis Zookeeper 数据结构</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/zookeeper/bin</span><br><span class="line">./zkCli.sh -server 127.0.0.1:2181</span><br><span class="line"></span><br><span class="line">ZooKeeper -server host:port cmd args</span><br><span class="line"><span class="built_in">stat</span> path [watch]</span><br><span class="line"><span class="built_in">set</span> path data [version]</span><br><span class="line">ls path [watch]</span><br><span class="line">delquota [-n|-b] path</span><br><span class="line">ls2 path [watch]</span><br><span class="line">setAcl path acl</span><br><span class="line">setquota -n|-b val path</span><br><span class="line"><span class="built_in">history</span> </span><br><span class="line">redo cmdno</span><br><span class="line">printwatches on|off</span><br><span class="line">delete path [version]</span><br><span class="line">sync path</span><br><span class="line">listquota path</span><br><span class="line">rmr path</span><br><span class="line">get path [watch]</span><br><span class="line">create [-s] [-e] path data acl</span><br><span class="line">addauth scheme auth</span><br><span class="line">quit </span><br><span class="line">getAcl path</span><br><span class="line">close </span><br><span class="line">connect host:port</span><br><span class="line"></span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 4] ls /codis3</span><br><span class="line">[gop-codis-auth, gop-codis-pay]</span><br><span class="line"></span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 8] ls /codis3/gop-codis-auth </span><br><span class="line">[proxy, slots, topom, group]</span><br><span class="line"></span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 9] ls /codis3/gop-codis-auth/proxy</span><br><span class="line">[proxy-62fba8c56577980aca48b869d6c1059d, proxy-bf965c6421da0ae004d4f142bec2dc45]</span><br><span class="line"></span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 12] get /codis3/gop-codis-auth/proxy/proxy-bf965c6421da0ae004d4f142bec2dc45</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"id"</span>: 3,</span><br><span class="line">    <span class="string">"token"</span>: <span class="string">"bf965c6421da0ae004d4f142bec2dc45"</span>,</span><br><span class="line">    <span class="string">"start_time"</span>: <span class="string">"2020-06-25 17:20:49.129561877 +0800 +08 m=+0.023604373"</span>,</span><br><span class="line">    <span class="string">"admin_addr"</span>: <span class="string">"10.71.49.88:11082"</span>,</span><br><span class="line">    <span class="string">"proto_type"</span>: <span class="string">"tcp4"</span>,</span><br><span class="line">    <span class="string">"proxy_addr"</span>: <span class="string">"10.71.49.88:19082"</span>,</span><br><span class="line">    <span class="string">"product_name"</span>: <span class="string">"gop-codis-auth"</span>,</span><br><span class="line">    <span class="string">"pid"</span>: 65948,</span><br><span class="line">    <span class="string">"pwd"</span>: <span class="string">"/data/codis"</span>,</span><br><span class="line">    <span class="string">"sys"</span>: <span class="string">"Linux sg-gop-10-71-49-88 3.10.0-957.27.2.el7.x86_64 #1 SMP Mon Jul 29 17:46:05 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux"</span>,</span><br><span class="line">    <span class="string">"hostname"</span>: <span class="string">"sg-gop-10-71-49-88"</span>,</span><br><span class="line">    <span class="string">"datacenter"</span>: <span class="string">""</span></span><br><span class="line">&#125;</span><br><span class="line">cZxid = 0x3869</span><br><span class="line">ctime = Thu Jun 25 17:25:09 SGT 2020</span><br><span class="line">mZxid = 0x386a</span><br><span class="line">mtime = Thu Jun 25 17:25:09 SGT 2020</span><br><span class="line">pZxid = 0x3869</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 1</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 519</span><br><span class="line">numChildren = 0</span><br><span class="line"></span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 13] get /codis3/gop-codis-auth/proxy/proxy-62fba8c56577980aca48b869d6c1059d</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"id"</span>: 2,</span><br><span class="line">    <span class="string">"token"</span>: <span class="string">"62fba8c56577980aca48b869d6c1059d"</span>,</span><br><span class="line">    <span class="string">"start_time"</span>: <span class="string">"2020-06-23 11:10:54.526348352 +0800 +08 m=+0.024387970"</span>,</span><br><span class="line">    <span class="string">"admin_addr"</span>: <span class="string">"10.71.49.89:11082"</span>,</span><br><span class="line">    <span class="string">"proto_type"</span>: <span class="string">"tcp4"</span>,</span><br><span class="line">    <span class="string">"proxy_addr"</span>: <span class="string">"10.71.49.89:19082"</span>,</span><br><span class="line">    <span class="string">"product_name"</span>: <span class="string">"gop-codis-auth"</span>,</span><br><span class="line">    <span class="string">"pid"</span>: 24684,</span><br><span class="line">    <span class="string">"pwd"</span>: <span class="string">"/data/codis"</span>,</span><br><span class="line">    <span class="string">"sys"</span>: <span class="string">"Linux sg-gop-10-71-49-89 3.10.0-957.27.2.el7.x86_64 #1 SMP Mon Jul 29 17:46:05 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux"</span>,</span><br><span class="line">    <span class="string">"hostname"</span>: <span class="string">"sg-gop-10-71-49-89"</span>,</span><br><span class="line">    <span class="string">"datacenter"</span>: <span class="string">""</span></span><br><span class="line">&#125;</span><br><span class="line">cZxid = 0x4d</span><br><span class="line">ctime = Tue Jun 23 11:12:31 SGT 2020</span><br><span class="line">mZxid = 0x4e</span><br><span class="line">mtime = Tue Jun 23 11:12:31 SGT 2020</span><br><span class="line">pZxid = 0x4d</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 1</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 519</span><br><span class="line">numChildren = 0</span><br><span class="line"></span><br><span class="line">[zk: 127.0.0.1:2181(CONNECTED) 21] get /codis3/gop-codis-auth/group/group-0001</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"id"</span>: 1,</span><br><span class="line">    <span class="string">"servers"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"server"</span>: <span class="string">"10.71.49.88:6379"</span>,</span><br><span class="line">            <span class="string">"datacenter"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"action"</span>: &#123;&#125;,</span><br><span class="line">            <span class="string">"replica_group"</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"server"</span>: <span class="string">"10.71.49.88:6380"</span>,</span><br><span class="line">            <span class="string">"datacenter"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"action"</span>: &#123;</span><br><span class="line">                <span class="string">"state"</span>: <span class="string">"synced"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"replica_group"</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"promoting"</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">"out_of_sync"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">cZxid = 0x1f</span><br><span class="line">ctime = Tue Jun 23 10:34:10 SGT 2020</span><br><span class="line">mZxid = 0x25</span><br><span class="line">mtime = Tue Jun 23 10:34:25 SGT 2020</span><br><span class="line">pZxid = 0x1f</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 6</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 440</span><br><span class="line">numChildren = 0</span><br></pre></td></tr></table></figure><h2 id="Codis-HA"><a href="#Codis-HA" class="headerlink" title="Codis HA"></a>Codis HA</h2><p>Codis 的架构本身分成 Proxy 集群 + Redis 集群，Proxy 集群的高可用，可以基于 Zookeeper 来做故障转移，而 Redis 集群的高可用是借助于 Redis Sentinel 开源的哨兵集群来实现，那边 Codis 作为非 Redis 组件，需要解决的一个问题就是如何集成 Redis 哨兵集群。</p><blockquote><p>我分享 2 种实践方案，都是经历过线上 12000000 qps 考验的架构，重点看下 HA 方案</p></blockquote><p>前置任务：内部流量均使用 CoreDNS 转发请求至 LVS VIP 此时 codis-proxy 作为 realserver 客户端，或者直接分配给 codis-proxy 但 DNS 无故障检测机制</p><ol><li>codis-server 使用 keepalived HA 架构类似 Redis 主从同步 HA 方案，codis-dashboard group server 填写 VIP 地址，依赖少但需要使用额外计算资源</li><li>codis-server 使用 sentinel 保障 HA 高可用切换，这是 codis 官方的推荐方案，但由于 codis 目前已经处于停滞状态，如果出现组件 bug 影响也会非常大</li></ol><h2 id="Codis-in-Kubernetes"><a href="#Codis-in-Kubernetes" class="headerlink" title="Codis in Kubernetes"></a>Codis in Kubernetes</h2><blockquote><p>好处是上线很快，坏处是出了问题你就直接嗝屁了，debug 困难推荐先上测试后上生产</p></blockquote><p><a href="https://github.com/CodisLabs/codis/tree/release3.2/kubernetes" target="_blank" rel="noopener">https://github.com/CodisLabs/codis/tree/release3.2/kubernetes</a></p><h2 id="Codis-监控"><a href="#Codis-监控" class="headerlink" title="Codis 监控"></a>Codis 监控</h2><p>Codis 的监控主要分为 3 部分，衍生部分还包括 Zookeeper，这里就不展开了</p><ol><li>Codis Proxy</li><li>Codis Redis Cluster</li><li>Codis Sentinels</li></ol><h2 id="Redis-迁移至-Codis"><a href="#Redis-迁移至-Codis" class="headerlink" title="Redis 迁移至 Codis"></a>Redis 迁移至 Codis</h2><p>分两种情况:</p><ol><li>原来使用 twemproxy 的用户: 可以, 使用 codis 项目内的 redis-port 工具, 可以实时的同步 twemproxy 底下的 redis 数据到你的 codis 集群上. 搞定了以后, 只需要你修改一下你的配置, 将 twemproxy 的地址改成 codis 的地址就好了. 除此之外, 你什么事情都不用做.</li><li>原来使用 Redis 的用户: 如果你使用了 <a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/unsupported_cmds.md" target="_blank" rel="noopener">doc/unsupported_cmds</a>中提到的命令，是无法直接迁移到 Codis 上的. 你需要修改你的代码, 用其他的方式实现.</li></ol><p>先搭建好 codis 集群并让 codis-proxy 正确运行起来。对线上每一个 redis 实例运行一个 redis-port 来向 codis 导入数据，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">for port in &#123;6379,6380,6479,6480&#125;; do</span><br><span class="line">    nohup redis-port sync --ncpu=4 --from=redis-server:$&#123;port&#125; \</span><br><span class="line">        --target=codis-proxy:19000 &gt; $&#123;port&#125;.log 2&gt;&amp;1 &amp;</span><br><span class="line">    sleep 5</span><br><span class="line">done</span><br><span class="line">tail -f *.log</span><br></pre></td></tr></table></figure><ul><li>每个 redis-port 负责将对应的 redis 数据导入到 codis</li><li>多个 redis-port 之间不互相干扰，除非多个 redis 上的 key 本身出现冲突</li><li>单个 redis-port 可以将负责的数据并行迁移以提高速度，通过 –ncpu 来指定并行数</li><li>导入速度受带宽以及 codis-proxy 处理速度限制(本质是大量的 slotsrestore 操作)</li><li>完成数据迁移，在适当的时候将服务指向 Codis，并将原 redis 下线，旧 redis 下线时，会导致 reids-port 链接断开，于是自动退出</li></ul><p><a href="https://github.com/CodisLabs/redis-port" target="_blank" rel="noopener">redis-port</a><br><a href="https://github.com/alibaba/RedisShake" target="_blank" rel="noopener">RedisShake</a><br><a href="https://github.com/sripathikrishnan/redis-rdb-tools" target="_blank" rel="noopener">redis-rdb-tools</a></p><h2 id="Codis-扩容"><a href="#Codis-扩容" class="headerlink" title="Codis 扩容"></a>Codis 扩容</h2><p>Codis FE, Codis-Dashboard, Codis-Proxy 如果没有添加特殊的参数可以算是无状态组件，扩容或迁移相对比较容易</p><p>Codis 可以实现在线不停服务进行扩容，具体的步骤如下：</p><ol><li>安装配置 codis-server 主从</li><li>打开 codis 管理界面，新建 server group 并添加刚刚安装的 redis 实例（注意：codis 默认第一个添加的是 master）</li><li>规划 slot 分布，把部分 slot 迁移到新的 server group 中</li></ol><p><strong> 备注说明 </strong></p><ol><li>slot 迁移的过程中，Codis 服务可以正常访问，codis 的迁移机制可以保证数据的一致性</li><li>迁移时，key 都是单个进行迁移，并且不能同时运行多个迁移任务，所以 codis 的迁移时间会比较长。一定要在扩容前留有足够的时间和空间。</li></ol><h2 id="Codis-其他经验分享"><a href="#Codis-其他经验分享" class="headerlink" title="Codis 其他经验分享"></a>Codis 其他经验分享</h2><ol><li><p>关于 HOT KEY， HOT KEY 很影响 Codis/Redis 的性能，这点如果你监控不到位，你就得花一些力气去找到底是哪组出了问题，再 monitor 看看找出是哪个应用干的，比较费时费力，所以在交付 rd 上线时， 我们就严肃声明坚决不允许存在 HOT KEY，宁可使用笨方法多消耗一些内存，也要降低线上故障的风险。</p></li><li><p>关于 BIG KEY,  这点风险更为巨大：</p></li></ol><p>由于 Codis 支持 “resharding without restarting cluster”，如果迁移失败，所导致的后果也是不可简单衡量的。Redis 是串行提供服务的，所以当迁移该 BIG KEY 时，其他的请求就会被 BLOCK 住，这点是十分危险的，访问该组的请求皆会失败。</p><p>由于 Codis-ha 也会依赖该节点的返回来判断 Codis-server 是否挂掉，如果无响应超过设置时间，便会强制提升 SLAVE 至 MASTER，导致整个迁移任务失败。这时如果 Proxy 的信息没有更新的话，并且迁移故障的 KEY 所在 SLOT 可能会存在 KEY 的信息不完整，虽然服务恢复，但是仍有大量 key 失效。</p><p>所以一般不推荐使用 Codis 存大的 HASH 表，LIST 等等，并且在迁移之前，至少要对该 Group 做一次检查 BIG KEY 即：redis-cli –bigkeys 查看是否有 BIG KEY 存在，再酌情迁移。</p><ol start="3"><li>关于 Codis-server</li></ol><p>一般 Codis-proxy 或者 Codis-dashboard 我们使用 supervisor 管理，在进程退出的情况下立即拉起来重新服务，而 Codis-Server 则不推荐使用该方式，原因是这样的：一般作为 Codis-server，是关闭 rdb dump 的，如果 Codis-server 挂掉，当重新启动时，是没有 rdb 文件的，或者 rdb 文件是上一次切换之前的。如果挂掉立即重新启动，则该 Codis 有可能是空的，或者数据不是最新，而同时，SLAVE 同步，也会清空数据库，或者同步旧数据。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://my.oschina.net/u/658658/blog/500499" target="_blank" rel="noopener">Codis 作者黄东旭细说分布式 Redis 架构设计和踩过的那些坑们</a><br><a href="https://mp.weixin.qq.com/s/BoLsVKYyu8yRXZbxd1uuQw" target="_blank" rel="noopener">史上最全 Redis 高可用技术解决方案大全</a><br><a href="https://mp.weixin.qq.com/s/F68-e2umTQIq0aGfif58ow" target="_blank" rel="noopener">深入浅出百亿请求高可用 Redis (codis) 分布式集群揭秘</a><br><a href="https://cloud.tencent.com/developer/article/1006262" target="_blank" rel="noopener">大规模 codis 集群的治理与实践</a><br><a href="https://www.menina.cn/article/61" target="_blank" rel="noopener">避免 Redis (Codis) 的 Timeout 及监控</a><br><a href="https://mp.weixin.qq.com/s?__biz=MzA4Nzg5Nzc5OA==&amp;mid=2651678993&amp;idx=1&amp;sn=195b7e98450befb9bde04ea58756a731&amp;chksm=8bcbaab8bcbc23ae01f8288bcfb2c65d0e8b9ee4610420c252fa1ab5709b7909b26d4d5da67b&amp;mpshare=1&amp;scene=23&amp;srcid&amp;sharer_sharetime=1565249364003&amp;sharer_shareid=456ba82bbd1a1c9f32e5725824095308%23rd" target="_blank" rel="noopener">10 分钟彻底理解 Redis 的持久化和主从复制</a><br><a href="https://zhuanlan.zhihu.com/p/53044266" target="_blank" rel="noopener">Codis AutoRebalance 流程学习</a><br><a href="https://www.cnblogs.com/zhoujinyi/p/9950105.html" target="_blank" rel="noopener">使用 codis-admin 搭建 codis 集群</a><br><a href="https://my.oschina.net/u/3023401/blog/1547362" target="_blank" rel="noopener">Codis 运维 D4 - Codis3 详解</a><br><a href="https://segmentfault.com/a/1190000021361786" target="_blank" rel="noopener">4000 余字为你讲透 Codis 内部工作原理</a><br><a href="https://qiankunli.github.io/2019/04/23/codis_source.html" target="_blank" rel="noopener">Codis 源码分析</a></p>]]></content>
    
    <summary type="html">
    
      Redis(Codis)分布式集群部署实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 学习路径</title>
    <link href="https://wsgzao.github.io/post/linux/"/>
    <id>https://wsgzao.github.io/post/linux/</id>
    <published>2020-07-12T06:59:49.000Z</published>
    <updated>2020-07-14T03:45:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Linux 在企业级的应用已经很普遍了，写这篇文章的意义不再是介绍细节，更多的是分享互联网中比较成熟资源，方便快速学习</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 07 月 12 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/linux/">https://wsgzao.github.io/post/linux/</a></p><hr><h2 id="学习路径"><a href="#学习路径" class="headerlink" title="学习路径"></a>学习路径</h2><blockquote><p>Linux 从拿证的角度出发是优先跟随 RHCE，但针对实际工作需求还需要熟练掌握 Bash Shell 和网络基础知识</p></blockquote><p>Linux 就该这么学 - <a href="https://www.linuxprobe.com/docs/LinuxProbe.pdf" target="_blank" rel="noopener">https://www.linuxprobe.com/docs/LinuxProbe.pdf</a></p><ul><li>作者持续更新并开源精心制作的 Linux 文档，推荐优先学习作为基础铺垫</li><li>以前还会推荐《鸟哥的 Linux 私房菜》，但现在就是《Linux 就该这么学》</li><li>如果需要解决常见 Linux 问题，推荐注册 Red Hat Developer 开发者账号，可以免费浏览丰富的 KB 资源</li></ul><p>Bash 脚本教程 - <a href="https://wangdoc.com/bash/" target="_blank" rel="noopener">https://wangdoc.com/bash/</a><br><a href="https://wsgzao.github.io/post/bash/">Bash 命令语法和 Bash Cheat Sheet 中文速查表</a></p><ul><li>阮一峰出品的 Bash 脚本教程，原理和常用案例已经写的非常清晰了，当然 awk 和 sed 的基础用法也要掌握</li><li>Bash 是 Linux 和 Mac 的默认 Shell（命令行环境），系统管理和服务器开发都需要它。虽然不难，但是语法很怪异，根本记不住，需要查手册。网上找不到简明扼要的中文教程，我很早就想整理一个，方便自己日后使用</li></ul><p><a href="https://weread.qq.com/web/reader/3da32b505dd9f43da9a1aca" target="_blank" rel="noopener">图解 HTTP</a></p><p><a href="https://time.geekbang.org/column/intro/100020901" target="_blank" rel="noopener">Linux 性能优化实战</a></p><p><a href="https://time.geekbang.org/column/intro/100007101" target="_blank" rel="noopener">趣谈网络协议</a></p><p><a href="https://time.geekbang.org/course/intro/100026801" target="_blank" rel="noopener">Web 协议详解与抓包实战</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://developers.redhat.com/" target="_blank" rel="noopener">Red Hat Developer</a></p>]]></content>
    
    <summary type="html">
    
      Linux学习路径
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Kubernetes 学习路径</title>
    <link href="https://wsgzao.github.io/post/kubernetes/"/>
    <id>https://wsgzao.github.io/post/kubernetes/</id>
    <published>2020-07-03T06:59:49.000Z</published>
    <updated>2020-07-30T06:41:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Kubernetes 已经成为容器编排标准，没有 OpenStack 复杂而庞大的知识体系，但是需要老老实实学习的知识点也不少，由于 K8s 每年的改动也挺多，我这边文章暂时分享一些我觉得有用的链接，方便大家系统性学习和思考</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 07 月 03 日 - 增加 K8s 开源工具和参考文章<br>2020 年 05 月 30 日 - 更新 Kubernetes 跟着官方文档从零搭建 K8S 实践<br>2020 年 04 月 16 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/kubernetes/">https://wsgzao.github.io/post/kubernetes/</a></p><hr><h2 id="Kubernetes-跟着官方文档从零搭建-K8S"><a href="#Kubernetes-跟着官方文档从零搭建-K8S" class="headerlink" title="Kubernetes 跟着官方文档从零搭建 K8S"></a>Kubernetes 跟着官方文档从零搭建 K8S</h2><p>本文将带领读者一起, 参照着 Kubernetes 官方文档, 对其安装部署进行讲解. Kubernetes 更新迭代很快, 书上、网上等教程可能并不能适用于新版本, 但官方文档能.</p><p>阅读这篇文章你能收获到:</p><ul><li>如何阅读 Kubernetes 官方安装指南并搭建一个 Kubernetes 环境</li><li>Kubernetes 安装过程中的注意事项</li><li>避过常见的坑</li></ul><p>阅读本文你需要:</p><ul><li>熟悉 Linux 命令</li><li>知道 Kubernetes 是用来干什么的 (不然装它干啥(ಥ_ಥ))</li><li>知道 Docker</li></ul><h3 id="Before-installing-kubeadm"><a href="#Before-installing-kubeadm" class="headerlink" title="Before installing kubeadm"></a>Before installing kubeadm</h3><blockquote><p>K8s 官网写的非常详细，列举实际操作的步骤供大家参考</p></blockquote><p>This page shows how to install the <code>kubeadm</code> toolbox. For information how to create a cluster with kubeadm once you have performed this installation process, see the <a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/" target="_blank" rel="noopener">Using kubeadm to Create a Cluster</a> page.</p><ul><li><a href="#before-you-begin">Before you begin</a></li><li><a href="#verify-mac-address">Verify the MAC address and product_uuid are unique for every node</a></li><li><a href="#check-network-adapters">Check network adapters</a></li><li><a href="#letting-iptables-see-bridged-traffic">Letting iptables see bridged traffic</a></li><li><a href="#check-required-ports">Check required ports</a></li><li><a href="#installing-runtime">Installing runtime</a></li><li><a href="#installing-kubeadm-kubelet-and-kubectl">Installing kubeadm, kubelet and kubectl</a></li><li><a href="#configure-cgroup-driver-used-by-kubelet-on-control-plane-node">Configure cgroup driver used by kubelet on control-plane node</a></li><li><a href="#troubleshooting">Troubleshooting</a></li><li><a href="#whats-next">What’s next</a></li></ul><p>服务器或虚拟机数量：2<br>机器配置: CPU &gt;= 2, 内存 &gt;= 2G<br>操作系统：本文为 CentOS 7<br>备注：根据不同操作系统需认真阅读和理解官方文档说明</p><ul><li>One or more machines running one of:<ul><li>Ubuntu 16.04+</li><li>Debian 9+</li><li>CentOS 7</li><li>Red Hat Enterprise Linux (RHEL) 7</li><li>Fedora 25+</li><li>HypriotOS v1.0.1+</li><li>Container Linux (tested with 1800.6.0)</li></ul></li><li>2 GB or more of RAM per machine (any less will leave little room for your apps)</li><li>2 CPUs or more</li><li>Full network connectivity between all machines in the cluster (public or private network is fine)</li><li>Unique hostname, MAC address, and product_uuid for every node. See <a href="#verify-mac-address">here</a> for more details.</li><li>Certain ports are open on your machines. See <a href="#check-required-ports">here</a> for more details.</li><li>Swap disabled. You <strong>MUST</strong> disable swap in order for the kubelet to work properly.</li></ul><p>从官网找到<a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/" target="_blank" rel="noopener">kubeadm 安装文档入口</a>, 文档很详细. 英文阅读没有障碍的读者推荐直接查看英文文档, 中文文档不全且更新不及时安装时可能存在问题.</p><blockquote><p>以下操作应用于 k8s-master 和 k8s-worker</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改主机名</span></span><br><span class="line">hostnamectl <span class="built_in">set</span>-hostname k8s-master</span><br><span class="line">hostnamectl <span class="built_in">set</span>-hostname k8s-worker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 hosts</span></span><br><span class="line">vim /etc/hosts</span><br><span class="line">10.71.16.32 k8s-master</span><br><span class="line">10.71.16.33 k8s-worker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确认 MAC 和 product_uuid 的唯一性</span></span><br><span class="line"><span class="comment"># 查看 MAC</span></span><br><span class="line">ifconfig -a    </span><br><span class="line"><span class="comment"># 查看 product_uuid</span></span><br><span class="line">cat /sys/class/dmi/id/product_uuid </span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查网络端口和防火墙，这个根据实际情况配置，应该没有难度，如果是内部测试可以直接禁用防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁用 SELinux</span></span><br><span class="line"><span class="comment"># 关闭 selinux，重启后生效</span></span><br><span class="line">sed -i <span class="string">'s/SELINUX=enforcing/SELINUX=disabled/g'</span> /etc/sysconfig/selinux</span><br><span class="line"><span class="comment"># 设置 selinux 状态，临时生效命令</span></span><br><span class="line">setenforce 0</span><br><span class="line"><span class="comment"># 检查 selinux 状态</span></span><br><span class="line">sestatus</span><br><span class="line">SELinux status: disabled</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁用交换分区</span></span><br><span class="line"><span class="comment"># 将 swap 注释掉，重启后生效</span></span><br><span class="line">vim /etc/fstab </span><br><span class="line"><span class="comment">#UUID=30e08a6d-75ba-4750-ab6d-2d11f6137c97 swap                    swap    defaults        0 0</span></span><br><span class="line"><span class="comment"># 临时禁用 swap</span></span><br><span class="line">swapoff -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># Letting iptables see bridged traffic</span></span><br><span class="line">cat &lt;&lt;EOF | sudo tee /etc/sysctl.d/k8s.conf</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sudo sysctl --system</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make sure that the br_netfilter module is loaded before this step. This can be done by running </span></span><br><span class="line">lsmod | grep br_netfilter</span><br><span class="line"><span class="comment"># To load it explicitly call </span></span><br><span class="line">sudo modprobe br_netfilter</span><br></pre></td></tr></table></figure><h3 id="Installing-runtime"><a href="#Installing-runtime" class="headerlink" title="Installing runtime"></a>Installing runtime</h3><blockquote><p>选择安装 Docker, 注意阅读官网文档的推荐版本，若网络不好, 可换用国内源</p></blockquote><p><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-runtime" target="_blank" rel="noopener">Installing runtime</a></p><p><a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener">https://docs.docker.com/engine/install/centos/</a></p><p><a href="https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker" target="_blank" rel="noopener">https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"># (Install Docker CE)</span><br><span class="line">## Set up the repository</span><br><span class="line">### Install required packages</span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line">## Add the Docker repository</span><br><span class="line">yum-config-manager --add-repo \</span><br><span class="line">  https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"># Install Docker CE</span><br><span class="line">yum update -y &amp;&amp; yum install -y \</span><br><span class="line">  containerd.io-1.2.13 \</span><br><span class="line">  docker-ce-19.03.8 \</span><br><span class="line">  docker-ce-cli-19.03.8</span><br><span class="line">  </span><br><span class="line">## Create /etc/docker</span><br><span class="line">mkdir /etc/docker</span><br><span class="line"></span><br><span class="line"># Set up the Docker daemon</span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span><br><span class="line">  &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">  &quot;log-opts&quot;: &#123;</span><br><span class="line">    &quot;max-size&quot;: &quot;100m&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;storage-driver&quot;: &quot;overlay2&quot;,</span><br><span class="line">  &quot;storage-opts&quot;: [</span><br><span class="line">    &quot;overlay2.override_kernel_check=true&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line"></span><br><span class="line"># Restart Docker</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"># 利用 docker-cn 提供的镜像源</span><br><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&apos;EOF&apos;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="Installing-kubeadm-kubelet-and-kubectl"><a href="#Installing-kubeadm-kubelet-and-kubectl" class="headerlink" title="Installing kubeadm, kubelet and kubectl"></a>Installing kubeadm, kubelet and kubectl</h3><p><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl" target="_blank" rel="noopener">Installing kubeadm, kubelet and kubectl</a></p><p>官网有一行配置是错误的，首次部署 K8s 时请移除改行，exclude=kubelet kubeadm kubectl</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\<span class="variable">$basearch</span></span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># Set SELinux in permissive mode (effectively disabling it)</span></span><br><span class="line">setenforce 0</span><br><span class="line"></span><br><span class="line">yum install -y kubelet kubeadm kubectl –disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> –now kubelet</span><br></pre></td></tr></table></figure><blockquote><p>配置国内 kubeadm 源</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Debian/Ubuntu</span></span><br><span class="line">apt-get update &amp;&amp; apt-get install -y apt-transport-https</span><br><span class="line">curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class="line">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y kubelet kubeadm kubectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS/RHEL/Fedora</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">setenforce 0</span><br><span class="line">yum install -y kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure><h3 id="初始化-k8s-master"><a href="#初始化-k8s-master" class="headerlink" title="初始化 k8s-master"></a>初始化 k8s-master</h3><blockquote><p>以下操作应用于 k8s-master</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成初始化文件 </span></span><br><span class="line">kubeadm config <span class="built_in">print</span> init-defaults &gt; kubeadm-init.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 该文件有两处需要修改:</span></span><br><span class="line"><span class="comment">## 将 advertiseAddress: 1.2.3.4 修改为本机地址</span></span><br><span class="line"><span class="comment">### (若国内网络) 将 imageRepository: k8s.gcr.io 修改为 imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 kubeadm-init.yaml</span></span><br><span class="line">vim kubeadm-init.yaml</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class="line">bootstrapTokens:</span><br><span class="line">- groups:</span><br><span class="line">  - system:bootstrappers:kubeadm:default-node-token</span><br><span class="line">  token: abcdef.0123456789abcdef</span><br><span class="line">  ttl: 24h0m0s</span><br><span class="line">  usages:</span><br><span class="line">  - signing</span><br><span class="line">  - authentication</span><br><span class="line">kind: InitConfiguration</span><br><span class="line">localAPIEndpoint:</span><br><span class="line">  advertiseAddress: 10.71.16.32</span><br><span class="line">  bindPort: 6443</span><br><span class="line">nodeRegistration:</span><br><span class="line">  criSocket: /var/run/dockershim.sock</span><br><span class="line">  name: k8s-master</span><br><span class="line">  taints:</span><br><span class="line">  - effect: NoSchedule</span><br><span class="line">    key: node-role.kubernetes.io/master</span><br><span class="line">---</span><br><span class="line">apiServer:</span><br><span class="line">  timeoutForControlPlane: 4m0s</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class="line">certificatesDir: /etc/kubernetes/pki</span><br><span class="line">clusterName: kubernetes</span><br><span class="line">controllerManager: &#123;&#125;</span><br><span class="line">dns:</span><br><span class="line">  <span class="built_in">type</span>: CoreDNS</span><br><span class="line">etcd:</span><br><span class="line">  <span class="built_in">local</span>:</span><br><span class="line">    dataDir: /var/lib/etcd</span><br><span class="line">imageRepository: k8s.gcr.io</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: v1.18.0</span><br><span class="line">networking:</span><br><span class="line">  dnsDomain: cluster.local</span><br><span class="line">  serviceSubnet: 10.96.0.0/12</span><br><span class="line">scheduler: &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载镜像</span></span><br><span class="line">kubeadm config images pull --config kubeadm-init.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行初始化</span></span><br><span class="line">kubeadm init --config kubeadm-init.yaml</span><br><span class="line"></span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接下来配置环境, 让当前用户可以执行 kubectl 命令:</span></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">"kubectl apply -f [podnetwork].yaml"</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后两行需要保存下来, kubeadm join ... 是 worker 节点加入所需要执行的命令</span></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 10.71.16.32:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:67e23b74df39cfca4dd0ba3d747139cb0dd4ea5c546a12c60e84b3c9b057fc6e </span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试一下此处的 NotReady 是因为网络还没配置</span></span><br><span class="line">kubectl get node</span><br><span class="line"></span><br><span class="line">NAME         STATUS      ROLES    AGE    VERSION</span><br><span class="line">k8s-master   NotReady    master   12m    v1.18.3</span><br></pre></td></tr></table></figure><blockquote><p>配置网络，注意文档中的最新版本差异</p></blockquote><p><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/" target="_blank" rel="noopener">create-cluster-kubeadm</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载描述文件</span></span><br><span class="line"><span class="comment"># https://docs.projectcalico.org/releases</span></span><br><span class="line"><span class="comment"># https://docs.projectcalico.org/v3.14/manifests/calico.yaml</span></span><br><span class="line">wget https://docs.projectcalico.org/manifests/calico.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开 calico.yaml, 将 192.168.0.0/16 修改为 10.96.0.0/12</span></span><br><span class="line">cat kubeadm-init.yaml | grep serviceSubnet:</span><br><span class="line">serviceSubnet: 10.96.0.0/12</span><br><span class="line"><span class="comment"># 需要注意的是, calico.yaml 中的 IP 和 kubeadm-init.yaml 需要保持一致, 要么初始化前修改 kubeadm-init.yaml, 要么初始化后修改 calico.yaml</span></span><br><span class="line">vim calico.yaml</span><br><span class="line">            <span class="comment"># The default IPv4 pool to create on startup if none exists. Pod IPs will be</span></span><br><span class="line">            <span class="comment"># chosen from this range. Changing this value after installation will have</span></span><br><span class="line">            <span class="comment"># no effect. This should fall within `--cluster-cidr`.</span></span><br><span class="line">            - name: CALICO_IPV4POOL_CIDR</span><br><span class="line">              value: <span class="string">"10.96.0.0/12"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化网络</span></span><br><span class="line">kubectl apply -f calico.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时查看 node 信息, master 的状态已经是 Ready 了</span></span><br><span class="line">kubectl get node</span><br><span class="line">NAME         STATUS   ROLES    AGE   VERSION</span><br><span class="line">k8s-master   Ready    master   15m   v1.18.3</span><br></pre></td></tr></table></figure><blockquote><p>安装 Dashboard，注意官方文档的更新</p></blockquote><p><a href="https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/" target="_blank" rel="noopener">Web UI (Dashboard)</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deploying the Dashboard UI</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署完毕后, 执行 kubectl get pods --all-namespaces 查看 pods 状态</span></span><br><span class="line">kubectl get pods --all-namespaces | grep dashboard</span><br><span class="line">kubernetes-dashboard   dashboard-metrics-scraper-6b4884c9d5-79rvt       1/1     Running   0          4h5m</span><br><span class="line">kubernetes-dashboard   kubernetes-dashboard-7b544877d5-zb4bl            1/1     Running   0          4h5m</span><br></pre></td></tr></table></figure><blockquote><p>创建用户，如果方便登录测试可以创建匿名账户</p></blockquote><p><a href="https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/creating-sample-user.md" target="_blank" rel="noopener">Creating sample user</a></p><p>创建一个用于登录 Dashboard 的用户. 创建文件 dashboard-adminuser.yaml 内容如下:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">admin-user</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">admin-user</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">cluster-admin</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">- kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">admin-user</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br></pre></td></tr></table></figure><p>执行命令 kubectl apply -f dashboard-adminuser.yaml</p><p>创建用于登录 Dashboard 的匿名用户. 创建文件 dashboard-annoymous.yaml 内容如下:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard-anonymous</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">- apiGroups:</span> <span class="string">[""]</span></span><br><span class="line"><span class="attr">  resources:</span> <span class="string">["services/proxy"]</span></span><br><span class="line"><span class="attr">  resourceNames:</span> <span class="string">["https:kubernetes-dashboard:"]</span></span><br><span class="line"><span class="attr">  verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"create"</span><span class="string">,</span> <span class="string">"update"</span><span class="string">,</span> <span class="string">"patch"</span><span class="string">,</span> <span class="string">"delete"</span><span class="string">]</span></span><br><span class="line"><span class="attr">- nonResourceURLs:</span> <span class="string">["/ui",</span> <span class="string">"/ui/*"</span><span class="string">,</span> <span class="string">"/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/*"</span><span class="string">]</span></span><br><span class="line"><span class="attr">  verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"create"</span><span class="string">,</span> <span class="string">"update"</span><span class="string">,</span> <span class="string">"patch"</span><span class="string">,</span> <span class="string">"delete"</span><span class="string">]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard-anonymous</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dashboard-anonymous</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">- kind:</span> <span class="string">User</span></span><br><span class="line"><span class="attr">  name:</span> <span class="attr">system:anonymous</span></span><br></pre></td></tr></table></figure><p>执行命令 kubectl apply -f dashboard-annoymous.yaml.yaml</p><blockquote><p>生成证书，这步非必须，根据情况生成并导入客户端</p></blockquote><p><a href="https://github.com/kubernetes/dashboard/blob/master/docs/user/accessing-dashboard/README.md" target="_blank" rel="noopener">Accessing Dashboard</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">'client-certificate-data'</span> ~/.kube/config | head -n 1 | awk <span class="string">'&#123;print $2&#125;'</span> | base64 -d &gt;&gt; kubecfg.crt</span><br><span class="line">grep <span class="string">'client-key-data'</span> ~/.kube/config | head -n 1 | awk <span class="string">'&#123;print $2&#125;'</span> | base64 -d &gt;&gt; kubecfg.key</span><br><span class="line">openssl pkcs12 -<span class="built_in">export</span> -clcerts -inkey kubecfg.key -<span class="keyword">in</span> kubecfg.crt -out kubecfg.p12 -name <span class="string">"kubernetes-client"</span></span><br></pre></td></tr></table></figure><p>第三条命令生成证书时会提示输入密码, 可以直接两次回车跳过</p><p><code>kubecfg.p12</code> 即需要导入客户端机器的证书. 将证书拷贝到客户端机器上, 导入即可</p><p>需要注意的是: 若生成证书时跳过了密码, 导入时提示填写密码直接回车即可, 不要纠结密码哪来的</p><p>此时我们可以登录面板了, 访问地址:<br>https://{k8s-master-ip}:6443/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#/login<br>登录时会提示选择证书, 确认后会提示输入当前用户名密码(注意是电脑的用户名密码)</p><blockquote><p>登录 Dashboard</p></blockquote><p>执行 <code>kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk &#39;{print $1}&#39;)</code>, 获取 Token.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-user | awk <span class="string">'&#123;print $1&#125;'</span>)</span><br><span class="line"></span><br><span class="line">Name:         admin-user-token-wdj28</span><br><span class="line">Namespace:    kube-system</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: admin-user</span><br><span class="line">              kubernetes.io/service-account.uid: f97e69ff-c4aa-45d4-bbb2-5221f3fb43cc</span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">ca.crt:     1025 bytes</span><br><span class="line">namespace:  11 bytes</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IlMxUGJ5TTR0cUQzd3JSODZfdWNScU14YXdHdmpLakdwSldrdTdhT1UyV2cifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLXdkajI4Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJmOTdlNjlmZi1jNGFhLTQ1ZDQtYmJiMi01MjIxZjNmYjQzY2MiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06YWRtaW4tdXNlciJ9.wTdqAJfK0Z7C43SU0mAwoQw2dCdBcUD6A3uVo03OkW-r8Y630NP6MQqwmpi4IERohYjY6528oW0Ucj_2ukWu8z5eUAabNgL-_BQGXe2Zg1oGRK_LY90JN_L6f8mpYrPDFLfjSnUAdgb3zzCzhzIa2RihiYZW-mGm_ucfK5xt3dpFbDeIeEgePyFjUiX5ZdoMJEuerd6zgee1yeXEctQD4TRRxxtFebcLRgFDWVfOz0xWRNN1qSOB5v1ChkaQ5a6YxvGwjcrwrQaVN8bp73Zueu7FwmbkObT_EpWy0aZ7csTcSuNZ2K8QTpXr6NtN5xIcTpyMmIHmc9qCaskr5uM3qA</span><br></pre></td></tr></table></figure><p>复制该 Token 到登录页, 点击登录即可</p><h3 id="添加-k8s-worker"><a href="#添加-k8s-worker" class="headerlink" title="添加 k8s-worker"></a>添加 k8s-worker</h3><blockquote><p>添加 Worker 节点，以下操作应用于 k8s-worker</p></blockquote><p>重复执行 <code>前期准备 - 修改 hostname</code> ~ <code>安装 Kubernetes - 修改网络配置</code> 的全部操作, 初始化一个 Worker 机器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 执行如下命令将 Worker 加入集群，此处的秘钥是初始化 Master 后生成的</span><br><span class="line">kubeadm join 10.71.16.32:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:67e23b74df39cfca4dd0ba3d747139cb0dd4ea5c546a12c60e84b3c9b057fc6e </span><br><span class="line"># 添加完毕后, 在 Master 上查看节点状态</span><br><span class="line">kubectl get node</span><br><span class="line">NAME         STATUS   ROLES    AGE   VERSION</span><br><span class="line">k8s-master   Ready    master   10h   v1.18.3</span><br><span class="line">k8s-worker   Ready    &lt;none&gt;   96s   v1.18.3</span><br></pre></td></tr></table></figure><p><a href="https://github.com/kubernetes/dashboard" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard</a></p><p><a href="https://blog.piaoruiqing.com/2019/09/17/kubernetes-1-installation/" target="_blank" rel="noopener">Kubernetes(一) 跟着官方文档从零搭建 K8S</a></p><h2 id="Kubernetes-应用部署"><a href="#Kubernetes-应用部署" class="headerlink" title="Kubernetes 应用部署"></a>Kubernetes 应用部署</h2><p>本文将与读者一起, 学习如何在 Kubernetes 上部署应用. 包括: 如何部署应用、发布文件讲解、将本地项目打包发布等.</p><p>阅读这篇文章你能收获到:</p><ul><li>学会如何在 k8s 部署应用</li><li>如何打包 Docker 镜像、上传到私有库</li></ul><p>阅读本文你需要:</p><ul><li>熟悉 Linux 命令</li><li>有一个 Kubernetes 环境 </li></ul><h3 id="理解描述文件"><a href="#理解描述文件" class="headerlink" title="理解描述文件"></a>理解描述文件</h3><p>首先, 我们通过在 Kubernetes 部署 Nginx 来理解描述文件.</p><p>一般地, Kubernetes 使用 yaml(或 json)来描述发布配置. 下面是一个简单的描述文件: <code>nginx-pod.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span>      <span class="comment"># 描述文件所遵循 KubernetesAPI 的版本</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span>           <span class="comment"># 描述的类型是 pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-pod</span>   <span class="comment"># pod 的名称</span></span><br><span class="line"><span class="attr">  labels:</span>           <span class="comment"># 标签</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">nginx-pod</span></span><br><span class="line"><span class="attr">    env:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  containers:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">nginx-pod</span>     <span class="comment"># 容器名</span></span><br><span class="line"><span class="attr">      image:</span> <span class="attr">nginx:1.18</span>   <span class="comment"># 镜像名称及版本</span></span><br><span class="line"><span class="attr">      imagePullPolicy:</span> <span class="string">IfNotPresent</span>   <span class="comment"># 如果本地不存在就去远程仓库拉取</span></span><br><span class="line"><span class="attr">      ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">80</span>   <span class="comment"># pod 对外端口</span></span><br><span class="line"><span class="attr">  restartPolicy:</span> <span class="string">Always</span></span><br></pre></td></tr></table></figure><p>我们登录 Master 节点, 使用 <code>kubectl</code> 命令来部署这个文件所描述的应用. (当然, 使用 dashboard 发布也可)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f nginx-pod.yaml</span><br><span class="line">pod/nginx-pod created</span><br><span class="line"></span><br><span class="line">kubectl get pods</span><br><span class="line">NAME        READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-pod   1/1     Running   0          39s</span><br></pre></td></tr></table></figure><p><code>kubectl get pods</code> 命令是用来查看 pod 列表的, 使用 <code>grep</code> 筛选出 nginx 相关的 pod. 此时 nginx 已经发布完成了. 我们可以从 dashboard 来直观地查看到应用状态.</p><p>备注: 删除 pod 可使用 <code>kubectl delete -f nginx-pod.yaml</code> 命令, 也可直接在 dashboard 进行操作.</p><h3 id="如何访问服务"><a href="#如何访问服务" class="headerlink" title="如何访问服务"></a>如何访问服务</h3><p>上一小节我们部署了一个 Nginx pod, 但我们无法访问到该 Nginx.</p><p>想要访问到 pod 中的服务, 最简单的方式就是通过端口转发, 执行如下命令, 将宿主机的 <code>9999</code> 端口与 nginx-pod 的 <code>80</code> 端口绑定:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl port-forward --address 0.0.0.0 nginx-pod 9999:80</span><br><span class="line">Forwarding from 0.0.0.0:9999 -&gt; 80</span><br><span class="line">Handling connection <span class="keyword">for</span> 9999</span><br></pre></td></tr></table></figure><p>此时, 我们可以通过访问宿主机 9999 端口来访问 Nginx.</p><h3 id="部署本地项目"><a href="#部署本地项目" class="headerlink" title="部署本地项目"></a>部署本地项目</h3><p>将本地开发的项目发布到 Kubernetes, 需要将项目打包成 Docker 镜像, 然后将镜像推送到仓库(公开 / 私有仓库都可).</p><p>首先, 我们需要一个可以运行的本地项目, 笔者使用 spring-boot 构建了一个简单的 web 项目:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/k8s-test"</span>)</span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">K8sTestApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/timestamp"</span>)</span><br><span class="line">    <span class="keyword">public</span> ResponseEntity&lt;?&gt; getTimestamp() &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseEntity.ok(System.currentTimeMillis() + <span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(K8sTestApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打包-Docker-镜像"><a href="#打包-Docker-镜像" class="headerlink" title="打包 Docker 镜像"></a>打包 Docker 镜像</h3><p><a href="https://docs.docker.com/engine/reference/builder/" target="_blank" rel="noopener">Dockerfile reference</a></p><p>有了项目, 我们需要将其打包成一个 Docker 镜像, <code>Dockerfile</code> 内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM java:8-alpine</span><br><span class="line">COPY ./k8s-test-0.0.1-SNAPSHOT.jar /usr/app/</span><br><span class="line">WORKDIR /usr/app</span><br><span class="line">ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;k8s-test-0.0.1-SNAPSHOT.jar&quot;]</span><br></pre></td></tr></table></figure><ul><li><code>FROM java:8-alpine</code>: 该镜像基于 <code>java-8-alpine</code> 镜像.</li><li><code>COPY ./target/k8s-test-0.0.1-SNAPSHOT.jar /usr/app/</code>: 将编译打包好的 jar 拷贝到镜像的 <code>/usr/app</code> 目录下.</li><li><code>WORKDIR /usr/app</code>: 工作目录指定为 <code>/usr/app</code>.</li><li><code>ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;k8s-test-0.0.1-SNAPSHOT.jar&quot;]</code>: 启动 docker 时执行 <code>java -jar k8s-test-0.0.1-SNAPSHOT.jar</code> 命令</li></ul><p>进入到 Dockerfile 所在目录执行 <code>docker build -t piaoruiqing/k8s-test .</code> 进行打包. 注意不要遗漏掉命令最后面的 <code>.</code> , 它代表当前目录.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 打包</span><br><span class="line">docker build -t piaoruiqing/k8s-test .</span><br><span class="line"># 通过 docker images 命令可以查看本地镜像列表:</span><br><span class="line">docker images | grep k8s</span><br><span class="line">piaoruiqing/k8s-test     latest         efe9e9625376        4 minutes ago       174MB</span><br></pre></td></tr></table></figure><h3 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h3><p>留空给 Harbor</p><p><a href="https://blog.piaoruiqing.com/2019/09/28/kubernetes-2-deploy/" target="_blank" rel="noopener">Kubernetes(二) 应用部署</a></p><h2 id="如何从外部访问服务"><a href="#如何从外部访问服务" class="headerlink" title="如何从外部访问服务"></a>如何从外部访问服务</h2><p>通过前文的讲解,《跟着官方文档从零搭建 K8S》、《应用部署》相信读者已经对 Kubernetes 安装及部署应用有了一定的了解. 接下来, 本文将针对如何将服务暴露给外部进行讲解.</p><p>阅读这篇文章你能收获到:</p><ul><li>了解 Kubernetes 暴露服务的几种方案及其优缺点.</li></ul><p>阅读本文你需要:</p><ul><li>了解基本的 Kubernetes 命令</li><li>有一个 Kubernetes 环境</li></ul><h3 id="将服务暴露给外部客户端的几种方式"><a href="#将服务暴露给外部客户端的几种方式" class="headerlink" title="将服务暴露给外部客户端的几种方式"></a>将服务暴露给外部客户端的几种方式</h3><ul><li>通过 <code>port-forward</code> 转发, 这种方式在之前的文章中有提到过, 操作方便、适合调试时使用, <strong> 不适用于生产环境 </strong>.</li><li>通过 <code>NodePort</code>, 此时集群中每一个节点 (Node) 都会监听指定端口, 我们通过任意节点的端口即可访问到指定服务. 但过多的服务会开启大量端口难以维护.</li><li>通过 <code>LoadBalance</code> 来暴露服务. <code>LoadBalance(负载均衡 LB)</code> 通常由云服务商提供, 如果云环境中不提供 LB 服务, 我们通常直接使用 <code>Ingress</code>, 或使用 <code>MetalLB</code> 来自行配置 LB.</li><li>通过 <code>Ingress</code> 公开多个服务. <code>Ingress</code> 公开了从群集外部到群集内 <code>services</code> 的 HTTP 和 HTTPS 路由. 流量路由由 <code>Ingress</code> 资源上定义的规则控制. 在云服务商不提供 LB 服务的情况下, 我们可以直接使用 <code>Ingress</code> 来暴露服务. (另外, 使用 <code>LB + Ingress</code> 的部署方案可以避免过多 LB 应用带来的花费).</li></ul><p><a href="https://blog.piaoruiqing.com/2019/10/20/kubernetes-3-access-service/" target="_blank" rel="noopener">Kubernetes(三) 如何从外部访问服务</a></p><h2 id="K8s-开源管理产品推荐"><a href="#K8s-开源管理产品推荐" class="headerlink" title="K8s 开源管理产品推荐"></a>K8s 开源管理产品推荐</h2><p><a href="https://github.com/easzlab/kubeasz" target="_blank" rel="noopener">kubeasz</a></p><p><a href="https://kuboard.cn/" target="_blank" rel="noopener">kuboard</a></p><p><a href="https://kubesphere.com.cn/" target="_blank" rel="noopener">KubeSphere</a></p><p><a href="https://github.com/jetstack/cert-manager" target="_blank" rel="noopener">cert-manager</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://kubernetes.io/docs/" target="_blank" rel="noopener">Kubernetes Documentation</a></p><p><a href="https://cloud.google.com/kubernetes-engine/docs/" target="_blank" rel="noopener">Google Kubernetes Engine 文档</a></p><p><a href="https://github.com/rootsongjc/kubernetes-handbook" target="_blank" rel="noopener">Kubernetes Handbook</a></p><p><a href="https://github.com/feiskyer/kubernetes-handbook" target="_blank" rel="noopener">Kubernetes 指南</a></p><p><a href="https://github.com/opsnull/follow-me-install-kubernetes-cluster" target="_blank" rel="noopener">和我一步步部署 kubernetes 集群</a></p><p><a href="https://github.com/caicloud/kube-ladder" target="_blank" rel="noopener">才云开源内部 Kubernetes 学习路径</a></p><p><a href="https://time.geekbang.org/column/intro/116" target="_blank" rel="noopener">深入剖析 Kubernetes</a></p>]]></content>
    
    <summary type="html">
    
      Kubernetes学习路径
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>ethtool 原理介绍和解决网卡丢包排查思路</title>
    <link href="https://wsgzao.github.io/post/ethtool/"/>
    <id>https://wsgzao.github.io/post/ethtool/</id>
    <published>2020-06-22T06:59:49.000Z</published>
    <updated>2020-06-22T10:38:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前记录过处理因为 LVS 网卡流量负载过高导致软中断发生丢包的问题，<a href="https://wsgzao.github.io/post/rps/">RPS 和 RFS 网卡多队列性能调优实践</a>，对一般人来说压力不大的情况下其实碰见的概率并不高。这次想分享的话题是比较常见服务器网卡丢包现象排查思路，如果你是想了解点对点的丢包解决思路涉及面可能就比较广，不妨先参考之前的文章 <a href="https://wsgzao.github.io/post/mtr/">如何使用 MTR 诊断网络问题</a>，对于 Linux 常用的网卡丢包分析工具自然是 ethtool。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 06 月 22 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/ethtool/">https://wsgzao.github.io/post/ethtool/</a></p><hr><h2 id="ethtool-简介"><a href="#ethtool-简介" class="headerlink" title="ethtool 简介"></a>ethtool 简介</h2><p>ethtool - utility for controlling network drivers and hardware</p><p>ethtool is the standard Linux utility for controlling network drivers and hardware, particularly for wired Ethernet devices. It can be used to:</p><ul><li>Get identification and diagnostic information</li><li>Get extended device statistics</li><li>Control speed, duplex, autonegotiation and flow control for Ethernet devices</li><li>Control checksum offload and other hardware offload features</li><li>Control DMA ring sizes and interrupt moderation</li><li>Control receive queue selection for multiqueue devices</li><li>Upgrade firmware in flash memory</li></ul><p>Most features are dependent on support in the specific driver. See the manual page for full information.</p><p>ethtool 用于查看和修改网络设备（尤其是有线以太网设备）的驱动参数和硬件设置。你可以根据需要更改以太网卡的参数，包括自动协商、速度、双工和局域网唤醒等参数。通过对以太网卡的配置，你的计算机可以通过网络有效地进行通信。该工具提供了许多关于接驳到你的 Linux 系统的以太网设备的信息。</p><h2 id="了解接收数据包的流程"><a href="#了解接收数据包的流程" class="headerlink" title="了解接收数据包的流程"></a>了解接收数据包的流程</h2><blockquote><p>这里摘取了美团技术团队的分析，在此表示感谢</p></blockquote><p>接收数据包是一个复杂的过程，涉及很多底层的技术细节，但大致需要以下几个步骤：</p><ol><li>网卡收到数据包。</li><li>将数据包从网卡硬件缓存转移到服务器内存中。</li><li>通知内核处理。</li><li>经过 TCP/IP 协议逐层处理。</li><li>应用程序通过 <code>read()</code> 从 <code>socket buffer</code> 读取数据。</li></ol><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190704163040.png" alt=""></p><h3 id="将网卡收到的数据包转移到主机内存（NIC-与驱动交互）"><a href="#将网卡收到的数据包转移到主机内存（NIC-与驱动交互）" class="headerlink" title="将网卡收到的数据包转移到主机内存（NIC 与驱动交互）"></a>将网卡收到的数据包转移到主机内存（NIC 与驱动交互）</h3><p>NIC 在接收到数据包之后，首先需要将数据同步到内核中，这中间的桥梁是 <code>rx ring buffer</code>。它是由 NIC 和驱动程序共享的一片区域，事实上，<code>rx ring buffer</code> 存储的并不是实际的 packet 数据，而是一个描述符，这个描述符指向了它真正的存储地址，具体流程如下：</p><ol><li>驱动在内存中分配一片缓冲区用来接收数据包，叫做 <code>sk_buffer</code>；</li><li>将上述缓冲区的地址和大小（即接收描述符），加入到 <code>rx ring buffer</code>。描述符中的缓冲区地址是 DMA 使用的物理地址；</li><li>驱动通知网卡有一个新的描述符；</li><li>网卡从 <code>rx ring buffer</code> 中取出描述符，从而获知缓冲区的地址和大小；</li><li>网卡收到新的数据包；</li><li>网卡将新数据包通过 DMA 直接写到 <code>sk_buffer</code> 中。</li></ol><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190704163052.png" alt=""></p><p>当驱动处理速度跟不上网卡收包速度时，驱动来不及分配缓冲区，NIC 接收到的数据包无法及时写到 <code>sk_buffer</code>，就会产生堆积，当 NIC 内部缓冲区写满后，就会丢弃部分数据，引起丢包。这部分丢包为 <code>rx_fifo_errors</code>，在 <code>/proc/net/dev</code> 中体现为 fifo 字段增长，在 ifconfig 中体现为 overruns 指标增长。</p><h3 id="通知系统内核处理（驱动与-Linux-内核交互）"><a href="#通知系统内核处理（驱动与-Linux-内核交互）" class="headerlink" title="通知系统内核处理（驱动与 Linux 内核交互）"></a>通知系统内核处理（驱动与 Linux 内核交互）</h3><p>这个时候，数据包已经被转移到了 <code>sk_buffer</code> 中。前文提到，这是驱动程序在内存中分配的一片缓冲区，并且是通过 DMA 写入的，这种方式不依赖 CPU 直接将数据写到了内存中，意味着对内核来说，其实并不知道已经有新数据到了内存中。那么如何让内核知道有新数据进来了呢？答案就是中断，通过中断告诉内核有新数据进来了，并需要进行后续处理。</p><p>提到中断，就涉及到硬中断和软中断，首先需要简单了解一下它们的区别：</p><ul><li>硬中断： 由硬件自己生成，具有随机性，硬中断被 CPU 接收后，触发执行中断处理程序。中断处理程序只会处理关键性的、短时间内可以处理完的工作，剩余耗时较长工作，会放到中断之后，由软中断来完成。硬中断也被称为上半部分。</li><li>软中断： 由硬中断对应的中断处理程序生成，往往是预先在代码里实现好的，不具有随机性。（除此之外，也有应用程序触发的软中断，与本文讨论的网卡收包无关。）也被称为下半部分。</li></ul><p><strong> 当 NIC 把数据包通过 DMA 复制到内核缓冲区 <code>sk_buffer</code> 后，NIC 立即发起一个硬件中断。CPU 接收后，首先进入上半部分，网卡中断对应的中断处理程序是网卡驱动程序的一部分，之后由它发起软中断，进入下半部分，开始消费 <code>sk_buffer</code> 中的数据，交给内核协议栈处理。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190704163113.png" alt=""></p><p>通过中断，能够快速及时地响应网卡数据请求，但如果数据量大，那么会产生大量中断请求，CPU 大部分时间都忙于处理中断，效率很低。为了解决这个问题，现在的内核及驱动都采用一种叫 NAPI（new API）的方式进行数据处理，其原理可以简单理解为 中断 + 轮询，在数据量大时，一次中断后通过轮询接收一定数量包再返回，避免产生多次中断。</p><h2 id="ifconfig-解释"><a href="#ifconfig-解释" class="headerlink" title="ifconfig 解释"></a>ifconfig 解释</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ifconfig eth0</span></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500</span><br><span class="line">inet 192.168.1.135 netmask 255.255.255.0 broadcast 192.168.1.255</span><br><span class="line">inet6 fe80::20c:29ff:fe9b:52d3 prefixlen 64 scopeid 0x20&lt;link&gt;</span><br><span class="line">ether 00:0c:29:9b:52:d3 txqueuelen 1000 (Ethernet)</span><br><span class="line">RX packets 833 bytes 61846 (60.3 KiB)</span><br><span class="line">RX errors 0 dropped 0 overruns 0 frame 0</span><br><span class="line">TX packets 122 bytes 9028 (8.8 KiB)</span><br><span class="line">TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0</span><br></pre></td></tr></table></figure><p>(1) RX errors</p><p>表示总的收包的错误数量，这包括 too-long-frames 错误，Ring Buffer 溢出错误，crc 校验错误，帧同步错误，fifo overruns 以及 missed pkg 等等。</p><p>(2) RX dropped</p><p>表示数据包已经进入了 Ring Buffer，但是由于内存不够等系统原因，导致在拷贝到内存的过程中被丢弃。</p><p>(3) RX overruns</p><p>表示了 fifo 的 overruns，这是由于 Ring Buffer(aka Driver Queue) 传输的 IO 大于 kernel 能够处理的 IO 导致的，而 Ring Buffer 则是指在发起 IRQ 请求之前的那块 buffer。很明显，overruns 的增大意味着数据包没到 Ring Buffer 就被网卡物理层给丢弃了，而 CPU 无法即使的处理中断是造成 Ring Buffer 满的原因之一，上面那台有问题的机器就是因为 interruprs 分布的不均匀 (都压在 core0)，没有做 affinity 而造成的丢包。</p><p>(4) RX frame</p><p>表示 misaligned 的 frames。</p><h2 id="网卡工作原理"><a href="#网卡工作原理" class="headerlink" title="网卡工作原理"></a>网卡工作原理</h2><blockquote><p>如果上面接收数据包的流程觉得不够详细可以再看纯文字解释</p></blockquote><h3 id="网卡收包"><a href="#网卡收包" class="headerlink" title="网卡收包"></a>网卡收包</h3><p>网线上的 packet 首先被网卡获取，网卡会检查 packet 的 CRC 校验，保证完整性，然后将 packet 头去掉，得到 frame。网卡会检查 MAC 包内的目的 MAC 地址，如果和本网卡的 MAC 地址不一样则丢弃 (混杂模式除外)。</p><p>网卡将 frame 拷贝到网卡内部的 FIFO 缓冲区，触发硬件中断。（如有 ring buffer 的网卡，好像 frame 可以先存在 ring buffer 里再触发软件中断（下篇文章将详细解释 Linux 中 frame 的走向），ring buffer 是网卡和驱动程序共享，是设备里的内存，但是对操作系统是可见的，因为看到 linux 内核源码里网卡驱动程序是使用 kcalloc 来分配的空间，所以 ring buffer 一般都有上限，另外这个 ring buffer size，表示的应该是能存储的 frame 的个数，而不是字节大小。另外有些系统的 ethtool 命令 并不能改变 ring parameters 来设置 ring buffer 的大小，暂时不知道为什么，可能是驱动不支持。）</p><p>网卡驱动程序通过硬中断处理函数，构建 sk_buff，把 frame 从网卡 FIFO 拷贝到内存 skb 中，接下来交给内核处理。（支持 napi 的网卡应该是直接放在 ring buffer，不触发硬中断，直接使用软中断，拷贝 ring buffer 里的数据，直接输送给上层处理，每个网卡在一次软中断处理过程能处理 weight 个 frame）</p><p>过程中，网卡芯片对 frame 进行了 MAC 过滤，以减小系统负荷。（除了混杂模式）</p><h3 id="网卡发包"><a href="#网卡发包" class="headerlink" title="网卡发包"></a>网卡发包</h3><p>网卡驱动程序将 IP 包添加 14 字节的 MAC 头，构成 frame（暂无 CRC）。Frame（暂无 CRC）中含有发送端和接收端的 MAC 地址，由于是驱动程序创建 MAC 头，所以可以随便输入地址，也可以进行主机伪装。</p><p>驱动程序将 frame（暂无 CRC）拷贝到网卡芯片内部的缓冲区，由网卡处理。</p><p>网卡芯片将未完全完成的 frame（缺 CRC）再次封装为可以发送的 packet，也就是添加头部同步信息和 CRC 校验，然后丢到网线上，就完成一个 IP 报的发送了，所有接到网线上的网卡都可以看到该 packet。</p><h3 id="网卡中断处理函数"><a href="#网卡中断处理函数" class="headerlink" title="网卡中断处理函数"></a>网卡中断处理函数</h3><p>产生中断的每个设备都有一个相应的中断处理程序，是设备驱动程序的一部分。每个网卡都有一个中断处理程序，用于通知网卡该中断已经被接收了，以及把网卡缓冲区的数据包拷贝到内存中。</p><p>当网卡接收来自网络的数据包时，需要通知内核数据包到了。网卡立即发出中断。内核通过执行网卡已注册的中断处理函数来做出应答。中断处理程序开始执行，通知硬件，拷贝最新的网络数据包到内存，然后读取网卡更多的数据包。</p><p>这些都是重要、紧迫而又与硬件相关的工作。内核通常需要快速的拷贝网络数据包到系统内存，因为网卡上接收网络数据包的缓存大小固定，而且相比系统内存也要小得多。所以上述拷贝动作一旦被延迟，必然造成网卡 FIFO 缓存溢出 - 进入的数据包占满了网卡的缓存，后续的包只能被丢弃，这也应该就是 ifconfig 里的 overrun 的来源。</p><p>当网络数据包被拷贝到系统内存后，中断的任务算是完成了，这时它把控制权交还给被系统中断前运行的程序。</p><h3 id="缓冲区访问"><a href="#缓冲区访问" class="headerlink" title="缓冲区访问"></a>缓冲区访问</h3><p>网卡的内核缓冲区，是在 PC 内存中，由内核控制，而网卡会有 FIFO 缓冲区，或者 ring buffer，这应该将两者区分开。FIFO 比较小，里面有数据便会尽量将数据存在内核缓冲中。</p><p>网卡中的缓冲区既不属于内核空间，也不属于用户空间。它属于硬件缓冲，允许网卡与操作系统之间有个缓冲；</p><p>内核缓冲区在内核空间，在内存中，用于内核程序，做为读自或写往硬件的数据缓冲区；</p><p>用户缓冲区在用户空间，在内存中，用于用户程序，做为读自或写往硬件的数据缓冲区；</p><p>另外，为了加快数据的交互，可以将内核缓冲区映射到用户空间，这样，内核程序和用户程序就可以同时访问这一区间了。</p><p>对于有 ring buffer 的网卡，ring buffer 是由驱动与网卡共享的，所以内核可以直接访问 ring buffer，一般拷贝 frames 的副本到自己的内核空间进行处理（deliver 到上层协议，之后的一个个 skb 就是按 skb 的指针传递方式传递，直到用户获得数据，所以，对于 ring buffer 网卡，大量拷贝发生在 frame 从 ring buffer 传递到内核控制的计算机内存里）。</p><h2 id="丢包排查思路"><a href="#丢包排查思路" class="headerlink" title="丢包排查思路"></a>丢包排查思路</h2><p>网卡工作在数据链路层，数据量链路层，会做一些校验，封装成帧。我们可以查看校验是否出错，确定传输是否存在问题。然后从软件层面，是否因为缓冲区太小丢包。</p><h3 id="先查看硬件情况"><a href="#先查看硬件情况" class="headerlink" title="先查看硬件情况"></a>先查看硬件情况</h3><p>一台机器经常收到丢包的报警，先看看最底层的有没有问题:</p><p>(1) 查看工作模式是否正常<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ethtool eth0 | egrep &apos;Speed|Duplex&apos;</span><br><span class="line">Speed: 1000Mb/s</span><br><span class="line">Duplex: Full</span><br></pre></td></tr></table></figure></p><p>(2) 查看检验是否正常<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ethtool -S eth0 | grep crc</span><br><span class="line">rx_crc_errors: 0</span><br></pre></td></tr></table></figure></p><p>Speed，Duplex，CRC 之类的都没问题，基本可以排除物理层面的干扰。</p><h3 id="overruns-和-buffer-size"><a href="#overruns-和-buffer-size" class="headerlink" title="overruns 和 buffer size"></a>overruns 和 buffer size</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过 ifconfig 可以看到 overruns 是否一直增大 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq 1 100`; <span class="keyword">do</span> ifconfig eth2 | grep RX | grep overruns; sleep 1; <span class="keyword">done</span></span><br><span class="line"><span class="comment"># 这里一直增加 </span></span><br><span class="line">RX packets:346547657 errors:0 dropped:0 overruns:35345 frame:0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过 ethtool 来修改网卡的 buffer size ，首先要网卡支持，我的服务器是是 INTEL 的 1000M 网卡, 我们看看 ethtool 说明 </span></span><br><span class="line">-g   –show-ringQueries the specified ethernet device <span class="keyword">for</span> rx/tx ring parameter information.</span><br><span class="line">-G   –<span class="built_in">set</span>-ringChanges the rx/tx ring parameters of the specified ethernet device.</span><br><span class="line"><span class="comment"># 查看当前网卡的 buffer size 情况 </span></span><br><span class="line">ethtool -g eth0</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># ethtool -g eth0</span></span><br><span class="line">Ring parameters <span class="keyword">for</span> eth0:</span><br><span class="line">Pre-set maximums:</span><br><span class="line">RX: 4096</span><br><span class="line">RX Mini: 0</span><br><span class="line">RX Jumbo: 0</span><br><span class="line">TX: 4096</span><br><span class="line">Current hardware settings:</span><br><span class="line">RX: 256</span><br><span class="line">RX Mini: 0</span><br><span class="line">RX Jumbo: 0</span><br><span class="line">TX: 256</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 buffer size 大小 </span></span><br><span class="line">ethtool -G eth0 rx 2048</span><br><span class="line">ethtool -G eth0 tx 2048</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># ethtool -G eth0 rx 2048</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ethtool -G eth0 tx 2048</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ethtool -g eth0</span></span><br><span class="line">Ring parameters <span class="keyword">for</span> eth0:</span><br><span class="line">Pre-set maximums:</span><br><span class="line">RX: 4096</span><br><span class="line">RX Mini: 0</span><br><span class="line">RX Jumbo: 0</span><br><span class="line">TX: 4096</span><br><span class="line">Current hardware settings:</span><br><span class="line">RX: 2048</span><br><span class="line">RX Mini: 0</span><br><span class="line">RX Jumbo: 0</span><br><span class="line">TX: 2048</span><br></pre></td></tr></table></figure><h3 id="Red-Hat-官方解决思路"><a href="#Red-Hat-官方解决思路" class="headerlink" title="Red Hat 官方解决思路"></a>Red Hat 官方解决思路</h3><blockquote><p>Issue</p></blockquote><p>Why <code>rx_crc_errors</code> incrementing in the receive counter of <code>ethtool -S</code> output?</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ethtool -S &lt;Interface_name&gt; | grep -i error</span><br><span class="line">     rx_error_bytes: 0</span><br><span class="line">     tx_error_bytes: 0</span><br><span class="line">     tx_mac_errors: 0</span><br><span class="line">     tx_carrier_errors: 0</span><br><span class="line">     rx_crc_errors: 9244</span><br><span class="line">     rx_align_errors: 0</span><br></pre></td></tr></table></figure><blockquote><p>Resolution</p></blockquote><ol><li>Change the cable.</li><li>Check switch configuration.</li><li>Change the network interface card.</li></ol><blockquote><p>Root Cause</p></blockquote><ol><li>Most of the time incrementing the value of <code>rx_crc_errors</code> means the problem is in <code>Layer-1</code> of the networking model.</li><li>When a packet is received at the interface, it goes through a data integrity check which is called <code>cyclic redundancy check</code>. If the packet fails in that check, it is marked as <code>rx_crc_errors</code>.</li><li>The switch was forcing the <code>NIC</code> to operate in <code>half-duplex</code> mode. Fixing the switch to tell the <code>NIC</code> to operate in <code>full-duplex</code> mode have resolved the issue.</li></ol><blockquote><p>Diagnostic Steps</p></blockquote><p>Check <code>ethtool -S</code> output and find where are the drops and errors.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ethtool -S &lt;Interface_name&gt; | grep -i error</span><br><span class="line">     rx_error_bytes: 0</span><br><span class="line">     tx_error_bytes: 0</span><br><span class="line">     tx_mac_errors: 0</span><br><span class="line">     tx_carrier_errors: 0</span><br><span class="line">     rx_crc_errors: 9244  &gt;&gt;&gt;&gt;&gt;&gt;</span><br><span class="line">     rx_align_errors: 0</span><br></pre></td></tr></table></figure><p>Check the numbers corresponding to <code>rx_crc_errors</code>.</p><h2 id="ethtool-常用命令"><a href="#ethtool-常用命令" class="headerlink" title="ethtool 常用命令"></a>ethtool 常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ethtool p1p1</span><br><span class="line"></span><br><span class="line">Settings <span class="keyword">for</span> p1p1:</span><br><span class="line">Supported ports: [ FIBRE ]</span><br><span class="line">Supported link modes:   10000baseT/Full</span><br><span class="line">Supported pause frame use: Symmetric</span><br><span class="line">Supports auto-negotiation: No</span><br><span class="line">Supported FEC modes: Not reported</span><br><span class="line">Advertised link modes:  10000baseT/Full</span><br><span class="line">Advertised pause frame use: Symmetric</span><br><span class="line">Advertised auto-negotiation: No</span><br><span class="line">Advertised FEC modes: Not reported</span><br><span class="line">Speed: 10000Mb/s</span><br><span class="line">Duplex: Full</span><br><span class="line">Port: FIBRE</span><br><span class="line">PHYAD: 0</span><br><span class="line">Transceiver: internal</span><br><span class="line">Auto-negotiation: off</span><br><span class="line">Supports Wake-on: d</span><br><span class="line">Wake-on: d</span><br><span class="line">Current message level: 0x00000007 (7)</span><br><span class="line">       drv probe link</span><br><span class="line">Link detected: yes</span><br></pre></td></tr></table></figure><p>显示了 p1p1 的接口类型，连接模式，速率等等信息，以及当前是否连接了网线（如果是网线 Supported ports 就是 TP，如果是光纤则显示 Fiber），这里例举下 3 个重要关键词</p><p>Supported ports: [ FIBRE ]<br>Speed: 10000Mb/s<br>Link detected: yes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -S 显示 NIC- and driver-specific 的统计参数，如网卡接收 / 发送的字节数、接收 / 发送的广播包个数等。 </span></span><br><span class="line">ethtool -S p1p1 | grep -i error</span><br><span class="line">     rx_errors: 0</span><br><span class="line">     tx_errors: 0</span><br><span class="line">     rx_over_errors: 0</span><br><span class="line">     rx_crc_errors: 0</span><br><span class="line">     rx_frame_errors: 0</span><br><span class="line">     rx_fifo_errors: 0</span><br><span class="line">     rx_missed_errors: 0</span><br><span class="line">     tx_aborted_errors: 0</span><br><span class="line">     tx_carrier_errors: 0</span><br><span class="line">     tx_fifo_errors: 0</span><br><span class="line">     tx_heartbeat_errors: 0</span><br><span class="line">     rx_length_errors: 0</span><br><span class="line">     rx_long_length_errors: 0</span><br><span class="line">     rx_short_length_errors: 0</span><br><span class="line">     rx_csum_offload_errors: 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -p 用于区别不同 ethX 对应网卡的物理位置，常用的方法是使网卡 port 上的 led 不断的闪 </span></span><br><span class="line">ethtool -p &lt;Interface_name&gt;</span><br><span class="line">ethtool -p eth0</span><br><span class="line"></span><br><span class="line"><span class="comment"># -i 显示网卡驱动的信息，如驱动的名称、版本等 </span></span><br><span class="line">ethtool -i p1p1</span><br><span class="line"></span><br><span class="line">driver: ixgbe</span><br><span class="line">version: 5.1.0-k-rh7.6</span><br><span class="line">firmware-version: 0x80000960, 18.3.6</span><br><span class="line">expansion-rom-version:</span><br><span class="line">bus-info: 0000:04:00.0</span><br><span class="line">supports-statistics: yes</span><br><span class="line">supports-test: yes</span><br><span class="line">supports-eeprom-access: yes</span><br><span class="line">supports-register-dump: yes</span><br><span class="line">supports-priv-flags: yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># ethtool –s ethX [speed 10|100|1000] [duplex half|full]  [autoneg on|off]</span></span><br><span class="line"><span class="comment"># 设置网口速率 10/100/1000M、设置网口半 / 全双工、设置网口是否自协商 </span></span><br><span class="line">ethtool -s eth0 speed 100</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://mirrors.edge.kernel.org/pub/software/network/ethtool/" target="_blank" rel="noopener">ethtool</a></p><p><a href="https://community.mellanox.com/s/article/counters-troubleshooting-for-linux-driver" target="_blank" rel="noopener">Counters Troubleshooting for Linux Driver</a></p><p><a href="https://access.redhat.com/solutions/154543" target="_blank" rel="noopener">Why do I see rx_crc_errors in ethtool output?</a></p><p><a href="https://blog.csdn.net/u011857683/article/details/83663316" target="_blank" rel="noopener">ping 请求错误分析</a></p><p><a href="https://blog.csdn.net/u011857683/article/details/83758503" target="_blank" rel="noopener">ifconfig 命令详解</a></p><p><a href="https://blog.csdn.net/u011857683/article/details/83758689" target="_blank" rel="noopener">ethtool 命令详解</a></p><p><a href="https://blog.csdn.net/u011857683/article/details/83758869" target="_blank" rel="noopener">ethtool 解决网卡丢包严重和网卡原理</a></p>]]></content>
    
    <summary type="html">
    
      ethtool原理介绍和解决网卡丢包排查思路
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Ansible 学习路径</title>
    <link href="https://wsgzao.github.io/post/ansible/"/>
    <id>https://wsgzao.github.io/post/ansible/</id>
    <published>2020-06-21T02:59:49.000Z</published>
    <updated>2020-06-21T08:54:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为工作的缘故接触并积极推动 Ansible 在企业级生产环境的落地，独立承担并实现了《基于 ansible 的主机自动化配置管理》项目，此前也先后接触过 Puppet 和 SaltStack，本文不会讨论开源或者自主研发方案的优劣，重点是和大伙儿分享自己在 ansible 技术领域积累的一些项目实战经验，如果大家遇到任何问题也欢迎通过留言或者其他方式进行互动，我尽力做到有效回复。</p><blockquote><p>Ansible is Simple IT Automation</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 06 月 21 日 - 增加 Mitogen for Ansible<br>2020 年 06 月 01 日 - 增加基于 Ansible 的自动化运维开源项目<br>2020 年 01 月 22 日 - 增加 Ansible 参考文章<br>2018 年 05 月 15 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/ansible/">https://wsgzao.github.io/post/ansible/</a></p><p><strong> 扩展阅读 </strong></p><p>ansible - <a href="https://docs.ansible.com/" target="_blank" rel="noopener">https://docs.ansible.com/</a></p><hr><h2 id="Ansible-标准化学习路径"><a href="#Ansible-标准化学习路径" class="headerlink" title="Ansible 标准化学习路径"></a>Ansible 标准化学习路径</h2><blockquote><p>Ansible 相关的书籍在逐步增多，由于 Ansible 版本迭代更新频率高但学习成本低，个人建议书为辅，官方文档为主</p></blockquote><p>Ansible is an IT automation tool. It can configure systems, deploy software, and orchestrate more advanced IT tasks such as continuous deployments or zero downtime rolling updates.</p><p>Ansible’s main goals are simplicity and ease-of-use. It also has a strong focus on security and reliability, featuring a minimum of moving parts, usage of OpenSSH for transport (with other transports and pull modes as alternatives), and a language that is designed around auditability by humans–even those not familiar with the program.</p><p>We believe simplicity is relevant to all sizes of environments, so we design for busy users of all types: developers, sysadmins, release engineers, IT managers, and everyone in between. Ansible is appropriate for managing all environments, from small setups with a handful of instances to enterprise environments with many thousands of instances.</p><p>Ansible manages machines in an agent-less manner. There is never a question of how to upgrade remote daemons or the problem of not being able to manage systems because daemons are uninstalled. Because OpenSSH is one of the most peer-reviewed open source components, security exposure is greatly reduced. Ansible is decentralized–it relies on your existing OS credentials to control access to remote machines. If needed, Ansible can easily connect with Kerberos, LDAP, and other centralized authentication management systems.</p><p>This documentation covers the current released version of Ansible and also some development version features. For recent features, we note in each section the version of Ansible where the feature was added.</p><p>Ansible releases a new major release of Ansible approximately every two months. The core application evolves somewhat conservatively, valuing simplicity in language design and setup. However, the community around new modules and plugins being developed and contributed moves very quickly, adding many new modules in each release.</p><blockquote><p>Ansible Lightbulb 新版本是 Red Hat Ansible Automation Platform Workshops</p></blockquote><p>The Ansible Lightbulb project is an effort to provide a content toolkit and educational reference for effectively communicating and teaching Ansible topics.</p><p>Ansible Lightbulb - <a href="https://github.com/ansible/lightbulb" target="_blank" rel="noopener">https://github.com/ansible/lightbulb</a></p><p>Red Hat Ansible Automation Platform Workshops - <a href="https://ansible.github.io/workshops/" target="_blank" rel="noopener">https://ansible.github.io/workshops/</a></p><blockquote><p>Ansible Documentation 是 Ansible 官方文档，我的建议还是对英文不要害怕，多动手查多敲命令去理解</p></blockquote><p>Ansible Documentation - <a href="http://docs.ansible.com/ansible/latest/index.html" target="_blank" rel="noopener">http://docs.ansible.com/ansible/latest/index.html</a></p><blockquote><p>如果大家需要使用 Role 推荐阅读 Ansible Best Practices</p></blockquote><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_best_practices.html" target="_blank" rel="noopener">Ansible Best Practices</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">inventories/</span><br><span class="line">   production/</span><br><span class="line">      hosts               # inventory file for production servers</span><br><span class="line">      group_vars/</span><br><span class="line">         group1.yml       # here we assign variables to particular groups</span><br><span class="line">         group2.yml</span><br><span class="line">      host_vars/</span><br><span class="line">         hostname1.yml    # here we assign variables to particular systems</span><br><span class="line">         hostname2.yml</span><br><span class="line"></span><br><span class="line">   staging/</span><br><span class="line">      hosts               # inventory file for staging environment</span><br><span class="line">      group_vars/</span><br><span class="line">         group1.yml       # here we assign variables to particular groups</span><br><span class="line">         group2.yml</span><br><span class="line">      host_vars/</span><br><span class="line">         stagehost1.yml   # here we assign variables to particular systems</span><br><span class="line">         stagehost2.yml</span><br><span class="line"></span><br><span class="line">library/                  # if any custom modules, put them here (optional)</span><br><span class="line">module_utils/             # if any custom module_utils to support modules, put them here (optional)</span><br><span class="line">filter_plugins/           # if any custom filter plugins, put them here (optional)</span><br><span class="line"></span><br><span class="line">site.yml                  # master playbook</span><br><span class="line">webservers.yml            # playbook for webserver tier</span><br><span class="line">dbservers.yml             # playbook for dbserver tier</span><br><span class="line"></span><br><span class="line">files/                    # here we assign files for simple plays</span><br><span class="line">plays/                    # here we assign plays as the entrance</span><br><span class="line">tasks/                    # here we assign tasks for plays to call</span><br><span class="line"></span><br><span class="line">roles/</span><br><span class="line">    common/               # this hierarchy represents a &quot;role&quot;</span><br><span class="line">        tasks/            #</span><br><span class="line">            main.yml      #  &lt;-- tasks file can include smaller files if warranted</span><br><span class="line">        handlers/         #</span><br><span class="line">            main.yml      #  &lt;-- handlers file</span><br><span class="line">        templates/        #  &lt;-- files for use with the template resource</span><br><span class="line">            ntp.conf.j2   #  &lt;------- templates end in .j2</span><br><span class="line">        files/            #</span><br><span class="line">            bar.txt       #  &lt;-- files for use with the copy resource</span><br><span class="line">            foo.sh        #  &lt;-- script files for use with the script resource</span><br><span class="line">        vars/             #</span><br><span class="line">            main.yml      #  &lt;-- variables associated with this role</span><br><span class="line">        defaults/         #</span><br><span class="line">            main.yml      #  &lt;-- default lower priority variables for this role</span><br><span class="line">        meta/             #</span><br><span class="line">            main.yml      #  &lt;-- role dependencies</span><br><span class="line">        library/          # roles can also include custom modules</span><br><span class="line">        module_utils/     # roles can also include custom module_utils</span><br><span class="line">        lookup_plugins/   # or other types of plugins, like lookup in this case</span><br><span class="line"></span><br><span class="line">    webtier/              # same kind of structure as &quot;common&quot; was above, done for the webtier role</span><br><span class="line">    monitoring/           # &quot;&quot;</span><br><span class="line">    fooapp/               # &quot;&quot;</span><br></pre></td></tr></table></figure><h2 id="提升-Ansible-执行效率的插件"><a href="#提升-Ansible-执行效率的插件" class="headerlink" title="提升 Ansible 执行效率的插件"></a>提升 Ansible 执行效率的插件</h2><p>众所周知，Ansible 是基于 ssh(当然还有 telnet，winrm 等连接插件)的自动化配置管理工具，其简单易用，无 agent 式的工作方式在很多场景中都有不少优势，不过也是由于这种工作方式导致了它没有其他 c/s 类的工具执行效率高，饱受其他 C/S 类工具使用者的讥讽，对此，Ansible 官方也对 Ansible 的速度效率做了不少优化手段。</p><table><thead><tr><th></th><th>参数名 / 优化类别</th><th>说明</th></tr></thead><tbody><tr><td></td><td>fact cache</td><td>将 facts 信息第一次收集后缓存到 <code>memory</code> 或者 <code>redis</code> 或者文件中。</td><td></td></tr><tr><td></td><td>gather_subset</td><td>可选择性的收集 <code>network</code>,<code>hardware</code> 等信息，而不是全部</td><td></td></tr><tr><td></td><td>control_path</td><td>开启 <code>ssh socket</code> 持久化，复用 ssh 连接</td><td></td></tr><tr><td></td><td>pipelinling</td><td>开启 <code>ssh pipelining</code>, 客户端从管道中读取执行渲染后的脚本，而不是在客户端创建临时文件</td><td></td></tr><tr><td></td><td>fork</td><td>提高并行执行主机的数量</td><td></td></tr><tr><td></td><td>serial</td><td>将 <code>play_hosts`</code>①` 中主机再分批执行</td><td></td></tr><tr><td></td><td>strategy</td><td>默认 <code>linear</code>, 每个主机的单个 task 执行完成会等待其他都完成后再执行下个任务，设置 <code>free</code> 可不等待其他主机，继续往下执行(看起来会比较乱)，还有一个选项 <code>host_pinned</code>，我也不知道干嘛的</td><td></td></tr></tbody></table><p>无意发现了一个 Mitogen 的 Ansible plugin（strategy plugin），当前已迭代到 0.29 版本，看介绍说能提升 1.2x ~ 7x 以上的执行效率，着实惊人！</p><p>它通过高效的远程过程调用来取代 ansible 默认的嵌入式与纯 python shell 调用，它不会优化模块本身的执行效率，只会尽可能快的②去执行模块获取返回 (执行模块前也是有一系列连接，发送数据，传输渲染脚本等操作的) 来提高整体的效率，特性如下</p><p><strong>Expect a 1.25x - 7x speedup</strong> and a <strong>CPU usage reduction of at least 2x</strong>, depending on network conditions, modules executed, and time already spent by targets on useful work. Mitogen cannot improve a module once it is executing, it can only ensure the module executes as quickly as possible.</p><ul><li><p><strong>One connection is used per target</strong>, in addition to one sudo invocation per user account. This is much better than SSH multiplexing combined with pipelining, as significant state can be maintained in RAM between steps, and system logs aren’t spammed with repeat authentication events.</p></li><li><p><strong>A single network roundtrip is used</strong> to execute a step whose code already exists in RAM on the target. Eliminating multiplexed SSH channel creation saves 4 ms runtime per 1 ms of network latency for every playbook step.</p></li><li><p><strong>Processes are aggressively reused</strong>, avoiding the cost of invoking Python and recompiling imports, saving 300-800 ms for every playbook step.</p></li><li><p>Code is ephemerally cached in RAM, <strong>reducing bandwidth usage by an order of magnitude</strong> compared to SSH pipelining, with around 5x fewer frames traversing the network in a typical run.</p></li><li><p><strong>Fewer writes to the target filesystem occur</strong>. In typical configurations, Ansible repeatedly rewrites and extracts ZIP files to multiple temporary directories on the target. Security issues relating to temporary files in cross-account scenarios are entirely avoided.</p></li></ul><p>The effect is most potent on playbooks that execute many <strong>short-lived actions</strong>, where Ansible’s overhead dominates the cost of the operation, for example when executing large <code>with_items</code> loops to run simple commands or write files.</p><p>大体就是执行过程中主机使用一个连接(默认每执行一个 <code>task</code> 或者 <code>loop</code> 循环都会重新打开一次连接的)；渲染的执行代码暂存于内存中；减少多路复用 <code>ssh</code> 隧道的时间消耗；减少临时文件传输的带宽；代码重用，避免代码的重新编译成本等</p><p>实现原理的话，可以去看下<a href="https://mitogen.readthedocs.io/en/latest/howitworks.html" title="官网解释" target="_blank" rel="noopener">官网解释</a>，反正我是没怎么看懂</p><p><em>① . <code>play_hosts</code> 为内置参数，指当前正在执行的 playbook 中的主机列表 </em></p><p><em>②. <code>尽可能快的</code> 指到运行模块前的阶段 </em></p><ol><li>Download and extract <a href="https://networkgenomics.com/try/mitogen-0.2.9.tar.gz" target="_blank" rel="noopener">mitogen-0.2.9.tar.gz</a></li><li>Modify <code>ansible.cfg</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[defaults]</span><br><span class="line">strategy_plugins = /path/to/mitogen-0.2.9/ansible_mitogen/plugins/strategy</span><br><span class="line">strategy = mitogen_linear</span><br></pre></td></tr></table></figure><p>The <code>strategy</code> key is optional. If omitted, the <code>ANSIBLE_STRATEGY=mitogen_linear</code> environment variable can be set on a per-run basis. Like <code>mitogen_linear</code>, the <code>mitogen_free</code> and <code>mitogen_host_pinned</code> strategies exists to mimic the <code>free</code> and <code>host_pinned</code> strategies.</p><p><a href="https://networkgenomics.com/ansible/" target="_blank" rel="noopener">https://networkgenomics.com/ansible/</a></p><p><a href="https://mitogen.networkgenomics.com/ansible_detailed.html" target="_blank" rel="noopener">https://mitogen.networkgenomics.com/ansible_detailed.html</a></p><h2 id="基于-Ansible-的开源项目"><a href="#基于-Ansible-的开源项目" class="headerlink" title="基于 Ansible 的开源项目"></a>基于 Ansible 的开源项目</h2><blockquote><p>第一个是 ansible 官方开源项目，其他都是和 ansible 相关的运维平台开源项目，推荐学习和参考</p></blockquote><p>Ansible - <a href="https://github.com/ansible/ansible" target="_blank" rel="noopener">https://github.com/ansible/ansible</a></p><p>Jumpserver - <a href="http://www.jumpserver.org/" target="_blank" rel="noopener">http://www.jumpserver.org/</a> </p><p>OpsManage - <a href="https://github.com/welliamcao/OpsManage" target="_blank" rel="noopener">https://github.com/welliamcao/OpsManage</a> </p><p>spug - <a href="https://github.com/openspug/spug" target="_blank" rel="noopener">https://github.com/openspug/spug</a></p><p>BigOps - <a href="http://www.bigops.com/" target="_blank" rel="noopener">http://www.bigops.com/</a></p><h2 id="Ansible-项目实践"><a href="#Ansible-项目实践" class="headerlink" title="Ansible 项目实践"></a>Ansible 项目实践</h2><blockquote><p>以下内容来自于《基于 ansible 的主机自动化配置管理》项目，基于 ansible 目前可以满足生产环境所有基线要求，相信对大家有一定的参考价值</p></blockquote><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200122143435.png" alt=""></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200122143458.png" alt=""></p><h3 id="ansible-部署"><a href="#ansible-部署" class="headerlink" title="ansible 部署"></a>ansible 部署</h3><blockquote><p>因为生产环境为内外网物理隔离，所有的安装部署都是离线进行的</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install Packages</span></span><br><span class="line">yum install gcc zlib zlib-devel openssl-devel -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install Python</span></span><br><span class="line">tar xf Python-2.7.14.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-2.7.14</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># renew python env</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named six.moves</span></span><br><span class="line">tar xf six-1.11.0.tar.gz </span><br><span class="line"><span class="built_in">cd</span> six-1.11.0</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named packaging.version</span></span><br><span class="line">tar xf packaging-17.1.tar.gz </span><br><span class="line"><span class="built_in">cd</span> packaging-17.1</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named pyparsing</span></span><br><span class="line">tar xf pyparsing-2.2.0.tar.gz </span><br><span class="line"><span class="built_in">cd</span> pyparsing-2.2.0</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named appdirs</span></span><br><span class="line">tar xf appdirs-1.4.3.tar.gz </span><br><span class="line"><span class="built_in">cd</span> appdirs-1.4.3</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install Setuptools</span></span><br><span class="line">unzip setuptools-38.5.2.zip</span><br><span class="line"><span class="built_in">cd</span> setuptools-38.5.2</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install pip</span></span><br><span class="line">tar xf pip-9.0.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> pip-9.0.1</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># pip 离线下载</span></span><br><span class="line"><span class="comment"># pip download -d DIR -r requirements.txt</span></span><br><span class="line">pip download -d ~/ansible/ ansible</span><br><span class="line"></span><br><span class="line"><span class="comment"># pip 离线安装</span></span><br><span class="line"><span class="comment"># pip install --no-index --find-links=DIR -r requirements.txt</span></span><br><span class="line">pip install --no-index --find-links=pip-ansible-2.3.3/ -r requirements.txt</span><br><span class="line">pip install --no-index --find-links=pip-ansible-2.5.0/ -r requirements.txt -U</span><br><span class="line"></span><br><span class="line"><span class="comment"># pip 离线安装 pipenv</span></span><br><span class="line">pip install --no-index --find-links=pip-pipenv/ pipenv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 pipenv 创建虚拟环境</span></span><br><span class="line">mkdir win_ansible</span><br><span class="line"><span class="built_in">cd</span> win_ansible</span><br><span class="line">pipenv shell</span><br><span class="line">pip install --no-index --find-links=pip-ansible-2.5.2/ -r requirements.txt</span><br></pre></td></tr></table></figure><h3 id="ansible-cfg-配置解析"><a href="#ansible-cfg-配置解析" class="headerlink" title="ansible.cfg 配置解析"></a>ansible.cfg 配置解析</h3><blockquote><p>ansible.cfg 不影响执行结果但合理的配置会有效提升效率</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置文件路径（优先级）</span></span><br><span class="line">./ansible.cfg</span><br><span class="line">/etc/ansible/ansible.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件内容</span></span><br><span class="line">[defaults]</span><br><span class="line"><span class="comment">#inventory = /etc/ansible/hosts</span></span><br><span class="line"><span class="comment">#log_path = /var/log/ansible.log</span></span><br><span class="line">forks = 100 <span class="comment"># 设置并发数</span></span><br><span class="line">host_key_checking = False <span class="comment"># 不检查 SSH 主机登录的密钥</span></span><br><span class="line">display_skipped_hosts = False <span class="comment"># 不显示已跳过的主机</span></span><br><span class="line">retry_files_enabled = False <span class="comment"># 不创建任务失败后的重试文件</span></span><br><span class="line"><span class="comment"># 按照 1d 设置 setup 缓存，优化执行效率</span></span><br><span class="line">gathering = smart</span><br><span class="line">fact_caching_timeout = 86400</span><br><span class="line">fact_caching = jsonfile</span><br><span class="line">fact_caching_connection = cachedir</span><br></pre></td></tr></table></figure><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ul><li>服务端操作系统：RHEL 6/7（Windows 不可作为控制端）</li><li>服务端 Python 版本：2.7.14（实测安装完成无需额外调整）</li><li>Ansible 版本：2.3.3.0（实测 2.4 以上版本已不支持 rhel5.5，客户端需 simplejson）</li><li>管理对象：目前主要针对 RHEL 5/6/7（Windows 使用高版本 Ansible）</li><li>基线标准：参考《主机岗配置基线 v1.1.xlsx》</li></ul><blockquote><p>服务端</p></blockquote><ul><li>操作系统版本：RHEL 6/7</li><li>Python 版本：2.7.14</li><li>安装方式：pip 离线安装依赖包</li></ul><blockquote><p>客户端</p></blockquote><ul><li>操作系统版本：RHEL 5/6/7</li><li>非最小模式安装无需做调整</li><li>RHEL5.5 需要安装 simplejson</li></ul><blockquote><p>核心用法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测 ansible 是否可以正常访问主机</span></span><br><span class="line">ansible-playbook -i hosts playbooks/ping.yml -v</span><br><span class="line"><span class="comment"># 配置好 inventory，执行以下命令创建用户并建立信任关系</span></span><br><span class="line">ansible-playbook -i hosts playbooks/user/default.yml -v</span><br><span class="line"><span class="comment"># 配置时间同步 / 进程服务 / 基线文件</span></span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/cfgset.yml -v</span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/cfgset.yml -v --tags=<span class="string">"repo"</span></span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/cfgset.yml -v --skip-tags=<span class="string">"ntp,repo"</span></span><br><span class="line"><span class="comment"># 更新系统软件包和补丁包</span></span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/pakset.yml -v</span><br><span class="line"><span class="comment"># 修改用户密码</span></span><br><span class="line">ansible-playbook -i hosts_changepw playbooks/user/changepw.yml -v -e <span class="string">"@userpass.json"</span></span><br><span class="line"><span class="comment"># 备份配置，支持自定义日期命名，默认为 "%Y%m%d"</span></span><br><span class="line">ansible-playbook -i hosts backup/backup.yml -v</span><br><span class="line"><span class="comment"># 恢复配置，支持按日期目录全局或者局部主机恢复</span></span><br><span class="line">ansible-playbook -i hosts backup/restore.yml -v -e <span class="string">"var_backup_date=20180305"</span></span><br></pre></td></tr></table></figure><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ul><li>服务端操作系统：RHEL 6/7（Windows 不可作为控制端）</li><li>服务端 Python 版本：2.7.14（实测安装完成无需额外调整）</li><li>Ansible 版本：2.5.0（Windows 原生模块支持需要持续更新 Ansible 新版本）</li><li>管理对象：目前主要针对 Windows 7/2008/2012（不支持 xp/2003）</li><li>基线标准：参考《Windows 安全基线》</li></ul><blockquote><p>服务端</p></blockquote><ul><li>操作系统版本：RHEL 6/7</li><li>Python 版本：2.7.14</li><li>安装方式：pip 离线安装依赖包（目前使用 pipenv 切换管理 Linux 和 Windows）</li></ul><blockquote><p>客户端</p></blockquote><ul><li>操作系统版本：Window 7/2008/2012</li><li>WinRM（Windows 7/2008 需要升级至 Powershell v3.0）</li></ul><blockquote><p>核心用法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测 ansible 是否可以正常访问主机</span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/ping.yml -v</span><br><span class="line"><span class="comment"># 配置好 inventory，执行以下命令创建用户并建立信任关系</span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/user/default.yml -v</span><br><span class="line"><span class="comment"># 配置时间同步 / 进程服务 / 基线文件</span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/cfgset.yml -v</span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/cfgset.yml -v --tags=<span class="string">"wsus"</span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/cfgset.yml -v --skip-tags=<span class="string">"ntp,wsus"</span></span><br><span class="line"><span class="comment"># 更新系统软件包和补丁包</span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/pakset.yml -v</span><br><span class="line"><span class="comment"># 修改用户密码</span></span><br><span class="line">ansible-playbook -i win_hosts_changepw win_playbooks/user/changepw.yml -v -e <span class="string">"@userpass.json"</span></span><br><span class="line"><span class="comment"># 备份配置，支持自定义日期命名，默认为 "%Y%m%d"</span></span><br><span class="line">ansible-playbook -i win_hosts win_backup/backup.yml -v</span><br><span class="line"><span class="comment"># 恢复配置，支持按日期目录全局或者局部主机恢复</span></span><br><span class="line">ansible-playbook -i win_hosts win_backup/restore.yml -v -e <span class="string">"var_backup_date=20180305"</span></span><br></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><blockquote><p>很抱歉我暂时不能分享全部信息，但是这并不妨碍技术上的交流，我会逐步分享有价值的可公开代码</p></blockquote><ol><li>遵循 what/why/how 思路，要理解 ansible 能解决什么问题，为什么选择 ansible，怎么使用 ansible 去解决</li><li>Ansible 学习成本低但不等同于没有难度，学习路径推荐参考官方文档并积极实践，官网没有答案要善用 Google 搜索</li><li>Ansible 纯后台模式只解决了部分问题，还有更多需求要通过基于 Ansible 的自动化运维平台来实现，拥抱开源技术不能固步自封</li></ol><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://docs.ansible.com/ansible/latest/index.html" target="_blank" rel="noopener">Ansible Documentation</a></p><p><a href="https://www.cnblogs.com/michael-xiang/p/10462749.html" target="_blank" rel="noopener">Ansible 入门指南 - 学习总结</a></p><p><a href="http://showme.codes/2019-09-19/understand-ansible/" target="_blank" rel="noopener">这样理解 Ansible 更容易</a></p><p><a href="https://anoyi.com/p/62388a4fcbc6" target="_blank" rel="noopener">前世今生：1 小时学会 Ansible</a></p><p><a href="https://lework.github.io/2016/11/19/Ansible-zhuan-ti-wen-zhang-zong-lan/" target="_blank" rel="noopener">Ansible 专题文章总揽</a></p><p><a href="https://www.zsythink.net/archives/tag/ansible/page/6/" target="_blank" rel="noopener">朱双印 - ansible 系列</a></p><p><a href="http://www.cnblogs.com/f-ck-need-u/p/7576137.html#ansible" target="_blank" rel="noopener">骏马金龙 - ansible </a></p><p><a href="https://www.bilibili.com/video/av33611758?from=search&amp;seid=7420958755659258683" target="_blank" rel="noopener">B 站视频 - ansible 教程 - 马哥 2019 全新 ansible 入门到精通</a></p><p><a href="https://www.cnblogs.com/kevingrace/p/11647338.html" target="_blank" rel="noopener">Ansible 日常使用技巧 - 运维总结</a></p><p><a href="http://blog.leanote.com/post/benmo/Ansible-%E5%A5%87%E6%B7%AB%E6%8A%80%E5%B7%A7" target="_blank" rel="noopener">Ansible– 奇淫技巧</a></p>]]></content>
    
    <summary type="html">
    
      Ansible is Simple IT Automation
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>golang 学习路径</title>
    <link href="https://wsgzao.github.io/post/golang/"/>
    <id>https://wsgzao.github.io/post/golang/</id>
    <published>2020-06-17T06:59:49.000Z</published>
    <updated>2020-06-18T03:45:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>golang 学习路径</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 06 月 17 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/golang/">https://wsgzao.github.io/post/golang/</a></p><hr><h2 id="安装-Go-运行环境"><a href="#安装-Go-运行环境" class="headerlink" title="安装 Go 运行环境"></a>安装 Go 运行环境</h2><p><a href="https://golang.org/doc/install" target="_blank" rel="noopener">Getting Started</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># download</span></span><br><span class="line">wget https://dl.google.com/go/go1.13.12.linux-amd64.tar.gz</span><br><span class="line"><span class="comment">#tar -C /usr/local -xzf go$VERSION.$OS-$ARCH.tar.gz</span></span><br><span class="line">tar -C /usr/<span class="built_in">local</span> -xzf go1.13.12.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># config env</span></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line">go version</span><br><span class="line">go version go1.13.12 linux/amd64</span><br></pre></td></tr></table></figure><h2 id="编译-Codis"><a href="#编译-Codis" class="headerlink" title="编译 Codis"></a>编译 Codis</h2><blockquote><p>以 Codis 为例，官方步骤可能有坑</p></blockquote><p><a href="https://github.com/CodisLabs/codis/blob/release3.2/doc/tutorial_zh.md" target="_blank" rel="noopener">Codis 使用文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install package</span></span><br><span class="line">yum install -y git gcc autoconf automake m4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置编译环境，在 / etc/profile 文件中输入下面三行 </span></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/go/bin</span><br><span class="line"><span class="built_in">export</span> GOPATH=/usr/<span class="built_in">local</span>/codis/gopath</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOPATH</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载 Codis 源码 </span></span><br><span class="line">mkdir -p <span class="variable">$GOPATH</span>/src/github.com/CodisLabs</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$_</span> &amp;&amp; git <span class="built_in">clone</span> https://github.com/CodisLabs/codis.git -b release3.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 redis 依赖，以免报 jemalloc 版本等错误 (Codis 官方遗漏的步骤)</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/CodisLabs/codis/extern/redis-3.2.11/deps</span><br><span class="line">make hiredis jemalloc linenoise lua geohash-int</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 Codis 源代码，直接通过 make 编译，可以看到如下输出：</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/CodisLabs/codis</span><br><span class="line">make</span><br><span class="line">===============================================================================</span><br><span class="line">go build -i -o bin/codis-dashboard ./cmd/dashboard</span><br><span class="line">go build -i -tags <span class="string">"cgo_jemalloc"</span> -o bin/codis-proxy ./cmd/proxy</span><br><span class="line">go build -i -o bin/codis-admin ./cmd/admin</span><br><span class="line">go build -i -o bin/codis-ha ./cmd/ha</span><br><span class="line">go build -i -o bin/codis-fe ./cmd/fe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看编译后的版本 </span></span><br><span class="line">cat bin/version</span><br><span class="line">version = 2018-11-04 16:22:35 +0800 @de1ad026e329561c22e2a3035fbfe89dc7fef764 @3.2.2-12-gde1ad02</span><br><span class="line">compile = 2020-06-17 06:39:48 -0400 by go version go1.13.12 linux/amd64</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2>]]></content>
    
    <summary type="html">
    
      golang学习路径
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>VMware Fusion NAT 无法连网解决方案</title>
    <link href="https://wsgzao.github.io/post/vmware-fusion/"/>
    <id>https://wsgzao.github.io/post/vmware-fusion/</id>
    <published>2020-06-16T06:59:49.000Z</published>
    <updated>2020-06-17T06:37:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为在 macOS 下实在仍受不了 VirtualBox 的各种 Bug 和低性能，转投熟悉的 VMware Fusion 后本来一直都挺稳定的，但在一次 Linked Clone 链接克隆中发现 NAT 网络下 VM 可以访问外网但宿主机和虚拟机之间的网络却无法 ping 通，查阅了非常多的资料仍然无解差点就要暴力选择添加一块新网卡做 host-only，最后发现重启下 VMware Fusion 网络就恢复了，这大概就是传说中的无脑重启解决一切问题。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 06 月 16 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/vmware-fusion/">https://wsgzao.github.io/post/vmware-fusion/</a></p><hr><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><ol><li>创建 1 台 NAT 网络类型的 CentOS 虚拟机，IP 为默认 DHCP 段的 192.168.184.128，宿主机和虚拟机网络互通，虚拟机可以正常访问外网</li><li>创建 1 台 Linked Clone 链接克隆 CentOS 虚拟机，IP 为 192.168.184.129，宿主机和虚拟机网络无法互通，虚拟机可以正常访问外网</li></ol><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>网上解决方案：</p><ol><li>检查 macOS 是否联网</li><li>检查 macOS 是否给予 VMware 权限</li><li>重启虚拟机</li><li>重启 VMware</li><li>重启 macOS</li></ol><blockquote><p>以上方法通通无效</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重启 vmware network 服务解决问题</span></span><br><span class="line">sudo /Applications/VMware\ Fusion.app/Contents/Library/vmnet-cli --stop</span><br><span class="line">sudo /Applications/VMware\ Fusion.app/Contents/Library/vmnet-cli --start</span><br></pre></td></tr></table></figure><h2 id="修改-VMware-Fusion-networking"><a href="#修改-VMware-Fusion-networking" class="headerlink" title="修改 VMware Fusion networking"></a>修改 VMware Fusion networking</h2><h3 id="配置-VMware-Fusion-虚拟网络配置"><a href="#配置-VMware-Fusion-虚拟网络配置" class="headerlink" title="配置 VMware Fusion 虚拟网络配置"></a>配置 VMware Fusion 虚拟网络配置</h3><p>VMware Fusion 安装完成后，会在 macOS 中新建两个网卡：vmnet1 以及 vmnet8（在 <code>/Library/Preferences/VMware Fusion</code> 下可以看到）</p><ol><li>vmnet1 是 Host-only 模式</li><li>vmnet8 是 NAT 模式</li></ol><p>这里仅对网卡 vmnet8 进行修改（修改过程中需关闭 VMWare Fusion）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /Library/Preferences/VMware\ Fusion/networking</span><br><span class="line"></span><br><span class="line">VERSION=1,0</span><br><span class="line">answer VNET_1_DHCP yes</span><br><span class="line">answer VNET_1_DHCP_CFG_HASH E805FD2F642680617F0D09147C8D5C5ED962ED29</span><br><span class="line">answer VNET_1_HOSTONLY_NETMASK 255.255.255.0</span><br><span class="line">answer VNET_1_HOSTONLY_SUBNET 172.16.131.0</span><br><span class="line">answer VNET_1_VIRTUAL_ADAPTER yes</span><br><span class="line">answer VNET_8_DHCP yes</span><br><span class="line">answer VNET_8_DHCP_CFG_HASH ABBB4D6B9DEC5639F2756A1991B197986AB5597E</span><br><span class="line">answer VNET_8_HOSTONLY_NETMASK 255.255.255.0</span><br><span class="line">answer VNET_8_HOSTONLY_SUBNET 192.168.184.0</span><br><span class="line">answer VNET_8_NAT yes</span><br><span class="line">answer VNET_8_VIRTUAL_ADAPTER yes</span><br><span class="line">add_bridge_mapping en0 2</span><br></pre></td></tr></table></figure><ol><li>将 DHCP 设置为 no， 即使用静态 IP。 将 SUBNET 修改为自己想用的网段，比如自定义 192.168.111.0 网段</li><li>保存退出</li></ol><p>注意：只修改 vmnet8 的配置， 不要修改 vmnet1 的配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /Library/Preferences/VMware\ Fusion/vmnet8/nat.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># VMware NAT configuration file</span></span><br><span class="line"><span class="comment"># Manual editing of this file is not recommended. Using UI is preferred.</span></span><br><span class="line"></span><br><span class="line">[host]</span><br><span class="line"></span><br><span class="line"><span class="comment"># NAT gateway address</span></span><br><span class="line">ip = 192.168.184.2</span><br><span class="line">netmask = 255.255.255.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># VMnet device if not specified on command line</span></span><br><span class="line">device = vmnet8</span><br><span class="line"></span><br><span class="line"><span class="comment"># Allow PORT/EPRT FTP commands (they need incoming TCP stream ...)</span></span><br><span class="line">activeFTP = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Allows the source to have any OUI.  Turn this on if you change the OUI</span></span><br><span class="line"><span class="comment"># in the MAC address of your virtual machines.</span></span><br><span class="line">allowAnyOUI = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Controls if (TCP) connections should be reset when the adapter they are</span></span><br><span class="line"><span class="comment"># bound to goes down</span></span><br><span class="line">resetConnectionOnLinkDown = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Controls if (TCP) connection should be reset when guest packet's destination</span></span><br><span class="line"><span class="comment"># is NAT's IP address</span></span><br><span class="line">resetConnectionOnDestLocalHost = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Controls if enable nat ipv6</span></span><br><span class="line">natIp6Enable = 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># Controls if enable nat ipv6</span></span><br><span class="line">natIp6Prefix = fd15:4ba5:5a2b:1008::/64</span><br><span class="line"></span><br><span class="line">[tcp]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Value of timeout in TCP TIME_WAIT state, in seconds</span></span><br><span class="line">timeWaitTimeout = 30</span><br><span class="line"></span><br><span class="line">[udp]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Timeout in seconds. Dynamically-created UDP mappings will purged if</span></span><br><span class="line"><span class="comment"># idle for this duration of time 0 = no timeout, default = 60; real</span></span><br><span class="line"><span class="comment"># value might be up to 100% longer</span></span><br><span class="line">timeout = 60</span><br><span class="line"></span><br><span class="line">[netbios]</span><br><span class="line"><span class="comment"># Timeout for NBNS queries.</span></span><br><span class="line">nbnsTimeout = 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># Number of retries for each NBNS query.</span></span><br><span class="line">nbnsRetries = 3</span><br><span class="line"></span><br><span class="line"><span class="comment"># Timeout for NBDS queries.</span></span><br><span class="line">nbdsTimeout = 3</span><br><span class="line"></span><br><span class="line">[incomingtcp]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use these with care - anyone can enter into your VM through these...</span></span><br><span class="line"><span class="comment"># The format and example are as follows:</span></span><br><span class="line"><span class="comment">#&lt;external port number&gt; = &lt;VM's IP address&gt;:&lt;VM's port number&gt;</span></span><br><span class="line"><span class="comment">#8080 = 172.16.3.128:80</span></span><br><span class="line"></span><br><span class="line">[incomingudp]</span><br><span class="line"></span><br><span class="line"><span class="comment"># UDP port forwarding example</span></span><br><span class="line"><span class="comment">#6000 = 172.16.3.0:6001</span></span><br></pre></td></tr></table></figure><p>设置网关为 192.168.111.2，网关的 IP 要和上一步中的 IP 保持网关一致，至此 VMware Fusion 的配置完毕。</p><h3 id="配置虚拟机"><a href="#配置虚拟机" class="headerlink" title="配置虚拟机"></a>配置虚拟机</h3><ol><li>将虚拟机网络切换到 NAT 模式</li><li>打开虚拟机，配置虚拟机网络配置信息</li></ol><p>vi /etc/sysconfig/network-scripts/ifcfg-ens33</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">PEERDNS=yes</span><br><span class="line">PEERROUTES=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">NAME=ens33</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.111.100      // 自定义的虚拟机 IP， 需与 VMware Fusion 配置的 IP 在同一个网段上 </span><br><span class="line">GATEWAY=192.168.111.2       // 配置的网关地址</span><br><span class="line">NETMASK=255.255.255.0       // 配置的掩码</span><br><span class="line">DNS1=114.114.114.114        // macOS 本机的 DNS 地址。 系统偏好设置 -&gt; 网络 -&gt; 在左侧选择当前使用的网络，点击右下角的“高级” 按钮 -&gt; 切换 Tab 页，可找到 DNS 地址。</span><br><span class="line">DNS2=8.8.8.8                // 同上</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存退出，重启网络服务</span></span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://kb.vmware.com/s/article/1016466" target="_blank" rel="noopener">Troubleshooting networking and internet connection issues in VMware Fusion (1016466)</a></p><p><a href="https://kb.vmware.com/s/article/1016466?lang=zh_CN" target="_blank" rel="noopener">VMware Fusion 中的网络和 Internet 连接问题故障排除 (1016466)</a></p>]]></content>
    
    <summary type="html">
    
      VMware Fusion NAT无法连网解决方案
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Scribe 安装使用</title>
    <link href="https://wsgzao.github.io/post/scribe/"/>
    <id>https://wsgzao.github.io/post/scribe/</id>
    <published>2020-06-09T06:59:49.000Z</published>
    <updated>2020-08-14T04:26:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Scribe 是 Facebook 开源的日志收集工具，我建议大家还是老老实实使用 ELK/EFK 或者 Splunk，不要瞎折腾 Scribe</p><blockquote><p>Centos 安装 Scribe 真是累</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 06 月 09 日 - 增加 Docker 容器部署 Scribe<br>2018 年 09 月 27 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/scribe/">https://wsgzao.github.io/post/scribe/</a></p><hr><h2 id="Scribe-简介"><a href="#Scribe-简介" class="headerlink" title="Scribe 简介"></a>Scribe 简介</h2><p>Scribe is a server for aggregating log data that’s streamed in real time from clients. It is designed to be scalable and reliable.ß</p><p>See the Scribe Wiki for documentation:<br><a href="http://wiki.github.com/facebook/scribe" target="_blank" rel="noopener">http://wiki.github.com/facebook/scribe</a></p><h2 id="install-scribe"><a href="#install-scribe" class="headerlink" title="install scribe"></a>install scribe</h2><blockquote><p>OS: CentOS 7.x</p></blockquote><p>This guide shows how to install the precompiled scribed binary and its dependencies on a new server. Care must be taken to use the required versions for <code>boost (1.44.0)</code>, <code>thrift (0.7.0)</code> and <code>libevent (1.4.10)</code>. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install necessary tools</span></span><br><span class="line">sudo yum install git make flex bison libtool automake openssl-devel libevent libevent-devel python-devel gcc-c++ byacc java-1.7.0-openjdk ant autoconf boost-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># update autoconf</span></span><br><span class="line"><span class="comment"># http://ftp.gnu.org/gnu/autoconf/</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">sudo rpm -e --nodeps `rpm -qf /usr/bin/autoconf`</span><br><span class="line">wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz</span><br><span class="line">tar xzf autoconf-2.69.tar.gz</span><br><span class="line"><span class="built_in">cd</span> autoconf-2.69/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"><span class="comment"># make sure /usr/local/bin is in system PATH: add following line to ~/.bashrc</span></span><br><span class="line">vi ~/.bashrc</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># install boost</span></span><br><span class="line"><span class="comment"># http://jaist.dl.sourceforge.net/project/boost/boost/</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget http://jaist.dl.sourceforge.net/project/boost/boost/1.44.0/boost_1_44_0.tar.gz</span><br><span class="line">tar xzf boost_1_44_0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> boost_1_44_0/</span><br><span class="line">./bootstrap.sh</span><br><span class="line">sudo ./bjam install</span><br><span class="line"></span><br><span class="line"><span class="comment"># install thrift</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/apache/thrift.git</span><br><span class="line"><span class="built_in">cd</span> thrift/</span><br><span class="line">git fetch</span><br><span class="line">git branch -a</span><br><span class="line">git checkout 0.7.x</span><br><span class="line">./bootstrap.sh</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">cp compiler/cpp/thrifty.hh compiler/cpp/thrifty.h</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"><span class="built_in">cd</span> lib/py/</span><br><span class="line">sudo python setup.py install</span><br><span class="line"></span><br><span class="line"><span class="comment"># install fb303</span></span><br><span class="line"><span class="built_in">cd</span> ~/thrift/contrib/fb303/</span><br><span class="line">./bootstrap.sh</span><br><span class="line">./configure CPPFLAGS=<span class="string">"-DHAVE_INTTYPES_H -DHAVE_NETINET_IN_H"</span></span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line"><span class="built_in">cd</span> py/</span><br><span class="line">sudo python setup.py install</span><br><span class="line"></span><br><span class="line"><span class="comment"># install libevent</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget https://github.com/downloads/libevent/libevent/libevent-1.4.10-stable.tar.gz</span><br><span class="line">tar xf libevent-1.4.10-stable.tar.gz </span><br><span class="line"><span class="built_in">cd</span> libevent-1.4.10-stable</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># Copy the scribed binary and put it in the desired directory</span></span><br><span class="line">scp scribe.tar.gz 10.65.32.134:/tmp</span><br><span class="line">scp scribed 10.65.32.134:/tmp</span><br><span class="line"><span class="comment"># unzip and mkdir</span></span><br><span class="line">mkdir /opt/running</span><br><span class="line"><span class="built_in">cd</span> /opt/running</span><br><span class="line">cp /tmp/scribe.tar.gz .</span><br><span class="line">tar xzvf scribe.tar.gz</span><br><span class="line">rm -f scribe.tar.gz</span><br><span class="line">mkdir -p /data/gop/live/primary/gop</span><br><span class="line">mkdir -p /data/gop/live/secondary/gop</span><br><span class="line">ln -s /data/gop/live/primary/gop/ /data/shortcut_gop</span><br><span class="line"><span class="comment"># rm -r /data/shortcut_gop</span></span><br><span class="line">cp /tmp/scribed /usr/<span class="built_in">local</span>/bin/scribed</span><br><span class="line"><span class="built_in">cd</span> scribe/</span><br><span class="line"></span><br><span class="line">[root@vm4 scribe]<span class="comment"># cat run_scribed.sh </span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="built_in">export</span> LD_LIBRARY_PATH=/usr/lib:/usr/<span class="built_in">local</span>/lib</span><br><span class="line">        /usr/<span class="built_in">local</span>/bin/scribed scribe_11315.conf 1&gt;output/scribe.log 2&gt;output/scribe.err</span><br><span class="line">        sleep 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">nohup sh run_scribed.sh &amp;</span><br><span class="line"></span><br><span class="line">[root@sg-gop-10-65-32-134 scribe]<span class="comment"># netstat -tlnp</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><br><span class="line">tcp        0      0 0.0.0.0:10050           0.0.0.0:*               LISTEN      55310/zabbix_agentd</span><br><span class="line">tcp        0      0 0.0.0.0:38422           0.0.0.0:*               LISTEN      52781/sshd</span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1305/sshd</span><br><span class="line">tcp6       0      0 :::10050                :::*                    LISTEN      55310/zabbix_agentd</span><br><span class="line">tcp6       0      0 :::11315                :::*                    LISTEN      4294/scribed</span><br><span class="line">tcp6       0      0 :::38422                :::*                    LISTEN      52781/sshd</span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      1305/sshd</span><br></pre></td></tr></table></figure><h2 id="自动配置-scribe-sh"><a href="#自动配置-scribe-sh" class="headerlink" title="自动配置 scribe.sh"></a>自动配置 scribe.sh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line"><span class="comment">#scribe server installation for CentOS 7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$#</span>"</span> -ne 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Usage: bash <span class="variable">$0</span> project_name"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">yum -y install git make flex bison libtool automake openssl-devel libevent libevent-devel python-devel gcc-c++ byacc java-1.7.0-openjdk ant</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#===============update autoconf===============</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">sudo rpm -e --nodeps `rpm -qf /usr/bin/autoconf`</span><br><span class="line">wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz</span><br><span class="line">tar xzf autoconf-2.69.tar.gz</span><br><span class="line"><span class="built_in">cd</span> autoconf-2.69/</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export PATH=<span class="variable">$PATH</span>:/usr/local/bin"</span> &gt;&gt; /etc/bashrc</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/bin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#.===============install boost===============</span></span><br><span class="line">wget http://jaist.dl.sourceforge.net/project/boost/boost/1.44.0/boost_1_44_0.tar.gz</span><br><span class="line">tar xzf boost_1_44_0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> boost_1_44_0/</span><br><span class="line">./bootstrap.sh</span><br><span class="line">./bjam install</span><br><span class="line"></span><br><span class="line"><span class="comment">#add new lib path for libboost</span></span><br><span class="line"><span class="comment">#echo "/usr/local/lib" &gt;&gt; /etc/ld.so.conf.d/localbin.conf</span></span><br><span class="line"><span class="comment">#ldconfig</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#===============install thrift===============</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/apache/thrift.git</span><br><span class="line"><span class="built_in">cd</span> thrift/</span><br><span class="line">git fetch</span><br><span class="line">git branch -a</span><br><span class="line">git checkout 0.7.x</span><br><span class="line">./bootstrap.sh</span><br><span class="line">./configure</span><br><span class="line">mv compiler/cpp/thrifty.hh compiler/cpp/thrifty.h</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> lib/py</span><br><span class="line">python setup.py install</span><br><span class="line"></span><br><span class="line"><span class="comment">#===============install fb303===============</span></span><br><span class="line"><span class="built_in">cd</span> ~/thrift/contrib/fb303/</span><br><span class="line">./bootstrap.sh</span><br><span class="line">./configure CPPFLAGS=<span class="string">"-DHAVE_INTTYPES_H -DHAVE_NETINET_IN_H"</span></span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> py/</span><br><span class="line">python setup.py install</span><br><span class="line"></span><br><span class="line"><span class="comment">#===============install libevent =============== </span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget https://github.com/downloads/libevent/libevent/libevent-1.4.10-stable.tar.gz</span><br><span class="line">tar xf libevent-1.4.10-stable.tar.gz </span><br><span class="line"><span class="built_in">cd</span> libevent-1.4.10-stable</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#setup scribe server</span></span><br><span class="line">mkdir -p /opt/scribe_server/<span class="variable">$PROJECT</span>/</span><br><span class="line"><span class="built_in">cd</span> /opt/scribe_server/<span class="variable">$PROJECT</span>/</span><br><span class="line">cat &lt;&lt;EOF&gt;&gt;scribed.conf</span><br><span class="line">port=12315</span><br><span class="line">max_msg_per_second=2000000</span><br><span class="line">check_interval=5</span><br><span class="line">new_thread_per_category=yes</span><br><span class="line">num_thrift_server_threads=5</span><br><span class="line"></span><br><span class="line">&lt;store&gt;</span><br><span class="line">category=default</span><br><span class="line"><span class="built_in">type</span>=buffer</span><br><span class="line"></span><br><span class="line">target_write_size=20480</span><br><span class="line">max_write_interval=1</span><br><span class="line">buffer_send_rate=2</span><br><span class="line">retry_interval=30</span><br><span class="line">retry_interval_range=10</span><br><span class="line"></span><br><span class="line">&lt;primary&gt;</span><br><span class="line"><span class="built_in">type</span>=file</span><br><span class="line">fs_type=std</span><br><span class="line">file_path=/data/scribe_primary/<span class="variable">$&#123;PROJECT&#125;</span></span><br><span class="line">max_size=1000000000</span><br><span class="line">rotate_period=daily</span><br><span class="line">rotate_hour=0</span><br><span class="line">&lt;/primary&gt;</span><br><span class="line"></span><br><span class="line">&lt;secondary&gt;</span><br><span class="line"><span class="built_in">type</span>=file</span><br><span class="line">fs_type=std</span><br><span class="line">file_path=/data/scribe_secondary/<span class="variable">$&#123;PROJECT&#125;</span></span><br><span class="line">max_size=1000000000</span><br><span class="line">rotate_period=daily</span><br><span class="line">rotate_hour=0</span><br><span class="line">&lt;/secondary&gt;</span><br><span class="line">&lt;/store&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF&gt;&gt;run_scribe.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/usr/lib:/usr/<span class="built_in">local</span>/lib</span><br><span class="line">scribed scribed.conf 1&gt;&gt;output/scribe.log 2&gt;&gt;output/scribe.err</span><br><span class="line">sleep 2</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">chmod +x run_scribe.sh</span><br><span class="line">mkdir output</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Done! Please modify config and iptables, and download scribed"</span></span><br></pre></td></tr></table></figure><h2 id="Docker-容器部署-Scribe"><a href="#Docker-容器部署-Scribe" class="headerlink" title="Docker 容器部署 Scribe"></a>Docker 容器部署 Scribe</h2><blockquote><p>上述方案受到依赖环境库影响手动部署非常困难，推荐使用 docker 方式快速部署</p></blockquote><p><a href="https://hub.docker.com/r/polonaiz/facebook-scribe" target="_blank" rel="noopener">polonaiz/facebook-scribe</a></p><p>Scribe is a server for aggregating log data streamed in real time from a large number of servers. (<a href="https://github.com/facebookarchive/scribe" target="_blank" rel="noopener">https://github.com/facebookarchive/scribe</a>)</p><p>Dockerfile: <a href="https://github.com/polonaiz/facebook-scribe-docker/blob/master/Dockerfile" target="_blank" rel="noopener">https://github.com/polonaiz/facebook-scribe-docker/blob/master/Dockerfile</a></p><p>Usage: <a href="https://github.com/polonaiz/facebook-scribe-docker/blob/master/Makefile" target="_blank" rel="noopener">https://github.com/polonaiz/facebook-scribe-docker/blob/master/Makefile</a></p><p>Default Configuration: <a href="https://github.com/polonaiz/facebook-scribe-docker/blob/master/default.conf" target="_blank" rel="noopener">https://github.com/polonaiz/facebook-scribe-docker/blob/master/default.conf</a></p><blockquote><p>基于 polonaiz/facebook-scribe 修改后的 docker image，配置参数和线上保持一致</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># Makefile</span><br><span class="line"></span><br><span class="line">all: build</span><br><span class="line"></span><br><span class="line">build:</span><br><span class="line">        docker build . --tag &apos;wangao/facebook-scribe&apos;</span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line">        docker rmi -f &apos;wangao/facebook-scribe&apos;</span><br><span class="line"></span><br><span class="line">setup:</span><br><span class="line">        sudo mkdir -p /data/gop/live/primary/gop</span><br><span class="line">        sudo mkdir -p /data/gop/live/secondary/gop</span><br><span class="line">        sudo chown -R $&#123;USER&#125;.$&#123;USER&#125; /data/gop</span><br><span class="line"></span><br><span class="line">stop:</span><br><span class="line">        docker rm -f &apos;scribe&apos;</span><br><span class="line"></span><br><span class="line">start:</span><br><span class="line">        docker run \</span><br><span class="line">                --detach \</span><br><span class="line">                --restart always \</span><br><span class="line">                --name &apos;scribe&apos; \</span><br><span class="line">                --publish 11315:11315 \</span><br><span class="line">                --mount type=bind,source=/data/gop/,destination=/data/gop/,consistency=consistent \</span><br><span class="line">                -v /etc/localtime:/etc/localtime \</span><br><span class="line">                wsgzao/facebook-scribe</span><br><span class="line"></span><br><span class="line">test:</span><br><span class="line">        docker exec -it scribe bash -c &apos;date | scribe_cat test; sleep 1&apos;</span><br><span class="line">        tail /data/gop/live/primary/test/test_current</span><br><span class="line"></span><br><span class="line">push:</span><br><span class="line">        docker login</span><br><span class="line">        docker push wangao/facebook-scribe</span><br><span class="line"></span><br><span class="line"># how to work</span><br><span class="line">make setup</span><br><span class="line">make start</span><br></pre></td></tr></table></figure><p><a href="https://hub.docker.com/r/wsgzao/facebook-scribe" target="_blank" rel="noopener">wsgzao/facebook-scribe</a></p><p><a href="https://wsgzao.github.io/post/find/">基于 bash find 命令执行 log 日志备份和清理的实践</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://github.com/facebookarchive/scribe" target="_blank" rel="noopener">Facebook Scribe</a><br><a href="https://gist.github.com/PinkyJie/5370470" target="_blank" rel="noopener">scribe-centos</a></p>]]></content>
    
    <summary type="html">
    
      Centos安装Scribe真是累
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Bash 脚本递归查询批量修改文件名</title>
    <link href="https://wsgzao.github.io/post/bash-recursive/"/>
    <id>https://wsgzao.github.io/post/bash-recursive/</id>
    <published>2020-05-31T06:59:49.000Z</published>
    <updated>2020-06-01T12:05:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>需求是批量修改 <em>.crt 和 </em>.key 为 ssl.chain.crt 和 server.key，为什么会有这样的需求主要是踩了一个大坑 <a href="https://support.sectigo.com/articles/Knowledge/Sectigo-AddTrust-External-CA-Root-Expiring-May-30-2020" target="_blank" rel="noopener">Sectigo AddTrust External CA Root Expiring May 30, 2020</a>，说多了都是泪。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 05 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/bash-recursive/">https://wsgzao.github.io/post/bash-recursive/</a></p><hr><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><ol><li>需要遍历目录</li><li>需要重命名 <em>.key 和 </em>.crt 结尾的文件为 server.key 和 ssl.chain.crt</li></ol><h2 id="linux-命令-递归修改文件名-包括文件夹"><a href="#linux-命令-递归修改文件名-包括文件夹" class="headerlink" title="linux 命令 递归修改文件名 (包括文件夹)"></a>linux 命令 递归修改文件名 (包括文件夹)</h2><blockquote><p>网上搜索了关键词，发现这个脚本写得比较清晰，但还是需要修改下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">changeName</span></span>()&#123;</span><br><span class="line">    <span class="comment">#new=`echo $1|sed 's/^/abc/g'`</span></span><br><span class="line">    new=`<span class="built_in">echo</span> <span class="variable">$1</span>|sed -r <span class="string">'s/abc(.*$)/\1/g'</span>`</span><br><span class="line">    <span class="built_in">echo</span> changeName old: <span class="variable">$1</span> new: <span class="variable">$new</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$1</span> != <span class="variable">$new</span> ];<span class="keyword">then</span></span><br><span class="line">        mv <span class="variable">$1</span> <span class="variable">$new</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">travFolder</span></span>()&#123;</span><br><span class="line">    <span class="comment">#echo "travFolder start"</span></span><br><span class="line">    flist=`ls <span class="variable">$1</span>`</span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$1</span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> <span class="variable">$flist</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="comment">#echo traverse do $f</span></span><br><span class="line">        <span class="built_in">local</span> old=<span class="variable">$f</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">test</span> -d <span class="variable">$f</span></span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            <span class="comment">#echo "traverse dir:$&#123;f&#125;"</span></span><br><span class="line">            travFolder <span class="variable">$f</span></span><br><span class="line">            <span class="comment">#echo "traverse rename dir:$&#123;f&#125;"</span></span><br><span class="line">            changeName <span class="variable">$old</span> <span class="comment">#rename folder</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="comment">#echo "traverse file:$f"</span></span><br><span class="line">            changeName <span class="variable">$f</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">cd</span> ../</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">param=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$1</span>"</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">    param=<span class="string">"./"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"empty string: <span class="variable">$param</span>"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    param=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">travFolder <span class="variable">$param</span></span><br></pre></td></tr></table></figure><h2 id="修改后的代码"><a href="#修改后的代码" class="headerlink" title="修改后的代码"></a>修改后的代码</h2><blockquote><p>如果你考虑使用 rename 简化代码，可以参考 Stack Overflow 的一篇文章</p></blockquote><p><a href="https://stackoverflow.com/a/24103055" target="_blank" rel="noopener">How to Batch Rename Files in a macOS Terminal?</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">travFolder</span></span>()&#123;</span><br><span class="line">    <span class="comment">#echo "travFolder start"</span></span><br><span class="line">    flist=`ls <span class="variable">$1</span>`</span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$1</span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.key; <span class="keyword">do</span> mv <span class="string">"<span class="variable">$f</span>"</span> <span class="string">"server.key"</span>; <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.crt; <span class="keyword">do</span> mv <span class="string">"<span class="variable">$f</span>"</span> <span class="string">"ssl.chain.crt"</span>; <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> <span class="variable">$flist</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="comment">#echo traverse do $f</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">test</span> -d <span class="variable">$f</span></span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            <span class="comment">#echo "traverse dir:$&#123;f&#125;"</span></span><br><span class="line">            travFolder <span class="variable">$f</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">cd</span> ../</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">param=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$1</span>"</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">    param=<span class="string">"./"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"empty string: <span class="variable">$param</span>"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    param=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">travFolder <span class="variable">$param</span></span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://github.com/wangdoc/bash-tutorial" target="_blank" rel="noopener">Bash 教程 </a><br><a href="https://www.cnblogs.com/yerikMu/p/11640548.html" target="_blank" rel="noopener">linux 命令 递归修改文件名 (包括文件夹)</a></p>]]></content>
    
    <summary type="html">
    
      Bash脚本递归查询批量修改文件名
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>LeetCode 学习路径</title>
    <link href="https://wsgzao.github.io/post/leetcode/"/>
    <id>https://wsgzao.github.io/post/leetcode/</id>
    <published>2020-05-13T06:59:49.000Z</published>
    <updated>2020-06-12T09:16:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://leetcode.com/" target="_blank" rel="noopener">LeetCode</a>或者国内版本 <a href="https://leetcode-cn.com/" target="_blank" rel="noopener">力扣</a> 对大家来说都是非常棒的算法学习平台，现阶段大部分人面试大厂前都会准备刷题，虽然有争议但通过刷题顺利进入大厂的案例都佐证了刷题的重要性，每个人对刷题的理解都不一样，但重要的是我们都在思考解决方法，没有停下来做一条闲鱼。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 05 月 13 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/leetcode/">https://wsgzao.github.io/post/leetcode/</a></p><hr><h2 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h2><blockquote><p>图书资源比较经典的有《剑指 offer》《算法竞赛进阶指南》等</p></blockquote><p><a href="https://github.com/doocs/leetcode" target="_blank" rel="noopener">LeetCode solutions in any programming language</a></p><p><a href="https://github.com/azl397985856/leetcode" target="_blank" rel="noopener">leetcode 题解，记录自己的 leetcode 解题之路</a></p><p><a href="https://github.com/MisterBooo/LeetCodeAnimation" target="_blank" rel="noopener">LeetCodeAnimation 用动画的形式呈现解 LeetCode 题目的思路</a></p><p><a href="https://www.jiuzhang.com/solution/" target="_blank" rel="noopener">LintCode（领扣）/ LeetCode 参考答案查询</a></p><p><a href="https://time.geekbang.org/column/intro/100017301" target="_blank" rel="noopener">极客时间 - 数据结构与算法之美</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.zhihu.com/question/280279208/answer/685132550" target="_blank" rel="noopener">大家都是如何刷 LeetCode 的？</a></p>]]></content>
    
    <summary type="html">
    
      LeeCode学习路径
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>图解 HTTPS</title>
    <link href="https://wsgzao.github.io/post/https/"/>
    <id>https://wsgzao.github.io/post/https/</id>
    <published>2020-05-10T06:59:49.000Z</published>
    <updated>2020-05-10T09:26:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200510171326.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://weread.qq.com/web/reader/3da32b505dd9f43da9a1aca" target="_blank" rel="noopener">图解 HTTP</a>这本书蛮多人推荐的，在搜索 HTTPS 相关知识的时候正好看到 <a href="https://www.waitalone.cn/technology/https.html" target="_blank" rel="noopener">图解 HTTPS</a> 的文章，细节解释通俗易懂，申请个人转载方便回顾学习。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 05 月 10 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/https/">https://wsgzao.github.io/post/https/</a></p><hr><h2 id="存在即合理"><a href="#存在即合理" class="headerlink" title="存在即合理"></a>存在即合理</h2><p>http 是非常常见的应用层协议，是超文本传输协议的简称，其传输的内容都是明文的。在这个混乱的世界，明文传输信息想想就可怕，网络 “小混混” 的手段远比我们这些凡人高明得多，他们有一万种方式劫持，篡改我们的数据。对于一个网站或者服务，如果你给你的用户两个选择：</p><ol><li>通讯数据明文传输，速度快；</li><li>通讯数据加密传输，但是速度可能会稍微慢一点；</li></ol><p>我想，只要脑袋没有长歪的用户都宁愿牺牲一点速度去换取数据传输的安全。</p><p>这样，https 的存在就具备了合理性，https 中的 s 表示 SSL 或者 TLS，就是在原 http 的基础上加上一层用于数据加密、解密、身份认证的安全层。</p><h2 id="一层层揭开-HTTPS-神秘面纱"><a href="#一层层揭开-HTTPS-神秘面纱" class="headerlink" title="一层层揭开 HTTPS 神秘面纱"></a>一层层揭开 HTTPS 神秘面纱</h2><p>本文试图通过层层渐进方式来通俗的阐述 https 的原理，若有错误，欢迎大家指正。</p><p>虽然要层层渐进，但是我们不妨先奉上刚画好的还热乎着的 https 通信完整流程图：</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200510171633.png" alt=""></p><p>从上图可以看到，右边有一堆钥匙，一看到钥匙我们就能想到这个过程免不了加密。另外，那些钥匙长得还不一样，有些只有一把，有些是一对，嗯，是的，你看得真仔细。</p><p>好的，扯远了，现在开始层层渐进。</p><h3 id="第一层（安全传输数据）"><a href="#第一层（安全传输数据）" class="headerlink" title="第一层（安全传输数据）"></a>第一层（安全传输数据）</h3><p>假如我们要实现一个功能：<strong> 一个用户 A 给一个用户 B 发消息，但是要保证这个消息的内容只能被 A 和 B 知道，其他的无论是墨渊上神还是太上老君都没办法破解或者篡改消息的内容。</strong></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200510171725.png" alt=""></p><p>如上图，需求就是这么简单，A 给 B 发一条消息，因为比较私密，不想被其他人看到。</p><p>由于消息不想被其他人看到，所以我们自然而然就会想到为消息加密，并且只有 A 和 B 才有解密的密钥。这里需要考虑几点：</p><ol><li>使用什么加密方式？</li><li>密钥怎么告知对方？</li></ol><p>对于第一个问题，加密算法分为两类：对称加密和非对称加密，这里我们选择对称机密，原因有如下几个：</p><ol><li>对称加密速度快，加密时 CPU 资源消耗少；</li><li>非对称加密对待加密的数据的长度有比较严格的要求，不能太长，但是实际中消息可能会很长（比如你给你女朋友发情书），因此非对称加密就满足不了；</li></ol><p>对于第二个问题，这是导致整个 https 通信过程很复杂的根本原因。 如果 A 或 B 直接把他们之间用于解密的密钥通过互联网传输给对方，那一旦密钥被第三者劫持，第三者就能正确解密 A,B 之间的通信数据。</p><h3 id="第二层（安全传输密钥）"><a href="#第二层（安全传输密钥）" class="headerlink" title="第二层（安全传输密钥）"></a>第二层（安全传输密钥）</h3><p>通过第一层的描述，第二层需要解决的问题是：安全地传输 A,B 之间用于解密数据的密钥。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200510171839.png" alt=""></p><p>因为如果传输过程中这把密钥被第三者拿到了，就能解密传通信数据，所以，这把密钥必须得加密，就算第三者劫持到这把加密过的密钥，他也不能解密，得到真正的密钥。</p><p>这里有一个问题，那要用什么方式加密这把密钥呢？如果使用对称加密，那这个对称加密的密钥又怎么安全地告诉对方呢？完了，陷入死循环了…. 所以，一定不能用对称加密</p><p>那就是用非对称加密咯，那如何应用非对称加密来加密那把密钥呢？</p><p>考虑如下方式：</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200510171859.png" alt=""></p><ol><li>客户端： 我要发起 HTTPS 请求，麻烦给我一个非对称加密的公钥；</li><li>服务器： (生成一对非对称加密的密钥对，然后把公钥发给客户端)，接着，这是公钥；</li><li>客户端：（收到公钥，生成一个随机数，作为上图中那一把密钥，用刚才收到的公钥加密这个密钥，然后发给服务器）这是我刚生成的加密过的密钥；</li><li>服务器：（收到加密后的密钥，用本地的第一步自己生成的非对称加密的私钥解密，得到真正的密钥）;</li><li>现在，客户端和服务器都知道了这把密钥，就能愉快地用这个密钥对称加密数据…</li></ol><p>分析一下上面步骤的可行性：</p><ul><li>上述步骤中最终用于加密数据的密钥是客户端生成并且用公钥加密之后传给服务器的，因为私钥只有服务器才有，所以也就只有服务器才能解开客户端上报的密钥；</li><li>要保证传输的密钥只能被服务器解密，就得保证用于加密密钥的公钥一定是服务器下发的，绝对不可能被第三方篡改过；</li></ul><p>因为还可能存在一种 “中间人攻击” 的情况，如下图：</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200510171918.png" alt=""></p><p>这种情况下，客户端和服务器之间通信的数据就完全被坏人破解了。</p><h3 id="第三层（安全传输公钥）"><a href="#第三层（安全传输公钥）" class="headerlink" title="第三层（安全传输公钥）"></a>第三层（安全传输公钥）</h3><p>从上一层可以知道，要保证数据的安全，就必须得保证服务器给客户端下发的公钥是真正的公钥，而不是中间人伪造的公钥。那怎么保证呢？</p><p>那就得引入数字证书了，数字证书是服务器主动去权威机构申请的，证书中包含了上一个图中的加密过的 A 公钥和权威机构的信息，所以服务器只需要给客户端下发数字证书即可。现在流程图如下：</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200510171949.png" alt=""></p><p>那数字证书中的 A 公钥是如何加密的呢？</p><p>答案是非对称加密，只不过这里是使用只有权威机构自己才有的私钥加密。</p><p>等一下，既然 A 公钥被权威机构的私钥加密了，那客户端收到证书之后怎么解密证书中的 A 公钥呢? 需要有权威机构的公钥才能解密啊！那这个权威机构的公钥又是怎么安全地传输给客户端的呢？感觉进入了鸡生蛋，蛋生鸡的悖论了~~</p><p>别慌，<strong> 答案是权威机构的公钥不需要传输，因为权威机构会和主流的浏览器或操作系统合作，将他们的公钥内置在浏览器或操作系统环境中。</strong> 客户端收到证书之后，只需要从证书中找到权威机构的信息，并从本地环境中找到权威机构的公钥，就能正确解密 A 公钥。</p><p>这样就绝对安全了吗？既然权威技能能给服务器签发数字证书，那为什么就不可能给中间人签发数字证书呢? 毕竟赚钱的生意权威机构也不会拒绝的呀。</p><p>试想一下：</p><blockquote><p>服务器给客户端下发数字证书时证书被中间人劫持了，中间人将服务器的证书替换成自己的证书下发给客户端，客户端收到之后能够通过权威机构的公钥解密证书内容（因为中间人的证书也是权威机构私钥加密的），从而获取公钥，但是，这里的公钥并不是服务器原本的 A 公钥，而是中间人自己证书中的 B 公钥。从第二层可知，如果不能保证客户端收到的公钥是服务器下发的，那整个通信数据的安全就没法保证。简单总结就是证书被调包~</p></blockquote><p>所以，还得保证客户端收到的证书就是服务器下发的证书，没有被中间人篡改过。</p><h3 id="四层（安全传输证书）"><a href="#四层（安全传输证书）" class="headerlink" title="四层（安全传输证书）"></a>四层（安全传输证书）</h3><p>这一层，我们的任务是：保证客户端收到的证书是服务器下发的证书，没有被中间人篡改过。</p><p>所以，这里就有两个需求:</p><ul><li>证明证书内容没有被第三方篡改过；</li><li>证明证书是服务器下发的；</li></ul><p>其实这些问题，数字证书本身已经提供方案了，数字证书中除了包含加密之后的服务器公钥，权威机构的信息之外，还包含了证书内容的签名(先通过 Hash 函数计算得到证书数字摘要，然后用权威机构私钥加密数字摘要得到数字签名)，签名计算方法以及证书对应的域名。这样一来，客户端收到证书之后：</p><ul><li>使用权威机构的公钥解密数字证书，得到证书内容（服务器的公钥）以及证书的数字签名，然后根据证书上描述的计算证书签名的方法计算一下当前证书的签名，与收到的签名作对比，如果一样，表示证书一定是服务器下发的，没有被中间人篡改过。因为中间人虽然有权威机构的公钥，能够解析证书内容并篡改，但是篡改完成之后中间人需要将证书重新加密，但是中间人没有权威机构的私钥，无法加密，强行加密只会导致客户端无法解密，如果中间人强行乱修改证书，就会导致证书内容和证书签名不匹配。所以证书签名就能判断证书是否被篡改</li><li>再考虑证书被掉包的情况：中间人同样可以向权威机构申请一份证书，然后在服务器给客户端下发证书的时候劫持原证书，将自己的假证书下发给客户端，客户端收到之后依然能够使用权威机构的公钥解密证书，并且证书签名也没问题。但是这个时候客户端还需要检查证书中的域名和当前访问的域名是否一致。如果不一致，会发出警告！</li></ul><p>从上面的分析可以看到，数字证书中的信息确实能让客户端辨别证书的真伪。</p><p>原文转自：<a href="https://zhuanlan.zhihu.com/p/25976060" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/25976060</a></p><p>修复了文中的一处错误</p>]]></content>
    
    <summary type="html">
    
      图解HTTPS
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Keepalived 原理介绍和配置实践</title>
    <link href="https://wsgzao.github.io/post/keepalived/"/>
    <id>https://wsgzao.github.io/post/keepalived/</id>
    <published>2020-05-08T06:59:49.000Z</published>
    <updated>2020-06-11T08:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要讲述 Keepalived 原理介绍和配置实践</p><blockquote><p>Keepalived 原理介绍和配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 05 月 08 日 - 增加 virual_router_id 冲突解决思路和单播模式的应用<br>2020 年 03 月 20 日 - 增加 Keepalived 双活实践<br>2019 年 09 月 03 日 - 拆分 LVS-Keepalived 中 Keepalived<br>2019 年 08 月 23 日 - 更新 LVS/NAT、LVS/DR、LVS/TUN 三种模式的原理和配置实践<br>2018 年 12 月 03 日 - 精简和更新配置步骤<br>2018 年 07 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/keepalived/">https://wsgzao.github.io/post/keepalived/</a></p><p><strong> 扩展阅读 </strong></p><p>LVS - <a href="http://www.linuxvirtualserver.org/zh/index.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/zh/index.html</a><br>Keepalived - <a href="http://www.keepalived.org/" target="_blank" rel="noopener">http://www.keepalived.org/</a></p><hr><h2 id="ReadMe"><a href="#ReadMe" class="headerlink" title="ReadMe"></a>ReadMe</h2><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>Keepalived - <a href="http://www.keepalived.org/doc/" target="_blank" rel="noopener">http://www.keepalived.org/doc/</a><br>The Keepalived Solution - <a href="http://www.linuxvirtualserver.org/docs/ha/keepalived.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/docs/ha/keepalived.html</a><br>LVS 和 Keepalived 官方中文手册 PDF - <a href="https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg</a></p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><blockquote><p>以下术语涉及 LVS 三种工作模式的原理</p></blockquote><ul><li>LB (Load Balancer 负载均衡) </li><li>HA (High Available 高可用) </li><li>Failover (失败切换) </li><li>Cluster (集群) </li><li>LVS (Linux Virtual Server Linux 虚拟服务器) </li><li>DS (Director Server)，指的是前端负载均衡器节点</li><li>RS (Real Server)，后端真实的工作服务器</li><li>VIP (Virtual IP)，虚拟的 IP 地址，向外部直接面向用户请求，作为用户请求的目标的 IP 地址</li><li>DIP (Director IP)，主要用于和内部主机通讯的 IP 地址</li><li>RIP (Real Server IP)，后端服务器的 IP 地址</li><li>CIP (Client IP)，访问客户端的 IP 地址</li></ul><h2 id="负载均衡-LB"><a href="#负载均衡-LB" class="headerlink" title="负载均衡(LB)"></a>负载均衡(LB)</h2><blockquote><p>负载均衡实现方法有两种：硬件实现和软件实现</p></blockquote><p>硬件比较常见的有：</p><ol><li>F5 Big-IP</li><li>Citrix Netscaler</li></ol><p>软件比较常见的有：</p><ol><li>LVS（Linux Virtual Server）</li><li>HAProxy</li><li>Nginx</li></ol><p>LVS 特点是：</p><ol><li>首先它是基于 4 层的网络协议的，抗负载能力强，对于服务器的硬件要求除了网卡外，其他没有太多要求；</li><li>配置性比较低，这是一个缺点也是一个优点，因为没有可太多配置的东西，大大减少了人为出错的几率；</li><li>应用范围比较广，不仅仅对 web 服务做负载均衡，还可以对其他应用（mysql）做负载均衡；</li><li>LVS 架构中存在一个虚拟 IP 的概念，需要向 IDC 多申请一个 IP 来做虚拟 IP。</li></ol><p>Nginx 负载均衡器的特点是：</p><ol><li>工作在网络的 7 层之上，可以针对 http 应用做一些分流的策略，比如针对域名、目录结构；</li><li>Nginx 安装和配置比较简单，测试起来比较方便；</li><li>也可以承担高的负载压力且稳定，一般能支撑超过上万次的并发；</li><li>Nginx 可以通过端口检测到服务器内部的故障，比如根据服务器处理网页返回的状态码、超时等等，并且会把返回错误的请求重新提交到另一个节点，不过其中缺点就是不支持 url 来检测；</li><li>Nginx 对请求的异步处理可以帮助节点服务器减轻负载；</li><li>Nginx 能支持 http 和 Email，这样就在适用范围上面小很多；</li><li>默认有三种调度算法: 轮询、weight 以及 ip_hash（可以解决会话保持的问题），还可以支持第三方的 fair 和 url_hash 等调度算法；</li></ol><p>HAProxy 的特点是：</p><ol><li>HAProxy 是工作在网络 7 层之上；</li><li>支持 Session 的保持，Cookie 的引导等；</li><li>支持 url 检测后端的服务器出问题的检测会有很好的帮助；</li><li>支持的负载均衡算法：动态加权轮循(Dynamic Round Robin)，加权源地址哈希(Weighted Source Hash)，加权 URL 哈希和加权参数哈希(Weighted Parameter Hash)；</li><li>单纯从效率上来讲 HAProxy 更会比 Nginx 有更出色的负载均衡速度；</li><li>HAProxy 可以对 Mysql 进行负载均衡，对后端的 DB 节点进行检测和负载均衡。</li></ol><h2 id="keepalived-简介"><a href="#keepalived-简介" class="headerlink" title="keepalived 简介"></a>keepalived 简介</h2><p>Keepalived 是运行在 lvs 之上，是一个用于做双机热备（HA）的软件，它的主要功能是实现真实机的故障隔离及负载均衡器间的失败切换，提高系统的可用性。</p><h3 id="运行原理"><a href="#运行原理" class="headerlink" title="运行原理"></a>运行原理</h3><p>keepalived 通过选举（看服务器设置的权重）挑选出一台热备服务器做 MASTER 机器，MASTER 机器会被分配到一个指定的虚拟 ip，外部程序可通过该 ip 访问这台服务器，如果这台服务器出现故障（断网，重启，或者本机器上的 keepalived crash 等），keepalived 会从其他的备份机器上重选（还是看服务器设置的权重）一台机器做 MASTER 并分配同样的虚拟 IP，充当前一台 MASTER 的角色。</p><h3 id="选举策略"><a href="#选举策略" class="headerlink" title="选举策略"></a>选举策略</h3><p>选举策略是根据 VRRP 协议，完全按照权重大小，权重最大（0～255）的是 MASTER 机器，下面几种情况会触发选举</p><ol><li>keepalived 启动的时候</li><li>master 服务器出现故障（断网，重启，或者本机器上的 keepalived crash 等，而本机器上其他应用程序 crash 不算）</li><li>有新的备份服务器加入且权重最大</li></ol><h2 id="keepalived-的配置文件说明"><a href="#keepalived-的配置文件说明" class="headerlink" title="keepalived 的配置文件说明"></a>keepalived 的配置文件说明</h2><p>Keepalived 是运行在 lvs 之上, 它的主要功能是实现 RealServer(真实服务器)的故障隔离及 Director(负载均衡器)间的 FailOver(失败切换). </p><ul><li>keepalived 是 lvs 的扩展项目, 因此它们之间具备良好的兼容性</li><li>对 RealServer 的健康检查, 实现对失效机器 / 服务的故障隔离</li><li>负载均衡器之间的失败切换 failover</li></ul><h3 id="全局定义"><a href="#全局定义" class="headerlink" title="全局定义"></a>全局定义</h3><p>全局配置又包括两个子配置</p><ol><li>全局定义(global definition)</li><li>静态路由配置(static ipaddress/routes)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局定义 (global definition) </span></span><br><span class="line">global_defs &#123;                      </span><br><span class="line">   notification_email &#123;      </span><br><span class="line">   acassen@firewall.loc     </span><br><span class="line">   failover@firewall.loc</span><br><span class="line">   sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc   </span><br><span class="line">   smtp_server 192.168.200.1                         </span><br><span class="line">   smtp_connect_timeout 30                                  </span><br><span class="line">   router_id LVS_DEVEL     </span><br><span class="line">&#125;</span><br><span class="line">notification_email: 表示 keepalived 在发生诸如切换操作时需要发送 email 通知以及 email 发送给哪些邮件地址邮件地址可以多个每行一个</span><br><span class="line">notification_email_from admin@example.com: 表示发送通知邮件时邮件源地址是谁</span><br><span class="line">smtp_server 127.0.0.1: 表示发送 email 时使用的 smtp 服务器地址这里可以用本地的 sendmail 来实现</span><br><span class="line">smtp_connect_timeout 30: 连接 smtp 连接超时时间</span><br><span class="line">router_id node1: 机器标识，通常配置主机名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态地址和路由配置范例</span></span><br><span class="line">static_ipaddress &#123;</span><br><span class="line">    192.168.1.1/24 brd + dev eth0 scope global</span><br><span class="line">    192.168.1.2/24 brd + dev eth1 scope global</span><br><span class="line">&#125;</span><br><span class="line">static_routes &#123;</span><br><span class="line">    src <span class="variable">$SRC_IP</span> to <span class="variable">$DST_IP</span> dev <span class="variable">$SRC_DEVICE</span></span><br><span class="line">    src <span class="variable">$SRC_IP</span> to <span class="variable">$DST_IP</span> via <span class="variable">$GW</span> dev <span class="variable">$SRC_DEVICE</span></span><br><span class="line">&#125;</span><br><span class="line"> 这里实际上和系统里面命令配置 IP 地址和路由一样例如 </span><br><span class="line">192.168.1.1/24 brd + dev eth0 scope global 相当于: ip addr add 192.168.1.1/24 brd + dev eth0 scope global</span><br><span class="line"> 就是给 eth0 配置 IP 地址路由同理, 一般这个区域不需要配置 </span><br><span class="line"> 这里实际上就是给服务器配置真实的 IP 地址和路由的在复杂的环境下可能需要配置一般不会用这个来配置我们可以直接用 vi /etc/sysconfig/network-script/ifcfg-eth1 来配置切记这里可不是 VIP 不要搞混淆了切记切记</span><br></pre></td></tr></table></figure><h3 id="VRRPD-配置"><a href="#VRRPD-配置" class="headerlink" title="VRRPD 配置"></a>VRRPD 配置</h3><p>包括三个类:</p><ol><li>VRRP 同步组(synchroization group) </li><li>VRRP 实例(VRRP Instance) </li><li>VRRP 脚本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># VRRP 同步组 (synchroization group) 配置范例 </span></span><br><span class="line">vrrp_sync_group VG_1 &#123;   // 注意 vrrp_sync_group  后面可自定义名称如 lvs_httpd ,httpd</span><br><span class="line">group &#123;</span><br><span class="line">http</span><br><span class="line">mysql</span><br><span class="line">&#125;</span><br><span class="line">notify_master /path/to/to_master.sh</span><br><span class="line">notify_backup /path_to/to_backup.sh</span><br><span class="line">notify_fault <span class="string">"/path/fault.sh VG_1"</span></span><br><span class="line">notify /path/to/notify.sh</span><br><span class="line">smtp_alert </span><br><span class="line">&#125;</span><br><span class="line"> 其中 http 和 mysql 是实例名和下面的实例名一致 </span><br><span class="line">notify_master /path/to/to_master.sh // 表示当切换到 master 状态时要执行的脚本</span><br><span class="line">notify_backup /path_to/to_backup.sh // 表示当切换到 backup 状态时要执行的脚本</span><br><span class="line">notify_fault <span class="string">"/path/fault.sh VG_1"</span>  // keepalived 出现故障时执行的脚本</span><br><span class="line">notify /path/to/notify.sh  </span><br><span class="line">smtp_alert           // 表示切换时给 global defs 中定义的邮件地址发送邮件通知</span><br><span class="line"></span><br><span class="line"><span class="comment"># VRRP 实例(instance) 配置范例</span></span><br><span class="line">vrrp_instance http &#123;  // 注意 vrrp_instance 后面可自定义名称如 lvs_httpd ,httpd</span><br><span class="line">state MASTER</span><br><span class="line">interface eth0</span><br><span class="line">dont_track_primary</span><br><span class="line">track_interface &#123;</span><br><span class="line">eth0</span><br><span class="line">eth1</span><br><span class="line">&#125;</span><br><span class="line">mcast_src_ip &lt;IPADDR&gt;</span><br><span class="line">garp_master_delay 10</span><br><span class="line">virtual_router_id 51</span><br><span class="line">priority 100</span><br><span class="line">advert_int 1</span><br><span class="line">authentication &#123;</span><br><span class="line">auth_type PASS</span><br><span class="line">autp_pass 1234</span><br><span class="line">&#125;</span><br><span class="line">virtual_ipaddress &#123;</span><br><span class="line"><span class="comment">#&lt;IPADDR&gt;/&lt;MASK&gt; brd &lt;IPADDR&gt; dev &lt;STRING&gt; scope &lt;SCOPT&gt; label &lt;LABEL&gt;</span></span><br><span class="line">192.168.200.17/24 dev eth1</span><br><span class="line">192.168.200.18/24 dev eth2 label eth2:1</span><br><span class="line">&#125;</span><br><span class="line">virtual_routes &#123;</span><br><span class="line"><span class="comment"># src &lt;IPADDR&gt; [to] &lt;IPADDR&gt;/&lt;MASK&gt; via|gw &lt;IPADDR&gt; dev &lt;STRING&gt; scope &lt;SCOPE&gt; tab</span></span><br><span class="line">src 192.168.100.1 to 192.168.109.0/24 via 192.168.200.254 dev eth1</span><br><span class="line">192.168.110.0/24 via 192.168.200.254 dev eth1</span><br><span class="line">192.168.111.0/24 dev eth2</span><br><span class="line">192.168.112.0/24 via 192.168.100.254</span><br><span class="line">&#125;</span><br><span class="line">nopreempt</span><br><span class="line">preemtp_delay 300</span><br><span class="line">debug</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>state: state 指定 instance(Initial)的初始状态就是说在配置好后这台 服务器的初始状态就是这里指定的但这里指定的不算还是得要通过竞选通过优先级来确定里如果这里设置为 master 但如若他的优先级不及另外一台 那么这台在发送通告时会发送自己的优先级另外一台发现优先级不如自己的高那么他会就回抢占为 master</p><p>interface: 实例绑定的网卡因为在配置虚拟 VIP 的时候必须是在已有的网卡上添加的</p><p>dont track primary: 忽略 VRRP 的 interface 错误</p><p>track interface: 跟踪接口设置额外的监控里面任意一块网卡出现问题都会进入故障 (FAULT) 状态例如用 nginx 做均衡器的时候内网必须正常工作如果内网出问题了这个均衡器也就无法运作了所以必须对内外网同时做健康检查</p><p>mcast src ip: 发送多播数据包时的源 IP 地址这里注意了这里实际上就是在那个地址上发送 VRRP 通告这个非常重要一定要选择稳定的网卡端口来发送这里相当于 heartbeat 的心跳端口如果没有设置那么就用默认的绑定的网卡的 IP 也就是 interface 指定的 IP 地址</p><p>garp master delay: 在切换到 master 状态后延迟进行免费的 ARP(gratuitous ARP)请求，默认 5s</p><p>virtual router id: 这里设置 VRID 这里非常重要相同的 VRID 为一个组他将决定多播的 MAC 地址</p><p>priority 100: 设置本节点的优先级优先级高的为 master</p><p>advert int: 设置 MASTER 与 BACKUP 负载均衡之间同步即主备间通告时间检查的时间间隔, 单位为秒，默认 1s</p><p>virtual ipaddress: 这里设置的就是 VIP 也就是虚拟 IP 地址他随着 state 的变化而增加删除当 state 为 master 的时候就添加当 state 为 backup 的时候删除这里主要是有优先级来决定的和 state 设置的值没有多大关系这里可以设置多个 IP 地址</p><p>virtual routes: 原理和 virtual ipaddress 一样只不过这里是增加和删除路由</p><p>lvs sync daemon interface: lvs syncd 绑定的网卡，类似 HA 中的心跳检测绑定的网卡</p><p>authentication: 这里设置认证</p><p>auth type: 认证方式可以是 PASS 或 AH 两种认证方式</p><p>auth pass: 认证密码</p><p>nopreempt: 设置不抢占 master，这里只能设置在 state 为 backup 的节点上而且这个节点的优先级必须别另外的高，比如 master 因为异常将调度圈交给了备份 serve，master serve 检修后没问题，如果不设置 nopreempt 就会将调度权重新夺回来，这样就容易造成业务中断问题</p><p>preempt delay: 抢占延迟多少秒，即延迟多少秒后竞选 master</p><p>debug：debug 级别</p><p>notify master：和 sync group 这里设置的含义一样可以单独设置例如不同的实例通知不同的管理人员 http 实例发给网站管理员 mysql 的就发邮件给 DBA</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># VRRP 脚本 </span></span><br><span class="line"><span class="comment"># 如下所示为相关配置示例</span></span><br><span class="line">vrrp_script check_running &#123;</span><br><span class="line">   script <span class="string">"/usr/local/bin/check_running"</span></span><br><span class="line">   interval 10</span><br><span class="line">   weight 10</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance http &#123;</span><br><span class="line">   state BACKUP</span><br><span class="line">   smtp_alert</span><br><span class="line">   interface eth0</span><br><span class="line">   virtual_router_id 101</span><br><span class="line">   priority 90</span><br><span class="line">   advert_int 3</span><br><span class="line">   authentication &#123;</span><br><span class="line">   auth_type PASS</span><br><span class="line">   auth_pass whatever</span><br><span class="line">   &#125;</span><br><span class="line">   virtual_ipaddress &#123;</span><br><span class="line">   1.1.1.1</span><br><span class="line">   &#125;</span><br><span class="line">   track_script &#123;</span><br><span class="line">   check_running </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 首先在 vrrp_script 区域定义脚本名字和脚本执行的间隔和脚本执行的优先级变更, 如下所示:</span></span><br><span class="line">vrrp_script check_running &#123;</span><br><span class="line">            script <span class="string">"/usr/local/bin/check_running"</span></span><br><span class="line">            interval 10     <span class="comment"># 脚本执行间隔</span></span><br><span class="line">            weight 10       <span class="comment"># 脚本结果导致的优先级变更 10 表示优先级 + 10-10 则表示优先级 - 10</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment"># 然后在实例(vrrp_instance) 里面引用有点类似脚本里面的函数引用一样先定义后引用函数名</span></span><br><span class="line">track_script &#123;</span><br><span class="line">      check_running </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:<br>VRRP 脚本 (vrrp_script) 和 VRRP 实例 (vrrp_instance) 属于同一个级别<br>keepalived 会定时执行脚本并对脚本执行的结果进行分析，动态调整 vrrp_instance 的优先级。一般脚本检测返回的值为 0，说明脚本检测成功，如果为非 0 数值，则说明检测失败<br>如果脚本执行结果为 0，并且 weight 配置的值大于 0，则优先级相应的增加, 如果 weight 为非 0，则优先级不变<br>如果脚本执行结果非 0，并且 weight 配置的值小于 0，则优先级相应的减少, 如果 weight 为 0，则优先级不变<br>其他情况，维持原本配置的优先级，即配置文件中 priority 对应的值。<br>这里需要注意的是：<br>1） 优先级不会不断的提高或者降低<br>2） 可以编写多个检测脚本并为每个检测脚本设置不同的 weight<br>3） 不管提高优先级还是降低优先级，最终优先级的范围是在[1,254]，不会出现优先级小于等于 0 或者优先级大于等于 255 的情况<br>这样可以做到利用脚本检测业务进程的状态，并动态调整优先级从而实现主备切换。</p><h3 id="virtual-server-虚拟主机配置"><a href="#virtual-server-虚拟主机配置" class="headerlink" title="virtual_server 虚拟主机配置"></a>virtual_server 虚拟主机配置</h3><p>关于 keeplived 的虚拟主机配置有三种如下所示<br>virtual server IP port<br>virtual server fwmark int<br>virtual server group string</p><p>以常用的第一种为例<br>virtual_server 192.168.1.2 80<br>含义: 设置一个 virtual server: VIP:Vport</p><p>delay_loop 3<br>含义: 设置 service polling 的 delay 时间即服务轮询的时间间隔</p><p>lb_algo rr|wrr|lc|wlc|lblc|sh|dh<br>含义: 设置 LVS 调度算法</p><p>lb_kind NAT|DR|TUN<br>含义: 设置 LVS 集群模式  </p><p>persistence_timeout 120<br>含义: 设置会话保持时间秒为单位即以用户在 120 秒内被分配到同一个后端 realserver, 超过此时间就重新分配</p><p>persistence_granularity <netmask><br>含义: 设置 LVS 会话保持粒度 ipvsadm 中的 - M 参数默认是 0xffffffff 即每个客户端都做会话保持</netmask></p><p>protocol TCP<br>含义: 设置健康检查用的是 TCP 还是 UDP</p><p>ha_suspend<br>含义: suspendhealthchecker’s activity</p><p>virtualhost <string><br>含义: HTTP_GET 做健康检查时检查的 web 服务器的虚拟主机即 host 头</string></p><p>sorry_server <ipaddr> <port><br>含义: 设置 backupserver 就是当所有后端 realserver 节点都不可用时就用这里设置的也就是临时把所有的请求都发送到这里</port></ipaddr></p><p>real_server <ipaddr> <port><br>含义: 设置后端真实节点主机的权重等设置主要后端有几台这里就要设置几个</port></ipaddr></p><p>weight 1<br>含义: 设置给每台的权重 0 表示失效 (不知给他转发请求知道他恢复正常) 默认是 1</p><p>inhibit_on_failure<br>含义: 表示在节点失败后把他权重设置成 0 而不是冲 IPVS 中删除</p><p>notify_up <string> | <quoted-string><br>含义: 设置检查服务器正常 (UP) 后要执行的脚本<br>notify_down <string> | <quoted-string><br>含义: 设置检查服务器失败 (down) 后要执行的脚本</quoted-string></string></quoted-string></string></p><p>注: keepalived 检查机制说明<br>keepalived 健康检查方式有: HTTP_GET|SSL_GET|TCP_CHECK|SMTP_CHECK|MISC_CHECK 几种如下所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#HTTP/HTTPS 方式 </span></span><br><span class="line">HTTP_GET|SSL_GET &#123;      <span class="comment"># 设置健康检查方式</span></span><br><span class="line"></span><br><span class="line">url &#123;                   <span class="comment"># 设置要检查的 URL 可以有多个</span></span><br><span class="line">path /                  <span class="comment"># 设置 URL 具体路径</span></span><br><span class="line">digest &lt;STRING&gt;         <span class="comment"># 检查后的摘要信息这些摘要信息可以通过 genhash 命令工具获取                                   </span></span><br><span class="line">status_code 200         <span class="comment"># 设置返回状态码</span></span><br><span class="line">&#125;</span><br><span class="line">connect_port 80         <span class="comment"># 设置监控检查的端口</span></span><br><span class="line">bindto  &lt;IPADD&gt;         <span class="comment"># 设置健康检查的 IP 地址</span></span><br><span class="line">connect_timeout   3     <span class="comment"># 设置连接超时时间</span></span><br><span class="line">nb_get_retry  3         <span class="comment"># 设置重连次数</span></span><br><span class="line">delay_before_retry  2   <span class="comment"># 设置重连间隔</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">#TCP 方式  </span></span><br><span class="line">TCP_CHECK     &#123;</span><br><span class="line">connect_port 80         <span class="comment"># 设置监控检查的端口</span></span><br><span class="line">bindto  &lt;IPADD&gt;         <span class="comment"># 设置健康检查的 IP 地址</span></span><br><span class="line">connect_timeout   3     <span class="comment"># 设置连接超时时间</span></span><br><span class="line">nb_get_retry  3         <span class="comment"># 设置重连次数</span></span><br><span class="line">delay_before_retry  2   <span class="comment"># 设置重连间隔</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#SMTP 方式 (这个可以用来给邮件服务器做集群)</span></span><br><span class="line">SMTP_CHECK &#123;</span><br><span class="line">host &#123;</span><br><span class="line">connect_ip &lt;IP ADDRESS&gt;</span><br><span class="line">connect_port &lt;PORT&gt;     <span class="comment"># 默认检查 25 端口</span></span><br><span class="line">14 KEEPALIVED</span><br><span class="line">bindto &lt;IP ADDRESS&gt;</span><br><span class="line">&#125;</span><br><span class="line">connect_timeout &lt;INTEGER&gt;</span><br><span class="line">retry &lt;INTEGER&gt;</span><br><span class="line">delay_before_retry &lt;INTEGER&gt;</span><br><span class="line">helo_name &lt;STRING&gt;|&lt;QUOTED-STRING&gt;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">#MISC 方式 这个可以用来检查很多服务器只需要自己会些脚本即可</span></span><br><span class="line">MISC_CHECK &#123;</span><br><span class="line">misc_path &lt;STRING&gt;|&lt;QUOTED-STRING&gt;  <span class="comment"># 外部程序或脚本</span></span><br><span class="line">misc_timeout &lt;INT&gt;                  <span class="comment"># 脚本或程序执行超时时间</span></span><br><span class="line">misc_dynamic                                              </span><br><span class="line"><span class="comment"># 这个就很好用了可以非常精确的来调整权重是后端每天服务器的压力都能均衡调配这个主要是通过执行的程序或脚本返回的状态代码来动态调整 weight 值使权重根据真实的后端压力来适当调整不过这需要有过硬的脚本功夫才行哦</span></span><br><span class="line"><span class="comment"># 返回 0 健康检查没问题不修改权重</span></span><br><span class="line"><span class="comment"># 返回 1 健康检查失败权重设置为 0</span></span><br><span class="line"><span class="comment"># 返回 2-255 健康检查没问题但是权重却要根据返回代码修改为返回码 - 2 例如如果程序或脚本执行后返回的代码为 200# 那么权重这回被修改为 200-2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上就是 keepalived 的配置项说明虽然配置项很多但很多时候很多配置项保持默认即可，以下是默认配置文件，方便大家做个对比参考</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-65-32-140 wangao]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">     failover@firewall.loc</span><br><span class="line">     sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">   vrrp_strict</span><br><span class="line">   vrrp_garp_interval 0</span><br><span class="line">   vrrp_gna_interval 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.200.16</span><br><span class="line">        192.168.200.17</span><br><span class="line">        192.168.200.18</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 192.168.200.100 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 192.168.201.100 443 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        SSL_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /</span><br><span class="line">              digest ff20ad2481f97b1754ef3e12ecd3a9cc</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /mrtg/</span><br><span class="line">              digest 9b3a0c85a887a256d6939da88aabd8cd</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.10.2 1358 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    sorry_server 192.168.200.200 1358</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.2 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.3 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.10.3 1358 &#123;</span><br><span class="line">    delay_loop 3</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.4 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.5 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最简单的-Keepalived-HA-配置实例"><a href="#最简单的-Keepalived-HA-配置实例" class="headerlink" title="最简单的 Keepalived HA 配置实例"></a>最简单的 Keepalived HA 配置实例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 keepalived,ipvsadm</span></span><br><span class="line">yum install keepalived -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果开启防火墙，请添加 VRRP 白名单</span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 keepalived 配置文件，master 和 backup 节点配置文件一样</span></span><br><span class="line">vi /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group VI_GOP_NC1_HA &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_GOP_NC1_HA_PRI</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_GOP_NC1_HA_PRI &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 139</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.65.33.139/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动启动节点即为 master</span></span><br><span class="line">service keepalived start</span><br></pre></td></tr></table></figure><h2 id="Keepalived-双活实践"><a href="#Keepalived-双活实践" class="headerlink" title="Keepalived 双活实践"></a>Keepalived 双活实践</h2><blockquote><p>最简单的 keepalived 双活，只需要修改 state 和 priority</p></blockquote><ul><li>优点：配置文件简单</li><li>缺点：<ul><li>当 master 恢复后会自动回切，影响业务流量</li><li>两个节点配置不完全一致，对自动化运维管理不友好</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"># node1</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 32</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.32/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 33</span><br><span class="line">    priority 98</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.33/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># node2</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 32</span><br><span class="line">    priority 98</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.32/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 33</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.33/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>合理的 keepalived 双活</p></blockquote><ul><li>优点：<ul><li>添加 nopreempt 可以防止自动回切</li><li>添加 track_script 可以人为控制切换</li><li>节点之间配置完全一致，便于自动化运维管理</li></ul></li><li>缺点：配置文件较为复杂</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"># node1</span><br><span class="line">vrrp_script maint-10.71.17.32 &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/10.71.17.32 ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-10.71.17.33 &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/10.71.17.33 ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 32</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.32/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-10.71.17.32</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 33</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.33/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-10.71.17.33</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># node2</span><br><span class="line">vrrp_script maint-10.71.17.32 &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/10.71.17.32 ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-10.71.17.33 &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/10.71.17.33 ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 32</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.32/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-10.71.17.32</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 33</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.33/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-10.71.17.33</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果需要配合自定义脚本监控使用，可以参考<a href="https://wsgzao.github.io/post/redis/">Redis 主从同步配置实践</a></p><h2 id="简单的-Keepalived-邮件告警实例"><a href="#简单的-Keepalived-邮件告警实例" class="headerlink" title="简单的 Keepalived 邮件告警实例"></a>简单的 Keepalived 邮件告警实例</h2><ol><li>编写 sendmail.py 邮件发送脚本</li><li>在 keepalived.conf 中配置 notify_backup</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"></span><br><span class="line">EMAIL_CONFIG = &#123;</span><br><span class="line">    <span class="string">'EMAIL_HOST'</span>: <span class="string">'xxx'</span>,</span><br><span class="line">    <span class="string">'EMAIL_HOST_USER'</span>: <span class="string">'xxx'</span>,</span><br><span class="line">    <span class="string">'EMAIL_RECEIVER'</span>: <span class="string">'xxx'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_get_private_ip</span><span class="params">()</span>:</span></span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        sock.connect((<span class="string">'10.255.255.255'</span>, <span class="number">1</span>))</span><br><span class="line">        <span class="keyword">return</span> sock.getsockname()[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'127.0.0.1'</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        sock.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_email</span><span class="params">()</span>:</span></span><br><span class="line">    ip = _get_private_ip()</span><br><span class="line">    hostname = socket.gethostname()</span><br><span class="line">    message = <span class="string">'Subject: Keepalived Failover Alert %s \n\nHOSTNAME %s on LANIP %s HA status has changed to %s'</span> % (</span><br><span class="line">        sys.argv[<span class="number">1</span>], hostname, ip, sys.argv[<span class="number">1</span>])</span><br><span class="line">    server = smtplib.SMTP(EMAIL_CONFIG[<span class="string">"EMAIL_HOST"</span>])</span><br><span class="line">    server.sendmail(EMAIL_CONFIG[<span class="string">'EMAIL_HOST_USER'</span>],</span><br><span class="line">                    EMAIL_CONFIG[<span class="string">'EMAIL_RECEIVER'</span>], message)</span><br><span class="line">    server.quit()</span><br><span class="line"></span><br><span class="line">send_email()</span><br></pre></td></tr></table></figure><blockquote><p>如果有设置 vrrp_sync_group 可以添加在这里通过群组控制，如果没有就跟在 vrrp_instance 独立设置</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">           # notify scripts and alerts are optional</span><br><span class="line">           #</span><br><span class="line">           # filenames of scripts to run on transitions can be unquoted (if</span><br><span class="line">           # just filename) or quoted (if it has parameters)</span><br><span class="line">           # The username and groupname specify the user and group</span><br><span class="line">           # under which the scripts should be run. If username is</span><br><span class="line">           # specified, the group defaults to the group of the user.</span><br><span class="line">           # If username is not specified, they default to the</span><br><span class="line">           # global script_user and script_group to MASTER transition</span><br><span class="line">           notify_master /path/to_master.sh [username [groupname]]</span><br><span class="line"></span><br><span class="line">           # to BACKUP transition</span><br><span class="line">           notify_backup /path/to_backup.sh [username [groupname]]</span><br><span class="line"></span><br><span class="line">           # FAULT transition</span><br><span class="line">           notify_fault &quot;/path/fault.sh VG_1&quot; [username [groupname]]</span><br><span class="line"></span><br><span class="line">vrrp_sync_group NC-CLOUD-LOADTEST &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        NC-CLOUD-LOADTEST-PUB</span><br><span class="line">        NC-CLOUD-LOADTEST-PRI</span><br><span class="line">    &#125;</span><br><span class="line">    notify_master &quot;/bin/python /etc/keepalived/sendmail.py master&quot;</span><br><span class="line">    notify_backup &quot;/bin/python /etc/keepalived/sendmail.py backup&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Keepalived-Notification-and-Tracking-Scripts"><a href="#Keepalived-Notification-and-Tracking-Scripts" class="headerlink" title="Keepalived Notification and Tracking Scripts"></a>Keepalived Notification and Tracking Scripts</h2><p>Keepalived 官方的文档并没有给出实践案例，我对上面的代码改进之后的效果如下</p><ol><li>实现双活，支持不中断 LVS 人工干预任意节点运行位置</li><li>实现 status 状态无变化时无告警邮件</li></ol><p>Keepalived is a Linux implementation of the VRRP (Virtual Router Redundancy Protocol) protocol to make IPs highly available. Keepalived check and notify scripts can be used to check anything you want to ensure the Master is on the right node and take action if a state change.</p><p><a href="https://www.keepalived.org/manpage.html" target="_blank" rel="noopener">notify scripts and alerts are optional</a></p><p><a href="https://docs.oracle.com/en/operating-systems/oracle-linux/7/admin/section_hxz_zdw_pr.html" target="_blank" rel="noopener">About Keepalived Notification and Tracking Scripts</a></p><p>Check script has two reutrn value: </p><ul><li>0 for everything is fine</li><li>1 or other than 0 means something went wrong.</li></ul><p>For example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vrrp_script maint-xxx &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/xxx ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This script defines file check to check whether the file xxx is exist. The check interval is 2 seconds, check fail and succeed twice for KO and OK.</p><p>The check script is used in a <code>vrrp_instance</code> as follows</p><p>The <code>track_script</code> returns other code than 0 two times, the VRRP instance will change the state to <code>FAULT</code>, or the instance will change the state to <code>running</code>if return code 0 two times.</p><blockquote><p>keepalived.conf</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">vrrp_sync_group VI_GROUP_xxx &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_xxx</span><br><span class="line">        VI_PUB_xxx</span><br><span class="line">    &#125;</span><br><span class="line">    notify /etc/keepalived/notify.sh</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_sync_group VI_GROUP_xxx &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_xxx</span><br><span class="line">        VI_PUB_xxx</span><br><span class="line">    &#125;</span><br><span class="line">    notify /etc/keepalived/notify.sh</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-xxx &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/xxx ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 10</span><br><span class="line">    fall 6</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-xxx &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/xxx ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 10</span><br><span class="line">    fall 6</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-xxx &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/xxx ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 10</span><br><span class="line">    fall 6</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-xxx &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/xxx ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 10</span><br><span class="line">    fall 6</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_xxx &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 138</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xxx/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-xxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PRI_xxx &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 139</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xxx/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-xxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PUB_xxx &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond1</span><br><span class="line">    virtual_router_id 101</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xxx/26 dev bond1</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-xxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_PUB_xxx &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond1</span><br><span class="line">    virtual_router_id 102</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        xxx/26 dev bond1</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-xxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>notify.sh</p></blockquote><p>Keepalived tasks some action depending on the VRRP state.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vrrp_sync_group VI_GROUP_xxx &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_PRI_xxx</span><br><span class="line">        VI_PUB_xxx</span><br><span class="line">    &#125;</span><br><span class="line">    notify /etc/keepalived/notify.sh</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The script is called after any state change with the following parameters:</p><p>$1 = “GROUP” or “INSTANCE”<br>$2 = name of group or instance<br>$3 = target state of transition (“MASTER”, “BACKUP”, “FAULT”)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">TYPE=<span class="variable">$1</span></span><br><span class="line">NAME=<span class="variable">$2</span></span><br><span class="line">STATE=<span class="variable">$3</span></span><br><span class="line">FILE=<span class="string">"/etc/keepalived/<span class="variable">$&#123;NAME&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  touch <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">ORI_STATE=`cat <span class="variable">$&#123;FILE&#125;</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;STATE&#125;</span> == <span class="variable">$&#123;ORI_STATE&#125;</span> ];<span class="keyword">then</span></span><br><span class="line">   <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$STATE</span> <span class="keyword">in</span></span><br><span class="line">            <span class="string">"MASTER"</span>) /bin/python /etc/keepalived/sendmail.py <span class="variable">$&#123;STATE&#125;</span> <span class="variable">$&#123;TYPE&#125;</span> <span class="variable">$&#123;NAME&#125;</span></span><br><span class="line">                      <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;STATE&#125;</span>"</span> &gt; <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span></span><br><span class="line">                      <span class="built_in">exit</span> 0</span><br><span class="line">                      ;;</span><br><span class="line">            <span class="string">"BACKUP"</span>) /bin/python /etc/keepalived/sendmail.py <span class="variable">$&#123;STATE&#125;</span> <span class="variable">$&#123;TYPE&#125;</span> <span class="variable">$&#123;NAME&#125;</span></span><br><span class="line">                      <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;STATE&#125;</span>"</span> &gt; <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span></span><br><span class="line">                      <span class="built_in">exit</span> 0</span><br><span class="line">                      ;;</span><br><span class="line">            <span class="string">"FAULT"</span>)  /bin/python /etc/keepalived/sendmail.py <span class="variable">$&#123;STATE&#125;</span> <span class="variable">$&#123;TYPE&#125;</span> <span class="variable">$&#123;NAME&#125;</span></span><br><span class="line">                      <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;STATE&#125;</span>"</span> &gt; <span class="string">"<span class="variable">$&#123;FILE&#125;</span>"</span></span><br><span class="line">                      <span class="built_in">exit</span> 0</span><br><span class="line">                      ;;</span><br><span class="line">            *)        <span class="built_in">echo</span> <span class="string">"unknown state"</span></span><br><span class="line">                      <span class="built_in">exit</span> 1</span><br><span class="line">                      ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><blockquote><p>sendmail.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EMAIL_CONFIG = &#123;</span><br><span class="line">    <span class="string">'EMAIL_HOST'</span>: <span class="string">'xxx'</span>,</span><br><span class="line">    <span class="string">'EMAIL_HOST_USER'</span>: <span class="string">'xxx'</span>,</span><br><span class="line">    <span class="string">'EMAIL_RECEIVER'</span>: <span class="string">'xxx'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_get_private_ip</span><span class="params">()</span>:</span></span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        sock.connect((<span class="string">'10.255.255.255'</span>, <span class="number">1</span>))</span><br><span class="line">        <span class="keyword">return</span> sock.getsockname()[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'127.0.0.1'</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        sock.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_email</span><span class="params">()</span>:</span></span><br><span class="line">    ip = _get_private_ip()</span><br><span class="line">    hostname = socket.gethostname()</span><br><span class="line">    message = <span class="string">'Subject: Keepalived Failover Alert %s \n\nHOSTNAME %s on LANIP %s %s %s status has changed to %s'</span> % (</span><br><span class="line">        sys.argv[<span class="number">1</span>], hostname, ip, sys.argv[<span class="number">2</span>], sys.argv[<span class="number">3</span>], sys.argv[<span class="number">1</span>])</span><br><span class="line">    server = smtplib.SMTP(EMAIL_CONFIG[<span class="string">"EMAIL_HOST"</span>])</span><br><span class="line">    server.sendmail(EMAIL_CONFIG[<span class="string">'EMAIL_HOST_USER'</span>],</span><br><span class="line">                    EMAIL_CONFIG[<span class="string">'EMAIL_RECEIVER'</span>], message)</span><br><span class="line">    server.quit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">send_email()</span><br></pre></td></tr></table></figure><h2 id="Keepalived-常见问题"><a href="#Keepalived-常见问题" class="headerlink" title="Keepalived 常见问题"></a>Keepalived 常见问题</h2><blockquote><p>virual_router_id 冲突</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 检查 keepalived 错误日志会发现</span><br><span class="line">tailf /var/log/messages</span><br><span class="line"></span><br><span class="line">May  7 23:25:18 xxx Keepalived_vrrp[90851]: bogus VRRP packet received on bond1 !!!</span><br><span class="line">May  7 23:25:18 xxx Keepalived_vrrp[90851]: VRRP_Instance(VI_PUB_xxx) ignoring received advertisment...</span><br><span class="line">May  7 23:25:19 xxx Keepalived_vrrp[90851]: (VI_PUB_xxx): ip address associated with VRID 101 not present in MASTER advert : xxx</span><br><span class="line"></span><br><span class="line"># 通过检查配置文件的方法效率太低</span><br><span class="line">grep &apos;virtual_router_id&apos; /etc/keepalived/keepalived.conf</span><br><span class="line">    virtual_router_id 148</span><br><span class="line">    virtual_router_id 149</span><br><span class="line">    virtual_router_id 101</span><br><span class="line">    virtual_router_id 104</span><br><span class="line"></span><br><span class="line"># 如果是 vrrp 广播可以通过 tcpdump 抓包分析</span><br><span class="line">tcpdump -i bond1 -nn &apos; vrrp&apos;</span><br><span class="line"></span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on bond1, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">00:16:44.919824 IP xxx &gt; 224.0.0.18: VRRPv2, Advertisement, vrid 105, prio 100, authtype simple, intvl 1s, length 20</span><br><span class="line">00:16:44.995030 IP xxx &gt; 224.0.0.18: VRRPv2, Advertisement, vrid 101, prio 100, authtype simple, intvl 1s, length 20</span><br><span class="line">00:16:44.995046 IP xxx &gt; 224.0.0.18: VRRPv2, Advertisement, vrid 104, prio 100, authtype simple, intvl 1s, length 20</span><br><span class="line">00:16:44.996107 IP xxx &gt; 224.0.0.18: VRRPv2, Advertisement, vrid 123, prio 100, authtype simple, intvl 1s, length 20</span><br></pre></td></tr></table></figure><blockquote><p>keepalived 单播模式</p></blockquote><p>keepalived 在组播模式下所有的信息都会向 224.0.0.18 的组播地址发送，产生众多的无用信息，并且会产生干扰和冲突，所以需要将其组播的模式改为单播。这是一种安全的方法，避免局域网内有大量的 keepalived 造成虚拟路由 id 的冲突。</p><p>单薄模式需要关闭 vrrp_strict，严格遵守 vrrp 协议这个选项</p><p>单薄需要在 VIP 实例配置段加入单播的源地址和目标地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">   #vrrp_strict                         #将严格遵守 vrrp 协议这一项关闭，否则会因为不是组播而无法启动 keepalived</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"># 主备节点地址注意互换</span><br><span class="line">    unicast_src_ip 172.20.27.10         #配置单播的源地址</span><br><span class="line">    unicast_peer &#123; </span><br><span class="line">    172.20.27.11                        #配置单播的目标地址</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># See description of global vrrp_strict</span><br><span class="line"># If vrrp_strict is not specified, it takes the value of vrrp_strict</span><br><span class="line"># If strict_mode without a parameter is specified, it defaults to on</span><br><span class="line">strict_mode [on|off|true|false|yes|no]</span><br><span class="line"></span><br><span class="line"># default IP for binding vrrpd is the primary IP</span><br><span class="line"># on interface. If you want to hide the location of vrrpd,</span><br><span class="line"># use this IP as src_addr for multicast or unicast vrrp</span><br><span class="line"># packets. (since it&apos;s multicast, vrrpd will get the reply</span><br><span class="line"># packet no matter what src_addr is used).</span><br><span class="line"># optional</span><br><span class="line">mcast_src_ip &lt;IPADDR&gt;</span><br><span class="line">unicast_src_ip &lt;IPADDR&gt;</span><br><span class="line"></span><br><span class="line"># Do not send VRRP adverts over a VRRP multicast group.</span><br><span class="line"># Instead it sends adverts to the following list of</span><br><span class="line"># ip addresses using unicast. It can be cool to use</span><br><span class="line"># the VRRP FSM and features in a networking</span><br><span class="line"># environment where multicast is not supported!</span><br><span class="line"># IP addresses specified can be IPv4 as well as IPv6.</span><br><span class="line">unicast_peer &#123;</span><br><span class="line">    &lt;IPADDR&gt;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.51cto.com/11886307/2406618" target="_blank" rel="noopener">keepalived 单播模式</a></p><h2 id="LVS-和-Keepalived-系列"><a href="#LVS-和-Keepalived-系列" class="headerlink" title="LVS 和 Keepalived 系列"></a>LVS 和 Keepalived 系列</h2><p><a href="https://wsgzao.github.io/post/lvs-keepalived/">LVS 和 Keepalived 的原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs/">LVS 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/keepalived/">Keepalived 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-nat/">LVS-NAT 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-dr/">LVS-DR 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-tun/">LVS-TUN 原理介绍和配置实践</a></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.keepalived.org/manpage.html" target="_blank" rel="noopener">Keepalived Configuration Manual Page</a></p><p><a href="https://www.keepalived.org/doc/" target="_blank" rel="noopener">Keepalived User Guide</a></p><p><a href="http://arganzheng.life/keepalived-in-action.html" target="_blank" rel="noopener">keepalived 实战</a></p><p><a href="https://monster0303.github.io/posts/4b9d0a4f/" target="_blank" rel="noopener">实现高可用集群的神器 详解 Keepalived</a></p><p><a href="https://monster0303.github.io/posts/257304ac/" target="_blank" rel="noopener">LVS 小宇宙爆发！ 当 Keepalived 遇上 LVS，实现集群高可用</a></p>]]></content>
    
    <summary type="html">
    
      Keepalived原理介绍和配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Python 学习路径</title>
    <link href="https://wsgzao.github.io/post/python/"/>
    <id>https://wsgzao.github.io/post/python/</id>
    <published>2020-05-05T06:59:49.000Z</published>
    <updated>2020-05-10T14:43:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Python 2 最后一个版本发布，我们正式迈入 Python 3 时代。北京时间 2020 年 4 月 20 日 23 点 06 分，Python 2 维护者兼发布经理本杰明 · 彼得森（Benjamin Peterson）在邮件组中正式声明，Python 2.7.18 正式发布，并且这将是 Python 2 的最后一个版本。过去人们总是喜欢讨论到底选择是 Python 2 还是 Python 3，那么现在除了维护历史项目之外，我们应该在新项目中尽可能的去学习和使用 Python 3，积极拥抱变化。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 05 月 05 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/python/">https://wsgzao.github.io/post/python/</a></p><hr><h2 id="Python-2-落幕，感恩开发者"><a href="#Python-2-落幕，感恩开发者" class="headerlink" title="Python 2 落幕，感恩开发者"></a>Python 2 落幕，感恩开发者</h2><p>Python 是荷兰程序员 Guido van Rossum 在 1991 年设计的一种解释型编程语言， <strong>Python 2 的代码库距今其实已经有 20 年的历史了，而 Python 3 则是在 2008 年才正式公开发布。</strong></p><p>因为 Python 3 与 Python 2 的向后兼容性很低，尤其是与 Unicode 相关的问题成为了瓶颈，所以之间的过渡并不容易。因此，Python 软件基金会原定于 2015 年对 Python 2 终止服务的计划，延期到了 2020 年。</p><p><strong> 如今，Python 2 中主要的库已完成向 Python 3 的过渡，Python 2 也就逐渐进入被放弃的阶段。</strong></p><p>在今年的 1 月 1 日，Python 2.7 就已正式停止维护，但消息发布时也告知了还有最后一个版本尚未发布。随着此次最终版本的正式发布，Python 2 也划上了完美的句号。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200506114913.png" alt=""></p><p>Python 核心开发团队在邮件中表示，“自 11 年前发布 Python 2.6 以来，Python 2.7 一直处于积极开发中。这些年来，CPython 的核心开发人员和贡献者认真地将 bug 修复应用到 2.7 分支， <strong> 这是一项艰巨的任务，因为 Python 2 和 3 分支存在着很多差异。</strong> ”</p><p>官方感谢了 Python 的开发者以及 CPython 社区的奉献精神，并表示 “Python 2 真的很幸运”。</p><h2 id="正式迈入-Python-3-时代"><a href="#正式迈入-Python-3-时代" class="headerlink" title="正式迈入 Python 3 时代"></a>正式迈入 Python 3 时代</h2><p>随着 Python 2 退出历史舞台，大部分的开发者已经主动或者被迫选择迁移到 Python 3。</p><p>但还存在着一些 “极端分子”。据国外的一份调查问卷的结果显示，有 5％ 的人决定将其应用程序保留在 Python 2 中，还有 2％的人表示将放弃 Python 来用另一种语言重写其程序。</p><p>但其实，将代码从 Python 2 升级到 Python 3 并不难。Python 3 当中有很多操作符可以实现 Python 2 中的操作。 <strong> 官方还发布了一个工具「2to3」来帮助开发者进行过渡。</strong></p><p>不过很多的操作习惯确实需要重新适应了。</p><p>Python 2, thank you for your years of faithful service.</p><p>Python 3, your time is now.</p><p>邮件原文：</p><p><a href="https://mail.python.org/archives/list/python-dev@python.org/message/OFCIETIXLX34X7FVK5B5WPZH22HXV342/" target="_blank" rel="noopener">https://mail.python.org/archives/list/python-dev@python.org/message/OFCIETIXLX34X7FVK5B5WPZH22HXV342/</a></p><p>Python 2.7.18 下载地址：</p><p><a href="https://www.python.org/downloads/release/python-2718" target="_blank" rel="noopener">https://www.python.org/downloads/release/python-2718</a></p><p>2to3 工具地址：</p><p><a href="https://docs.python.org/2/library/2to3.html" target="_blank" rel="noopener">https://docs.python.org/2/library/2to3.html</a></p><h2 id="Python-常见问题"><a href="#Python-常见问题" class="headerlink" title="Python 常见问题"></a>Python 常见问题</h2><p><a href="https://github.com/pypa/setuptools/issues/1458" target="_blank" rel="noopener">#1458</a>: Drop support for Python 2. Setuptools now requires Python 3.5 or later. Install setuptools using pip &gt;=9 or pin to Setuptools &lt;45 to maintain 2.7 support.</p><pre><code>pip install setuptools==44</code></pre><h2 id="学习路径"><a href="#学习路径" class="headerlink" title="学习路径"></a>学习路径</h2><blockquote><p>Python 的教育资源已经井喷了，这里选择我自己学习后还不错的资源</p></blockquote><p><a href="https://www.bilibili.com/video/av73007133/" target="_blank" rel="noopener">Python for Beginners</a> - 微软官方推出的 Python 视频教程，一共 44 集但平均 5-6 分钟一集，入门 Python 锻炼英语的不二选择</p><p><a href="https://www.bilibili.com/video/BV1WT4y137cD" target="_blank" rel="noopener">More Python for Beginners</a> - 微软官方 Python 进阶教程，继续学习</p><p><a href="https://github.com/selfteaching/the-craft-of-selfteaching" target="_blank" rel="noopener">自学是门手艺</a> - 作者李笑来，抛开传奇经历和流言蜚语，这本以 Python 为自学切入点的开源书写得非常用心，传授的不仅局限于 Python，还包括更重要的自学能力，以及对于人生的思考</p><p><a href="https://www.liaoxuefeng.com/wiki/1016959663602400" target="_blank" rel="noopener">Python 教程</a> - 作者廖雪峰，之前很多人的 Linux 启蒙来自于《鸟哥的 Linux 私房菜》，那么 Python 2 时代也大概率会阅读廖雪峰的文章，适合有一定 Python 基础的人</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://docs.python.org/3/tutorial/index.html" target="_blank" rel="noopener">The Python Tutorial</a></p>]]></content>
    
    <summary type="html">
    
      Python学习路径
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Google Chrome 浏览器插件和油猴脚本推荐</title>
    <link href="https://wsgzao.github.io/post/chrome-extensions/"/>
    <id>https://wsgzao.github.io/post/chrome-extensions/</id>
    <published>2020-05-05T03:59:49.000Z</published>
    <updated>2020-08-23T09:15:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191022143419.jpg" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>到了新加坡再也不用考虑科学上网的问题，加上 macOS 跨平台浏览器做得比较成熟的自然是 Google Chrome 和 Firefox，在 Windows 平台用了十几年的 Maxthon，期间也尝试过无数第三方浏览器，傲游浏览器努力改变着世界却也渐行渐远，有着同样命运的应该还包括我从 M8 用到 MX2 的魅族吧。回到 Google Chrome 浏览器插件和油猴脚本推荐正题，Google Chrome 除了最重要的快以外，更重要的是 Chrome Web Store 上一系列好用插件，我很喜欢 Chrome 简单纯粹的设计和极致的性能。在插件的推荐上分为 <code>通用</code> 和 <code>开发者</code> 两部分来写方便区分，大部分 Chrome 可用的插件 Firefox 也同样适用，如果有遗漏或有更好用的同类型插件和脚本欢迎留言分享。</p><blockquote><p>Google Chrome 浏览器插件和油猴脚本推荐</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 05 月 25 日 - 增加彩云小译，Bilibili Evolved，anti-redirect，能不能好好说话，一键离线下载 +<br>2020 年 03 月 11 日 - 增加 Remu、GitHub Repository Size、计时器掌控者、Clipboard History Pro<br>2019 年 10 月 09 日 - 更新 OneTab、简悦、广告终结者、Copyfish、Awesome screenshot and screen video<br>2019 年 08 月 20 日 - 添加自用部分插件和脚本，增加谷粒 Chrome 插件英雄榜<br>2019 年 08 月 01 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/chrome-extensions/">https://wsgzao.github.io/post/chrome-extensions/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://github.com/zhaoolee/ChromeAppHeroes" target="_blank" rel="noopener">谷粒 Chrome 插件英雄榜</a></p><p><a href="https://www.runningcheese.com/extensions" target="_blank" rel="noopener">Chrome Firefox 双修，2019 年度最喜欢浏览器拓展</a></p><p><a href="https://www.runningcheese.com/userscripts" target="_blank" rel="noopener">脚本里的 “赤兔”，2019 年度最喜欢油猴脚本</a></p><hr><h2 id="Chrome-插件推荐"><a href="#Chrome-插件推荐" class="headerlink" title="Chrome 插件推荐"></a>Chrome 插件推荐</h2><blockquote><p>以下链接大部分都是 Google Chrome Webstore，如果无法访问可以考虑从第三方下载到本地导入</p></blockquote><p><a href="https://chrome.google.com/webstore/category/extensions" target="_blank" rel="noopener">Chrome Web Store</a></p><p><a href="https://www.crx4chrome.com/" target="_blank" rel="noopener">Crx4Chrome</a></p><p><a href="https://chrome-extension-downloader.com/" target="_blank" rel="noopener">Chrome Extension Downloader</a></p><h3 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h3><p><a href="https://chrome.google.com/webstore/detail/simpleextmanager/kniehgiejgnnpgojkdhhjbgbllnfkfdk" target="_blank" rel="noopener">SimpleExtManager</a> - 我个人首推的管理插件小工具，对于插件控们一定灰常有帮助</p><p><a href="https://chrome.google.com/webstore/detail/ie-tab/hehijbfgiekmjfkfjpbkbammjbdenadd" target="_blank" rel="noopener">IE Tab</a> - 为了向下兼容那些没有与时俱进的网站，大多数时候我们只能选择妥协</p><p><a href="https://www.one-tab.com/" target="_blank" rel="noopener">OneTab</a> - 宣称节约 95% 内存的前提是静态网页，类似一个临时书签的记忆功能，习惯保留海量页面的朋友可以试试</p><p><a href="https://chrome.google.com/webstore/detail/undo-closed-tabs-button/ieehkmoiljghfkejgahoheemdjpdinml" target="_blank" rel="noopener">Undo Closed Tabs Button</a> - Google 原生取消了恢复网页的按钮的设计，你可以通过快捷键或者历史记录恢复，但这个小工具确实可以帮到我</p><p><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener">Tampermonkey</a> - 老牌的油猴管理工具，和 Violentmonkey 暴力猴相比哪款用得顺手选择哪个</p><p><a href="https://chrome.google.com/webstore/detail/cdonnmffkdaoajfknoeeecmchibpmkmg?hl=en" target="_blank" rel="noopener">沙拉查词 - 聚合词典划词翻译</a> - 我个人觉得这是目前 Chrome 划词翻译插件中体验最好的</p><p><a href="https://chrome.google.com/webstore/detail/grammarly-for-chrome/kbfnbcaeplbcioakkpcpgfkobkghlhen" target="_blank" rel="noopener">Grammarly for Chrome</a> - 智能检查英文语法拼写错误，在 Web 写邮件和文档时会发现它的重要价值</p><p><a href="https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc" target="_blank" rel="noopener">Evernote Web Clipper</a> - 中文称为印象笔记，平时会把优质的内容保存到 Evernote 中，虽然没有 OneNote 功能强大但胜在简单方便可跨平台同步</p><p><a href="https://chrome.google.com/webstore/detail/simpread-reader-view/ijllcpnolfcooahcekpamkbidhejabll" target="_blank" rel="noopener">简悦 - SimpRead</a> - 沉浸式阅读模式，还支持丰富的导出功能比如 Markdown/PDF 等</p><p><a href="https://chrome.google.com/webstore/detail/lingocloud-web-translatio/jmpepeebcbihafjjadogphmbgiffiajh/related?hl=zh-CN" target="_blank" rel="noopener">彩云小译 - 网页翻译插件</a> - 号称超越 Google 翻译和 DeepL？</p><p><a href="https://chrome.google.com/webstore/detail/enable-right-click/gpeddepmnbmkjfnhifmggnjdggibjjkf" target="_blank" rel="noopener">破解右键锁</a> - 比 Enable Copy 更加强大，不过大众点评的评论好像无解</p><p><a href="https://clipboardextension.com/" target="_blank" rel="noopener">Clipboard History Pro</a> - 借助 Google Chrome 浏览器扩展记录剪贴板历史的小工具</p><p><a href="https://chrome.google.com/webstore/detail/mbklgpngoohbbagagdfoccaclpdhgihd" target="_blank" rel="noopener">爱搜资源云盘助手</a> - 插件方便是方便，但是可能会涉及用户隐私数据，如果介意需要慎用类似插件</p><p><a href="https://chrome.google.com/webstore/detail/awesome-screenshot-screen/nlipoenfbbikpbjkfpfillcgkoblgpmj" target="_blank" rel="noopener">Awesome screenshot and screen video</a> - 网页截图 + 录屏，代替 FireShot</p><p><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="noopener">Proxy SwitchyOmega</a> - 轻松快捷地管理和切换多个代理设置</p><p><a href="https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm" target="_blank" rel="noopener">uBlock Origin</a> - 类似 Adblock Plus(ABP)，用于代替一款高效的网络请求过滤工具，占用极低的内存和 CPU，推荐额外添加适合自己的规则效果更佳，国内用户可以安装配置更简单的广告终结者</p><h3 id="开发者"><a href="#开发者" class="headerlink" title="开发者"></a>开发者</h3><p><a href="https://github.com/jaywcjlove/oscnews" target="_blank" rel="noopener">oscnews</a> - jaywcjlove 制作的新插件，目前我的主要用途是辅助新建标签页浏览开源中国更新资讯和 GitHub 趋势榜，从作者 TODO 计划来看，Github Start 管理和集成 octotree 部分功能都非常吸引人，加油</p><p><a href="https://github.com/zenghongtu/Remu" target="_blank" rel="noopener">Remu</a> - 通过标签分类来对 GitHub Stars 进行高效管理，借助 Gists 强大能力实现跨平台的数据同步</p><p><a href="https://github.com/harshjv/github-repo-size" target="_blank" rel="noopener">GitHub Repository Size</a> - 顾名思义，可以查看 GitHub 中某个 Repo 的大小，是一个小巧实用的工具</p><p><a href="https://github.com/zxlie/FeHelper" target="_blank" rel="noopener">FeHelper</a> - WEB 前端助手，All In One 的一个工具，包含多个独立小应用，比如：Json 工具、代码美化、代码压缩、二维码、Postman、markdown、网页油猴、便签笔记、信息加密与解密、随机密码生成、Crontab 等等</p><p><a href="https://github.com/openstyles/stylus" target="_blank" rel="noopener">Stylus</a> - Stylus 是基于 Stylish 调整网页外观的用户样式管理器</p><p><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc" target="_blank" rel="noopener">Octotree</a> - 在 GitHub 上显示代码树</p><p><a href="http://www.pullywood.com/ImageAssistant/" target="_blank" rel="noopener">ImageAssistant</a> - 国人开发的图片助手 (ImageAssistant) 批量图片下载器</p><p><a href="https://github.com/BlackGlory/copycat" target="_blank" rel="noopener">Copycat</a> - 我主要是为了复制网页直接转化为 markdown</p><p><a href="https://ocr.space/copyfish" target="_blank" rel="noopener">Copyfish</a> - 免费版已经支持中文和英文的 OCR 在线识别，够用且准确</p><p><a href="https://github.com/oppoic/JSONViewer/" target="_blank" rel="noopener">JSONViewer</a> - 一个页面格式化多条 JSON，提升工作效率</p><p><a href="https://github.com/gildas-lormeau/SingleFile" target="_blank" rel="noopener">SingleFile</a> - 将完整的页面保存到一个 HTML 文件中</p><p><a href="https://www.uku.im" target="_blank" rel="noopener">Unblock Youku</a> - 我平时很少看国内在线视频，不过这款良心插件已经坚持了 5 年，作者不容易。如果速度不稳定大家也可以购买国内的阿里云、腾讯云等，我始终相信云即未来</p><p><a href="https://github.com/vinta/pangu.js" target="_blank" rel="noopener">为什么你们就是不能加个空格呢？</a> - 对文字排版有强迫症的福音吧</p><p><a href="https://github.com/sciooga/v2ex-plus" target="_blank" rel="noopener">v2ex plus</a> - 可能是 v2ex 最好用的扩展</p><h2 id="油猴脚本推荐"><a href="#油猴脚本推荐" class="headerlink" title="油猴脚本推荐"></a>油猴脚本推荐</h2><blockquote><p>我个人的选择是 TemperMoneky &gt; ViolentMoneky</p></blockquote><p><a href="https://www.tampermonkey.net" target="_blank" rel="noopener">Tampermonkey</a> - Tampermonkey 是一款免费的浏览器扩展和最为流行的用户脚本管理器</p><p><a href="https://greasyfork.org/zh-CN" target="_blank" rel="noopener">Greasy Fork</a> - 这里是一个提供用户脚本的网站</p><h3 id="通用-1"><a href="#通用-1" class="headerlink" title="通用"></a>通用</h3><p><a href="https://greasyfork.org/zh-CN/scripts/329484" target="_blank" rel="noopener">豆瓣资源下载大师</a> - 装这一个脚本就够了！可能是你遇到的最好的豆瓣增强脚本</p><p><a href="https://greasyfork.org/zh-CN/scripts/396377" target="_blank" rel="noopener">一键离线下载 +</a> - 一键自动将磁链、电驴或其他下载资源离线下载至网盘，自动将磁力链接转换为种子。</p><p><a href="https://greasyfork.org/zh-CN/scripts/370634" target="_blank" rel="noopener">懒人专用，自用组合型多功能脚本</a> - 为避免争议，各位可以阅读脚本描述后决定是否使用</p><p><a href="https://greasyfork.org/zh-CN/scripts/398195-%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93%E7%A0%B4%E8%A7%A3%E5%8A%A0%E5%BC%BA-csdn%E4%BD%BF%E7%94%A8%E5%A2%9E%E5%BC%BA-%E7%9F%A5%E4%B9%8E%E4%BD%BF%E7%94%A8%E5%A2%9E%E5%BC%BA-%E6%8A%96%E9%9F%B3%E5%8E%BB%E6%B0%B4%E5%8D%B0%E4%B8%8B%E8%BD%BD-%E5%85%A8%E7%BD%91vip%E8%A7%86%E9%A2%91%E7%A0%B4%E8%A7%A3-%E5%85%8D%E8%B4%B9%E5%9C%A8%E7%BA%BF%E7%9C%8B-%E7%AD%89%E5%A4%9A%E5%8A%9F%E8%83%BD%E8%84%9A%E6%9C%AC" target="_blank" rel="noopener">百度文库破解加强、 CSDN 使用增强、知乎使用增强、抖音去水印下载、全网 VIP 视频破解，免费在线看，等多功能脚本</a> - 这个脚本道理同上，不多做介绍了</p><p><a href="https://greasyfork.org/zh-CN/scripts/372673" target="_blank" rel="noopener">计时器掌控者</a> - 控制网页计时器速度 | 加速跳过页面计时广告 | 视频快进（慢放）| 跳过广告 | 支持几乎所有网页</p><p><a href="https://greasyfork.org/zh-CN/scripts/25718" target="_blank" rel="noopener">解除 B 站区域限制</a> - 通过替换获取视频地址接口的方式，实现解除 B 站区域限制</p><p><a href="https://github.com/itorr/nbnhhsh" target="_blank" rel="noopener">能不能好好说话</a> - 拼音首字母缩写翻译工具</p><p><a href="https://tiansh.github.io/yawf/" target="_blank" rel="noopener">YAWF</a> - 新浪微博根据关键词、作者、话题、来源等过滤微博，清理版面，以及其他改造功能</p><h3 id="开发者-1"><a href="#开发者-1" class="headerlink" title="开发者"></a>开发者</h3><blockquote><p>不解释，大伙都是为了努力学习新知识，但你值得拥有一种更舒服的姿势</p></blockquote><p><a href="https://greasyfork.org/zh-CN/scripts/23840" target="_blank" rel="noopener">大人的 Greasyfork</a></p><p><a href="https://sleazyfork.org/zh-CN/scripts/25781" target="_blank" rel="noopener">JAV 老司机</a></p><p><a href="https://greasyfork.org/zh-CN/scripts/23316" target="_blank" rel="noopener">琉神转</a></p>]]></content>
    
    <summary type="html">
    
      Google Chrome浏览器插件和油猴脚本推荐
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Redfish 下一代数据中心管理标准详解和实践</title>
    <link href="https://wsgzao.github.io/post/redfish/"/>
    <id>https://wsgzao.github.io/post/redfish/</id>
    <published>2020-04-28T06:59:49.000Z</published>
    <updated>2020-05-04T03:58:51.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200428185557.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>纵观现在的服务器从以前闭源的管理系统，如 DELL 的 OpenManage 和 iDRAC，华为的 iBMC，惠普的 OneView 和 iLO，联想的 XClarity 和 XClarity Controller 嵌入式管理，IMM2（收购自 IBM 的 SystemX PC Server 系列）等等，都在积极拥抱开源自动化工具如 Ansible 等开源软件，在这种情况下被称作下一代数据中心管理标准的 Redfish 出现了。</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 04 月 28 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/redfish/">https://wsgzao.github.io/post/redfish/</a></p><hr><h2 id="Redfish-简介"><a href="#Redfish-简介" class="headerlink" title="Redfish 简介"></a>Redfish 简介</h2><p>DMTF’s Redfish® is a standard designed to deliver simple and secure management for converged, hybrid IT and the Software Defined Data Center (SDDC). Both human readable and machine capable, Redfish leverages common Internet and web services standards to expose information directly to the modern tool chain.</p><p><a href="https://www.dmtf.org/standards/redfish" target="_blank" rel="noopener">https://www.dmtf.org/standards/redfish</a></p><p><code>DMTF</code> 的 <code>Redfish®</code> 是一个标准 <code>API</code>，旨在为融合、混合 <code>IT</code> 和软件定义数据中心（<code>SDDC</code>）提供简单和安全管理。</p><p>在 <code>Redfish</code> 出现之前，现代数据中心环境中缺乏互操作管理标准。随着机构越来越青睐于大规模的解决方案，传统标准不足以成功管理大量简单的多节点服务器或混合基础设施。<code>IPMI</code> 是一种较早的带外管理标准，仅限于 “最小公共集” 命令集（例如，开机 / 关机 / 重启、温度值、文本控制台等），由于供应商扩展在所有平台上并不常见，导致了客户常用的功能集减少。许多用户开发了自己的紧密集成工具，但是也不得不依赖带内管理软件。</p><p>而对于企业级用户来说，设备都是上千台，其需要统一的管理界面，就要对接不同供应商的 <code>API</code>。当基本 <code>IPMI</code> 功能已经不太好满足大规模 <code>Scale-out</code> 环境时，如何以更便捷的方式调用服务器高级管理功能就是一个新的需求。</p><p>为了寻求一个基于广泛使用的工具来加快发展的现代接口，现如今，客户需要一个使用互联网和 <code>web</code> 服务环境中常见的协议、结构和安全模型定义的 <code>API</code>。</p><p><code>Redfish</code> 可扩展平台管理 <code>API</code>（<code>The Redfish Scalable Platforms Management API</code>）是一种新的规范，其使用 <code>RESTful</code> 接口语义来访问定义在模型格式中的数据，用于执行带外系统管理 （<code>out of band systems management</code>）。其适用于大规模的服务器，从独立的服务器到机架式和刀片式的服务器环境，而且也同样适用于大规模的云环境。</p><p><code>Redfish</code> 的第 <code>1</code> 版侧重于服务器，为 <code>IPMI-over-LAN</code> 提供了一个安全、多节点的替代品。随后的 <code>Redfish</code> 版本增加了对网络接口(例如 <code>NIC</code>、<code>CNA</code> 和 <code>FC HBA</code>)、<code>PCIe</code> 交换、本地存储、<code>NVDIMM</code>、多功能适配器和可组合性以及固件更新服务、软件更新推送方法和安全特权映射的管理。此外，<code>Redfish</code> 主机接口规范允许在操作系统上运行应用程序和工具，包括在启动前（固件）阶段与 <code>Redfish</code> 管理服务沟通。</p><p>在定义 <code>Redfish</code> 标准时，协议与数据模型可分开并允许独立地修改。以模式为基础的数据模型是可伸缩和可扩展的，并且随着行业的发展，它将越来越具有人类可读性定义。</p><h2 id="Redfish-应用场景"><a href="#Redfish-应用场景" class="headerlink" title="Redfish 应用场景"></a>Redfish 应用场景</h2><p>可能上面那一大段晦涩的介绍描述让你难以理解 <code>Redfish</code> 的用处，简而言之，如今大多数服务器厂商（比如 <code>Supermicro</code>、<code>Dell</code> 等等）都会自带 <code>IPMI</code> 系统，这个系统是独立装在主板芯片上，用户可以通过浏览器远程控制服务器，比如开关、装系统、进入服务器终端等等，而不用跑到机房忍受过高或过低的温度、忍受服务器嘈杂的声音、忍受蹩脚的显示器……</p><p>传统的 <code>IPMI</code> 是带来了很多的便捷，但是当服务器规模变大后，单一服务器的管理已经满足不了需求，用户期望能够批量管理服务器，比如笔者想一次性给 <code>100</code> 个服务器安装系统，并且这 <code>100</code> 个服务器并不都是同一厂商，不同厂商的 <code>IPMI</code> 操作都不一样，比如 <code>Dell</code> 是 <code>iDRAC</code>，你还需要专门学习 <code>iDRAC</code> 使用和各种对接，这会带来很多困扰。而 <code>Redfish</code> 标准的出现彻底改变这种情况，它是凌驾于所有服务器之上的一个标准，对服务器的基本操作都是统一的，并且是基于 <code>Restful API</code> 的方式实现。所以客户可以利用 <code>ansible</code> 等工具轻松实现自动化批量管理大规模服务器。</p><p>服务器供应商都希望成为 <code>Redfish</code> 生态系统的一份子，但他们不想放弃对自家的服务器的管控机制。因此，他们会在 <code>Redfish</code> 规定范围之外，持续强化其 <code>API</code> 支持的功能，比如 <code>Dell</code> 的 <code>Redfish</code> 接口就要比 <code>Supermicro</code> 多很多，强大很多。</p><h2 id="为什么选择-REST、HTTP-以及-JSON"><a href="#为什么选择-REST、HTTP-以及-JSON" class="headerlink" title="为什么选择 REST、HTTP 以及 JSON?"></a>为什么选择 REST、HTTP 以及 JSON?</h2><p>Redfish 将语言支持与普遍存在的 REST、HTTP 和 JSON 相结合，使 IT 管理任务能够与其他 IT 和 dev/ops 任务的技能集和工具链结合使用。随着云生态系统采用 REST，RESTful 协议正在迅速取代 SOAP，web  API 接口也紧随其后。RESTful 协议比 SOAP 学习起来要快得多，而且它具有数据模式（因为 REST 严格来说不是协议）的简单性，可以直接映射到 HTTP 操作。</p><p>HTTP 以其常用的安全模型和网络配置为管理员所熟知。</p><p>JSON 正迅速成为现代数据格式。它本质上是人类可读的，比 XML 更简洁，拥有大量现代语言支持，是 web 服务 API 中增长最快的数据格式。</p><p>对于嵌入式可管理性环境，JSON 还有一个额外的优势：大多数基板管理控制器（BMC）已经支持 web 服务器，通过浏览器来管理服务器已经非常普遍（通常通过 Java 脚本驱动的接口）。通过在 Redfish 中使用 JSON，可以在浏览器中直接查看来自 Redfish 服务的数据，从而确保数据和编程接口在语义和价值上是一致的。</p><p>除了 REST、HTTP 和 JSON 之外，Redfish 还采用常见的 OData v4 约定来描述模式、URL 约定和命名，以及 JSON 有效负载中常见属性的结构。越来越多的通用客户端库、应用程序和工具生态系统使用 Redfish。</p><p>它有多简单? 下面显示了使用 Redfish 从服务器检索序列号的示例 Python 代码：此示例中的输出如下所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rawData= urllib.urlopen(‘http://192.168.1.135/redfish/v1/Systems/1’) </span><br><span class="line">jsonData=json.loads(rawData)</span><br><span class="line">print(jsonData[‘SerialNumber’])</span><br><span class="line"></span><br><span class="line">1A87CA442K</span><br></pre></td></tr></table></figure><h2 id="Redfish-实践"><a href="#Redfish-实践" class="headerlink" title="Redfish 实践"></a>Redfish 实践</h2><blockquote><p>更多硬件厂商的 Redfish API 接口可以浏览参考文章</p></blockquote><p><a href="https://pythonhosted.org/python-redfish/readme.html" target="_blank" rel="noopener">The python-redfish project</a></p><p><a href="https://bbs.huaweicloud.com/forum/thread-40434-1-1.html" target="_blank" rel="noopener">Python 环境 redfish 接口获取泰山服务器和鲲鹏 CPU 信息</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">pip install python-redfish</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redfish</span><br><span class="line"> </span><br><span class="line">login_host=<span class="string">"https://10.93.20.10"</span></span><br><span class="line">login_account=<span class="string">"ADMIN"</span></span><br><span class="line">login_password=<span class="string">"ADMIN"</span></span><br><span class="line">REDFISH_OBJ = redfish.redfish_client(base_url=login_host, username=login_account, password=login_password, default_prefix=<span class="string">'/redfish/v1'</span>)</span><br><span class="line">REDFISH_OBJ.login(auth=<span class="string">"session"</span>)</span><br><span class="line">response = REDFISH_OBJ.get(<span class="string">"/redfish/v1/Systems/1"</span>, <span class="keyword">None</span>)</span><br><span class="line">print(response)</span><br><span class="line">REDFISH_OBJ.logout()</span><br></pre></td></tr></table></figure><blockquote><p>基于 Redfish 你可以获取详细的硬件资产信息与 CMDB 联动</p></blockquote><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200428214055.png" alt=""></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.dmtf.org/standards/redfish" target="_blank" rel="noopener">DMTF’s Redfish</a></p><p><a href="https://www.dmtf.org/sites/default/files/Redfish_tech_note_converged_hybrid_it.pdf" target="_blank" rel="noopener">Redfish 融合、混合 IT 的简单和安全管理</a></p><p><a href="https://www.dmtf.org/sites/default/files/DSP2044%20Redfish%20%E7%99%BD%E7%9A%AE%E4%B9%A6%201.0.0.pdf" target="_blank" rel="noopener">Redfish 白皮书</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzAwODExNjI3NA==&amp;mid=2649775148&amp;idx=1&amp;sn=9638581928f7fa98714c1ad24fafccdb&amp;chksm=83773d71b400b467a9b72cbe8ae433393ab4e9f0b306c309d757ea08ba7bb4e27ddc24943951#rd" target="_blank" rel="noopener">Redfish：下一代数据中心管理标准</a></p><p><a href="https://www.tony-yin.site/2019/04/20/Redfish_Introduction/" target="_blank" rel="noopener">Redfish 详解</a></p><p><a href="https://www.supermicro.com/manuals/other/RedfishRefGuide.pdf" target="_blank" rel="noopener">Supermicro Redfish Reference Guide</a></p><p><a href="https://www.dell.com/support/article/en-sg/sln310624/redfish-api-with-dell-integrated-remote-access-controller?lang=en" target="_blank" rel="noopener">Redfish API with Dell integrated Remote Access Controller</a></p><p><a href="https://support.huawei.com/enterprise/zh/doc/EDOC1000126991?idPath=7919749|9856522|9856629|250783947" target="_blank" rel="noopener">华为服务器 iBMC Redfish 接口说明</a></p>]]></content>
    
    <summary type="html">
    
      Redfish下一代数据中心管理标准详解和实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
</feed>
