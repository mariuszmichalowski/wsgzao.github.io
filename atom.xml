<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HelloDog</title>
  
  <subtitle>Keep Calm and Carry On</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wsgzao.github.io/"/>
  <updated>2020-03-26T11:50:41.586Z</updated>
  <id>https://wsgzao.github.io/</id>
  
  <author>
    <name>wsgzao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Keepalived 原理介绍和配置实践</title>
    <link href="https://wsgzao.github.io/post/keepalived/"/>
    <id>https://wsgzao.github.io/post/keepalived/</id>
    <published>2020-03-26T06:59:49.000Z</published>
    <updated>2020-03-26T11:50:41.586Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要讲述 Keepalived 原理介绍和配置实践</p><blockquote><p>Keepalived 原理介绍和配置实践</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 03 月 26 日 - 增加 Keepalived 双活最佳实践<br>2019 年 09 月 03 日 - 拆分 LVS-Keepalived 中 Keepalived<br>2019 年 08 月 23 日 - 更新 LVS/NAT、LVS/DR、LVS/TUN 三种模式的原理和配置实践<br>2018 年 12 月 03 日 - 精简和更新配置步骤<br>2018 年 07 月 31 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/keepalived/">https://wsgzao.github.io/post/keepalived/</a></p><p><strong> 扩展阅读 </strong></p><p>LVS - <a href="http://www.linuxvirtualserver.org/zh/index.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/zh/index.html</a><br>Keepalived - <a href="http://www.keepalived.org/" target="_blank" rel="noopener">http://www.keepalived.org/</a></p><hr><h2 id="ReadMe"><a href="#ReadMe" class="headerlink" title="ReadMe"></a>ReadMe</h2><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>Keepalived - <a href="http://www.keepalived.org/doc/" target="_blank" rel="noopener">http://www.keepalived.org/doc/</a><br>The Keepalived Solution - <a href="http://www.linuxvirtualserver.org/docs/ha/keepalived.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/docs/ha/keepalived.html</a><br>LVS 和 Keepalived 官方中文手册 PDF - <a href="https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1s0P6nUt8WF6o_N3wdE3uKg</a></p><h3 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h3><blockquote><p>以下术语涉及 LVS 三种工作模式的原理</p></blockquote><ul><li>LB (Load Balancer 负载均衡) </li><li>HA (High Available 高可用) </li><li>Failover (失败切换) </li><li>Cluster (集群) </li><li>LVS (Linux Virtual Server Linux 虚拟服务器) </li><li>DS (Director Server)，指的是前端负载均衡器节点</li><li>RS (Real Server)，后端真实的工作服务器</li><li>VIP (Virtual IP)，虚拟的 IP 地址，向外部直接面向用户请求，作为用户请求的目标的 IP 地址</li><li>DIP (Director IP)，主要用于和内部主机通讯的 IP 地址</li><li>RIP (Real Server IP)，后端服务器的 IP 地址</li><li>CIP (Client IP)，访问客户端的 IP 地址</li></ul><h2 id="负载均衡-LB"><a href="#负载均衡-LB" class="headerlink" title="负载均衡(LB)"></a>负载均衡(LB)</h2><blockquote><p>负载均衡实现方法有两种：硬件实现和软件实现</p></blockquote><p>硬件比较常见的有：</p><ol><li>F5 Big-IP</li><li>Citrix Netscaler</li></ol><p>软件比较常见的有：</p><ol><li>LVS（Linux Virtual Server）</li><li>HAProxy</li><li>Nginx</li></ol><p>LVS 特点是：</p><ol><li>首先它是基于 4 层的网络协议的，抗负载能力强，对于服务器的硬件要求除了网卡外，其他没有太多要求；</li><li>配置性比较低，这是一个缺点也是一个优点，因为没有可太多配置的东西，大大减少了人为出错的几率；</li><li>应用范围比较广，不仅仅对 web 服务做负载均衡，还可以对其他应用（mysql）做负载均衡；</li><li>LVS 架构中存在一个虚拟 IP 的概念，需要向 IDC 多申请一个 IP 来做虚拟 IP。</li></ol><p>Nginx 负载均衡器的特点是：</p><ol><li>工作在网络的 7 层之上，可以针对 http 应用做一些分流的策略，比如针对域名、目录结构；</li><li>Nginx 安装和配置比较简单，测试起来比较方便；</li><li>也可以承担高的负载压力且稳定，一般能支撑超过上万次的并发；</li><li>Nginx 可以通过端口检测到服务器内部的故障，比如根据服务器处理网页返回的状态码、超时等等，并且会把返回错误的请求重新提交到另一个节点，不过其中缺点就是不支持 url 来检测；</li><li>Nginx 对请求的异步处理可以帮助节点服务器减轻负载；</li><li>Nginx 能支持 http 和 Email，这样就在适用范围上面小很多；</li><li>默认有三种调度算法: 轮询、weight 以及 ip_hash（可以解决会话保持的问题），还可以支持第三方的 fair 和 url_hash 等调度算法；</li></ol><p>HAProxy 的特点是：</p><ol><li>HAProxy 是工作在网络 7 层之上；</li><li>支持 Session 的保持，Cookie 的引导等；</li><li>支持 url 检测后端的服务器出问题的检测会有很好的帮助；</li><li>支持的负载均衡算法：动态加权轮循(Dynamic Round Robin)，加权源地址哈希(Weighted Source Hash)，加权 URL 哈希和加权参数哈希(Weighted Parameter Hash)；</li><li>单纯从效率上来讲 HAProxy 更会比 Nginx 有更出色的负载均衡速度；</li><li>HAProxy 可以对 Mysql 进行负载均衡，对后端的 DB 节点进行检测和负载均衡。</li></ol><h2 id="keepalived-简介"><a href="#keepalived-简介" class="headerlink" title="keepalived 简介"></a>keepalived 简介</h2><p>Keepalived 是运行在 lvs 之上，是一个用于做双机热备（HA）的软件，它的主要功能是实现真实机的故障隔离及负载均衡器间的失败切换，提高系统的可用性。</p><h3 id="运行原理"><a href="#运行原理" class="headerlink" title="运行原理"></a>运行原理</h3><p>keepalived 通过选举（看服务器设置的权重）挑选出一台热备服务器做 MASTER 机器，MASTER 机器会被分配到一个指定的虚拟 ip，外部程序可通过该 ip 访问这台服务器，如果这台服务器出现故障（断网，重启，或者本机器上的 keepalived crash 等），keepalived 会从其他的备份机器上重选（还是看服务器设置的权重）一台机器做 MASTER 并分配同样的虚拟 IP，充当前一台 MASTER 的角色。</p><h3 id="选举策略"><a href="#选举策略" class="headerlink" title="选举策略"></a>选举策略</h3><p>选举策略是根据 VRRP 协议，完全按照权重大小，权重最大（0～255）的是 MASTER 机器，下面几种情况会触发选举</p><ol><li>keepalived 启动的时候</li><li>master 服务器出现故障（断网，重启，或者本机器上的 keepalived crash 等，而本机器上其他应用程序 crash 不算）</li><li>有新的备份服务器加入且权重最大</li></ol><h2 id="keepalived-的配置文件说明"><a href="#keepalived-的配置文件说明" class="headerlink" title="keepalived 的配置文件说明"></a>keepalived 的配置文件说明</h2><p>Keepalived 是运行在 lvs 之上, 它的主要功能是实现 RealServer(真实服务器)的故障隔离及 Director(负载均衡器)间的 FailOver(失败切换). </p><ul><li>keepalived 是 lvs 的扩展项目, 因此它们之间具备良好的兼容性</li><li>对 RealServer 的健康检查, 实现对失效机器 / 服务的故障隔离</li><li>负载均衡器之间的失败切换 failover</li></ul><h3 id="全局定义"><a href="#全局定义" class="headerlink" title="全局定义"></a>全局定义</h3><p>全局配置又包括两个子配置</p><ol><li>全局定义(global definition)</li><li>静态路由配置(static ipaddress/routes)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局定义 (global definition) </span></span><br><span class="line">global_defs &#123;                      </span><br><span class="line">   notification_email &#123;      </span><br><span class="line">   acassen@firewall.loc     </span><br><span class="line">   failover@firewall.loc</span><br><span class="line">   sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc   </span><br><span class="line">   smtp_server 192.168.200.1                         </span><br><span class="line">   smtp_connect_timeout 30                                  </span><br><span class="line">   router_id LVS_DEVEL     </span><br><span class="line">&#125;</span><br><span class="line">notification_email: 表示 keepalived 在发生诸如切换操作时需要发送 email 通知以及 email 发送给哪些邮件地址邮件地址可以多个每行一个</span><br><span class="line">notification_email_from admin@example.com: 表示发送通知邮件时邮件源地址是谁</span><br><span class="line">smtp_server 127.0.0.1: 表示发送 email 时使用的 smtp 服务器地址这里可以用本地的 sendmail 来实现</span><br><span class="line">smtp_connect_timeout 30: 连接 smtp 连接超时时间</span><br><span class="line">router_id node1: 机器标识，通常配置主机名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态地址和路由配置范例</span></span><br><span class="line">static_ipaddress &#123;</span><br><span class="line">    192.168.1.1/24 brd + dev eth0 scope global</span><br><span class="line">    192.168.1.2/24 brd + dev eth1 scope global</span><br><span class="line">&#125;</span><br><span class="line">static_routes &#123;</span><br><span class="line">    src <span class="variable">$SRC_IP</span> to <span class="variable">$DST_IP</span> dev <span class="variable">$SRC_DEVICE</span></span><br><span class="line">    src <span class="variable">$SRC_IP</span> to <span class="variable">$DST_IP</span> via <span class="variable">$GW</span> dev <span class="variable">$SRC_DEVICE</span></span><br><span class="line">&#125;</span><br><span class="line"> 这里实际上和系统里面命令配置 IP 地址和路由一样例如 </span><br><span class="line">192.168.1.1/24 brd + dev eth0 scope global 相当于: ip addr add 192.168.1.1/24 brd + dev eth0 scope global</span><br><span class="line"> 就是给 eth0 配置 IP 地址路由同理, 一般这个区域不需要配置 </span><br><span class="line"> 这里实际上就是给服务器配置真实的 IP 地址和路由的在复杂的环境下可能需要配置一般不会用这个来配置我们可以直接用 vi /etc/sysconfig/network-script/ifcfg-eth1 来配置切记这里可不是 VIP 不要搞混淆了切记切记</span><br></pre></td></tr></table></figure><h3 id="VRRPD-配置"><a href="#VRRPD-配置" class="headerlink" title="VRRPD 配置"></a>VRRPD 配置</h3><p>包括三个类:</p><ol><li>VRRP 同步组(synchroization group) </li><li>VRRP 实例(VRRP Instance) </li><li>VRRP 脚本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># VRRP 同步组 (synchroization group) 配置范例 </span></span><br><span class="line">vrrp_sync_group VG_1 &#123;   // 注意 vrrp_sync_group  后面可自定义名称如 lvs_httpd ,httpd</span><br><span class="line">group &#123;</span><br><span class="line">http</span><br><span class="line">mysql</span><br><span class="line">&#125;</span><br><span class="line">notify_master /path/to/to_master.sh</span><br><span class="line">notify_backup /path_to/to_backup.sh</span><br><span class="line">notify_fault <span class="string">"/path/fault.sh VG_1"</span></span><br><span class="line">notify /path/to/notify.sh</span><br><span class="line">smtp_alert </span><br><span class="line">&#125;</span><br><span class="line"> 其中 http 和 mysql 是实例名和下面的实例名一致 </span><br><span class="line">notify_master /path/to/to_master.sh // 表示当切换到 master 状态时要执行的脚本</span><br><span class="line">notify_backup /path_to/to_backup.sh // 表示当切换到 backup 状态时要执行的脚本</span><br><span class="line">notify_fault <span class="string">"/path/fault.sh VG_1"</span>  // keepalived 出现故障时执行的脚本</span><br><span class="line">notify /path/to/notify.sh  </span><br><span class="line">smtp_alert           // 表示切换时给 global defs 中定义的邮件地址发送邮件通知</span><br><span class="line"></span><br><span class="line"><span class="comment"># VRRP 实例(instance) 配置范例</span></span><br><span class="line">vrrp_instance http &#123;  // 注意 vrrp_instance 后面可自定义名称如 lvs_httpd ,httpd</span><br><span class="line">state MASTER</span><br><span class="line">interface eth0</span><br><span class="line">dont_track_primary</span><br><span class="line">track_interface &#123;</span><br><span class="line">eth0</span><br><span class="line">eth1</span><br><span class="line">&#125;</span><br><span class="line">mcast_src_ip &lt;IPADDR&gt;</span><br><span class="line">garp_master_delay 10</span><br><span class="line">virtual_router_id 51</span><br><span class="line">priority 100</span><br><span class="line">advert_int 1</span><br><span class="line">authentication &#123;</span><br><span class="line">auth_type PASS</span><br><span class="line">autp_pass 1234</span><br><span class="line">&#125;</span><br><span class="line">virtual_ipaddress &#123;</span><br><span class="line"><span class="comment">#&lt;IPADDR&gt;/&lt;MASK&gt; brd &lt;IPADDR&gt; dev &lt;STRING&gt; scope &lt;SCOPT&gt; label &lt;LABEL&gt;</span></span><br><span class="line">192.168.200.17/24 dev eth1</span><br><span class="line">192.168.200.18/24 dev eth2 label eth2:1</span><br><span class="line">&#125;</span><br><span class="line">virtual_routes &#123;</span><br><span class="line"><span class="comment"># src &lt;IPADDR&gt; [to] &lt;IPADDR&gt;/&lt;MASK&gt; via|gw &lt;IPADDR&gt; dev &lt;STRING&gt; scope &lt;SCOPE&gt; tab</span></span><br><span class="line">src 192.168.100.1 to 192.168.109.0/24 via 192.168.200.254 dev eth1</span><br><span class="line">192.168.110.0/24 via 192.168.200.254 dev eth1</span><br><span class="line">192.168.111.0/24 dev eth2</span><br><span class="line">192.168.112.0/24 via 192.168.100.254</span><br><span class="line">&#125;</span><br><span class="line">nopreempt</span><br><span class="line">preemtp_delay 300</span><br><span class="line">debug</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>state: state 指定 instance(Initial)的初始状态就是说在配置好后这台 服务器的初始状态就是这里指定的但这里指定的不算还是得要通过竞选通过优先级来确定里如果这里设置为 master 但如若他的优先级不及另外一台 那么这台在发送通告时会发送自己的优先级另外一台发现优先级不如自己的高那么他会就回抢占为 master</p><p>interface: 实例绑定的网卡因为在配置虚拟 VIP 的时候必须是在已有的网卡上添加的</p><p>dont track primary: 忽略 VRRP 的 interface 错误</p><p>track interface: 跟踪接口设置额外的监控里面任意一块网卡出现问题都会进入故障 (FAULT) 状态例如用 nginx 做均衡器的时候内网必须正常工作如果内网出问题了这个均衡器也就无法运作了所以必须对内外网同时做健康检查</p><p>mcast src ip: 发送多播数据包时的源 IP 地址这里注意了这里实际上就是在那个地址上发送 VRRP 通告这个非常重要一定要选择稳定的网卡端口来发送这里相当于 heartbeat 的心跳端口如果没有设置那么就用默认的绑定的网卡的 IP 也就是 interface 指定的 IP 地址</p><p>garp master delay: 在切换到 master 状态后延迟进行免费的 ARP(gratuitous ARP)请求，默认 5s</p><p>virtual router id: 这里设置 VRID 这里非常重要相同的 VRID 为一个组他将决定多播的 MAC 地址</p><p>priority 100: 设置本节点的优先级优先级高的为 master</p><p>advert int: 设置 MASTER 与 BACKUP 负载均衡之间同步即主备间通告时间检查的时间间隔, 单位为秒，默认 1s</p><p>virtual ipaddress: 这里设置的就是 VIP 也就是虚拟 IP 地址他随着 state 的变化而增加删除当 state 为 master 的时候就添加当 state 为 backup 的时候删除这里主要是有优先级来决定的和 state 设置的值没有多大关系这里可以设置多个 IP 地址</p><p>virtual routes: 原理和 virtual ipaddress 一样只不过这里是增加和删除路由</p><p>lvs sync daemon interface: lvs syncd 绑定的网卡，类似 HA 中的心跳检测绑定的网卡</p><p>authentication: 这里设置认证</p><p>auth type: 认证方式可以是 PASS 或 AH 两种认证方式</p><p>auth pass: 认证密码</p><p>nopreempt: 设置不抢占 master，这里只能设置在 state 为 backup 的节点上而且这个节点的优先级必须别另外的高，比如 master 因为异常将调度圈交给了备份 serve，master serve 检修后没问题，如果不设置 nopreempt 就会将调度权重新夺回来，这样就容易造成业务中断问题</p><p>preempt delay: 抢占延迟多少秒，即延迟多少秒后竞选 master</p><p>debug：debug 级别</p><p>notify master：和 sync group 这里设置的含义一样可以单独设置例如不同的实例通知不同的管理人员 http 实例发给网站管理员 mysql 的就发邮件给 DBA</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># VRRP 脚本 </span></span><br><span class="line"><span class="comment"># 如下所示为相关配置示例</span></span><br><span class="line">vrrp_script check_running &#123;</span><br><span class="line">   script <span class="string">"/usr/local/bin/check_running"</span></span><br><span class="line">   interval 10</span><br><span class="line">   weight 10</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance http &#123;</span><br><span class="line">   state BACKUP</span><br><span class="line">   smtp_alert</span><br><span class="line">   interface eth0</span><br><span class="line">   virtual_router_id 101</span><br><span class="line">   priority 90</span><br><span class="line">   advert_int 3</span><br><span class="line">   authentication &#123;</span><br><span class="line">   auth_type PASS</span><br><span class="line">   auth_pass whatever</span><br><span class="line">   &#125;</span><br><span class="line">   virtual_ipaddress &#123;</span><br><span class="line">   1.1.1.1</span><br><span class="line">   &#125;</span><br><span class="line">   track_script &#123;</span><br><span class="line">   check_running </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 首先在 vrrp_script 区域定义脚本名字和脚本执行的间隔和脚本执行的优先级变更, 如下所示:</span></span><br><span class="line">vrrp_script check_running &#123;</span><br><span class="line">            script <span class="string">"/usr/local/bin/check_running"</span></span><br><span class="line">            interval 10     <span class="comment"># 脚本执行间隔</span></span><br><span class="line">            weight 10       <span class="comment"># 脚本结果导致的优先级变更 10 表示优先级 + 10-10 则表示优先级 - 10</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment"># 然后在实例(vrrp_instance) 里面引用有点类似脚本里面的函数引用一样先定义后引用函数名</span></span><br><span class="line">track_script &#123;</span><br><span class="line">      check_running </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意:<br>VRRP 脚本 (vrrp_script) 和 VRRP 实例 (vrrp_instance) 属于同一个级别<br>keepalived 会定时执行脚本并对脚本执行的结果进行分析，动态调整 vrrp_instance 的优先级。一般脚本检测返回的值为 0，说明脚本检测成功，如果为非 0 数值，则说明检测失败<br>如果脚本执行结果为 0，并且 weight 配置的值大于 0，则优先级相应的增加, 如果 weight 为非 0，则优先级不变<br>如果脚本执行结果非 0，并且 weight 配置的值小于 0，则优先级相应的减少, 如果 weight 为 0，则优先级不变<br>其他情况，维持原本配置的优先级，即配置文件中 priority 对应的值。<br>这里需要注意的是：<br>1） 优先级不会不断的提高或者降低<br>2） 可以编写多个检测脚本并为每个检测脚本设置不同的 weight<br>3） 不管提高优先级还是降低优先级，最终优先级的范围是在[1,254]，不会出现优先级小于等于 0 或者优先级大于等于 255 的情况<br>这样可以做到利用脚本检测业务进程的状态，并动态调整优先级从而实现主备切换。</p><h3 id="virtual-server-虚拟主机配置"><a href="#virtual-server-虚拟主机配置" class="headerlink" title="virtual_server 虚拟主机配置"></a>virtual_server 虚拟主机配置</h3><p>关于 keeplived 的虚拟主机配置有三种如下所示<br>virtual server IP port<br>virtual server fwmark int<br>virtual server group string</p><p>以常用的第一种为例<br>virtual_server 192.168.1.2 80<br>含义: 设置一个 virtual server: VIP:Vport</p><p>delay_loop 3<br>含义: 设置 service polling 的 delay 时间即服务轮询的时间间隔</p><p>lb_algo rr|wrr|lc|wlc|lblc|sh|dh<br>含义: 设置 LVS 调度算法</p><p>lb_kind NAT|DR|TUN<br>含义: 设置 LVS 集群模式  </p><p>persistence_timeout 120<br>含义: 设置会话保持时间秒为单位即以用户在 120 秒内被分配到同一个后端 realserver, 超过此时间就重新分配</p><p>persistence_granularity <netmask><br>含义: 设置 LVS 会话保持粒度 ipvsadm 中的 - M 参数默认是 0xffffffff 即每个客户端都做会话保持</netmask></p><p>protocol TCP<br>含义: 设置健康检查用的是 TCP 还是 UDP</p><p>ha_suspend<br>含义: suspendhealthchecker’s activity</p><p>virtualhost <string><br>含义: HTTP_GET 做健康检查时检查的 web 服务器的虚拟主机即 host 头</string></p><p>sorry_server <ipaddr> <port><br>含义: 设置 backupserver 就是当所有后端 realserver 节点都不可用时就用这里设置的也就是临时把所有的请求都发送到这里</port></ipaddr></p><p>real_server <ipaddr> <port><br>含义: 设置后端真实节点主机的权重等设置主要后端有几台这里就要设置几个</port></ipaddr></p><p>weight 1<br>含义: 设置给每台的权重 0 表示失效 (不知给他转发请求知道他恢复正常) 默认是 1</p><p>inhibit_on_failure<br>含义: 表示在节点失败后把他权重设置成 0 而不是冲 IPVS 中删除</p><p>notify_up <string> | <quoted-string><br>含义: 设置检查服务器正常 (UP) 后要执行的脚本<br>notify_down <string> | <quoted-string><br>含义: 设置检查服务器失败 (down) 后要执行的脚本</quoted-string></string></quoted-string></string></p><p>注: keepalived 检查机制说明<br>keepalived 健康检查方式有: HTTP_GET|SSL_GET|TCP_CHECK|SMTP_CHECK|MISC_CHECK 几种如下所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#HTTP/HTTPS 方式 </span></span><br><span class="line">HTTP_GET|SSL_GET &#123;      <span class="comment"># 设置健康检查方式</span></span><br><span class="line"></span><br><span class="line">url &#123;                   <span class="comment"># 设置要检查的 URL 可以有多个</span></span><br><span class="line">path /                  <span class="comment"># 设置 URL 具体路径</span></span><br><span class="line">digest &lt;STRING&gt;         <span class="comment"># 检查后的摘要信息这些摘要信息可以通过 genhash 命令工具获取                                   </span></span><br><span class="line">status_code 200         <span class="comment"># 设置返回状态码</span></span><br><span class="line">&#125;</span><br><span class="line">connect_port 80         <span class="comment"># 设置监控检查的端口</span></span><br><span class="line">bindto  &lt;IPADD&gt;         <span class="comment"># 设置健康检查的 IP 地址</span></span><br><span class="line">connect_timeout   3     <span class="comment"># 设置连接超时时间</span></span><br><span class="line">nb_get_retry  3         <span class="comment"># 设置重连次数</span></span><br><span class="line">delay_before_retry  2   <span class="comment"># 设置重连间隔</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">#TCP 方式  </span></span><br><span class="line">TCP_CHECK     &#123;</span><br><span class="line">connect_port 80         <span class="comment"># 设置监控检查的端口</span></span><br><span class="line">bindto  &lt;IPADD&gt;         <span class="comment"># 设置健康检查的 IP 地址</span></span><br><span class="line">connect_timeout   3     <span class="comment"># 设置连接超时时间</span></span><br><span class="line">nb_get_retry  3         <span class="comment"># 设置重连次数</span></span><br><span class="line">delay_before_retry  2   <span class="comment"># 设置重连间隔</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#SMTP 方式 (这个可以用来给邮件服务器做集群)</span></span><br><span class="line">SMTP_CHECK &#123;</span><br><span class="line">host &#123;</span><br><span class="line">connect_ip &lt;IP ADDRESS&gt;</span><br><span class="line">connect_port &lt;PORT&gt;     <span class="comment"># 默认检查 25 端口</span></span><br><span class="line">14 KEEPALIVED</span><br><span class="line">bindto &lt;IP ADDRESS&gt;</span><br><span class="line">&#125;</span><br><span class="line">connect_timeout &lt;INTEGER&gt;</span><br><span class="line">retry &lt;INTEGER&gt;</span><br><span class="line">delay_before_retry &lt;INTEGER&gt;</span><br><span class="line">helo_name &lt;STRING&gt;|&lt;QUOTED-STRING&gt;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">#MISC 方式 这个可以用来检查很多服务器只需要自己会些脚本即可</span></span><br><span class="line">MISC_CHECK &#123;</span><br><span class="line">misc_path &lt;STRING&gt;|&lt;QUOTED-STRING&gt;  <span class="comment"># 外部程序或脚本</span></span><br><span class="line">misc_timeout &lt;INT&gt;                  <span class="comment"># 脚本或程序执行超时时间</span></span><br><span class="line">misc_dynamic                                              </span><br><span class="line"><span class="comment"># 这个就很好用了可以非常精确的来调整权重是后端每天服务器的压力都能均衡调配这个主要是通过执行的程序或脚本返回的状态代码来动态调整 weight 值使权重根据真实的后端压力来适当调整不过这需要有过硬的脚本功夫才行哦</span></span><br><span class="line"><span class="comment"># 返回 0 健康检查没问题不修改权重</span></span><br><span class="line"><span class="comment"># 返回 1 健康检查失败权重设置为 0</span></span><br><span class="line"><span class="comment"># 返回 2-255 健康检查没问题但是权重却要根据返回代码修改为返回码 - 2 例如如果程序或脚本执行后返回的代码为 200# 那么权重这回被修改为 200-2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上就是 keepalived 的配置项说明虽然配置项很多但很多时候很多配置项保持默认即可，以下是默认配置文件，方便大家做个对比参考</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line">[root@sg-gop-10-65-32-140 wangao]<span class="comment"># cat /etc/keepalived/keepalived.conf</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">     failover@firewall.loc</span><br><span class="line">     sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">   vrrp_strict</span><br><span class="line">   vrrp_garp_interval 0</span><br><span class="line">   vrrp_gna_interval 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.200.16</span><br><span class="line">        192.168.200.17</span><br><span class="line">        192.168.200.18</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 192.168.200.100 443 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 192.168.201.100 443 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        SSL_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /</span><br><span class="line">              digest ff20ad2481f97b1754ef3e12ecd3a9cc</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /mrtg/</span><br><span class="line">              digest 9b3a0c85a887a256d6939da88aabd8cd</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.10.2 1358 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    sorry_server 192.168.200.200 1358</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.2 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.3 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 10.10.10.3 1358 &#123;</span><br><span class="line">    delay_loop 3</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind NAT</span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.4 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.5 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123;</span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最简单的-Keepalived-HA-配置实例"><a href="#最简单的-Keepalived-HA-配置实例" class="headerlink" title="最简单的 Keepalived HA 配置实例"></a>最简单的 Keepalived HA 配置实例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 keepalived,ipvsadm</span></span><br><span class="line">yum install keepalived -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果开启防火墙，请添加 VRRP 白名单</span></span><br><span class="line">-A INPUT -p vrrp -j ACCEPT</span><br><span class="line">-A INPUT -p igmp -j ACCEPT</span><br><span class="line">-A INPUT -d 224.0.0.18 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 keepalived 配置文件，master 和 backup 节点配置文件一样</span></span><br><span class="line">vi /etc/keepalived/keepalived.conf</span><br><span class="line"></span><br><span class="line">vrrp_sync_group VI_GOP_NC1_HA &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        VI_GOP_NC1_HA_PRI</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_GOP_NC1_HA_PRI &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 139</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.65.33.139/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动启动节点即为 master</span></span><br><span class="line">service keepalived start</span><br></pre></td></tr></table></figure><h2 id="Keepalived-双活实践"><a href="#Keepalived-双活实践" class="headerlink" title="Keepalived 双活实践"></a>Keepalived 双活实践</h2><blockquote><p>最简单的 keepalived 双活，只需要修改 state 和 priority</p></blockquote><ul><li>优点：配置文件简单</li><li>缺点：<ul><li>当 master 恢复后会自动回切，影响业务流量</li><li>两个节点配置不完全一致，对自动化运维管理不友好</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"># node1</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 32</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.32/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 33</span><br><span class="line">    priority 98</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.33/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># node2</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 32</span><br><span class="line">    priority 98</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.32/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 33</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.33/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>合理的 keepalived 双活</p></blockquote><ul><li>优点：<ul><li>添加 nopreempt 可以防止自动回切</li><li>添加 track_script 可以人为控制切换</li><li>节点之间配置完全一致，便于自动化运维管理</li></ul></li><li>缺点：配置文件较为复杂</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"># node1</span><br><span class="line">vrrp_script maint-10.71.17.32 &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/10.71.17.32 ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-10.71.17.33 &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/10.71.17.33 ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 32</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.32/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-10.71.17.32</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 33</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.33/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-10.71.17.33</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># node2</span><br><span class="line">vrrp_script maint-10.71.17.32 &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/10.71.17.32 ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script maint-10.71.17.33 &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -e /etc/keepalived/10.71.17.33 ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 32</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.32/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-10.71.17.32</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface bond0</span><br><span class="line">    virtual_router_id 33</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    nopreempt</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.71.17.33/23 dev bond0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        maint-10.71.17.33</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果需要配合自定义脚本监控使用，可以参考<a href="https://wsgzao.github.io/post/redis/">Redis 主从同步配置实践</a></p><h2 id="简单的-Keepalived-邮件告警实例"><a href="#简单的-Keepalived-邮件告警实例" class="headerlink" title="简单的 Keepalived 邮件告警实例"></a>简单的 Keepalived 邮件告警实例</h2><ol><li>编写 sendmail.py 邮件发送脚本</li><li>在 keepalived.conf 中配置 notify_backup</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"></span><br><span class="line">EMAIL_CONFIG = &#123;</span><br><span class="line">    <span class="string">'EMAIL_HOST'</span>: <span class="string">'xxx'</span>,</span><br><span class="line">    <span class="string">'EMAIL_HOST_USER'</span>: <span class="string">'xxx'</span>,</span><br><span class="line">    <span class="string">'EMAIL_RECEIVER'</span>: <span class="string">'xxx'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_get_private_ip</span><span class="params">()</span>:</span></span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        sock.connect((<span class="string">'10.255.255.255'</span>, <span class="number">1</span>))</span><br><span class="line">        <span class="keyword">return</span> sock.getsockname()[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'127.0.0.1'</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        sock.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_email</span><span class="params">()</span>:</span></span><br><span class="line">    ip = _get_private_ip()</span><br><span class="line">    hostname = socket.gethostname()</span><br><span class="line">    message = <span class="string">'Subject: Keepalived Failover Alert %s \n\nHOSTNAME %s on LANIP %s HA status has changed to %s'</span> % (</span><br><span class="line">        sys.argv[<span class="number">1</span>], hostname, ip, sys.argv[<span class="number">1</span>])</span><br><span class="line">    server = smtplib.SMTP(EMAIL_CONFIG[<span class="string">"EMAIL_HOST"</span>])</span><br><span class="line">    server.sendmail(EMAIL_CONFIG[<span class="string">'EMAIL_HOST_USER'</span>],</span><br><span class="line">                    EMAIL_CONFIG[<span class="string">'EMAIL_RECEIVER'</span>], message)</span><br><span class="line">    server.quit()</span><br><span class="line"></span><br><span class="line">send_email()</span><br></pre></td></tr></table></figure><blockquote><p>如果有设置 vrrp_sync_group 可以添加在这里通过群组控制，如果没有就跟在 vrrp_instance 独立设置</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">           # notify scripts and alerts are optional</span><br><span class="line">           #</span><br><span class="line">           # filenames of scripts to run on transitions can be unquoted (if</span><br><span class="line">           # just filename) or quoted (if it has parameters)</span><br><span class="line">           # The username and groupname specify the user and group</span><br><span class="line">           # under which the scripts should be run. If username is</span><br><span class="line">           # specified, the group defaults to the group of the user.</span><br><span class="line">           # If username is not specified, they default to the</span><br><span class="line">           # global script_user and script_group to MASTER transition</span><br><span class="line">           notify_master /path/to_master.sh [username [groupname]]</span><br><span class="line"></span><br><span class="line">           # to BACKUP transition</span><br><span class="line">           notify_backup /path/to_backup.sh [username [groupname]]</span><br><span class="line"></span><br><span class="line">           # FAULT transition</span><br><span class="line">           notify_fault &quot;/path/fault.sh VG_1&quot; [username [groupname]]</span><br><span class="line"></span><br><span class="line">vrrp_sync_group NC-CLOUD-LOADTEST &#123;</span><br><span class="line">    group &#123;</span><br><span class="line">        NC-CLOUD-LOADTEST-PUB</span><br><span class="line">        NC-CLOUD-LOADTEST-PRI</span><br><span class="line">    &#125;</span><br><span class="line">    notify_master &quot;/bin/python /etc/keepalived/sendmail.py master&quot;</span><br><span class="line">    notify_backup &quot;/bin/python /etc/keepalived/sendmail.py backup&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="LVS-和-Keepalived-系列"><a href="#LVS-和-Keepalived-系列" class="headerlink" title="LVS 和 Keepalived 系列"></a>LVS 和 Keepalived 系列</h2><p><a href="https://wsgzao.github.io/post/lvs-keepalived/">LVS 和 Keepalived 的原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs/">LVS 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/keepalived/">Keepalived 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-nat/">LVS-NAT 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-dr/">LVS-DR 原理介绍和配置实践</a><br><a href="https://wsgzao.github.io/post/lvs-tun/">LVS-TUN 原理介绍和配置实践</a></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.keepalived.org/manpage.html" target="_blank" rel="noopener">Keepalived Configuration Manual Page</a></p><p><a href="https://www.keepalived.org/doc/" target="_blank" rel="noopener">Keepalived User Guide</a></p><p><a href="http://arganzheng.life/keepalived-in-action.html" target="_blank" rel="noopener">keepalived 实战</a></p><p><a href="https://monster0303.github.io/posts/4b9d0a4f/" target="_blank" rel="noopener">实现高可用集群的神器 详解 Keepalived</a></p><p><a href="https://monster0303.github.io/posts/257304ac/" target="_blank" rel="noopener">LVS 小宇宙爆发！ 当 Keepalived 遇上 LVS，实现集群高可用</a></p>]]></content>
    
    <summary type="html">
    
      Keepalived原理介绍和配置实践
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>DevOps Roadmap 持续学习路径分享</title>
    <link href="https://wsgzao.github.io/post/devops/"/>
    <id>https://wsgzao.github.io/post/devops/</id>
    <published>2020-03-20T08:31:24.000Z</published>
    <updated>2020-03-20T10:48:24.122Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.v2ex.co/o2t5S8at.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>其实一直很想整理一篇 DevOps 学习资源导航类文章，主要原因除了自己的懒惰外，技术的不断创新也让未来更加值得期待。虽然在大多数情况下我们既无法面面俱到也突破不了点的极限，但是这也不会阻碍我们对于学习的热爱。梳理这篇文章也是希望自己能够始终保持学习的态度，完善自己的知识体系，坚持技术沉淀的过程，享受点滴进步的快乐。</p><p>DevOps 这篇文章是 2015 年写的初稿，到现在 2020 年新技术的变化确实是肉眼可见，不过底层的一些知识体系始终没有改变，如果能够把基础打得更扎实些相信未来又会有更多收获。DevOps 代表的是一种文化，现在越来越多的公司会设立 SRE 或 DevOps 的岗位，传统的运维人员也需要向开发运维工程师转变，不进则退。</p><blockquote><p>DevOps 是一段持续学习之旅</p></blockquote><hr><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 03 月 20 日 - 重构内容<br>2018 年 05 月 15 日 - 修改内容<br>2016 年 05 月 11 日 - 增加 PHPHub，Ruby China<br>2016 年 03 月 25 日 - 增加 InfoQ，神秘的程序员<br>2016 年 02 月 14 日 - 增加 Forvo，Coursera，自强学堂<br>2016 年 01 月 04 日 - 增加利器<br>2015 年 12 月 22 日 - 增加极客学院，网易公开课，曹政微信订阅号<br>2015 年 10 月 29 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/devops/">https://wsgzao.github.io/post/devops/</a></p><hr><h2 id="DevOps-Roadmap"><a href="#DevOps-Roadmap" class="headerlink" title="DevOps Roadmap"></a>DevOps Roadmap</h2><p><img src="https://roadmap.sh/roadmaps/devops.png" alt=""></p><p>上图出自 <a href="https://roadmap.sh/" target="_blank" rel="noopener">Developer Roadmaps</a>，上面还有针对其他方向的 roadmap，总结的相对比较全面，因为国内的开源项目刚刚开始在世界崭露头角，相信随着国内开源社区的不断成熟发展，可以看到越来越多的国内项目出现在各个榜单上，加油！奥利给！</p><p>Google SRE vs. DevOps: competing standards or close friends? 以及中文翻译整合到了一起，方便大家阅读<br><a href="https://wsgzao.github.io/post/sre-vs-devops/">SRE 和 DevOps</a></p><h2 id="读书"><a href="#读书" class="headerlink" title="读书"></a>读书</h2><p>我在 2015 年推荐的是 Kindle 然而也一直处于吃灰状态，没想到从 2019 年开始以微信读书为代表的电子阅读 APP 竟然成功跨平台至 Web 和电子水墨屏，优质的阅读体验并通过各种奖励降低用户阅读门槛，除了英文原版书籍没有 Kindle 丰富，在微信读书中我也可以看到越来越多的技术书籍，新的阅读方式让身处国外的小伙伴可以获得更多幸福感。随着国内在线教育在 2020 年疫情中的强势觉醒，也许又会开辟出更多新的契机。</p><p>微信读书 - <a href="https://weread.qq.com/" target="_blank" rel="noopener">https://weread.qq.com/</a></p><h2 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h2><blockquote><p>善用搜索引擎，穿过一堵墙你的知识面可能会更加立体</p></blockquote><p>Google - <a href="https://www.google.com/" target="_blank" rel="noopener">https://www.google.com/</a><br>Google Images - <a href="https://images.google.com/" target="_blank" rel="noopener">https://images.google.com/</a><br>Google Scholar - <a href="https://scholar.google.com/" target="_blank" rel="noopener">https://scholar.google.com/</a></p><ul><li>事实证明大多数情况下还是 Google 最懂我们的心</li></ul><p>WikipediA - <a href="https://www.wikipedia.org/" target="_blank" rel="noopener">https://www.wikipedia.org/</a></p><ul><li>试着把维基百科作为你的首选，弱化自己对于百度的依赖</li></ul><p>Forvo - <a href="https://zh.forvo.com/" target="_blank" rel="noopener">https://zh.forvo.com/</a></p><ul><li>妈妈再也不用担心我不会发音了，让 Forvo 来做你的发音指南</li></ul><h2 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h2><blockquote><p>黑客的思路往往让人眼前一亮，多向大牛们学习</p></blockquote><p>知道创宇研发技能表 - <a href="https://blog.knownsec.com/Knownsec_RD_Checklist/index.html" target="_blank" rel="noopener">https://blog.knownsec.com/Knownsec_RD_Checklist/index.html</a></p><ul><li>感谢 <a href="http://evilcos.me/" target="_blank" rel="noopener">@余弦</a></li></ul><p>纳威安全导航 - <a href="http://navisec.it/" target="_blank" rel="noopener">http://navisec.it/</a></p><ul><li>FreeBuf，i 春秋等都值得你多逛逛</li></ul><h2 id="订阅"><a href="#订阅" class="headerlink" title="订阅"></a>订阅</h2><blockquote><p>信息爆炸的时代如何过滤噪音很重要，少浪费些无价值的时间在游戏，微博，微信，头条，抖音等社交媒体，也许我们可以看见更多</p></blockquote><p>开发者头条 - <a href="https://toutiao.io/" target="_blank" rel="noopener">https://toutiao.io/</a></p><ul><li>码农周刊团队为程序员设计的阅读分享平台</li><li>掘金，奇舞周刊等也是类似的</li></ul><p>湾区日报 - <a href="https://wanqu.co/" target="_blank" rel="noopener">https://wanqu.co/</a></p><ul><li>关注创业与技术, 每天推送 5 篇优质英文文章</li><li>坚持向来不易，锻炼下英文阅读能力也不错哦</li></ul><h2 id="社区"><a href="#社区" class="headerlink" title="社区"></a>社区</h2><blockquote><p>Way to Explore &amp; Way too Extreme</p></blockquote><p>V2EX - <a href="http://www.v2ex.com/" target="_blank" rel="noopener">http://www.v2ex.com/</a></p><ul><li>一个与众不同的社区</li></ul><p>Stack Overflow - <a href="http://stackoverflow.com/" target="_blank" rel="noopener">http://stackoverflow.com/</a></p><ul><li>如果你使用 Google 相信会在这里看到不少高质量的答案</li></ul><p>PHPhub - <a href="https://phphub.org/" target="_blank" rel="noopener">https://phphub.org/</a></p><ul><li>PHPhub 是积极向上的 PHP &amp; Laravel 开发者社区</li></ul><p>Ruby China - <a href="https://ruby-china.org/" target="_blank" rel="noopener">https://ruby-china.org/</a></p><ul><li>中国 Ruby 社区，由众多爱好者共同维护，致力于构建完善的 Ruby 中文社区</li></ul><h2 id="微信订阅号"><a href="#微信订阅号" class="headerlink" title="微信订阅号"></a>微信订阅号</h2><p>小道消息 - WebNotes</p><ul><li>冯大辉的小道消息已经成为微信订阅号的标杆之一</li></ul><p>曹政 - caozsay</p><ul><li>曹大做为一个有故事的人，愿意分享更愿意交流，已经很难得了</li></ul><p>高效运维 - greatops</p><ul><li>萧田国组织维护的 “高效运维” 公众号每周多篇干货满满的原创好文</li></ul><p>神秘的程序员 - coderstory</p><ul><li>西乔和霍炬共同创作的程序员主题漫画，为生活添加一抹色彩</li></ul><h2 id="OJ"><a href="#OJ" class="headerlink" title="OJ"></a>OJ</h2><blockquote><p>ACM 和奥数类似属于有天赋的你们，但实际工作中更要注重学习方法和问题总结</p></blockquote><p>LeetCode - <a href="https://leetcode.com/" target="_blank" rel="noopener">https://leetcode.com/</a><br>力扣 - <a href="https://leetcode-cn.com/" target="_blank" rel="noopener">https://leetcode-cn.com/</a></p><ul><li>leetcode 是一个针对程序员的面试准备平台</li><li>在中国推出了独立的力扣</li></ul><p>牛客网 - <a href="http://www.nowcoder.com/" target="_blank" rel="noopener">http://www.nowcoder.com/</a></p><ul><li>一个新的专业 IT 笔试面试备考平台</li></ul><h2 id="信息聚合"><a href="#信息聚合" class="headerlink" title="信息聚合"></a>信息聚合</h2><blockquote><p>分享一些实用的技术学习路线</p></blockquote><p>Linux 就该这么学 - <a href="https://www.linuxprobe.com/docs/LinuxProbe.pdf" target="_blank" rel="noopener">https://www.linuxprobe.com/docs/LinuxProbe.pdf</a></p><ul><li>作者持续更新并开源精心制作的 Linux 文档，推荐优先学习作为基础铺垫</li><li>以前还会推荐《鸟哥的 Linux 私房菜》，但现在就是《Linux 就该这么学》</li></ul><p>InfoQ - <a href="https://www.infoq.com/" target="_blank" rel="noopener">https://www.infoq.com/</a></p><ul><li>促进软件开发领域知识与创新的传播</li><li>MacTalk - 池建强加入后还打造了《极客时间》</li></ul><p>菜鸟教程 - <a href="https://www.runoob.com/" target="_blank" rel="noopener">https://www.runoob.com/</a></p><ul><li>学的不仅是技术，更是梦想</li><li>同类型还有 w3school 等</li></ul><p>自强学堂 - <a href="https://code.ziqiangxuetang.com/" target="_blank" rel="noopener">https://code.ziqiangxuetang.com/</a></p><ul><li>感谢 @涂伟忠，Django 可是自强学堂的招牌教程</li></ul><p>优设 - <a href="https://hao.uisdc.com/" target="_blank" rel="noopener">https://hao.uisdc.com/</a></p><ul><li>以前很喜欢腾讯 CDC 的设计理念，现在老了只能偶尔瞅瞅</li></ul><p>VMware - <a href="http://www.vmware.com/cn/support/support-resources/pubs/" target="_blank" rel="noopener">http://www.vmware.com/cn/support/support-resources/pubs/</a></p><ul><li>没有贴图还能把虚拟化手册写得灰常清晰具有可操作性，VMware 必须得算一个</li><li>当然也推荐大家阅读 Microsoft，RedHat，Oracle 等官方帮助文档</li></ul><p>AWS - <a href="https://docs.aws.amazon.com/" target="_blank" rel="noopener">https://docs.aws.amazon.com/</a></p><ul><li>AWS 在公有云市场份额第一，虽然技术未必是最领先的但文档和用户体验都都得到大伙的认可</li><li>Google Cloud 和 Microsoft Azure 紧随其后，国内的阿里云 / 腾讯云也在奋起直追</li><li>云即未来</li></ul><h2 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h2><blockquote><p>推荐的 Blog 不多，希望大家找到适合自己的博客</p></blockquote><p>编程随想 - <a href="https://program-think.blogspot.com/" target="_blank" rel="noopener">https://program-think.blogspot.com/</a></p><ul><li>你应该了解一些真实的信息</li></ul><p>阮一峰 - <a href="http://www.ruanyifeng.com/" target="_blank" rel="noopener">http://www.ruanyifeng.com/</a></p><ul><li>坚持分享技术和生活的典范</li></ul><p>廖雪峰 - <a href="https://www.liaoxuefeng.com/" target="_blank" rel="noopener">https://www.liaoxuefeng.com/</a></p><ul><li>之前学 Python 的时候就是看廖雪峰的 Blog</li></ul><p>酷壳 - <a href="http://coolshell.cn/" target="_blank" rel="noopener">http://coolshell.cn/</a></p><ul><li>坚持更新技术类 Blog 的人或团队越来越少，这也是认真做事的态度</li></ul><h2 id="在线教育"><a href="#在线教育" class="headerlink" title="在线教育"></a>在线教育</h2><p>极客时间 - <a href="https://time.geekbang.org/" target="_blank" rel="noopener">https://time.geekbang.org/</a></p><ul><li>在线教育类网站很多，我不做太多推荐，极客时间是一个好产品，感谢 MacTalk - 池建强团队</li></ul><p>Coursera - <a href="https://www.coursera.org/" target="_blank" rel="noopener">https://www.coursera.org/</a></p><ul><li>在国外生活的同学几乎都会推荐的网络学习平台</li></ul><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><blockquote><p>还有很多需要耐心等待时间的验证</p></blockquote>]]></content>
    
    <summary type="html">
    
      DevOps是一段持续学习之旅
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Google Chrome 浏览器插件和油猴脚本推荐</title>
    <link href="https://wsgzao.github.io/post/chrome-extensions/"/>
    <id>https://wsgzao.github.io/post/chrome-extensions/</id>
    <published>2020-03-11T03:59:49.000Z</published>
    <updated>2020-03-13T07:03:19.338Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191022143419.jpg" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>到了新加坡再也不用考虑科学上网的问题，加上 macOS 跨平台浏览器做得比较成熟的自然是 Google Chrome 和 Firefox，在 Windows 平台用了十几年的 Maxthon，期间也尝试过无数第三方浏览器，傲游浏览器努力改变着世界却也渐行渐远，有着同样命运的应该还包括我从 M8 用到 MX2 的魅族吧。回到 Google Chrome 浏览器插件和油猴脚本推荐正题，Google Chrome 除了最重要的快以外，更重要的是 Chrome Web Store 上一系列好用插件，我很喜欢 Chrome 简单纯粹的设计和极致的性能。在插件的推荐上分为 <code>通用</code> 和 <code>开发者</code> 两部分来写方便区分，大部分 Chrome 可用的插件 Firefox 也同样适用，如果有遗漏或有更好用的同类型插件和脚本欢迎留言分享。</p><blockquote><p>Google Chrome 浏览器插件和油猴脚本推荐</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 03 月 11 日 - 增加 Remu、GitHub Repository Size、计时器掌控者、Clipboard History Pro<br>2019 年 10 月 09 日 - 更新 OneTab、简悦、广告终结者、Copyfish、Awesome screenshot and screen video<br>2019 年 08 月 20 日 - 添加自用部分插件和脚本，增加谷粒 Chrome 插件英雄榜<br>2019 年 08 月 01 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/chrome-extensions/">https://wsgzao.github.io/post/chrome-extensions/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://github.com/zhaoolee/ChromeAppHeroes" target="_blank" rel="noopener">谷粒 Chrome 插件英雄榜</a></p><p><a href="https://www.runningcheese.com/extensions" target="_blank" rel="noopener">Chrome Firefox 双修，2019 年度最喜欢浏览器拓展</a></p><p><a href="https://www.runningcheese.com/userscripts" target="_blank" rel="noopener">脚本里的 “赤兔”，2019 年度最喜欢油猴脚本</a></p><hr><h2 id="Chrome-插件推荐"><a href="#Chrome-插件推荐" class="headerlink" title="Chrome 插件推荐"></a>Chrome 插件推荐</h2><blockquote><p>以下链接大部分都是 Google Chrome Webstore，如果无法访问可以考虑从第三方下载到本地导入</p></blockquote><p><a href="https://chrome.google.com/webstore/category/extensions" target="_blank" rel="noopener">Chrome Web Store</a></p><p><a href="https://www.crx4chrome.com/" target="_blank" rel="noopener">Crx4Chrome</a></p><p><a href="https://chrome-extension-downloader.com/" target="_blank" rel="noopener">Chrome Extension Downloader</a></p><h3 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h3><p><a href="https://chrome.google.com/webstore/detail/simpleextmanager/kniehgiejgnnpgojkdhhjbgbllnfkfdk" target="_blank" rel="noopener">SimpleExtManager</a> - 我个人首推的管理插件小工具，对于插件控们一定灰常有帮助</p><p><a href="https://chrome.google.com/webstore/detail/ie-tab/hehijbfgiekmjfkfjpbkbammjbdenadd" target="_blank" rel="noopener">IE Tab</a> - 为了向下兼容那些没有与时俱进的网站，大多数时候我们只能选择妥协</p><p><a href="https://www.one-tab.com/" target="_blank" rel="noopener">OneTab</a> - 宣称节约 95% 内存的前提是静态网页，类似一个临时书签的记忆功能，习惯保留海量页面的朋友可以试试</p><p><a href="https://chrome.google.com/webstore/detail/undo-closed-tabs-button/ieehkmoiljghfkejgahoheemdjpdinml" target="_blank" rel="noopener">Undo Closed Tabs Button</a> - Google 原生取消了恢复网页的按钮的设计，你可以通过快捷键或者历史记录恢复，但这个小工具确实可以帮到我</p><p><a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener">Tampermonkey</a> - 老牌的油猴管理工具，和 Violentmonkey 暴力猴相比哪款用得顺手选择哪个</p><p><a href="https://chrome.google.com/webstore/detail/cdonnmffkdaoajfknoeeecmchibpmkmg?hl=en" target="_blank" rel="noopener">沙拉查词 - 聚合词典划词翻译</a> - 我个人觉得这是目前 Chrome 划词翻译插件中体验最好的</p><p><a href="https://chrome.google.com/webstore/detail/grammarly-for-chrome/kbfnbcaeplbcioakkpcpgfkobkghlhen" target="_blank" rel="noopener">Grammarly for Chrome</a> - 智能检查英文语法拼写错误，在 Web 写邮件和文档时会发现它的重要价值</p><p><a href="https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc" target="_blank" rel="noopener">Evernote Web Clipper</a> - 中文称为印象笔记，平时会把优质的内容保存到 Evernote 中，虽然没有 OneNote 功能强大但胜在简单方便可跨平台同步</p><p><a href="https://chrome.google.com/webstore/detail/simpread-reader-view/ijllcpnolfcooahcekpamkbidhejabll" target="_blank" rel="noopener">简悦 - SimpRead</a> - 沉浸式阅读模式，还支持丰富的导出功能比如 Markdown/PDF 等</p><p><a href="https://chrome.google.com/webstore/detail/enable-right-click/gpeddepmnbmkjfnhifmggnjdggibjjkf" target="_blank" rel="noopener">破解右键锁</a> - 比 Enable Copy 更加强大，不过大众点评的评论好像无解</p><p><a href="https://clipboardextension.com/" target="_blank" rel="noopener">Clipboard History Pro</a> - 借助 Google Chrome 浏览器扩展记录剪贴板历史的小工具</p><p><a href="https://chrome.google.com/webstore/detail/mbklgpngoohbbagagdfoccaclpdhgihd" target="_blank" rel="noopener">爱搜资源云盘助手</a> - 插件方便是方便，但是可能会涉及用户隐私数据，如果介意需要慎用类似插件</p><p><a href="https://chrome.google.com/webstore/detail/awesome-screenshot-screen/nlipoenfbbikpbjkfpfillcgkoblgpmj" target="_blank" rel="noopener">Awesome screenshot and screen video</a> - 网页截图 + 录屏，代替 FireShot</p><p><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="noopener">Proxy SwitchyOmega</a> - 轻松快捷地管理和切换多个代理设置</p><p><a href="https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm" target="_blank" rel="noopener">uBlock Origin</a> - 类似 Adblock Plus(ABP)，用于代替一款高效的网络请求过滤工具，占用极低的内存和 CPU，推荐额外添加适合自己的规则效果更佳，国内用户可以安装配置更简单的广告终结者</p><h3 id="开发者"><a href="#开发者" class="headerlink" title="开发者"></a>开发者</h3><p><a href="https://github.com/jaywcjlove/oscnews" target="_blank" rel="noopener">oscnews</a> - jaywcjlove 制作的新插件，目前我的主要用途是辅助新建标签页浏览开源中国更新资讯和 GitHub 趋势榜，从作者 TODO 计划来看，Github Start 管理和集成 octotree 部分功能都非常吸引人，加油</p><p><a href="https://github.com/zenghongtu/Remu" target="_blank" rel="noopener">Remu</a> - 通过标签分类来对 GitHub Stars 进行高效管理，借助 Gists 强大能力实现跨平台的数据同步</p><p><a href="https://github.com/harshjv/github-repo-size" target="_blank" rel="noopener">GitHub Repository Size</a> - 顾名思义，可以查看 GitHub 中某个 Repo 的大小，是一个小巧实用的工具</p><p><a href="https://github.com/zxlie/FeHelper" target="_blank" rel="noopener">FeHelper</a> - WEB 前端助手，All In One 的一个工具，包含多个独立小应用，比如：Json 工具、代码美化、代码压缩、二维码、Postman、markdown、网页油猴、便签笔记、信息加密与解密、随机密码生成、Crontab 等等</p><p><a href="https://github.com/openstyles/stylus" target="_blank" rel="noopener">Stylus</a> - Stylus 是基于 Stylish 调整网页外观的用户样式管理器</p><p><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc" target="_blank" rel="noopener">Octotree</a> - 在 GitHub 上显示代码树</p><p><a href="http://www.pullywood.com/ImageAssistant/" target="_blank" rel="noopener">ImageAssistant</a> - 国人开发的图片助手 (ImageAssistant) 批量图片下载器</p><p><a href="https://github.com/BlackGlory/copycat" target="_blank" rel="noopener">Copycat</a> - 我主要是为了复制网页直接转化为 markdown</p><p><a href="https://ocr.space/copyfish" target="_blank" rel="noopener">Copyfish</a> - 免费版已经支持中文和英文的 OCR 在线识别，够用且准确</p><p><a href="https://github.com/oppoic/JSONViewer/" target="_blank" rel="noopener">JSONViewer</a> - 一个页面格式化多条 JSON，提升工作效率</p><p><a href="https://github.com/gildas-lormeau/SingleFile" target="_blank" rel="noopener">SingleFile</a> - 将完整的页面保存到一个 HTML 文件中</p><p><a href="https://www.uku.im" target="_blank" rel="noopener">Unblock Youku</a> - 我平时很少看国内在线视频，不过这款良心插件已经坚持了 5 年，作者不容易。如果速度不稳定大家也可以购买国内的阿里云、腾讯云等，我始终相信云即未来</p><p><a href="https://github.com/vinta/pangu.js" target="_blank" rel="noopener">为什么你们就是不能加个空格呢？</a> - 对文字排版有强迫症的福音吧</p><p><a href="https://github.com/sciooga/v2ex-plus" target="_blank" rel="noopener">v2ex plus</a> - 可能是 v2ex 最好用的扩展</p><h2 id="油猴脚本推荐"><a href="#油猴脚本推荐" class="headerlink" title="油猴脚本推荐"></a>油猴脚本推荐</h2><blockquote><p>我个人的选择是 TemperMoneky &gt; ViolentMoneky</p></blockquote><p><a href="https://www.tampermonkey.net" target="_blank" rel="noopener">Tampermonkey</a> - Tampermonkey 是一款免费的浏览器扩展和最为流行的用户脚本管理器</p><p><a href="https://greasyfork.org/zh-CN" target="_blank" rel="noopener">Greasy Fork</a> - 这里是一个提供用户脚本的网站</p><h3 id="通用-1"><a href="#通用-1" class="headerlink" title="通用"></a>通用</h3><p><a href="https://greasyfork.org/zh-CN/scripts/329484" target="_blank" rel="noopener">豆瓣资源下载大师</a> - 装这一个脚本就够了！可能是你遇到的最好的豆瓣增强脚本</p><p><a href="https://greasyfork.org/zh-CN/scripts/370634" target="_blank" rel="noopener">懒人专用，自用组合型多功能脚本</a> - 为避免争议，各位可以阅读脚本描述后决定是否使用</p><p><a href="https://greasyfork.org/zh-CN/scripts/372673" target="_blank" rel="noopener">计时器掌控者</a> - 控制网页计时器速度 | 加速跳过页面计时广告 | 视频快进（慢放）| 跳过广告 | 支持几乎所有网页</p><p><a href="https://greasyfork.org/zh-CN/scripts/25718" target="_blank" rel="noopener">解除 B 站区域限制</a> - 通过替换获取视频地址接口的方式，实现解除 B 站区域限制</p><p><a href="https://tiansh.github.io/yawf/" target="_blank" rel="noopener">YAWF</a> - 新浪微博根据关键词、作者、话题、来源等过滤微博，清理版面，以及其他改造功能</p><p><a href="https://tiansh.github.io/us-else/zhihu_visitor/" target="_blank" rel="noopener">知乎免登录</a> - 如题</p><p><a href="https://greasyfork.org/zh-CN/scripts/20431" target="_blank" rel="noopener">知乎真实链接地址重定向</a> - 让知乎网页中的站外链接直接跳转至目标网址，而不经过一个二次跳转页面。重定向处理将会在点击链接瞬间自动触发</p><p><a href="https://greasyfork.org/zh-CN/scripts/367724" target="_blank" rel="noopener">知乎、简书、csdn、实验楼剪切板消毒</a></p><h3 id="开发者-1"><a href="#开发者-1" class="headerlink" title="开发者"></a>开发者</h3><blockquote><p>不解释，大伙都是为了努力学习新知识，但你值得拥有一种更舒服的姿势</p></blockquote><p><a href="https://greasyfork.org/zh-CN/scripts/23840" target="_blank" rel="noopener">大人的 Greasyfork</a></p><p><a href="https://sleazyfork.org/zh-CN/scripts/25781" target="_blank" rel="noopener">JAV 老司机</a></p><p><a href="https://greasyfork.org/zh-CN/scripts/23316" target="_blank" rel="noopener">琉神转</a></p>]]></content>
    
    <summary type="html">
    
      Google Chrome浏览器插件和油猴脚本推荐
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>MacBook macOS 从小白到入门</title>
    <link href="https://wsgzao.github.io/post/macbook/"/>
    <id>https://wsgzao.github.io/post/macbook/</id>
    <published>2020-03-10T08:59:49.000Z</published>
    <updated>2020-03-11T04:45:52.855Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="https://i.v2ex.co/y2JB0IAD.png" alt=""></p><p>这里做下 MacBook macOS 从小白到入门的持续更新记录</p><blockquote><p>MacBook macOS 从小白到入门</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 03 月 10 日 - 增加 eZip/PicGo/GifCapture/iShot<br>2019 年 11 月 21 日 - 增加 macOS 生产力工具链推荐<br>2019 年 03 月 16 日 - 更新 macOS vim 语法高亮的设置方法<br>2019 年 02 月 28 日 - 更新 macOS 开启关闭 SIP<br>2019 年 01 月 24 日 - 增加开启 HiDPI 和解决黑屏问题<br>2018 年 10 月 19 日 - 更新升级 macOS Mojave 后的各种小问题解决方法<br>2018 年 07 月 25 日 - 补充细节<br>2018 年 07 月 05 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/macbook/">https://wsgzao.github.io/post/macbook/</a></p><p><strong> 扩展阅读 </strong></p><p>Awesome Mac - <a href="http://wangchujiang.com/awesome-mac/index.zh.html" target="_blank" rel="noopener">http://wangchujiang.com/awesome-mac/index.zh.html</a><br>BestApp - <a href="https://github.com/hzlzh/Best-App" target="_blank" rel="noopener">https://github.com/hzlzh/Best-App</a><br><a href="https://github.com/Louiszhai/tool" target="_blank" rel="noopener">开发效率提升：Mac 生产力工具链推荐</a></p><hr><h2 id="System-Preferences"><a href="#System-Preferences" class="headerlink" title="System Preferences"></a>System Preferences</h2><blockquote><p>在任何的操作系统中，首先你需要做一件事就是更新系统，点击窗口左上角的  &gt; 关于本机 &gt; 软件更新 。此外，如果这是一部新的电脑，你还需要到系统设置进行一些适当调整。如何调整，取决于个人喜好。</p></blockquote><h3 id="触控板"><a href="#触控板" class="headerlink" title="触控板"></a>触控板</h3><p>系统设置 &gt; 触控板</p><p>光标与点击</p><ul><li>轻拍来点按</li><li>辅助点按</li><li>查找</li><li>三指拖移</li></ul><p>滚动缩放</p><ul><li>默认全选</li></ul><p>更多手势</p><ul><li>默认全选</li></ul><h3 id="Dock"><a href="#Dock" class="headerlink" title="Dock"></a>Dock</h3><p>置于屏幕上的位置：左边<br>设置 Dock 图标更小（大小随个人喜好）</p><ul><li>自动显示和隐藏 Dock</li></ul><h3 id="Finder"><a href="#Finder" class="headerlink" title="Finder"></a>Finder</h3><p>Finder &gt; 显示</p><ul><li>显示标签页栏</li><li>显示路径栏</li><li>显示状态栏</li><li>自定工具栏 &gt; 去除所有按钮，仅剩搜索栏</li></ul><p>Finder &gt; 偏好设置</p><p>通用</p><ul><li>开启新 Finder 窗口时打开：HOME「用户名」目录</li></ul><p>边栏</p><ul><li>添加 HOME「用户名」目录 和 创建代码文件目录</li><li>将 共享的(shared) 和 标记(tags) 目录去掉</li></ul><h3 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h3><ul><li>去掉蓝牙等无需经常使用的图标</li><li>将电池显示设置为百分比</li></ul><h3 id="Spotlight"><a href="#Spotlight" class="headerlink" title="Spotlight"></a>Spotlight</h3><ul><li>去掉字体和书签与历史记录等不需要的内容</li><li>设置合适的快捷键</li></ul><h3 id="互联网帐户"><a href="#互联网帐户" class="headerlink" title="互联网帐户"></a>互联网帐户</h3><ul><li>添加 iCloud 用户，同步日历，联系人和 Find my mac 等等</li></ul><h3 id="English"><a href="#English" class="headerlink" title="English"></a>English</h3><p>Trackpad</p><ul><li>Tap to click</li></ul><p>Accessibility -&gt; Mouse &amp; Trackpad -&gt; Trackpad Options</p><ul><li>Enable dragging | three finger drag</li></ul><p>Language &amp; Region</p><ul><li>Time format | 24-Hour Time</li><li>click add button | Chinese, Simplified</li></ul><p>Language &amp; Region -&gt; Keyboard Preferences -&gt; Shortcuts -&gt; Input Sources</p><ul><li>Select the previous input source</li></ul><p>Display -&gt; Arrangement</p><ul><li>Drag the graphics and just make what you want</li><li>if the display rotates 90 degrees then change Rotation to 90° or 270° and click confirm button to save</li></ul><h2 id="Mac-键盘快捷键"><a href="#Mac-键盘快捷键" class="headerlink" title="Mac 键盘快捷键"></a>Mac 键盘快捷键</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191122174620.png" alt=""></p><table><thead><tr><th style="text-align:center">Symbol</th><th style="text-align:center">Key</th></tr></thead><tbody><tr><td style="text-align:center">&#8984;</td><td style="text-align:center">Command Key</td></tr><tr><td style="text-align:center">&#8963;</td><td style="text-align:center">Control Key</td></tr><tr><td style="text-align:center">&#8997;</td><td style="text-align:center">Option Key</td></tr><tr><td style="text-align:center">&#8679;</td><td style="text-align:center">Shift Key</td></tr></tbody></table><blockquote><p>我自己常用的快捷键</p></blockquote><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>Command(⌘)-C</td><td>复制</td></tr><tr><td>Command(⌘)-V</td><td>粘贴</td></tr><tr><td>Command(⌘)-Z</td><td>撤销</td></tr><tr><td>Command(⌘)-Option-V</td><td>剪切粘贴</td></tr><tr><td>Command(⌘)-A</td><td>全选</td></tr><tr><td>Command(⌘)-F</td><td>查找</td></tr><tr><td>Command(⌘)-S</td><td>保存</td></tr><tr><td>Command(⌘)-W</td><td>关闭当前窗口</td></tr><tr><td>Command(⌘)- 空格键</td><td>聚焦</td></tr><tr><td>Command(⌘)- 方向左键</td><td>后退</td></tr><tr><td>Command(⌘)- 方向右键</td><td>前进</td></tr><tr><td>Control-A</td><td>移至行或段落的开头</td></tr><tr><td>Control-E</td><td>移至行或段落的末尾</td></tr><tr><td>Control - 空格键</td><td>切换输入法（需要手动设置）</td></tr><tr><td>Control-Command-Q</td><td>系统自带锁屏快捷键</td></tr><tr><td>Option-Command-C</td><td>复制文件路径，当然也可以直接拖拽到命令行</td></tr></tbody></table><p><a href="https://support.apple.com/zh-cn/HT201236" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT201236</a></p><h2 id="Mac-Soft"><a href="#Mac-Soft" class="headerlink" title="Mac Soft"></a>Mac Soft</h2><p>Homebrew - Mac 下必备的包管理工具<br><a href="https://brew.sh/" target="_blank" rel="noopener">https://brew.sh/</a></p><p>Alfred - Mac 下被无数人安利的效率工具，虽然我觉得 Spotlight 暂时够用了<br><a href="https://www.alfredapp.com/" target="_blank" rel="noopener">https://www.alfredapp.com/</a></p><p>Mounty for NTFS - 免费的 NTFS 支持软件<br><a href="http://enjoygineering.com/mounty/" target="_blank" rel="noopener">http://enjoygineering.com/mounty/</a><br><a href="https://www.seagate.com/sg/en/support/software/paragon/#downloads" target="_blank" rel="noopener">Seagate</a></p><p>Sougou Input - 陪伴大家多年的搜狗输入法<br><a href="https://pinyin.sogou.com/mac/" target="_blank" rel="noopener">https://pinyin.sogou.com/mac/</a></p><p>Visual Studio Code - 代替 JetBrains 重型武器<br><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p><p>Youdao Dict - 网易开发的老牌翻译工具<br><a href="http://cidian.youdao.com/index-mac.html" target="_blank" rel="noopener">http://cidian.youdao.com/index-mac.html</a></p><p>Adobe Reader - Adobe 官方免费的 PDF 阅读工具<br><a href="https://get.adobe.com/reader/" target="_blank" rel="noopener">https://get.adobe.com/reader/</a></p><p>Clearview - 支持 PDF, EPUB, CHM, MOBI 的免费阅读器<br><a href="https://itunes.apple.com/app/clearview/id557090104?mt=12&amp;ls=1" target="_blank" rel="noopener">https://itunes.apple.com/app/clearview/id557090104?mt=12&amp;ls=1</a></p><p>Evernote - 轻量级的在线笔记类应用内<br><a href="https://evernote.com/" target="_blank" rel="noopener">https://evernote.com/</a></p><p>Dropbox - 最佳的实时同步工具之一<br><a href="https://www.dropbox.com/" target="_blank" rel="noopener">https://www.dropbox.com/</a></p><p>eZip - 国人编写的转为 macOS 而设计的压缩软件，代替 Keka<br><a href="https://ezip.awehunt.com/" target="_blank" rel="noopener">https://ezip.awehunt.com/</a></p><p>Mac 迅雷 - 支持协议多广告也多，FOLX、Free Download Manager、qBittorrent 都可以作为备选方案<br><a href="http://mac.xunlei.com/" target="_blank" rel="noopener">http://mac.xunlei.com/</a></p><p>百度网盘 - 国内的网盘共享基本只剩下百度一家独大了，有时候迅雷离线无法下载可以尝试<br><a href="https://pan.baidu.com/" target="_blank" rel="noopener">https://pan.baidu.com/</a></p><p>IINA - 国人编写的开源视频播放器，备选重新复活的射手影音<br><a href="https://lhc70000.github.io/iina/" target="_blank" rel="noopener">https://lhc70000.github.io/iina/</a></p><p>PicGo - 国人开发的开源图片上传工具，我 Blog 中使用的图片就是基于 GitHub 的图床<br><a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo</a></p><p>GifCapture - 开源的 GIF 录制工具<br><a href="https://github.com/onmyway133/GifCapture" target="_blank" rel="noopener">https://github.com/onmyway133/GifCapture</a></p><p>iShot - 或许是最好的截图软件，超越了 Snipaste 和 Xnip<br><a href="https://www.better365.cn/" target="_blank" rel="noopener">https://www.better365.cn/</a></p><p>FileZilla - 免费开源的 FTP/SFTP 应用<br><a href="https://filezilla-project.org/download.php?type=client" target="_blank" rel="noopener">https://filezilla-project.org/download.php?type=client</a></p><p>Clipy - 记录多条粘贴板小工具<br><a href="https://github.com/Clipy/Clipy" target="_blank" rel="noopener">https://github.com/Clipy/Clipy</a></p><p>Spectacle - 快速调整程序窗口位置的效率工具<br><a href="https://www.spectacleapp.com/" target="_blank" rel="noopener">https://www.spectacleapp.com/</a></p><p>Sourcetree - 图形化 Git 管理工具<br><a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener">https://www.sourcetreeapp.com/</a></p><p>Microsoft Remote Desktop - Mac 下的微软 RDP 远程桌面登录工具<br><a href="https://itunes.apple.com/us/app/microsoft-remote-desktop-10/id1295203466?mt=12" target="_blank" rel="noopener">https://itunes.apple.com/us/app/microsoft-remote-desktop-10/id1295203466?mt=12</a></p><p>VirtualBox - 免费的虚拟机工具<br><a href="http://www.oracle.com/technetwork/server-storage/virtualbox/downloads/index.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/server-storage/virtualbox/downloads/index.html</a></p><p>PostMan - 免费强大的 HTTP 调试工具<br><a href="https://www.getpostman.com/" target="_blank" rel="noopener">https://www.getpostman.com/</a></p><p>网易 MuMu - Android 模拟器<br><a href="https://mumu.163.com/" target="_blank" rel="noopener">https://mumu.163.com/</a></p><p>VMware OS Optimization Tool - VMware 开发的 Windows 虚拟机优化工具<br><a href="https://labs.vmware.com/flings/vmware-os-optimization-tool" target="_blank" rel="noopener">https://labs.vmware.com/flings/vmware-os-optimization-tool</a></p><h3 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h3><p><a href="https://docs.brew.sh/Installation" target="_blank" rel="noopener">https://docs.brew.sh/Installation</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install xcode first</span></span><br><span class="line">https://itunes.apple.com/us/app/xcode/id497799835</span><br><span class="line"></span><br><span class="line"><span class="comment"># install homebrew</span></span><br><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># install packages</span></span><br><span class="line">brew tap dteoh/sqa</span><br><span class="line">brew install zsh</span><br><span class="line">brew install wget</span><br><span class="line">brew install git</span><br><span class="line"><span class="comment"># default install is python3 now, if you need python2 just run `brew install python2`</span></span><br><span class="line">brew install python</span><br></pre></td></tr></table></figure><h3 id="iTerm2-zsh-Oh-My-Zsh"><a href="#iTerm2-zsh-Oh-My-Zsh" class="headerlink" title="iTerm2 + zsh + Oh My Zsh"></a>iTerm2 + zsh + Oh My Zsh</h3><p>iTerm2<br><a href="https://www.iterm2.com/" target="_blank" rel="noopener">https://www.iterm2.com/</a></p><p>Oh My Zsh<br><a href="http://ohmyz.sh/" target="_blank" rel="noopener">http://ohmyz.sh/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install latest zsh zsh-syntax-highlighting</span></span><br><span class="line">brew install zsh zsh-syntax-highlighting</span><br><span class="line"><span class="comment"># 修改默认 shell，在 /etc/shells 文件中加入如下一行</span></span><br><span class="line">vi /etc/shells</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/bin/zsh</span><br><span class="line"><span class="comment"># 然后运行命令切换 shell</span></span><br><span class="line">chsh -s /usr/<span class="built_in">local</span>/bin/zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># install oh-my-zsh</span></span><br><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改主题为 agnoster，增加一行 zsh-syntax-highlighting</span></span><br><span class="line">vi ~/.zshrc</span><br><span class="line"></span><br><span class="line">ZSH_THEME=<span class="string">"agnoster"</span></span><br><span class="line"><span class="built_in">source</span> /usr/<span class="built_in">local</span>/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可选增加 visual studio code 命令行 code 支持 zsh</span></span><br><span class="line"><span class="keyword">function</span> code &#123;</span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$#</span> = 0 ]]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        open -a <span class="string">"Visual Studio Code"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">local</span> argPath=<span class="string">"<span class="variable">$1</span>"</span></span><br><span class="line">        [[ <span class="variable">$1</span> = /* ]] &amp;&amp; argPath=<span class="string">"<span class="variable">$1</span>"</span> || argPath=<span class="string">"<span class="variable">$PWD</span>/<span class="variable">$&#123;1#./&#125;</span>"</span></span><br><span class="line">        open -a <span class="string">"Visual Studio Code"</span> <span class="string">"<span class="variable">$argPath</span>"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决 Too many files open error</span></span><br><span class="line"><span class="built_in">ulimit</span> -n 10000</span><br><span class="line"><span class="built_in">ulimit</span> -u 2048</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新环境变量</span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 powerline 字体</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git</span><br><span class="line"><span class="built_in">cd</span> fonts</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure><blockquote><p>配置 iTerm2 主题，主题可以从 iterm2colorschemes 下载</p></blockquote><p><a href="https://iterm2colorschemes.com/" target="_blank" rel="noopener">https://iterm2colorschemes.com/</a></p><ol><li>Download iTerm2 color you like</li><li>Open iTerm2 that we already downloaded at the first section</li><li>Go to iTerm2 &gt; Preferences &gt; Profiles &gt; Colors Tab</li><li>Click Color Presets at the bottom right</li><li>Click Import</li><li>Select the *.itermcolors file</li><li>Select the * from Load Presets</li></ol><p>在 Keys -&gt; Hotkey 中设置 <code>command + i</code> 快速显示和隐藏 iTerm<br>在 Profiles -&gt; Default -&gt; Colors -&gt; Load Presets 导入主题，作为默认颜色，我的主题是 <code>3024 Night</code><br>在 Profiles -&gt; Text -&gt; Change Font 调整字体 / 大小 / 颜色等，我的字体是 <code>18pt Ubuntu Mono derivative Powerline</code></p><p>macOS 使用笔记：终端配置 - <a href="http://lizhiqiang.me/mac_terminal/" target="_blank" rel="noopener">http://lizhiqiang.me/mac_terminal/</a><br>打造 Mac 下高颜值好用的终端环境 - <a href="https://blog.biezhi.me/2018/11/build-a-beautiful-mac-terminal-environment.html" target="_blank" rel="noopener">https://blog.biezhi.me/2018/11/build-a-beautiful-mac-terminal-environment.html</a></p><blockquote><p>macOS vim 语法高亮的设置方法</p></blockquote><p>打开 terminal 复制 /usr/share/vim/vimrc 到家目录下并重命名为 “.vimrc”, 然后编辑该文件，增加以下几行：</p><p>VimConfig - <a href="https://vimconfig.com/" target="_blank" rel="noopener">https://vimconfig.com/</a><br>My .vimrc - <a href="https://chrisyeh96.github.io/2017/12/18/vimrc.html" target="_blank" rel="noopener">https://chrisyeh96.github.io/2017/12/18/vimrc.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/share/vim/vimrc ~/.vimrc</span><br><span class="line"><span class="built_in">set</span> ai                  <span class="string">"auto indenting</span></span><br><span class="line"><span class="string">set ruler"</span> show the cursor position</span><br><span class="line"><span class="built_in">set</span> hlsearch            <span class="string">"highlight the last searched term</span></span><br><span class="line"><span class="string">set history=1000"</span> keep 1000 lines of <span class="built_in">history</span></span><br><span class="line">syntax on               <span class="string">"syntax highlighting</span></span><br><span class="line"><span class="string">filetype plugin on"</span> use the file <span class="built_in">type</span> plugins</span><br></pre></td></tr></table></figure><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><h3 id="升级-macOS-Mojave-新版卡顿黑屏和字体发虚解决方案"><a href="#升级-macOS-Mojave-新版卡顿黑屏和字体发虚解决方案" class="headerlink" title="升级 macOS Mojave 新版卡顿黑屏和字体发虚解决方案"></a>升级 macOS Mojave 新版卡顿黑屏和字体发虚解决方案</h3><blockquote><p>输入文字卡顿</p></blockquote><p>如果你的 Mac 已经更新至 macOS Mojave，在输入文字时经常卡顿，频繁出现小风车，那很有可能是搜狗输入法造成的，只需将它升级至最新的 4.8.0 版本，即可完美解决。</p><blockquote><p>字体发虚</p></blockquote><p>升级 macOS Mojave 新系统后，苹果默认关闭了子像素抗锯齿，导致字体变细锯齿增多。<br>解决字体渲染过细，打开终端，输入：</p><pre><code>defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO</code></pre><p>重启应用比如 VS Code 后即可看到效果</p><blockquote><p>开启 HiDPI</p></blockquote><p>如果外接显示器字体模糊，可以使用 Scale Resolutions<br>Display Override PropertyList File Parser and Generator with HiDPI support</p><p><a href="https://comsysto.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/" target="_blank" rel="noopener">https://comsysto.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/</a></p><p>Enable HiDPI on OS X - <a href="https://github.com/syscl/Enable-HiDPI-OSX" target="_blank" rel="noopener">https://github.com/syscl/Enable-HiDPI-OSX</a></p><blockquote><p>解决唤醒时黑屏只看见鼠标的问题</p></blockquote><p>先关机，然后开机快速同时点击 Command + S 按键进入 single-user 单用户模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/sbin/fsck -fy</span><br><span class="line">/sbin/mount -uw /</span><br><span class="line">rm -f /Library/Preferences/com.apple.loginwindow.plist</span><br><span class="line">rm -f /var/db/.AppleUpgrade</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="解决-Command-Q-经常误按"><a href="#解决-Command-Q-经常误按" class="headerlink" title="解决 Command+Q 经常误按"></a>解决 Command+Q 经常误按</h3><p>Slow Quit Apps</p><p>A macOS app that adds a global delay of 1 second to the Cmd-Q shortcut. In other words, you have to hold down Cmd-Q for 1 second before an application will quit.</p><p>When the delay is active, an overlay is drawn at the center of the screen.</p><p><a href="https://github.com/dteoh/SlowQuitApps" target="_blank" rel="noopener">https://github.com/dteoh/SlowQuitApps</a></p><p>brew cask install slowquitapps</p><p>运行程序按照提示授权后重启应用并设置开机自启动即可享受 1s 延迟关闭提醒，如果觉得时间不够长可以自己设定</p><h3 id="提示应用程序被破坏无法打开"><a href="#提示应用程序被破坏无法打开" class="headerlink" title="提示应用程序被破坏无法打开"></a>提示应用程序被破坏无法打开</h3><blockquote><p>SOLVED: “Application” is damaged and can’t be opened in macOS Sierra</p></blockquote><pre><code>sudo spctl --master-disable</code></pre><p>输入密码重新打开 System Preferences &gt; Security &amp; Privacy &gt; General 即可看到之前隐藏的“Anywhere”<br><a href="https://www.santoshsrinivas.com/disable-gatekeeper-in-macos-sierra/" target="_blank" rel="noopener">https://www.santoshsrinivas.com/disable-gatekeeper-in-macos-sierra/</a></p><blockquote><p>macOS High Seirra 提示 “已损坏，打不开，您应该将它移至垃圾篓”</p></blockquote><p>这是因为在系统偏好设置的 “安全性与隐私” 里面的 “允许从以下位置下载的应用” 没有选中“任何来源”，解决方法如下：</p><ol><li>打开终端，然后输入以下命令：sudo spctl –master-disable</li><li>然后回车，输入系统密码并回车（这里输入密码不会显示，输完密码直接回车即可），如果没有提示即操作成功。</li><li>打开系统偏好设置的 “安全性与隐私”，查看“允许从以下位置下载的应用” 是否选中的是“任何来源”，如果选中说明操作成功。这时再打开软件安装就没有已损坏的提示的了。</li></ol><h3 id="macOS-开启关闭-SIP"><a href="#macOS-开启关闭-SIP" class="headerlink" title="macOS 开启关闭 SIP"></a>macOS 开启关闭 SIP</h3><p>S1. 查看 SIP 状态<br>在终端中输入 csrutil status，就可以看到是 enabled 还是 disabled。</p><p>S2. 关闭 SIP</p><ol><li>重启 MAC，按住 cmd+R 直到屏幕上出现苹果的标志和进度条，进入 Recovery 模式；</li><li>在屏幕最上方的工具栏找到实用工具（左数第 3 个），打开终端，输入：csrutil disable；</li><li>关掉终端，重启 mac；</li><li>重启以后可以在终端中查看状态确认。</li></ol><p>S3. 开启 SIP<br>与关闭的步骤类似，只是在 S2 中输入 csrutil enable 即可。</p><h3 id="更改-Apple-ID-国家或地区"><a href="#更改-Apple-ID-国家或地区" class="headerlink" title="更改 Apple ID 国家或地区"></a>更改 Apple ID 国家或地区</h3><blockquote><p>区域在国内即使身在国外也看不到你需要的很多东东，建议修改</p></blockquote><p><a href="https://support.apple.com/zh-cn/ht201389" target="_blank" rel="noopener">https://support.apple.com/zh-cn/ht201389</a></p><h3 id="USB-Type-C-耳机"><a href="#USB-Type-C-耳机" class="headerlink" title="USB Type-C 耳机"></a>USB Type-C 耳机</h3><ol><li>插入耳机至任意 USB Type-C 接口</li><li>System Preferences -&gt; Sound -&gt; Output -&gt; 选择识别到的耳机设备即可</li></ol><h3 id="Macbook-外置键盘如何更改设置"><a href="#Macbook-外置键盘如何更改设置" class="headerlink" title="Macbook 外置键盘如何更改设置"></a>Macbook 外置键盘如何更改设置</h3><p>option 改成 command（win 版键盘下的四个方块图标按键）<br>command 改成 option</p><p><a href="https://jingyan.baidu.com/article/363872ec2185346e4aa16f61.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/363872ec2185346e4aa16f61.html</a></p><h3 id="配置从命令提示行启动-vscode"><a href="#配置从命令提示行启动-vscode" class="headerlink" title="配置从命令提示行启动 vscode"></a>配置从命令提示行启动 vscode</h3><p>安装 Visual Studio Code，打开命令面板（按 F1 或 command + shift + p）输入 Shell 命令找到 Shell 命令: 在 PATH 中安装 “code” 命令。命令执行完成之后，重启终端工具使新的 $PATH 可用。现在，您可以简单地在终端中任意文件夹下输入‘code .’来编辑该文件夹下的文件了。</p><h3 id="Git-Ignore"><a href="#Git-Ignore" class="headerlink" title="Git Ignore"></a>Git Ignore</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个新文件 ~/.gitignore ，并将以下内容添加进去，这样全部 git 仓库将会忽略以下内容所提及的文件。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Folder view configuration files</span></span><br><span class="line">.DS_Store</span><br><span class="line">Desktop.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># Thumbnail cache files</span></span><br><span class="line">._*</span><br><span class="line">Thumbs.db</span><br><span class="line"></span><br><span class="line"><span class="comment"># Files that might appear on external disks</span></span><br><span class="line">.Spotlight-V100</span><br><span class="line">.Trashes</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compiled Python files</span></span><br><span class="line">*.pyc</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compiled C++ files</span></span><br><span class="line">*.out</span><br><span class="line"></span><br><span class="line"><span class="comment"># Application specific files</span></span><br><span class="line">venv</span><br><span class="line">node_modules</span><br><span class="line">.sass-cache</span><br><span class="line"></span><br><span class="line"><span class="comment"># Temp File</span></span><br><span class="line">*.swp</span><br><span class="line">*.swa</span><br><span class="line">*.swo</span><br><span class="line"></span><br><span class="line"><span class="comment"># github merge file</span></span><br><span class="line">*.orig</span><br><span class="line"></span><br><span class="line"><span class="comment">#vscode </span></span><br><span class="line">.vscode</span><br></pre></td></tr></table></figure><h3 id="禁止-DS-store-生成"><a href="#禁止-DS-store-生成" class="headerlink" title="禁止. DS_store 生成"></a>禁止. DS_store 生成</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 禁止 .DS_store 生成，打开“终端”，复制黏贴下面的命令，回车执行，重启 Mac 即可生效。</span></span><br><span class="line">defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE</span><br><span class="line"><span class="comment"># 恢复 .DS_store 生成</span></span><br><span class="line">defaults delete com.apple.desktopservices DSDontWriteNetworkStores</span><br><span class="line"><span class="comment"># 刪除已存在的. DS_Store</span></span><br><span class="line">sudo find . -name <span class="string">".DS_Store"</span> -depth -<span class="built_in">exec</span> rm &#123;&#125; \;</span><br></pre></td></tr></table></figure><h3 id="ssh-相关"><a href="#ssh-相关" class="headerlink" title="ssh 相关"></a>ssh 相关</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -bash: warning: setlocale: LC_CTYPE: cannot change locale (UTF-8): No such file or directory</span></span><br><span class="line"><span class="comment"># 禁止 OpenSSH 客户端从 OS X/Linux/Unix 桌面发送 LC_* 变量</span></span><br><span class="line">vi /etc/ssh/ssh_config</span><br><span class="line"><span class="comment">#SendEnv LANG LC_*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># port forwarding</span></span><br><span class="line">ssh -p 22202 wangao@127.0.0.1</span><br><span class="line">ssh -p 22202 wangao@127.0.0.1 -X</span><br><span class="line">scp -P 22202 -r sysctl.sh sysctl.d/ wangao@127.0.0.1:/tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># ssh tunnel for one-time</span></span><br><span class="line">ssh -t -A wangao@xx.xx.xx.xx ssh wangao@10.65.32.60</span><br><span class="line"></span><br><span class="line"><span class="comment"># config ssh tunnel to make easy connect everyday</span></span><br><span class="line">vim ~/.ssh/config</span><br><span class="line"></span><br><span class="line">StrictHostKeyChecking no</span><br><span class="line">CheckHostIP no</span><br><span class="line"></span><br><span class="line">Host 10.71.12.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_NC_MAIN -W %h:%p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Host 10.71.13.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_NC_MAIN -W %h:%p</span><br><span class="line"></span><br><span class="line">Host 10.71.14.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_NC_MAIN -W %h:%p</span><br><span class="line"></span><br><span class="line">Host 10.71.15.*</span><br><span class="line">  HostName %h</span><br><span class="line">  ProxyCommand ssh bastion_GOP_SG_NC_MAIN -W %h:%p</span><br><span class="line"></span><br><span class="line">Host bastion_GOP_SG_NC_MAIN</span><br><span class="line">  HostName 8.8.8.8</span><br><span class="line">  port 22</span><br><span class="line">  User wangao</span><br></pre></td></tr></table></figure><hr><p>题图 - 苹果 2015 新春广告<a href="http://www.apple.com/cn/start-something-new/#film-holiday" target="_blank" rel="noopener">《老唱片》</a></p>]]></content>
    
    <summary type="html">
    
      MacBook macOS 从小白到入门
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>作为程序猿我为什么选择了一副比 A4 纸还轻的眼镜</title>
    <link href="https://wsgzao.github.io/post/glasses/"/>
    <id>https://wsgzao.github.io/post/glasses/</id>
    <published>2020-03-03T06:59:49.000Z</published>
    <updated>2020-03-03T11:01:03.802Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先申明这不是软文也不想成为标题党，纠正后的简洁标题应该是《如何选择一副眼镜》，比 A4 纸还轻指的是镜架不包括镜片，职业虽然属于 IT 但这篇文章也同样适合大部分人阅读。之前我也写过《我是如何做到花 8000 元拔智齿的》和《从国内跳槽至新加坡工作的经验分享》2 篇贴近日常生活的内容，因为眼镜和我们日常生活息息相关，尽管可以选择隐形眼镜，激光手术甚至是仿生晶体解决近视，但大多数时候我们还是会佩戴框架眼镜，选择一副好眼镜，提升长期佩戴舒适度，对工作和生活都可以起到非常积极的作用。</p><blockquote><p>作为程序猿我为什么选择了一副比 A4 纸还轻的眼镜</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 03 月 03 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/glasses/">https://wsgzao.github.io/post/glasses/</a></p><hr><h2 id="如何获取验光数据"><a href="#如何获取验光数据" class="headerlink" title="如何获取验光数据"></a>如何获取验光数据</h2><ol><li>去医院眼科检查</li><li>去正规的眼镜店检查</li></ol><p>一般需要备注验光数据：</p><p>① 近视 / 远视度数</p><p>② 散光度数（如有）</p><p>③ 散光轴位（有散光才有）</p><p>④ 瞳距</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200303181123.png" alt=""></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200303181041.png" alt=""></p><p><strong> 右眼（R）数据为三次验光平均值：</strong></p><p>近视（S）：-2.75D，即近视 275 度。</p><p>散光（C）：-0.25D，即散光 25 度。</p><p>散光轴位（A）：124 度方向。</p><p><strong> 左眼（L）数据为三次验光平均值：</strong></p><p>近视（S）：-2.75D，即近视 275 度。</p><p>散光（C）：-0.25D，即散光 25 度。</p><p>散光轴位（A）：59 度方向。</p><p>瞳距（PD）61.5mm。</p><p><a href="https://zhuanlan.zhihu.com/p/39066731" target="_blank" rel="noopener">验光单完全看不懂？看完这篇让你成为半个验光师</a></p><h2 id="眼镜的小道消息"><a href="#眼镜的小道消息" class="headerlink" title="眼镜的小道消息"></a>眼镜的小道消息</h2><blockquote><p>所以如果在遇到特别贵的镜架的时候，可以适当的看一看产地，看看自己选择的镜架值不值。</p></blockquote><ul><li>目前眼镜架在国内有几个地方会集中出品，其中，低端镜片的产地为有浙江义乌；</li><li>其次是江苏丹阳货，台州货，温洲货，等中低端为主，温洲产地相对还好点；</li><li>太阳镜一般都是厦门出产，保圣，暴龙，陌生，派丽蒙等精品镜框；</li><li>国内最好的眼镜架都是深圳横岗出产的，中国高端产地眼镜，最初发展 90 年代是有实力的香港眼镜厂，来横岗办厂，有星辉，雅视，雅俊，高雅，高华眼镜厂主要订单就是帮欧美大品牌，如迪奥，香奈儿，保时捷等等代工生产；（龙岗眼镜城）</li><li>东莞的高埗镇也是一个眼镜产地中心。</li></ul><h2 id="镜架的选择"><a href="#镜架的选择" class="headerlink" title="镜架的选择"></a>镜架的选择</h2><blockquote><p>选镜架其实就是选镜架的材质。常见的包括板材、TR90（塑胶钛）、合金、钛等等……</p></blockquote><p>材料：</p><ul><li>板材硬度大，光泽好，不易变形；</li><li>Ti-P/Ti-C：Ti 是含有钛材料的标识，Ti-P 代表纯钛，Ti-C 则代表钛合金等等。钛镜架耐腐蚀，重量轻，不过价格嘛，自然是高的。</li><li>GF/GP：GF 为包金架，即将薄金片熔接在其他金属基材上轧制而成的镜架; GP 为镀金架，即用电镀法将金镀在其他金属制成的镜架表面。</li><li>TR90：一种具有记忆性的高分子材料，重量较轻，约少于板材框重量的一半，它可以减少鼻梁、耳朵负担，佩戴更加轻便舒适。升级版本是 TR100</li></ul><h2 id="镜片的选择"><a href="#镜片的选择" class="headerlink" title="镜片的选择"></a>镜片的选择</h2><blockquote><p>材质：</p></blockquote><p>现在一般都是树脂片了</p><blockquote><p>外形：</p></blockquote><p>镜片根据曲率不同分为球面镜和非球面镜，对于度数较低的人，两者的区别不大，对于中高度近视的人来说，建议选择非球面镜片，成像效果更好，看得更清楚。</p><blockquote><p>色散系数：</p></blockquote><p>这是衡量透镜成像清晰度的指标，通常用阿贝数 (色散系数) 表示，数值越大，色散就越小，成像清晰度就越好，当然价格也就越贵。阿贝数多在 30～58 之间，按照自己的承受能力挑选就可以了。</p><blockquote><p>折射率：</p></blockquote><p>常见的折射率有 1.56、1.60、1.67 和 1.74，简单地说，同样度数下，折射率越高镜片就越薄，当然挑选时也不是镜片越薄越好，介意参见下面这个：</p><ul><li>小于 200 度可以选 1.50 或 1.56；</li><li>200～400 度可以选 1.60；</li><li>400～800 度可以选 1.67；</li><li>更高度数的建议选 1.74 或者玻璃镜片。</li></ul><p>镜片的折射率只要够用就好了，并不是越高越好。</p><blockquote><p>镀膜：</p></blockquote><p>镀膜的作用：减少前表面反光，减少 “鬼影” ，减轻眩光 。不镀膜的树脂镜片透光率大概 89-92% 。镀膜以后透光率可达 98%。清晰度差别明显</p><ul><li>蓝膜：镀有蓝膜的镜片具有很好的抗辐射作用，长期面对电脑屏工作的人可以使用蓝膜镜片，防止眼睛疲劳。</li><li>绿膜：绿膜对光线的透过率好，绿膜镜片佩戴舒服，看东西清晰自然真实，适合于对色彩要求较高的人士。</li><li>黄绿：黄绿膜是在绿膜的基础上进一步提高了透光率 (增加 2% 左右)，这种颜色镀膜的镜片非常容易搭配镜架。</li><li>黄金膜：镀有黄金膜的镜片透光率特别高，而且还有防水、防尘和防雾的效果，是一种多功能的镀膜层。</li><li>紫膜和红膜，主要作用是使镜片看上去更漂亮，属于装饰性镀膜。</li></ul><h3 id="镜片品牌"><a href="#镜片品牌" class="headerlink" title="镜片品牌"></a>镜片品牌</h3><p>蔡司（Zeiss）</p><p>简介：德国品牌 1846 年创立。研磨精密，精湛的光学曲面设计，透光率和防反光性能卓著，视觉成像品质极佳。是目前镜片领域市场占有率第二的品牌。<br>特点：膜色柔和，视物舒适度高。<br>主打产品推荐：铭锐钻立方铂金膜系列，儿童成长乐渐进系列，驾驶型渐进多焦点系列。</p><p>依视路（Essilor）</p><p>简介：法国品牌。膜层硬度高，耐磨性能卓著，不易刮伤，防水防油污效果优越。是目前镜片领域市场占有率最高的品牌。<br>主打产品推荐：爱赞数码生活系列，钻晶 A4 防蓝光系列，万里路渐进多焦点系列。</p><p>豪雅（Hoya）</p><p>简介：日本品牌，始创于 1941 年。品质稳定，耐磨性能强，防反光性能优越。目前镜片领域市场占有率第三的品牌。<br>主打产品推荐：兰御膜防蓝光系列，锐美抗疲劳系列。</p><p>精工（Seiko）：</p><p>简介：日本品牌。研磨精密，人性化曲线设计，佩戴舒适度高。<br>主打产品推荐：精工双面非球面系列，精工极光变色系列。</p><p>高端镜片还有德国品牌罗敦司得（Rodenstock），特点是个性化瞳孔优化技术；中低端镜片中还有凯米 (Chemilens)，韩国品牌，目前镜片占领第四。</p><p>其中蔡司和依视路是第一梯队，日本品牌算是第二梯队，第三梯队韩国品牌，凯米，大明，还有万新、明月等国产品牌。</p><h2 id="我的眼镜经历"><a href="#我的眼镜经历" class="headerlink" title="我的眼镜经历"></a>我的眼镜经历</h2><blockquote><p>购买眼镜除了基本参数外，更重要的是选择贴合自己脸型的镜架 + 镜片</p></blockquote><ol><li>第 1 副眼镜，2003 年初一，Paris Miki（巴黎三城），价格和配置记不清楚了，买的原因是老妈决定</li><li>第 2 副眼镜，2006 年高二，Paris Miki（巴黎三城），不幸被同学一脚踩爆，镜片大概 1k 多，镜架属于超轻超细型，算是第一次对记忆钛镜架和树脂镜片有了初步印象，心里也一直记着中国丹阳眼镜城</li><li>第 3 副眼镜，2017 年，<a href="https://izhongchou.taobao.com/dreamdetail.htm?id=20054256&amp;" target="_blank" rel="noopener">淘宝众筹，比 1 张 A4 纸还轻的眼镜，一体成型设计</a>，2014-207 年会定期浏览淘宝众筹和京东众筹，现在年纪大了主要看小米米家和网易严选。当时众筹镜架 + 明月镜片一共加起来 300 不到吧，初次拿到时确实惊艳到我了，因为此时市面上的品牌如宝岛，JINS，茂昌，吴良材以及上海国际眼镜城等所谓上千元高端眼镜都没有这样的超前设计</li><li>第 4 副眼镜，2019 年，<a href="https://shop157290455.taobao.com/" target="_blank" rel="noopener">独美京东众筹</a>，严格来说我在 2017 年 6 月和 2018 年 5 月来新加坡前陆续给我老婆买了 2 副，自己买了 1 副备用。我老婆原来佩戴的是 JINS 但她拿到独美眼镜的一瞬间也被惊艳到了，而且一直用到现在。我的第 3 副眼镜在健身的时候不小心跌落破了 1 个小口，于是从国内又寄了一副独美眼镜到新加坡做到眼镜 HA 双活高可用。没有众筹的情况下镜片 + 镜架也就 500 左右。</li><li>第 x 副眼镜，如果独美这个良心品牌坚持下去，我会继续选择信任</li></ol><p><a href="http://wx.uniir.com/" target="_blank" rel="noopener">UNIIR 独美</a></p><h2 id="选择眼镜的小建议"><a href="#选择眼镜的小建议" class="headerlink" title="选择眼镜的小建议"></a>选择眼镜的小建议</h2><ol><li>高近视度数者不宜选用半框和无框镜架，因为镜片厚度较厚同无框镜架搭配不仅不美观而且容易损坏。</li><li>散光度数较高者不宜选用无框镜架，因为搭配无框镜架的镜片在长时间使用后会出现散光轴位移位的问题，从而导致所视物体变形。</li><li>长期盯着电脑或者手机建议选择防蓝光镜片减少疲劳度</li><li>选择什么款式好看？照镜子，照镜子，照镜子</li></ol><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://www.102no.com/archives/1746" target="_blank" rel="noopener">如何选择一副眼镜</a></p><p><a href="https://www.zhihu.com/question/19856827" target="_blank" rel="noopener">配眼镜，如何挑选眼镜框和镜片？有哪些常识或技巧？</a></p><p><a href="https://www.zhihu.com/question/19856827/answer/157868263" target="_blank" rel="noopener">配眼镜，如何挑选眼镜框和镜片？有哪些常识或技巧？丁香医生的回答</a></p>]]></content>
    
    <summary type="html">
    
      作为程序猿我为什么选择了一副比A4纸还轻的眼镜
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>AdGuard 过滤规则分享</title>
    <link href="https://wsgzao.github.io/post/adguard/"/>
    <id>https://wsgzao.github.io/post/adguard/</id>
    <published>2020-03-01T06:59:49.000Z</published>
    <updated>2020-03-02T04:27:36.105Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200122122954.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我和很多人一样一开始用 Maxthon 傲游浏览器，然后见证了国内第三方浏览器的群雄逐鹿到只剩下 360 和腾讯，现在也基本回归 Google Chrome，广告过滤我也是一路从 AdBlock Plus 到 uBlock Origin 然后是现在的 AdGuard，无论选择哪种广告过滤方案，持续更新的过滤规则始终是核心。</p><blockquote><p>AdGuard 过滤规则分享</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 03 月 01 日 - 移除广告净化器规则，增加乘风广告过滤规则 + 视频过滤规则<br>2020 年 01 月 21 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/adguard/">https://wsgzao.github.io/post/adguard/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://adguard.com/zh_cn/welcome.html" target="_blank" rel="noopener">AdGuard</a></p><hr><h2 id="为什么要买-AdGuard"><a href="#为什么要买-AdGuard" class="headerlink" title="为什么要买 AdGuard"></a>为什么要买 AdGuard</h2><ol><li>AdBlock Plus(ABP) 大牌免费不香吗？</li><li>uBlock Origin 免费性能好，占用内存低不香吗？</li><li>国内各种 APP 和浏览器扩展横行劫持，无脑安装不也很香吗？</li></ol><blockquote><p>名声在外，全平台支持，懒得折腾，我买 AdGuard</p></blockquote><h2 id="AdGuard-购买记录"><a href="#AdGuard-购买记录" class="headerlink" title="AdGuard 购买记录"></a>AdGuard 购买记录</h2><p>2019 年黑色星期五的时候 ¥187.96 价格购买了 AdGuard 终生 9 设备，貌似买多了</p><p><a href="https://adguard.com/zh_cn/license.html" target="_blank" rel="noopener">https://adguard.com/zh_cn/license.html</a></p><h2 id="广告过滤规则推荐"><a href="#广告过滤规则推荐" class="headerlink" title="广告过滤规则推荐"></a>广告过滤规则推荐</h2><blockquote><p>以下第三方规则可以适用于 AdGuard，AdBlock Plus，uBlock Origin 等</p></blockquote><p>AdGuard 默认的内置规则里很多选择，可以点击订阅自行加载，例如以下几个推荐的：</p><ol><li>EasyList China : 国内网站广告过滤的主规则。<br>链接：<a href="https://easylist-downloads.adblockplus.org/easylistchina.txt" target="_blank" rel="noopener">https://easylist-downloads.adblockplus.org/easylistchina.txt</a></li><li>EasyPrivacy : EasyPrivacy 是隐私保护，不被跟踪。<br>链接：<a href="https://easylist-downloads.adblockplus.org/easyprivacy.txt" target="_blank" rel="noopener">https://easylist-downloads.adblockplus.org/easyprivacy.txt</a></li><li>CJX’s Annoyance List : 过滤烦人的自我推广，并补充 EasyPrivacy 隐私规则。<br>链接：<a href="https://raw.githubusercontent.com/cjx82630/cjxlist/master/cjx-annoyance.txt" target="_blank" rel="noopener">https://raw.githubusercontent.com/cjx82630/cjxlist/master/cjx-annoyance.txt</a></li><li>I don’t care about cookies : 我不关心 Cookie 的问题，屏蔽网站的 cookies 相关的警告。<br>链接：<a href="https://www.i-dont-care-about-cookies.eu/abp/" target="_blank" rel="noopener">https://www.i-dont-care-about-cookies.eu/abp/</a></li></ol><blockquote><p>广告过滤器规则推荐（打开 Adguard -&gt; 设置 -&gt; 内容拦截 -&gt; User rules）</p></blockquote><p>HalfLife，规则合并自 EasylistChina、EasylistLite、CJX’sAnnoyance 合并规则（几乎每天更新)<br><a href="https://gitee.com/halflife/list/raw/master/ad.txt" target="_blank" rel="noopener">https://gitee.com/halflife/list/raw/master/ad.txt</a></p><p>xinggsf，乘风广告过滤规则 + 视频过滤规则，<a href="https://bbs.kafan.cn/thread-1866845-1-1.html" target="_blank" rel="noopener">乘风规则更新详情</a><br><a href="https://gitee.com/xinggsf/Adblock-Rule/raw/master/rule.txt" target="_blank" rel="noopener">https://gitee.com/xinggsf/Adblock-Rule/raw/master/rule.txt</a><br><a href="https://gitee.com/xinggsf/Adblock-Rule/raw/master/mv.txt" target="_blank" rel="noopener">https://gitee.com/xinggsf/Adblock-Rule/raw/master/mv.txt</a></p><p>cjx82630，<a href="https://gitee.com/cjx82630/cjxlist" target="_blank" rel="noopener">cjxlist 国内备用地址</a><br>一、CJX’s Annoyance List (去自推列表)<br><a href="https://gitee.com/cjx82630/cjxlist/raw/master/cjx-annoyance.txt" target="_blank" rel="noopener">https://gitee.com/cjx82630/cjxlist/raw/master/cjx-annoyance.txt</a><br>二、CJX’s uBlock list (uBlock 规则)<br><a href="https://gitee.com/cjx82630/cjxlist/raw/master/cjx-ublock.txt" target="_blank" rel="noopener">https://gitee.com/cjx82630/cjxlist/raw/master/cjx-ublock.txt</a></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200122122936.png" alt=""></p><h2 id="AdGuard-激活和管理"><a href="#AdGuard-激活和管理" class="headerlink" title="AdGuard 激活和管理"></a>AdGuard 激活和管理</h2><p>不要忘记在您的设备上激活此授权码！转到 “许可” 页面，输入此处的授权码并点击 “激活”。如果您需要帮助，可参阅此 <a href="https://kb.adguard.com/en/general/license-key?utm_source=email&amp;utm_campaign=license_purchased_key&amp;utm_medium=transact&amp;utm_content=body#activation" target="_blank" rel="noopener">手册</a></p><p>When you enter the <a href="https://adguard.com/zh_cn/account/main.html" target="_blank" rel="noopener">AdGuard personal account</a> you will see the list of your license keys and their current status</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://sspai.com/post/56617" target="_blank" rel="noopener">想获得「干净」的网页浏览体验？你需要这份全平台去广告指南</a></p><p><a href="https://www.runningcheese.com/adblock" target="_blank" rel="noopener">全平台支持，长久有效的广告过滤解决方案</a></p><p><a href="https://zhuanlan.zhihu.com/p/79045237" target="_blank" rel="noopener">Google Chrome 浏览器插件和油猴脚本推荐</a></p><p><a href="https://filterlists.com/" target="_blank" rel="noopener">FilterLists</a></p>]]></content>
    
    <summary type="html">
    
      AdGuard过滤规则分享
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Nginx 禁止未绑定域名或 IP 访问 80 和 443 端口实践小结</title>
    <link href="https://wsgzao.github.io/post/nginx-default-server/"/>
    <id>https://wsgzao.github.io/post/nginx-default-server/</id>
    <published>2020-02-26T06:59:49.000Z</published>
    <updated>2020-02-27T08:56:00.685Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>nginx 在决定请求由哪个 server 块执行时，主要关注的是 server 块中的 listen 和 server_name 两个字段，如果根据 listen 指令无法得到最佳匹配，将会开始解析 server_name 指令。nginx 会检查请求中的 “Host” 头，这个值包含了客户端实际试图请求的域名或者 ip 地址。nginx 会根据这个值去匹配 server_name 指令，匹配规则会在文章中详细描述。其中有一个需要大家注意的地方是如果没有匹配到任何规则的话，则会选择可用列表中的第一个 server，带来的问题就是未绑定域名或 IP 直接访问 80 和 443 端口会给后端逻辑服务增加压力并产生不合理的错误日志，合适的解决办法是通过在 nginx 的 server 块中添加 default_server 禁止未绑定域名或 IP 访问 80 和 443 端口过滤不合理的流量。</p><blockquote><p>Nginx 禁止未绑定域名或 IP 访问 80 和 443 端口实践小结</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 02 月 26 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/nginx-default-server/">https://wsgzao.github.io/post/nginx-default-server/</a></p><hr><h2 id="Server-name-指令"><a href="#Server-name-指令" class="headerlink" title="Server_name 指令"></a>Server_name 指令</h2><p>如果根据 listen 指令无法得到最佳匹配, 将会开始解析 server_name 指令. nginx 会检查请求中的 “Host” 头, 这个值包含了客户端实际试图请求的域名或者 ip 地址. nginx 会根据这个值去匹配 server_name 指令, 匹配规则如下:</p><ol><li>nginx 会尝试寻找一个和 sever_name 和 Host 值完全匹配的 server 块, 如果找到多个精确匹配, 则会使用第一个匹配的 server 块</li><li>如果没有找到精确匹配的 server 块, 则 nginx 尝试找到 server_name 带有 * 开头的 server 块, 如果找到多个, 则选择最长匹配的 server 块</li><li>如果没有找到使用开头的 server 块, 则会寻找以结尾的 server 块, 同样, 如果有多个匹配, 选择最长匹配</li><li>如果没有找到使用 * 匹配的 server 块, 则会寻找使用正则表达式 (以~ 开头) 定义 server_name 的 server 块, 如果找到多个匹配, 会使用第一个匹配</li><li>如果没有找到正则表达式匹配的 server 块, 则 nginx 将会选择一个匹配 listen 字段的 default server 块. 每一个 ip 和端口组合都可以配置一个且只能配置一个默认的 default_server 块, 如果没有的话, 则会选择可用列表中的第一个 server</li></ol><p>示例如下:</p><p>（1）准确的 server_name 匹配, 例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">     listen       80;</span><br><span class="line">     server_name  www.domain.com;</span><br><span class="line">     ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>（2）以 * 通配符开始的字符串：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">     listen       80;</span><br><span class="line">     server_name  *.domain.com;</span><br><span class="line">     ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>（3）以 * 通配符结束的字符串：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">     listen       80;</span><br><span class="line">     server_name  www.*;</span><br><span class="line">     ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>（4）匹配正则表达式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">     listen       80;</span><br><span class="line">     server_name  ~^(?.+)\.domain\.com$;</span><br><span class="line">     ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>（5）如果以上都没有匹配, 则使用 default_server. 如果没有指定 default_server, 则会选择第一个可用的 server. 我们可以指定对于没有匹配的 host 值时, 返回错误到客户端. 可以用来防止别人把垃圾流量转到你的网站。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen  80   default_server;</span><br><span class="line">    server_name  _;    return 444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>通过返回 444 这个 nginx 的非标准错误码让 nginx 断开与浏览器的连接</p><h2 id="Nginx-官方对-default-server-的解释"><a href="#Nginx-官方对-default-server-的解释" class="headerlink" title="Nginx 官方对 default_server 的解释"></a>Nginx 官方对 default_server 的解释</h2><blockquote><p>Miscellaneous names</p></blockquote><p>If someone makes a request using an IP address instead of a server name, the “Host” request header field will contain the IP address and the request can be handled using the IP address as the server name:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  example.org</span><br><span class="line">                 www.example.org</span><br><span class="line">                 &quot;&quot;</span><br><span class="line">                 192.168.1.1</span><br><span class="line">                 ;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>In catch-all server examples the strange name “_” can be seen:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80  default_server;</span><br><span class="line">    server_name  _;</span><br><span class="line">    return       444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>There is nothing special about this name, it is just one of a myriad of invalid domain names which never intersect with any real name. Other invalid names like “–” and “!@#” may equally be used.</p><blockquote><p>Name-based virtual servers</p></blockquote><p>nginx first decides which server should process the request. Let’s start with a simple configuration where all three virtual servers listen on port *:80:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen      80;</span><br><span class="line">    server_name example.org www.example.org;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen      80;</span><br><span class="line">    server_name example.net www.example.net;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen      80;</span><br><span class="line">    server_name example.com www.example.com;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>In this configuration nginx tests only the request’s header field “Host” to determine which server the request should be routed to. If its value does not match any server name, or the request does not contain this header field at all, then nginx will route the request to the default server for this port. In the configuration above, the default server is the first one — which is nginx’s standard default behaviour. It can also be set explicitly which server should be default, with the default_server parameter in the listen directive:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen      80 default_server;</span><br><span class="line">    server_name example.net www.example.net;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The default_server parameter has been available since version 0.8.21. In earlier versions the default parameter should be used instead.<br>Note that the default server is a property of the listen port and not of the server name. More about this later.</p><blockquote><p>How to prevent processing requests with undefined server names</p></blockquote><p>If requests without the “Host” header field should not be allowed, a server that just drops the requests can be defined:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen      80;</span><br><span class="line">    server_name &quot;&quot;;</span><br><span class="line">    return      444;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Here, the server name is set to an empty string that will match requests without the “Host” header field, and a special nginx’s non-standard code 444 is returned that closes the connection.</p><p>Since version 0.8.48, this is the default setting for the server name, so the server_name “” can be omitted. In earlier versions, the machine’s hostname was used as a default server name.</p><h2 id="nginx-禁止未绑定域名或-IP-访问-80-和-443-端口实践"><a href="#nginx-禁止未绑定域名或-IP-访问-80-和-443-端口实践" class="headerlink" title="nginx 禁止未绑定域名或 IP 访问 80 和 443 端口实践"></a>nginx 禁止未绑定域名或 IP 访问 80 和 443 端口实践</h2><p>Nginx uses ‘Host’ header for server_name matching. It does not use TLS SNI. This means that for an SSL server, nginx must be able to accept SSL connection, which boils down to having certificate/key. The cert/key can be any, e.g. self-signed.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    server_name _;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen 443 ssl default_server;</span><br><span class="line"></span><br><span class="line">    <span class="comment">## To also support IPv6, uncomment this block</span></span><br><span class="line">    <span class="comment"># listen [::]:80 default_server;</span></span><br><span class="line">    <span class="comment"># listen [::]:443 ssl default_server;</span></span><br><span class="line"></span><br><span class="line">    ssl_certificate &lt;path to cert&gt;;</span><br><span class="line">    ssl_certificate_key &lt;path to key&gt;;</span><br><span class="line">    <span class="built_in">return</span> 444; <span class="comment"># or whatever</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>详细的配置步骤</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 未设置 default_server，会根据列表第一个 server 服务，产生垃圾流量</span></span><br><span class="line">xxx - - [27/Feb/2020:15:17:58 +0800] <span class="string">"GET / HTTP/1.1"</span> 301 162 <span class="string">"-"</span> <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36"</span></span><br><span class="line">xxx - - [27/Feb/2020:15:18:24 +0800] <span class="string">"GET /api HTTP/1.1"</span> 301 162 <span class="string">"-"</span> <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动生成本地 ssl 公私钥</span></span><br><span class="line">openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加 default_server</span></span><br><span class="line">cat &lt;&lt; <span class="string">'EOF'</span> &gt; /etc/nginx/sites-available/000_default</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen 443 ssl default_server;</span><br><span class="line">    ssl_certificate        /etc/nginx/ssl/nginx.crt;</span><br><span class="line">    ssl_certificate_key    /etc/nginx/ssl/nginx.key;</span><br><span class="line">    server_name _;</span><br><span class="line">    <span class="built_in">return</span> 444;</span><br><span class="line">    access_log /var/<span class="built_in">log</span>/nginx/000_default.access.log;</span><br><span class="line">    error_log /var/<span class="built_in">log</span>/nginx/000_default.error.log;</span><br><span class="line">&#125; </span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置软链接</span></span><br><span class="line">ln -s /etc/nginx/sites-available/000_default /etc/nginx/sites-enabled/000_default</span><br><span class="line"></span><br><span class="line"><span class="comment"># reload nginx</span></span><br><span class="line">nginx -t</span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看日志，检查其他域名是否正常</span></span><br><span class="line">tailf /var/<span class="built_in">log</span>/nginx/000_default.access.log</span><br><span class="line"></span><br><span class="line">xxx - - [27/Feb/2020:12:15:52 +0800] <span class="string">"GET /api HTTP/1.1"</span> 444 0 <span class="string">"-"</span> <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36"</span></span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://nginx.org/en/docs/http/server_names.html" target="_blank" rel="noopener">nginx Server names</a></p><p><a href="http://nginx.org/en/docs/http/request_processing.html" target="_blank" rel="noopener">How nginx processes a request</a></p><p><a href="https://serverfault.com/questions/578648/properly-setting-up-a-default-nginx-server-for-https" target="_blank" rel="noopener">Properly setting up a “default” nginx server for https</a></p><p><a href="https://juejin.im/post/5c89f96f518825573a5e630b" target="_blank" rel="noopener">理解 Nginx 中 Server 和 Location 的匹配逻辑</a></p>]]></content>
    
    <summary type="html">
    
      Nginx禁止未绑定域名或IP访问80和443端口实践小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Nginx 基础知识从小白到入门</title>
    <link href="https://wsgzao.github.io/post/nginx/"/>
    <id>https://wsgzao.github.io/post/nginx/</id>
    <published>2020-02-25T06:59:49.000Z</published>
    <updated>2020-02-26T09:55:59.212Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Nginx 现在几乎是众多大型网站的必用技术，大家应该都知道 <a href="https://www.nginx.com/blog/nginx-joins-f5/" target="_blank" rel="noopener">Nginx 被 F5 收购</a> 的大事件，章亦春也在专心维护 OpenResty 项目构建和谐家园，无论你选择 Nginx 还是 OpenResty，都需要对 Nginx 有一个比较全面的了解，日后才能做到事半功倍。本文以开发者必备的 Nginx 基础知识为主，在参考文章中罗列了目前比较优秀的 Nginx 和 OpenResty 参考教程，希望对大家有帮助。</p><blockquote><p>Nginx 基础知识从小白到入门</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 02 月 25 日 - 更新 nginx 基础知识<br>2019 年 11 月 12 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/nginx/">https://wsgzao.github.io/post/nginx/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://nginx.org/" target="_blank" rel="noopener">nginx.org</a></p><p><a href="https://www.nginx.com/" target="_blank" rel="noopener">NGINX Plus</a></p><p><a href="https://openresty.org/" target="_blank" rel="noopener">OpenResty</a></p><hr><h2 id="Nginx-基础知识"><a href="#Nginx-基础知识" class="headerlink" title="Nginx 基础知识"></a>Nginx 基础知识</h2><blockquote><p>Nginx 是什么？</p></blockquote><p>Nginx 是一个 web 服务器，主要处理客户端和服务器的请求分发。</p><blockquote><p>特点和优势</p></blockquote><ol><li>高并发</li><li>热部署</li><li>快</li><li>低功耗</li><li>热部署</li></ol><blockquote><p>使用和扩展</p></blockquote><p>开源免费的 Nginx 与商业版 Nginx Plus，与之对应的是免费 OpenResty 与商业版 OpenResty</p><ul><li>开源版 <a href="https://nginx.org/" target="_blank" rel="noopener">nginx.org</a></li><li>商业版 <a href="https://www.nginx.com/" target="_blank" rel="noopener">NGINX Plus</a></li><li>阿里巴巴 <a href="https://tengine.taobao.org/" target="_blank" rel="noopener">Tengine</a></li><li>开源版 <a href="https://openresty.org/" target="_blank" rel="noopener">OpenResty</a></li><li>商业版 <a href="https://openresty.com/" target="_blank" rel="noopener">OpenResty</a></li></ul><blockquote><p>陶辉《深入理解 Nginx》作者在极客时间上的讲义 PDF 已经介绍的非常详细了，如果觉得课程不错可以选择购买尽量少走弯路</p></blockquote><p><a href="https://github.com/russelltao/geektime-nginx" target="_blank" rel="noopener">极客时间：nginx 核心知识 100 讲配置文件与代码分享</a></p><h2 id="nginx-正向代理与反向代理"><a href="#nginx-正向代理与反向代理" class="headerlink" title="nginx 正向代理与反向代理"></a>nginx 正向代理与反向代理</h2><blockquote><p>为了便于理解，首先先来了解一下一些基础知识，nginx 是一个高性能的反向代理服务器那么什么是反向代理呢？</p></blockquote><p>代理是在服务器和客户端之间假设的一层服务器，代理将接收客户端的请求并将它转发给服务器，然后将服务端的响应转发给客户端。</p><p>不管是正向代理还是反向代理，实现的都是上面的功能。</p><p>如果你对 <a href="https://wsgzao.github.io/post/osi/">OSI 七层模型与 TCP/IP 四层模型</a> 不是很熟悉可以再回顾下</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191113180648.png" alt=""></p><blockquote><p>正向代理</p></blockquote><p>正向代理（forward）意思是一个位于客户端和原始服务器 (origin server) 之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标 (原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。</p><p>正向代理是为我们服务的，即为客户端服务的，客户端可以根据正向代理访问到它本身无法访问到的服务器资源。</p><p>正向代理对我们是透明的，对服务端是非透明的，即服务端并不知道自己收到的是来自代理的访问还是来自真实客户端的访问。</p><blockquote><p>反向代理</p></blockquote><p>反向代理（Reverse Proxy）方式是指以代理服务器来接受 internet 上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 internet 上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。</p><p>反向代理是为服务端服务的，反向代理可以帮助服务器接收来自客户端的请求，帮助服务器做请求转发，负载均衡等。</p><p>反向代理对服务端是透明的，对我们是非透明的，即我们并不知道自己访问的是代理服务器，而服务器知道反向代理在为他服务。</p><h2 id="nginx-基本配置"><a href="#nginx-基本配置" class="headerlink" title="nginx 基本配置"></a>nginx 基本配置</h2><p>安装 nginx 时通常需要编译自己需要的模块，可以<a href="https://wsgzao.github.io/post/rpmbuild/">使用 rpmbuild 制作 Nginx 的 RPM 包</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">main                                # 全局配置</span><br><span class="line"></span><br><span class="line">events &#123;                            # nginx 工作模式配置</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;                                # http 设置</span><br><span class="line">    ....</span><br><span class="line"></span><br><span class="line">    server &#123;                        # 服务器主机配置</span><br><span class="line">        ....</span><br><span class="line">        location &#123;                    # 路由配置</span><br><span class="line">            ....</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location path &#123;</span><br><span class="line">            ....</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location otherpath &#123;</span><br><span class="line">            ....</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        ....</span><br><span class="line"></span><br><span class="line">        location &#123;</span><br><span class="line">            ....</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    upstream name &#123;                    # 负载均衡配置</span><br><span class="line">        ....</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果想要生成 nginx 规范配置，可以参考<a href="https://nginxconfig.io/" target="_blank" rel="noopener">nginxconfig.io</a></p><p>下面是 <code>nginx</code> 一些配置中常用的内置全局变量，你可以在配置的任何位置使用它们。</p><table><thead><tr><th>变量名</th><th>功能</th></tr></thead><tbody><tr><td><code>$host</code></td><td>请求信息中的 <code>Host</code>，如果请求中没有 <code>Host</code> 行，则等于设置的服务器名</td></tr><tr><td><code>$request_method</code></td><td>客户端请求类型，如 <code>GET</code>、<code>POST</code></td></tr><tr><td><code>$remote_addr</code></td><td>客户端的 <code>IP</code> 地址</td></tr><tr><td><code>$args</code></td><td>请求中的参数</td></tr><tr><td><code>$content_length</code></td><td>请求头中的 <code>Content-length</code> 字段</td></tr><tr><td><code>$http_user_agent</code></td><td>客户端 agent 信息</td></tr><tr><td><code>$http_cookie</code></td><td>客户端 cookie 信息</td></tr><tr><td><code>$remote_addr</code></td><td>客户端的 IP 地址</td></tr><tr><td><code>$remote_port</code></td><td>客户端的端口</td></tr><tr><td><code>$server_protocol</code></td><td>请求使用的协议，如 <code>HTTP/1.0</code>、<code>HTTP/1.1\</code></td></tr><tr><td><code>$server_addr</code></td><td>服务器地址</td></tr><tr><td><code>$server_name</code></td><td>服务器名称</td></tr><tr><td><code>$server_port</code></td><td>服务器的端口号</td></tr></tbody></table><h2 id="location-匹配规则"><a href="#location-匹配规则" class="headerlink" title="location 匹配规则"></a>location 匹配规则</h2><p>语法规则：<code>location [=|~|~*|^~] /uri/ { … }</code></p><table><thead><tr><th>模式</th><th>含义</th></tr></thead><tbody><tr><td>location = /uri</td><td>\= 表示精确匹配，只有完全匹配上才能生效</td></tr><tr><td>location ^~ /uri</td><td>^~ 开头对 URL 路径进行前缀匹配，并且在正则之前。</td></tr><tr><td>location ~ pattern</td><td>开头表示区分大小写的正则匹配</td></tr><tr><td>location ~* pattern</td><td>开头表示不区分大小写的正则匹配</td></tr><tr><td>location /uri</td><td>不带任何修饰符，也表示前缀匹配，但是在正则匹配之后</td></tr><tr><td>location /</td><td>通用匹配，任何未匹配到其它 location 的请求都会匹配到，相当于 switch 中的 default</td></tr></tbody></table><p>前缀匹配时，Nginx 不对 url 做编码，因此请求为 <code>/static/20%/aa</code>，可以被规则 <code>^~ /static/ /aa</code> 匹配到（注意是空格）</p><p>多个 location 配置的情况下匹配顺序为:</p><ul><li>首先精确匹配 <code>=</code></li><li>其次前缀匹配 <code>^~</code></li><li>其次是按文件中顺序的正则匹配</li><li>然后匹配不带任何修饰的前缀匹配。</li><li>最后是交给 <code>/</code> 通用匹配</li><li>当有匹配成功时候，停止匹配，按当前匹配规则处理请求</li></ul><p>意：前缀匹配，如果有包含关系时，按最大匹配原则进行匹配。比如在前缀匹配：<code>location /dir01</code> 与 <code>location /dir01/dir02</code>，如有请求 <code>http://localhost/dir01/dir02/file</code> 将最终匹配到 <code>location /dir01/dir02</code></p><p>例子，有如下匹配规则：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">location = / &#123;</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"规则 A"</span>;</span><br><span class="line">&#125;</span><br><span class="line">location = /login &#123;</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"规则 B"</span>;</span><br><span class="line">&#125;</span><br><span class="line">location ^~ /static/ &#123;</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"规则 C"</span>;</span><br><span class="line">&#125;</span><br><span class="line">location ^~ /static/files &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"规则 X"</span>;</span><br><span class="line">&#125;</span><br><span class="line">location ~ \.(gif|jpg|png|js|css)$ &#123;</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"规则 D"</span>;</span><br><span class="line">&#125;</span><br><span class="line">location ~* \.png$ &#123;</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"规则 E"</span>;</span><br><span class="line">&#125;</span><br><span class="line">location /img &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"规则 Y"</span>;</span><br><span class="line">&#125;</span><br><span class="line">location / &#123;</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"规则 F"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么产生的效果如下：</p><ul><li>访问根目录 <code>/</code>，比如 <code>http://localhost/</code> 将匹配 <code>规则 A</code></li><li>访问 <code>http://localhost/login</code> 将匹配 <code>规则 B</code>，<code>http://localhost/register</code> 则匹配 <code>规则 F</code></li><li>访问 <code>http://localhost/static/a.html</code> 将匹配 <code>规则 C</code></li><li>访问 <code>http://localhost/static/files/a.exe</code> 将匹配 <code>规则 X</code>，虽然 <code>规则 C</code> 也能匹配到，但因为最大匹配原则，最终选中了 <code>规则 X</code>。你可以测试下，去掉规则 X ，则当前 URL 会匹配上 <code>规则 C</code>。</li><li>访问 <code>http://localhost/a.gif</code>, <code>http://localhost/b.jpg</code> 将匹配 <code>规则 D</code> 和 <code>规则 E</code> ，但是 <code>规则 D</code> 顺序优先，<code>规则 E</code> 不起作用，而 <code>http://localhost/static/c.png</code> 则优先匹配到 <code>规则 C</code></li><li>访问 <code>http://localhost/a.PNG</code> 则匹配 <code>规则 E</code> ，而不会匹配 <code>规则 D</code> ，因为 <code>规则 E</code> 不区分大小写。</li><li>访问 <code>http://localhost/img/a.gif</code> 会匹配上 <code>规则 D</code>, 虽然 <code>规则 Y</code> 也可以匹配上，但是因为正则匹配优先，而忽略了 <code>规则 Y</code>。</li><li>访问 <code>http://localhost/img/a.tiff</code> 会匹配上 <code>规则 Y</code>。</li></ul><p>访问 <code>http://localhost/category/id/1111</code> 则最终匹配到规则 F ，因为以上规则都不匹配，这个时候应该是 Nginx 转发请求给后端应用服务器，比如 FastCGI（php），tomcat（jsp），Nginx 作为反向代理服务器存在。</p><p><a href="https://juejin.im/post/5c89f96f518825573a5e630b" target="_blank" rel="noopener">理解 Nginx 中 Server 和 Location 的匹配逻辑</a></p><h2 id="nginx-日志"><a href="#nginx-日志" class="headerlink" title="nginx 日志"></a>nginx 日志</h2><p>Nginx 日志主要有两种：access_log(访问日志) 和 error_log(错误日志)。</p><h3 id="access-log-访问日志"><a href="#access-log-访问日志" class="headerlink" title="access_log 访问日志"></a>access_log 访问日志</h3><p>access_log 主要记录客户端访问 Nginx 的每一个请求，格式可以自定义。通过 access_log 你可以得到用户地域来源、跳转来源、使用终端、某个 URL 访问量等相关信息。</p><p>log_format 指令用于定义日志的格式，语法: <code>log_format name string;</code> 其中 name 表示格式名称，string 表示定义的格式字符串。log_format 有一个默认的无需设置的组合日志格式。</p><p>默认的无需设置的组合日志格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">log_format combined &apos;$remote_addr - $remote_user  [$time_local]  &apos;</span><br><span class="line">                    &apos; &quot;$request&quot;  $status  $body_bytes_sent  &apos;</span><br><span class="line">                    &apos; &quot;$http_referer&quot;  &quot;$http_user_agent&quot; &apos;;</span><br></pre></td></tr></table></figure><p>access_log 指令用来指定访问日志文件的存放路径（包含日志文件名）、格式和缓存大小，语法：<code>access_log path [format_name [buffer=size | off]];</code> 其中 path 表示访问日志存放路径，format_name 表示访问日志格式名称，buffer 表示缓存大小，off 表示关闭访问日志。</p><p>log_format 使用示例：在 access.log 中记录客户端 IP 地址、请求状态和请求时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">log_format myformat &apos;$remote_addr  $status  $time_local&apos;;</span><br><span class="line">access_log logs/access.log  myformat;</span><br></pre></td></tr></table></figure><p>需要注意的是：log_format 配置必须放在 http 内，否则会出现警告。Nginx 进程设置的用户和组必须对日志路径有创建文件的权限，否则，会报错。</p><p>定义日志使用的字段及其作用：</p><table><thead><tr><th>字段</th><th>作用</th></tr></thead><tbody><tr><td>$remote_addr 与 $http_x_forwarded_for</td><td>记录客户端 IP 地址</td></tr><tr><td>$remote_user</td><td>记录客户端用户名称</td></tr><tr><td>$request</td><td>记录请求的 URI 和 HTTP 协议</td></tr><tr><td>$status</td><td>记录请求状态</td></tr><tr><td>$body_bytes_sent</td><td>发送给客户端的字节数，不包括响应头的大小</td></tr><tr><td>$bytes_sent</td><td>发送给客户端的总字节数</td></tr><tr><td>$connection</td><td>连接的序列号</td></tr><tr><td>$connection_requests</td><td>当前通过一个连接获得的请求数量</td></tr><tr><td>$msec</td><td>日志写入时间。单位为秒，精度是毫秒</td></tr><tr><td>$pipe</td><td>如果请求是通过 HTTP 流水线 (pipelined) 发送，pipe 值为“p”，否则为“.”</td></tr><tr><td>$http_referer</td><td>记录从哪个页面链接访问过来的</td></tr><tr><td>$http_user_agent</td><td>记录客户端浏览器相关信息</td></tr><tr><td>$request_length</td><td>请求的长度（包括请求行，请求头和请求正文）</td></tr><tr><td>$request_time</td><td>请求处理时间，单位为秒，精度毫秒</td></tr><tr><td>$time_iso8601</td><td>ISO8601 标准格式下的本地时间</td></tr><tr><td>$time_local</td><td>记录访问时间与时区</td></tr></tbody></table><h3 id="error-log-错误日志"><a href="#error-log-错误日志" class="headerlink" title="error_log 错误日志"></a>error_log 错误日志</h3><p>error_log 主要记录客户端访问 Nginx 出错时的日志，格式不支持自定义。通过查看错误日志，你可以得到系统某个服务或 server 的性能瓶颈等。因此，将日志利用好，你可以得到很多有价值的信息。</p><p>error_log 指令用来指定错误日志，语法: <code>error_log path [level]</code>; 其中 path 表示错误日志存放路径，level 表示错误日志等级，日志等级包括 debug、info、notice、warn、error、crit、alert、emerg，从左至右，日志详细程度逐级递减，即 debug 最详细，emerg 最少，默认为 error。</p><p>注意：<code>error_log off</code> 并不能关闭错误日志记录，此时日志信息会被写入到文件名为 off 的文件当中。如果要关闭错误日志记录，可以使用如下配置：</p><p>Linux 系统把存储位置设置为空设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">error_log /dev/null;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    # ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Windows 系统把存储位置设置为空设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">error_log nul;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    # ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外 Linux 系统可以使用 tail 命令方便的查阅正在改变的文件, tail -f filename 会把 filename 里最尾部的内容显示在屏幕上, 并且不断刷新, 使你看到最新的文件内容。Windows 系统没有这个命令，你可以在网上找到动态查看文件的工具。</p><h2 id="nginx-负载均衡"><a href="#nginx-负载均衡" class="headerlink" title="nginx 负载均衡"></a>nginx 负载均衡</h2><p>Upstream 指定后端服务器地址列表，在 server 中拦截响应请求，并将请求转发到 Upstream 中配置的服务器列表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">upstream balanceServer &#123;</span><br><span class="line">    server 10.1.22.33:12345;</span><br><span class="line">    server 10.1.22.34:12345;</span><br><span class="line">    server 10.1.22.35:12345;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    server_name  fe.server.com;</span><br><span class="line">    listen 80;</span><br><span class="line">    location /api &#123;</span><br><span class="line">        proxy_pass http://balanceServer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的配置只是指定了 nginx 需要转发的服务端列表，并没有指定分配策略。</p><p>默认情况下采用的是轮询策略，将所有客户端请求轮询分配给服务端。这种策略是可以正常工作的，但是如果其中某一台服务器压力太大，出现延迟，会影响所有分配在这台服务器下的用户。</p><h2 id="nginx-常用命令"><a href="#nginx-常用命令" class="headerlink" title="nginx 常用命令"></a>nginx 常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 快速关闭 Nginx，可能不保存相关信息，并迅速终止 web 服务</span></span><br><span class="line">nginx -s stop</span><br><span class="line"><span class="comment"># 平稳关闭 Nginx，保存相关信息，有安排的结束 web 服务</span></span><br><span class="line">nginx -s quit</span><br><span class="line"><span class="comment"># 因改变了 Nginx 相关配置，需要重新加载配置而重载</span></span><br><span class="line">nginx -s reload</span><br><span class="line"><span class="comment"># 重新打开日志文件</span></span><br><span class="line">nginx -s reopen</span><br><span class="line"><span class="comment"># 为 Nginx 指定一个配置文件，来代替缺省的</span></span><br><span class="line">nginx -c filename</span><br><span class="line"><span class="comment"># 不运行，而仅仅测试配置文件。nginx 将检查配置文件的语法的正确性，并尝试打开配置文件中所引用到的文件</span></span><br><span class="line">nginx -t</span><br><span class="line"><span class="comment">#  显示 nginx 的版本</span></span><br><span class="line">nginx -v</span><br><span class="line"><span class="comment"># 显示 nginx 的版本，编译器版本和配置参数</span></span><br><span class="line">nginx -V</span><br><span class="line"><span class="comment"># 格式换显示 nginx 配置参数</span></span><br><span class="line">2&gt;&amp;1 nginx -V | xargs -n1</span><br><span class="line">2&gt;&amp;1 nginx -V | xargs -n1 | grep lua</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><blockquote><p>以上内容只是 nginx 的冰山一角，我个人推荐大家跟着官方文档或者类似极客时间的教程学习，可以少走很多弯路</p></blockquote><p><a href="https://nginx.org/en/docs/" target="_blank" rel="noopener">nginx documentation</a></p><p><a href="http://www.conardli.top/blog/article/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E8%80%85%E5%BF%85%E5%A4%87%E7%9A%84nginx%E7%9F%A5%E8%AF%86.html" target="_blank" rel="noopener">前端开发者必备的 nginx 知识</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzA4Nzg5Nzc5OA==&amp;mid=2651674303&amp;idx=1&amp;sn=b34cbf009aac5f901ce81a65df06359f&amp;chksm=8bcb9516bcbc1c006ff36cd7a8a83d40c7b24143d0c76fc15f61bbb2c210355615125aa95d94&amp;mpshare=1&amp;scene=1&amp;srcid=1031DJIgeaaQj5fafJbAc3mg#rd" target="_blank" rel="noopener">百万并发下 Nginx 的优化之道</a></p><p><a href="http://openresty.org/download/agentzh-nginx-tutorials-zhcn.html" target="_blank" rel="noopener">agentzh 的 Nginx 教程</a></p><p><a href="https://moonbingbing.gitbooks.io/openresty-best-practices/content/index.html" target="_blank" rel="noopener">OpenResty 最佳实践</a></p><blockquote><p>以下为极客时间专栏</p></blockquote><p><a href="https://time.geekbang.org/course/intro/138" target="_blank" rel="noopener">Nginx 核心知识 100 讲</a></p><p><a href="https://github.com/russelltao/geektime-nginx" target="_blank" rel="noopener">极客时间：nginx 核心知识 100 讲配置文件与代码分享</a></p><p><a href="https://time.geekbang.org/column/intro/186" target="_blank" rel="noopener">OpenResty 从入门到实战</a></p>]]></content>
    
    <summary type="html">
    
      Nginx基础知识从小白到入门
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>从国内跳槽至新加坡工作的经验分享</title>
    <link href="https://wsgzao.github.io/post/singapore/"/>
    <id>https://wsgzao.github.io/post/singapore/</id>
    <published>2020-02-23T02:59:49.000Z</published>
    <updated>2020-03-17T09:59:48.456Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191007154135.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>为什么会写这样一篇长文记录和分享自己在新加坡的工作生活，主要是我在 2018 年 6 月 9 日前需要了解新加坡的时候网上的参考信息屈指可数，出于这个原因我决定顺手记录来新加坡的经历方便自己回顾也方便他人参考。非常感谢在 2019 年出现的<a href="https://996.icu" target="_blank" rel="noopener">996.icu</a>，让更多人看到了一个不一样的世界，里面也有很多朋友分享了新加坡的生活经历。不管你现在的生活是 996 还是 669，我都希望大家可以从电视剧《都挺好》里发现那个最真实的自己。如果你只想了解我是如何来到新加坡的可以直接跳到最后一章。</p><blockquote><p>为帮助大家玩转新加坡，快速适应当地生活</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 xx 月 xx 日 - 增加 PR 申请结果和新加坡金融理财以及信用卡申请心得<br>2019 年 12 月 31 日 - 增加新加坡保险购买经历的思考和新加坡 2020 年各行业工资数据<br>2019 年 10 月 16 日 - 更新 EP 申请 PR 材料细节，增加新加坡婚礼红包份子钱的礼仪<br>2019 年 06 月 09 日 - 更新新加坡一周年经历<br>2019 年 02 月 14 日 - 更新半年的经历以及 PR 申请流程<br>2018 年 09 月 09 日 - 增加新加坡 3 个月工作生活感受<br>2018 年 08 月 01 日 - 更新个人经验<br>2018 年 05 月 15 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/singapore/">https://wsgzao.github.io/post/singapore/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://github.com/623637646/996.Leave" target="_blank" rel="noopener">逃离 996</a></p><p><a href="https://zhuanlan.zhihu.com/p/65226485" target="_blank" rel="noopener">算法工程师肉身翻墙新加坡经验分享（踩坑记）</a></p><p><a href="https://mp.weixin.qq.com/s/1EOA7MpTpmR-fg6b0nvMXg" target="_blank" rel="noopener">坡县生存指北 V1.0</a></p><hr><h2 id="认识狮城"><a href="#认识狮城" class="headerlink" title="认识狮城"></a>认识狮城</h2><p>姓名：新加坡</p><p>年龄：53 岁（成立于 1965 年，国庆日为每年的 8 月 9 日）</p><p>家庭住址：北半球赤道地区，位于马来半岛最南端 （北纬 1°22′，东经 103°48′）</p><p>住房面积：新加坡国土面积 710.3 平方公里 （新加坡面积是上海的 1/9，北京的 1/23）</p><p>家庭成员：人口约 520 万，密度达到每平方公里 7700 多人（排在世界前列）</p><p>相貌特征：新加坡多元种族和文化的相互融合是其极具魅力的原因之一，由华族（占全国人口约四分之三）、欧亚族、印度族、马来族、土生华人构成。</p><p>性格特征：新加坡以实行严格的法律和制度著称，无论是居民还是游客，都需要予以足够重视，否则可能会被课以重罚。当然，如果您遵循当地法律规章，也不必过分担心。</p><blockquote><p>所获荣誉：或许这些荣誉只属于过去，我们更需要关心的是现在和未来会怎样</p></blockquote><p>让人最想移民的国家全球排名第一<br>全球最具竞争力国家排名第一<br>最适应亚洲人士居住的地方全球排名第一<br>城市基础设施建设全球排名第一<br>全球化程度最高的城市排名第一</p><p>其他方面：<a href="http://www.visitsingapore.com.cn/travel-guide-tips/about-singapore/" target="_blank" rel="noopener">http://www.visitsingapore.com.cn/travel-guide-tips/about-singapore/</a></p><h2 id="旅游出入境"><a href="#旅游出入境" class="headerlink" title="旅游出入境"></a>旅游出入境</h2><blockquote><p>新加坡 5 件套</p></blockquote><ul><li>打疫苗</li><li>打 HPV</li><li>开账户</li><li>买保险</li><li>看学校</li></ul><blockquote><p>签证</p></blockquote><p>中国公民去新加坡须提前申请有效签证，不可以落地签。</p><p>中国公民申请的新加坡旅游 / 商务签证为电子签证（e-Visa），在获得签证后，建议上网打印多份有效签证以防遗失。签证费为每人 SG$30。</p><p>新加坡签证可多次入境，有效期分别有 35 天 / 62 天 / 2 年，由签证官根据申请人资料而定。逗留时间则由入境官决定，通常为 14-30 天。从 2015 年 6 月 1 日起新加坡将给予符合条件的中国公民有效期长达 10 年的多次入境签证。</p><p><a href="http://www.visitsingapore.com.cn/travel-guide-tips/travelling-to-singapore/" target="_blank" rel="noopener">http://www.visitsingapore.com.cn/travel-guide-tips/travelling-to-singapore/</a></p><blockquote><p>申请途径 How to Apply</p></blockquote><p>2014 年 12 月 8 日起大使馆及各领事馆停止接收签证申请，可登录新加坡外交部官网，查询中国国内官方指定的签证机构，办理新加坡签证。</p><blockquote><p>所需资料 Required Information</p></blockquote><ol><li>个人信息表（登录新加坡外交部官网下载表格，链接：<a href="http://www.mfa.gov.sg）" target="_blank" rel="noopener">www.mfa.gov.sg）</a></li><li>户口本（原件或扫描电子版，户主 + 个人页复印件）</li><li>身份证（原件或正反面扫描电子版，正反面复印件）</li><li>护照（原件或个人页扫描电子版，个人页复印件，有效期 6 个月以上）</li><li>2 张 2 寸白底免冠照片</li><li>在职证明原件或相关职业证书</li></ol><blockquote><p>出入境</p></blockquote><p>从 2018 年 10 月 4 日起，新加坡纸质入境卡（人称 “白卡”）即将走入历史！取而代之的是电子化入境卡。</p><p>访客可通过移民关卡局官方网站 <a href="https://www.ica.gov.sg/" target="_blank" rel="noopener">https://www.ica.gov.sg/</a> 或下载手机应用程序填写资料。通过手机填写资料还有自动储存功能，以方便下一次入境时使用。而与家人或小组团体同游新加坡的人，能够以团体方式提交入境资料。</p><p>离境前别忘了退税，在附有 “退税” 标志的场所消费满 100 新币以上，即可退回 7% 的商品及服务税，退税时需出示购物发票或收据。具体的退税要求，可咨询工作人员。</p><blockquote><p>其它注意事项</p></blockquote><p>电源插座：新加坡使用的标准电流是 220-240 伏特交流电（50 赫兹），在这里，您可以使用三眼电源插座。</p><p><a href="http://www.visitsingapore.com.cn/travel-guide-tips/" target="_blank" rel="noopener">http://www.visitsingapore.com.cn/travel-guide-tips/</a></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802161219.png" alt=""></p><h2 id="新加坡工作准证"><a href="#新加坡工作准证" class="headerlink" title="新加坡工作准证"></a>新加坡工作准证</h2><blockquote><p>关于工作准证的最新信息请以新加坡人力部 (MOM) 发布的为准</p></blockquote><p><a href="https://www.mom.gov.sg/" target="_blank" rel="noopener">https://www.mom.gov.sg/</a></p><p>在新加坡工作，新加坡人力部 Ministry Of Manpower (MOM) 是最常打交道的政府部门，工作准证不仅是由人力部批准和颁发所有文件提交最终也是到达人力部</p><p>注意：所有提交给 MOM 的资料原件，都需要在入境的时候随身携带。以便在去人力部办卡的时候，让长官核实和查阅。</p><ol><li>新版卡片上将不再印刷准证的到期日期，新版卡片会印上二维码（QR Code），下载 SGWorkPass 的手机 APP 后，可以扫码查看持卡人的职务、证件是否有效等信息</li><li>如果过海关或签合约等需要核对卡片截止日期时，不再可以只看卡面信息，还需要扫码或在线上核对截止日期等，建议保存 SGWorkPass 截图至手机中以防万一</li></ol><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802161307.png" alt=""></p><p><a href="https://docs.qq.com/sheet/DeVh5ZEhKWnhCTldK" target="_blank" rel="noopener">如果发现表有错误请点击链接申请编辑更新，谢谢</a></p><h3 id="Work-Permit-WP"><a href="#Work-Permit-WP" class="headerlink" title="Work Permit (WP)"></a>Work Permit (WP)</h3><p>WP 是人力部设置的给外国低水准员工提供的工作准证。</p><p>对申请者的要求：薪水和学历：无要求<br>年龄：马来西亚人（18-58 周岁），非马来西亚人（18-50 周岁）；<br>对公司的要求：需要为其购买保额至少 15000 新币的保险；缴纳 5000 新币担保金<br>注意事项：<br>公司需要先为雇员申请好 WP 并办理保险，才可以持 WP 准证进入新加坡。在申请的状态中，本人不可以进入新加坡。</p><h3 id="S-PASS-SP"><a href="#S-PASS-SP" class="headerlink" title="S PASS (SP)"></a>S PASS (SP)</h3><p>SP 是人力部设置的给外国中级技术水准雇员提供的工作准证。</p><p>对申请者的要求：学历：大专，本科，或者技术资质认证（需要至少一年全职学习获得的技术认证）；<br>工作年限：虽然没有明文规定最少需要多少年的工作经验，但工作经验会作为一个审核标准；<br>对公司的要求：所付起薪 2200 新币；</p><p>注意事项：<br>也有公司人头配额限制：服务行业 SP 人数不可超过总员工的 15%，其它行业是 20%。<br>你在申请之前需要确保学历在 Dataflow，学信网及中国学位与研究生教育信息网上可以查到。另外，针对不同的行业，也有可能需要提交相关的专业证明。</p><h3 id="Employment-Pass（EP）"><a href="#Employment-Pass（EP）" class="headerlink" title="Employment Pass（EP）"></a>Employment Pass（EP）</h3><p>EP 是人力部设置的给外国专业人员（管理层，主管或专业职位）提供的工作准证. 是工作准证中级别最高的。</p><p>对申请者的要求：<br>年轻的申请者需拥有优秀院校的毕业证书，且达到 3600 的雇佣薪水以及拥有相关专业经验才可以申请。<br>至于年长的申请人，则必须拥有更高的薪水以及相应工作经验和工作质量。</p><p>对雇主的要求：<br>所付起薪 3600 新币</p><p>注意事项：<br>和申请 SP 一样，在申请之前需要确保学历在 Dataflow，学信网及中国学位与研究生教育信息网上可以查到。另外，针对不同的行业，也有可能需要提交相关的专业证明。<br>根据对应的准证类型，提交人力部 (MOM) 所要求的材料</p><ul><li>有效的护照信息</li><li>必要的技能证书</li><li>有效的毕业证</li></ul><p>2018 年 1 月 1 日起两件重要变化</p><ul><li>EP 准证持有人月薪至少 6000 新币以上可以给配偶和孩子申请相关准证(DP)</li><li>EP 准证持有人月薪至少 12000 新币以上可以申请父母长期探访准证（LTVP)</li></ul><h2 id="家庭成员准证"><a href="#家庭成员准证" class="headerlink" title="家庭成员准证"></a>家庭成员准证</h2><h3 id="Dependant‘s-Pass-家属准证（DP）"><a href="#Dependant‘s-Pass-家属准证（DP）" class="headerlink" title="Dependant‘s Pass 家属准证（DP）"></a>Dependant‘s Pass 家属准证（DP）</h3><p>家属准证，在新加坡工作或经商，并持有 EP SP 或 Enptrpass 的人士，可为自己的配偶及 21 岁以下小孩申请的一种准证。持家属准证的小孩，可直接入学新加坡政府中小学。</p><p>薪水：担保人固定月薪薪水需达到 5,000 新币以上。（2018 年 1 月 1 日起至少达到 6000 新币以上）。</p><p>工作：EP 或创业准证家属，可通过公司向人力部申请新加坡工作的凭证 LOC（Letter of consent），批准后，可直接工作（不占用公司配额）。SP 家属准证，需申请工作准证后才能工作。家属准证（DP）持有人申请到工作准证（EP 或 SP）后需取消 DP，SP 家属取得的工作准证有效期与 SP 持有人准证有效期相关。</p><h3 id="Long-Term-Visit-Pass-长期探访准证（LTVP）"><a href="#Long-Term-Visit-Pass-长期探访准证（LTVP）" class="headerlink" title="Long Term Visit Pass 长期探访准证（LTVP）"></a>Long Term Visit Pass 长期探访准证（LTVP）</h3><p>长期探访准证，是新加坡政府颁发的一种可以在新加坡长期居住的准证，期限从半年到十年不等。其中新加坡公民的配偶又可以申请获得 LTVP+。目前的审批部门有两个，一个是 ICA 移民厅，一个是 MOM 人力部。</p><p>需要去移民厅申请的：</p><ol><li>新加坡公民的配偶<br>2.PR 的配偶</li><li>新加坡公民 / PR 未满 21 周岁的小孩</li><li>新加坡公民 / 21 周岁以上 PR 的父母</li><li>寻求在新加坡工作的有关高校毕业生</li><li>小孩 / 孙辈在新加坡持学生准证读书的母亲或外祖母</li><li>寻求准许在新加坡分娩者</li></ol><p>新加坡移民局网址<br><a href="https://www.ica.gov.sg/" target="_blank" rel="noopener">https://www.ica.gov.sg/</a></p><p>需要去人力部申请的：</p><ol><li>EP/SP 准证持有者的配偶（2018 年 1 月 1 日起至少 6000 新币）</li><li>EP/SP 准证持有者未满 21 周岁的未婚残疾子女（2018 年 1 月 1 日起至少 6000 新币）</li><li>EP/SP 准证持有者未满 21 周岁的未婚继子女（2018 年 1 月 1 日起至少 6000 新币）</li><li>EP/SP 准证持有者的父母（2018 年 1 月 1 日起至少 12000 新币）</li><li>Entrepass（创业准证）的父母</li></ol><p>新加坡人力部网址：<br><a href="https://www.mom.gov.sg/" target="_blank" rel="noopener">https://www.mom.gov.sg/</a></p><h2 id="新加坡通讯指南"><a href="#新加坡通讯指南" class="headerlink" title="新加坡通讯指南"></a>新加坡通讯指南</h2><p>国内的手机大部分都可以在新加坡直接换卡使用，除非你的手机是中国移动 4G 定制版本，由于网络制式的区别，无法使用新加坡 4G 网络，新加坡目前 2G 网络停止服务。</p><blockquote><p>小贴士：建议使用全网通手机，去国外任何地方都可以直接换卡使用。</p></blockquote><p>运营商：新电信（Singtel）、星河（Starhub）和 M1（Mobile One）</p><p>在新加坡机场、邮局、7-11 便利店和代理商都可以购买和充值电话卡，记得一定要带上护照，新加坡的手机卡采用实名制。推荐大家下载所用运营商的 App，查询和购买话费、流量等。</p><blockquote><p>Zero1: Get Ready For Unlimited Data | Plans</p></blockquote><p>我自己办理的是 Zero1 的 9.9 新币 / 月无限流量套餐</p><p>详情请参考官网：<a href="https://zero1.sg/" target="_blank" rel="noopener">https://zero1.sg/</a></p><blockquote><p>新加坡支持携号转网但仅限于 post-paid，pre-paid 是不支持的</p></blockquote><h2 id="新加坡交通指南"><a href="#新加坡交通指南" class="headerlink" title="新加坡交通指南"></a>新加坡交通指南</h2><p>新加坡主要交通出行方式：地铁（MRT）、轻轨（LRT）、巴士（Bus）和德士（Taxi）。</p><p>其中地铁（MRT）是新加坡最便捷的交通工具，也是日常最佳的出行方式。根据官方 2017 年 1 月份提供的最新信息显示，全岛共设有 142 个车站，目前主要的运营线中，南北运营线以 “NS” 红线标明，东西运营线以 “EW” 绿线标明，东北运营线以 “NE” 紫线标明，环线以 “CC” 黄线标明，市区运营线以 “DT” 蓝线。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802161743.png" alt=""></p><p>新加坡地铁图</p><p><a href="https://www.lta.gov.sg/content/ltaweb/en/public-transport/mrt-and-lrt-trains/train-system-map.html" target="_blank" rel="noopener">https://www.lta.gov.sg/content/ltaweb/en/public-transport/mrt-and-lrt-trains/train-system-map.html</a><br><a href="https://exploresg.com/ditie/" target="_blank" rel="noopener">https://exploresg.com/ditie/</a></p><p>新加坡地铁和巴士车 (站) 内规定</p><ol><li>不可吃喝、吸烟、携带榴莲、大声喧哗和带宠物 </li><li>Bus 不报站、上下车需要刷卡</li></ol><p>温馨提示</p><ol><li>地铁和巴士上冷气很足，建议携带薄外套</li><li>在 20 分钟内，地铁和巴士之间转换，车资有优惠</li><li>在地铁或者商场等使用扶梯时，左侧是站立侧，右侧是快速通道</li></ol><h2 id="新加坡房屋指南"><a href="#新加坡房屋指南" class="headerlink" title="新加坡房屋指南"></a>新加坡房屋指南</h2><blockquote><p>组屋(HDB)</p></blockquote><p>新加坡的“组屋”，全称为组合房屋。由新加坡建屋发展局（HDB）不以盈利为目的承担建筑的楼房，为大部分新加坡人（80%）的住所。</p><p>组屋一般分为三房式、四房式和五房式。三房式指一厅两房，使用面积约 60 平方米；四房式是一厅三房，使用面积约 90 平方米；五房式是两厅三房，使用面积大致在 110 平方米。</p><p>组屋的区分都是按照地区名 + 数字，例如：PasirRis Block 186（巴西立大牌 186）、YishunBlock 210（义顺大牌 210）等。</p><p>屋内客厅，厨房，卫生间都是公用设施，一般会配备冰箱，洗衣机，空调或者风扇。</p><p>租房费用（一般情况下）：</p><p>新型组屋 (近 10 年内建成的) 相对条件会好很多 (平均价格 S$1000-1200 / 间)<br>单人单间：500-1000 新币<br>二人间：350-550 新币 / 人<br>四人间：270-350 新币 / 人</p><p><strong> 小贴士 </strong></p><ol><li>新加坡政府规定租住的房子必须要能在建屋局上注册。正常情况下，注册要求至少住 6 个月。如果不能注册，就是不合法的房屋。</li><li>如果退租，一定要提前一月声明，以防押金不退。</li><li>仔细看合同，仔细看合同，仔细看合同。</li></ol><blockquote><p>私人公寓(Condo)</p></blockquote><p>公寓，常见两房式或三房式，相当于国内的高档成熟社区，内有免费游泳池、健身房，BBQ 等公共设施，住宿环境相对较好，价格也相对高一些；大部分的 condo 房间都有主人房与非主人房之分，主人房有自己独立的洗手间和相对宽敞的卧室，当然价格也比非主人房高 200-300 / 月(非主人房平均价格<br>S$1,000-1,500 / 间 / 月)</p><blockquote><p>排屋(Terrace)</p></blockquote><p>独门不独栋的联排别墅，此类出租房源相对较少，住宿环境、价格与房子位置、条件有相当大的关系。</p><blockquote><p>独栋别墅(Landedproperty)</p></blockquote><p>少见于房间出租。</p><h2 id="租房"><a href="#租房" class="headerlink" title="租房"></a>租房</h2><blockquote><p>如果英语不是太差，不推荐狮城 BBS 或者微博租房，如果你有认识的新加坡房产中介自然是最佳选择</p></blockquote><p>PropertyGuru - <a href="http://www.propertyguru.com.sg/" target="_blank" rel="noopener">http://www.propertyguru.com.sg/</a></p><p>SRX - <a href="https://www.srx.com.sg/" target="_blank" rel="noopener">https://www.srx.com.sg/</a></p><p>新加坡本地发布平台，房源多。使用下来感觉 PropertyGuru 和 SRX 信息发布是最多的，信息筛选条件多，容易搜索到希望的房源。多为中介发布，有中介费。</p><p>我移除了 Nestia 和 99.co 因为根据新加坡房地产中介的建议他们只会在流量头部站点积极更新，其它站点基本疏于维护，租房房源一般 3 周以上就可能不用看已经租出去了。</p><p>在新加坡租房，有哪些经验可以分享？<br><a href="https://www.zhihu.com/question/22430961" target="_blank" rel="noopener">https://www.zhihu.com/question/22430961</a></p><h2 id="在新加坡买房与中国有何不同？"><a href="#在新加坡买房与中国有何不同？" class="headerlink" title="在新加坡买房与中国有何不同？"></a>在新加坡买房与中国有何不同？</h2><blockquote><p>无论在中国还是新加坡买房前后都记得关注下政策上的变化，新加坡买房的流程很简单，首付 = 房屋价格 + 税 + 中介费 - 贷款额度。</p></blockquote><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200109111339.png" alt=""></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802162119.png" alt=""></p><p>① 面积</p><p>说到面积，首先让中国买家摸不着头脑的，就是面积单位的换算。中国买家习惯用平方米（也称平方公尺）计算面积，来新加坡选购房子时听到的都是平方英尺，往往脑子得转一圈才知道个大概。1 平方米约等于 10.8 平方英尺。100 平方米就是 1080 平方英尺。</p><p>除了计算单位不同，“面积”一词在两地公寓市场上的定义也不一样。在中国，面积指的是建筑面积；新加坡算的是实用面积。建筑面积的算法比较繁琐。简单来讲，是根据各套房屋的套内建筑面积，求得各套房屋分摊所得的共有建筑分摊面积，比如门口的面积、楼梯等，都按比例算进每一个单位的建筑面积。</p><p>所以，同一个公寓单位，其建筑面积一定会大于实用面积，通常后者比前者少 20％左右。在中国买一个 “100 平方米” 的单位，和在新加坡买一个“1080 平方英尺”（相当于 100 平方米）相比，后者明显感觉宽敞一点，就是这个道理。</p><p>② 地契</p><p>中国的房产地契通常是 70 年左右，而新加坡的则有 99 年、999 年和永久地契之分。新加坡的房产因为地契年限长，颇受外籍人士青睐。其中，永久地契的房产一般要比 99 年地契的贵 20％。尽管如此，永久地契一直很抢手，也深受中国买家欢迎，因为买家看准这块市场的保值与增值。</p><p>这其中很大程度上因为新加坡的地皮比较少，想要建新楼必须拆掉现有的建筑。不像中国地皮比较多，还有可开发的地段。新加坡永久地契的地段价值比较高，所以如果进行集体出售、或是被政府征用的话，永久地契房地产的房主会可得到较高的补偿。</p><p>物以稀为贵，永久地契房产越是少见，也就越炙手可热。此外，永久地契对中国买家还有另一大吸引力，那就是永久地契满足了 “总觉得要给后代留下点什么” 的传统华人心愿。所以说，新加坡房产能如此吸引外国买家，与地契久脱不了关系。</p><p>③ 贷款</p><p>在新加坡首次购房的买家，可向金融机构贷款的房贷比率顶限为 80％，外籍人士一般则最高 70％。在中国，外国人一般不能向本土中国银行贷款，只能通过外资银行或中国银行境外支行。</p><p>原本新加坡和中国在房贷比率顶限方面有很大差别。不过两国都不断调整房贷比率顶限，因此两国的房贷比率顶限差别已缩小。</p><p>④ 税收</p><p>在新加坡，如果在一定期限里卖掉公寓，卖家需要上缴印花税。在 2011 年 1 月 14 日过后买房的购屋者，只要在四年内卖房屋都需要支付卖方印花税，第一、二、三和四年卖掉房产的税率分别是 16％、12％、8％和 4％。此后就不必上缴卖家印花税。</p><p>在中国，除了印花税外，还需要上缴增值税。为了给中国房地产市场降温，中国政府在 2013 年实施 20％的房地产买卖增值税。所谓增值税，就是对卖家卖房所得的利润征收的税。譬如，150 万人民币买的房子在几年后以 200 万人民币卖掉，卖家所赚得的 50 万就将需要以一定的比率交税。</p><p>⑤ 车位</p><p>在中国购买中高档住宅，需要另外购买车位。而在新加坡，买家不需要另付车位费，发展商一般会为每个新单位赠送一个车位。可不能小瞧这个车位费。近年来，车位费在中国节节攀升，动辄十几、二十万人民币，是一笔不小的开销。</p><p>新加坡私人公寓不收车位费，而是将停车场的修建和维护等费用，包括在每月的项目管理费之中。管理费除了车库，还包括游泳池、健身房等设施，每月一般是几百元新元。如果每月的管理费是 300 元新元（约 1400 元人民币），一年就是 1 万 7000 元人民币，15 年刚好是 25 万 5000 元人民币。总体来讲，这要比中国的车位 “划算” 得多。</p><h2 id="新加坡医疗指南"><a href="#新加坡医疗指南" class="headerlink" title="新加坡医疗指南"></a>新加坡医疗指南</h2><p>新加坡是一个热带国家，从国内刚过去有可能因水土不服引起的伤风、感冒、皮肤敏感或蚊虫叮咬等。出行之前可以带一些三九胃泰、牛黄解毒等日常药品之类的药品，防范于未然是最好的。</p><p>看医生：在新加坡持有工作签证，所在的公司会按照新加坡劳工部规定给每位员工会购买医疗保险或者费用报销。</p><p>医疗保险：一般是三种模式</p><ol><li>直接去合作门诊，提供公司信息，看病不用自己拿钱。</li><li>直接去合作门诊，提供公司信息，看病前给门诊 5 新币（每个公司不一样），其它的费用不用自己拿。</li><li>直接去合作门诊，自己先付产生的费用，然后去公司报销。意外伤害险等（视公司合同规定）。</li></ol><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191219193504.png" alt=""></p><p><a href="https://toutiaosg.com/%E6%96%B0%E5%8A%A0%E5%9D%A1%E5%8C%BB%E7%96%97%E5%85%A8%E7%90%83%E7%AC%AC%E4%B8%89%EF%BC%8C%E5%87%AD%E4%BB%80%E4%B9%88%EF%BC%9F/" target="_blank" rel="noopener">新加坡医疗全球第三，凭什么？</a></p><h2 id="公立和私立医疗服务"><a href="#公立和私立医疗服务" class="headerlink" title="公立和私立医疗服务"></a>公立和私立医疗服务</h2><blockquote><p>中国人在新加坡看病就好比外国人在中国看病一样不是很方便，价格不便宜，小病也有可能看成大病</p></blockquote><p>新加坡的医疗服务体系以优质高效著称，选择面广, 综合医院，专科医院，私人诊所遍布全国, 随处可见；不仅为全新加坡的公民，永久居民，外籍工作人士提供服务，同时周边国家的高端人群, 包括东南亚、亚洲、欧洲、中东阿拉伯等国家的病患都会将新加坡的国际医疗服务作为他们的首选。</p><p>新加坡的公立医疗机构和私立医疗机构在整个医疗系统中扮演着不同的角色。基础医疗门诊 80% 由私立医疗机构 / 家庭医生诊所提供，另外 20% 则是由政府综合诊疗所提供；而综合医疗，包括各类科室的住院，专科和 24 小时急诊主要由公立医疗机构提供，占 80% 的比例，剩下的 20% 由私立医疗机构提供。由于政府的有效规划和管控，公立医院和私立医院相辅相成, 缺一不可。</p><p>在公立医疗机构就诊一般都需要提前预约, 候诊时间较长, 也不能自由选择医生。由于那里的医生要面对更多的患者, 为每个患者服务的时间相对较短；而私立医疗机构由于患者相对较少, 不需要预约, 候诊时间较短，还可以自己选择医生，医生也能与患者作更多的交流, 提供更细致的服务，收费就相应高一些。</p><p>一些新加坡的公立医院也为自费病人提供高端医疗服务, 设有针对性的部门和项目, 如体检，会诊，专科治疗等。基础的检查和服务, 公立医院比私立医院收费较低；对于外籍人士和高端的服务项目, 公立和私立医院的收费差异不大。</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzIwMTQxODUxNw==&amp;mid=2650871863&amp;idx=3&amp;sn=b9536c73a1b6a0e0ed02019598d75c35&amp;chksm=8d1b8a4dba6c035b898a133fdf30ec613eb6826a0f4a66d5befe6364a04e24fb6bde9a981ce7&amp;scene=21" target="_blank" rel="noopener">8 家新加坡著名的公立和私立医院</a></p><h2 id="货币兑换和汇款"><a href="#货币兑换和汇款" class="headerlink" title="货币兑换和汇款"></a>货币兑换和汇款</h2><blockquote><p>如果时间宽裕，推荐走新加坡工商银行渠道</p></blockquote><p>新加坡实行货币开放政策，货币兑换中心随处可见，尤其是在牛车水 (China Town) 附近。如有汇款需求到国内，可以先去牛车水汇款 (珍珠坊二楼)，方便快捷。等周围熟悉后，推荐去淡宾尼(Tampines) 汇款到国内，汇率会比其它地方高一些。具体的地方，在地图搜索 Tampines Money Exchange Center。 </p><p>小贴士：汇款中心一般可以汇到中国邮政、中国农业、中国交通、中国招商和中国银行等。第一次汇钱到国内，当填写汇款单据的时候一定要知道对方银行卡是在 <strong> 省 </strong> 市 ** 银行支行开户的(很重要)。</p><h2 id="法律法规"><a href="#法律法规" class="headerlink" title="法律法规"></a>法律法规</h2><p>新加坡向来是给世人展示优美环境，井然秩序，舒适安全的名片，然而这些美好的展现离不开新加坡法律制度的约束和规范。Singaporeis a“fine”country 完整的诠释了这两方面。所以在新加坡生活，你需要注意以下细节：</p><ol><li>自动排队：公共场合最经常听到的一句话就是 please queue！</li><li>着装：不同场合穿不同衣服, 建议每天换衣服。</li><li>公共习惯：乘坐公共交通或者在公共场合用餐时, 切忌大声喧哗, 不然你一样会被当做异类奥! 而且记得再饿也要撑到下车再用餐。</li><li>言论：新加坡是多文化和宗教融合的国家, 公共场合不要发表敏感政治言论或者宗教话题, 这也体现互相尊重。</li><li>不当行为：竖中指可能会被当做种族歧视处理的</li><li>如厕：来也匆匆, 去也冲冲。如若不然请准备 500 新币吧。</li><li>口香糖：公共场所不允许嚼口香糖, 不可以随意买卖, 允许带少量入境, 正是这个奇葩的规定维护了公共环境的整洁。</li><li>吸烟：新加坡公共场所绝对禁烟。如若吸烟不幸被抓到, 恭喜你一个月的工资 (高达 2000 新币) 为国家做贡献了!</li><li>垃圾：乱丢垃圾初犯者将处高达 1000 新币罚款, 再犯者将罚款额提高至 2000 新币以及在劳改法令下受罚。</li><li>交通规则：闯红灯, 随便乱穿马路这些不多啰嗦。违反的是规则, 伤害的是人身安全, 因为小编也感觉马路上的车如同闪电般行驶。</li><li>不可非法聚会和使用暴力</li></ol><p>以上内容是提醒大家在生活细节方面应遵守的规则, 但有些行为未必就可以罚款结案的, 比如: 签证到期后逾期逗留、抢劫、公共场所涂鸦、纵火、携带毒品等这些可都是在鞭刑的定罪范围内的。</p><p><strong> 最后郑重的提醒各位：</strong> 在机场不要发扬助人为乐精神帮陌生人携带物品, 因为很有可能你同时把生命交给了别人(运输毒品和贩毒同罪)。</p><h2 id="工作准证遗失如何处理"><a href="#工作准证遗失如何处理" class="headerlink" title="工作准证遗失如何处理"></a>工作准证遗失如何处理</h2><ol><li>发现丢失后立即携带护照或者工作准证的复印件到任何一间警察局报案，记得保存报案记录原件。</li><li>通知雇主公司 HR, 让其在 7 天之内在新加坡人力部网上提交补办工作准证的申请。</li><li>费用: 首次补办 100 新币, 第二次是 300 新币(一般在提交申请补办 4 个工作日可去新卡)</li></ol><h2 id="银行卡遗失如何处理"><a href="#银行卡遗失如何处理" class="headerlink" title="银行卡遗失如何处理"></a>银行卡遗失如何处理</h2><ol><li>发现遗失后立即拨打银行客户服务中心热线挂失</li><li>银行客户专员会核对护照和工作准证信息, 然后等待新卡邮寄到住处或者去支行直接领取。</li></ol><p>POSB 用户请拨打 18003396963<br>DBS 用户请拨打 18001111111<br>UOB 用户请拨打 18002222121<br>OCBC 用户请拨打 18003633333</p><h2 id="护照遗失如何处理"><a href="#护照遗失如何处理" class="headerlink" title="护照遗失如何处理"></a>护照遗失如何处理</h2><p>如护照遗失或被盗, 请立即到中国驻新加坡大使馆如实填写《护照遗失陈述表》，提供关于护照遗失或被盗的情况说明, 以及提供报警记录原件及复印件。如护照损毁, 请提交损毁的护照, 以及护照损毁的原因说明。</p><p>具体的更换护照和网上预约等等详细流程请参考大使馆的官网：<a href="http://www.chinaembassy.org.sg/chn/" target="_blank" rel="noopener">http://www.chinaembassy.org.sg/chn/</a></p><p>中国驻新加坡大使馆信息:</p><p>地址: 150 TANGLIN ROAD,SINGAPORE 247969</p><p>领事部：64712117；92971517(仅限紧急领保求助, 不接受证件咨询)</p><p>Email: <a href="mailto:chinaemb_sg@mfa.gov.cn" target="_blank" rel="noopener">chinaemb_sg@mfa.gov.cn</a></p><p>办公时间：周一至周五(节假日除外)</p><p>上午 9:00-11:30</p><h2 id="新加坡日常-App-推荐"><a href="#新加坡日常-App-推荐" class="headerlink" title="新加坡日常 App 推荐"></a>新加坡日常 App 推荐</h2><blockquote><p>如果是 Android 记得安装 Google 框架，如果是 iOS 记得调整更改 Apple ID 国家或地区</p></blockquote><p>交通: Grab(类似国内滴滴)、Google Map(谷歌地图)、SG Buses(公交时刻表)、Mobike（摩拜单车国内账户通用）</p><p>社交: Facebook、WhatsApp、Twitter、Instagram</p><p>购物: Shopee、Lazada、eBay、Amazon、淘宝国际、京东国际、网易考拉、网易严选、小米有品、拼多多</p><p>娱乐: Youtube(视频必备)、 Golden Village(电影院)、CATHAY (电影院)</p><p>快递: <a href="http://www.xiaopodao.com/" target="_blank" rel="noopener">小坡岛集运</a>、淘宝直送 / 集运</p><p>微信公众号: </p><ul><li>新加坡眼</li><li>新加坡狮城椰子</li></ul><p>视频 / 音频播客:</p><ul><li><a href="https://www.youtube.com/channel/UClL3IBde8AhRSqGXioa3FiA?sub_confirmation=1" target="_blank" rel="noopener">AbbieLu 新加坡</a></li><li><a href="https://www.ximalaya.com/toutiao/5218657/" target="_blank" rel="noopener">俊玮谈新</a></li></ul><p>特别推荐: </p><ul><li><a href="https://zero1.sg/" target="_blank" rel="noopener">Zero1</a>: 9.9 每月无限流量手机卡</li><li><a href="https://originallyus.sg/products/" target="_blank" rel="noopener">SG BusLeh</a>: 个人认为是比 SG Buses 更好用的公交时刻表</li><li><a href="http://refer.eatigo.com/eati17aqf-1v9" target="_blank" rel="noopener">eatigo</a>: 开启新加坡美食 5 折之旅</li><li><a href="https://app.shopback.com/sgp?raf=kxg2ZG" target="_blank" rel="noopener">ShopBack</a>: 类似于国内的购物返现平台</li><li><a href="http://www.xiaopodao.com/" target="_blank" rel="noopener">小坡岛集运</a>: 从中国寄送包裹到新加坡空运最低仅需 19RMB/kg, 海运小包 10RMB/kg</li></ul><p>推荐信息聚合平台:</p><ul><li><a href="https://toutiaosg.com/" target="_blank" rel="noopener">新加坡头条</a>: 聚合了主流的新加坡本地中文站点，用来搜索历史记录比较合适</li><li><a href="https://blog.seedly.sg/" target="_blank" rel="noopener">Seedly</a>: 熟悉新加坡本地的银行金融，保险，买房投资规则</li><li><a href="https://www.moneysmart.sg/" target="_blank" rel="noopener">MONEYSMART</a>: 详细的金融类评测对比报告</li></ul><h2 id="新加坡至其他国家旅游"><a href="#新加坡至其他国家旅游" class="headerlink" title="新加坡至其他国家旅游"></a>新加坡至其他国家旅游</h2><blockquote><p>旅游可以具体向专业旅行社咨询，以政策变化为准</p></blockquote><p><a href="http://cs.mfa.gov.cn/wgrlh/lhqz/cjwdn_660600/t1175681.shtml" target="_blank" rel="noopener">境外中国公民赴香港特区怎么办理？</a></p><ol><li>持中华人民共和国护照，在海外过境香港特区前往中国内地或其他国家（或地区），凭有效护照和联程机票，可免办进入许可并在港停留 7 天。持中华人民共和国护照，自内地经香港特区前往其他国家（或地区），出示联程机票和前往国家或地区的签证，或合法居留证件 (如 “绿卡”) 后，可免办进入许可并在香港特区停留 7 天。 </li><li>如预计在香港特区停留超过 7 天，应事先申请进入许可。中国驻外使领馆可根据申请人情况签发 3 个月一次或两次有效，每次停留不超过 30 天的进入许可。持有外国永久居留证件，并在海外居住不少于 1 年者，可申请两年多次有效进入许可。</li></ol><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMjA4NzQzNA==&amp;mid=503621899&amp;idx=1&amp;sn=62d66af2463312f4d66adf0a272e71f8&amp;chksm=004730ee3730b9f8b6a0ece62952493af344cce03f3a9fb8504a3e3a9a15777f6e351d285d26&amp;mpshare=1&amp;scene=23&amp;srcid=08022k223Jxs2MD7XXeHCXxT&amp;sharer_sharetime=1564734537933&amp;sharer_shareid=456ba82bbd1a1c9f32e5725824095308%23rd" target="_blank" rel="noopener">新加坡到各国签证办理条例</a></p><h2 id="新加坡父母签证"><a href="#新加坡父母签证" class="headerlink" title="新加坡父母签证"></a>新加坡父母签证</h2><blockquote><p>网上找到的，忘记出处了，如果有错误描述请及时指正</p></blockquote><p>本人 PR，老婆七月份预产期。打算让父母 6 月中旬来。计划步骤如下:<br>1, 先买往返机票（返程可更改的）。<br>=== 对的。<br>2,5 月份申请父母旅游签证。<br>=== 旅游签证可提前一个月内申请，有效期多数 63 天，也有一年，两年，非固定。有效期内入境即可。<br>3, 父母来新后申请延期至 89 天。<br>=== 对的。<br>4, 同时申请 LTVP。<br>=== 也没错。<br>5, 悲剧后申诉。<br>=== 步骤没错。<br>请指点一下按这样做有什么不拖吗？<br>=== 有什么不妥是吧？没什么不妥的，如果觉得自己条件还可以，就可以早点安排申请 LTVP，如果觉得条件比较牵强，可以晚一点入境，晚一点延期，晚一点申请 ltvp，争取在月子后多待一点时间帮你们带孩子。<br>可以现在就申请旅行签证吗?<br>=== 提前一个月内申请，一个月内，内。<br>旅行签证有效期多久? 一年多次吗？<br>=== 上面已经回答了。<br>申请 LTVP 必须人在新加坡吗？<br>=== 是的。必须入境后申请。</p><p><a href="https://www.ica.gov.sg/" target="_blank" rel="noopener">https://www.ica.gov.sg/</a></p><h2 id="新加坡婚礼红包份子钱"><a href="#新加坡婚礼红包份子钱" class="headerlink" title="新加坡婚礼红包份子钱"></a>新加坡婚礼红包份子钱</h2><blockquote><p>婚礼怎么随份子钱，是个讲究活儿。它不仅是人情的体现，也是婚礼平衡开支的一种方式</p></blockquote><p>切记要分清是 “午宴” 还是 “晚宴”，时间是在工作日还是周末。毕竟在不同时段，价格差异很大。</p><p>想知道新加坡各大酒店在工作日、周末或公共假期时的婚礼餐标，可以查看<a href="http://www.weddingangbao.com" target="_blank" rel="noopener">Wedding Ang Bao</a></p><p>这可以通过知道婚礼举办地每桌的费用来推算出最合适的红包金额。计算方式是，每桌的基本费用处以 10，就能得到最低应给红包金额。比如婚宴每桌需要 1000 新币（包括了消费税 7% 和服务税 10%）。每桌 10 位客人。将 1000 除以 10，平均每人需要送红包 100 新币。</p><p>另外，由于红包的价格通常是整数，最好包一些新加坡人认为是比较吉利的数字。礼金金额切忌有 1，3 或 4，因为它被认为是不吉利的。最常见的礼金金额是 100 新币、120 新币、128 新币、150 新币、160 新币。</p><ul><li>红包的行情，是在餐馆还是酒店举行，午宴或晚宴，平日或周末，都不相同<ul><li>CAPELLA，ST.REGIS 等这种超级高大上的酒店一般要给 200-250 新币 / 人</li><li>金沙，香格里拉等酒店则是 160-200 新币 / 人</li><li>希尔顿，圣淘沙的酒店则是 150-200 新币 / 人</li><li>凯悦，泛太平洋酒店则是 120-150 新币</li><li>非酒店的餐馆，一般 100-120 新币 / 人</li><li>如果是自助餐档次的呢，80-100 新币 / 人</li></ul></li><li>红包的数目其实就是按人头计算，常用的计算方式是每桌的基本费用处以 10</li><li>关系特别好的时候，有些朋友也会在最少红包数额的基础上加 100-200 新币哦</li></ul><h2 id="新加坡公民-永久居民-外国人的区别"><a href="#新加坡公民-永久居民-外国人的区别" class="headerlink" title="新加坡公民 / 永久居民 / 外国人的区别"></a>新加坡公民 / 永久居民 / 外国人的区别</h2><blockquote><p>我们大多数人的起点是外国人，这点与国内的户口制度类似，无论是中国还是新加坡始终绕不开买房和教育这两座大山</p></blockquote><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20190802162244.png" alt=""></p><p><a href="https://docs.qq.com/sheet/B80RhZ2ZATLC0ge3Bi2bLYpr2iY5PC1nE3031LWRcK1rTcgj0Z2bvD00bDO63Ie3tz2ovOwW4" target="_blank" rel="noopener">如果发现表有错误请点击链接申请编辑更新，谢谢</a></p><h3 id="EP-申请-PR"><a href="#EP-申请-PR" class="headerlink" title="EP 申请 PR"></a>EP 申请 PR</h3><blockquote><p>在新加坡工作满半年即可申请 PR，不过大概率是被拒的，失败后等待半年继续申请挑战吧</p></blockquote><p><a href="https://www.ica.gov.sg/apply/PR/apply_PR_who" target="_blank" rel="noopener">Becoming a Permanent Resident</a></p><blockquote><p>申请步骤均在网上完成，务必提前准备好申请材料，重点检查 4、6、7、9、10</p></blockquote><ol><li>有效的护照个人信息和官方备注页面，原件与复印件</li><li>EP 或 S Pass 准证原件及复印件</li><li>身份证（如有）</li><li>出生证明或者家庭户口（非英文需要公证书翻译）</li><li>更名证明文件（如有）</li><li>标准护照尺寸照片</li><li>最高学历（成绩单，资格证，会员资质等也可提供）(非英文需要公证书翻译)</li><li>以前雇主的推荐信，说明就业的性质，持续时间以及基本工资（如有）</li><li>过去六个月的工资单</li><li>现任雇主的信函，说明就业日期，过去六个月的每月工资，包括加班和津贴，可以找 HR 准备，要在申请前一个月内开具此信件</li><li>IRAS 同意书，表示同意 ICA 获取和核实与此相关的财务信息</li><li>对于自雇人士，需出示有效商业登记证明书并显示合伙人姓名</li><li>对于自雇人士，与工作有关的职业执照（例如小贩执照，营业执照， 物业代理牌照）</li></ol><blockquote><p>已婚人士还需要这些：</p></blockquote><ol><li>结婚证书（非英文需要公证书翻译）</li><li>关于之前婚姻的死亡证明或离婚证明（如有）</li><li>关于以前婚姻的子女的监护文件（如有）</li><li>配偶的最高教育证书（包括大专学历），成绩单，职业资格证等（非英文需要公证书翻译）</li></ol><blockquote><p>如果配偶一同申请：</p></blockquote><ol><li>配偶的有效旅行证件及有效的入境通行证，护照（资料页）</li><li>配偶的出生证明（非英文需要公证书翻译）</li><li>更名文件（如有）</li><li>配偶的身份证（如适用）</li><li>关于配偶以前的婚姻离婚证明以及孩子的监护文件，或者死亡证明（如有）</li></ol><blockquote><p>如果孩子一起申请：</p></blockquote><ol><li>孩子的护照资料页</li><li>孩子的出生证明，显示孩子和父母的姓名（非英文需要公证书翻译）</li><li>儿童收养文件（如适用）</li><li>儿童改名证明（如适用）</li></ol><p>关于其他的申请条件可以访问移民局网站，查询需要提交的资料。</p><blockquote><p>关于 PR 申请期间搬家修改住址需要更新信息，可以直接 Email ICA</p></blockquote><p><a href="mailto:ICA_PR@ica.gov.sg" target="_blank" rel="noopener">ICA_PR@ica.gov.sg</a><br><a href="mailto:ICA_Feedback@ica.gov.sg" target="_blank" rel="noopener">ICA_Feedback@ica.gov.sg</a></p><p>A) Applicant / Sponsor’s full name:</p><p>B) Applicant /Sponsor’s NRIC/FIN :</p><p>C) Application Reference Number (if any):</p><p>D) Your contact number:</p><h3 id="PR-申请公民"><a href="#PR-申请公民" class="headerlink" title="PR 申请公民"></a>PR 申请公民</h3><blockquote><p>等 PR 满两年后再申请</p></blockquote><p><a href="https://www.ica.gov.sg/application/singapore-citizenship/becoming-a-singapore-citizen" target="_blank" rel="noopener">Becoming a Singapore Citizen</a></p><p><a href="https://toutiaosg.com/%E5%90%90%E8%A1%80%E6%95%B4%E7%90%86%EF%BC%81%E5%A6%82%E4%BD%95%E5%9C%A8%E7%BD%91%E4%B8%8A%E7%94%B3%E8%AF%B7%E6%96%B0%E5%8A%A0%E5%9D%A1pr%E5%92%8C%E5%85%AC%E6%B0%91%E6%9C%80%E5%BC%BA%E6%94%BB%E7%95%A5/" target="_blank" rel="noopener">吐血整理！如何在网上申请新加坡 PR 和公民最强攻略！收藏~</a></p><h2 id="新加坡本地常用名词解释"><a href="#新加坡本地常用名词解释" class="headerlink" title="新加坡本地常用名词解释"></a>新加坡本地常用名词解释</h2><ul><li>MOM: Ministry of Manpower 新加坡人力部</li><li>IPA: In-Principle Approval 批准信</li><li>EP: Employment Pass 人才准证</li><li>DP: Dependant’s Pass 家属准证</li><li>PR: Singapore Permanent Resident 新加坡永久居民</li><li>SC: Singapore Citizen 新加坡公民</li><li>HDB: Housing &amp; Development 政府组屋</li><li>Condo: 私人公寓</li><li>Food Court: 食阁</li><li>CPF: 公积金</li><li>NUS: National University of Singapore 新加坡国立大学</li><li>NTU: Nanyang Technological University 新加坡南洋理工大学</li><li>NRIC: National Registration Identity Card 新加坡公民身份证</li><li>FIN: Foreign Identification Numbers 拥有长期工作准证的外国人身份证</li></ul><h2 id="我的新加坡之旅时间轴"><a href="#我的新加坡之旅时间轴" class="headerlink" title="我的新加坡之旅时间轴"></a>我的新加坡之旅时间轴</h2><blockquote><p>时间轴不再描述细节，如果需要了解详细信息可以阅读后面的内容</p></blockquote><p>201804</p><ul><li>LinkedIn 收到 100offer 猎头来自 Sea 的工作邀请机会</li><li>经历 3 轮远程 Skype 视频面试，时间约为 3 周</li><li>提出辞职由 Sea HR 帮忙开始申请 EP，时间约为 3 周</li></ul><p>201805</p><ul><li>完成离职流程，时间约为 1 个月</li><li>收到 EP 的 IPA，由 Sea HR 帮忙开始申请 DP，时间约为 1 周(申请 DP 请提前准备好结婚证公正)</li><li>完成新加坡机票，住宿，货币，各种材料纸质化和电子扫描化的准备(可选为申请 PR 准备国内学历学位公证和出生证公证)</li></ul><blockquote><p>再强调一下出国前的建议</p></blockquote><ol><li>随身携带好护照和相关入境材料，非常重要，非常重要，非常重要</li><li>证件，学历和结婚证公正翻译等材料可以通过扫描全能王 (CamScanner) 录入为电子版，水印是可以很方便去除的，这里就不多说了。如果觉得好用请购买正版服务支持下总部位于上海的合合信息，名片全能王 (CamCard) 也是他们家的产品</li><li>提前规划好到达新加坡后的住宿(新加坡 Airbnb 违法)，交通出行，手机应用，SIM 卡，入职流程</li><li>准备好足够的新币现金建议 4k+，因为银行卡和租房都是大头，有条件至少准备一张以上的 Visa/Mastercard 信用卡</li><li>出国前检查下国内的银行，手机，社保，人事档案是否安排妥当，身份证和护照离过期更换时间是否可控</li><li>如果有条件出国前做下全面的体检至少对自己身体有一个清晰的认识，把牙齿之类的小毛小病尽可能提前扫除隐患</li><li>现在的网络通信都很发达，记得和家人保持联系，减少他们的担心，自己照顾好自己</li></ol><p>201806</p><ul><li>20180609 星期六晚上 20 点第一次来到新加坡</li><li>完成住宿，EZ-Link 交通卡和 Singtel Prepaid 手机卡，时间约为 1 天</li><li>入职一周左右由 HR 协助申请 EP，需要本人预约 MOM 现场办理 EP，收到 EP 实体卡时间约为 1 周内</li><li>收到 EP 实体卡使用 SGWorkPass 扫描获取有效期并保存照片，注册 SingPass，约 1 周左右收到密码信封然后激活</li><li>办理 Zero1.sg 的无合约限制，无限流量的 Postpaid 手机卡，背后运营商为 Singtel 质量靠谱</li><li>携带相关证明办理银行卡，我选择 UOB 但是推荐各位选择 DBS，如需转账回国可以再额外开通工商银行</li></ul><p>201903</p><ul><li>全年在新加坡工作满 183 天以上需要报税，新加坡税率较低平均缴税额度大概年收入 5%-8%，对外国人来说可以理解为税前≈税后或者到手收入</li><li>工作满半年可以开始申请 PR，但一般建议等满 2 年，可以提前准备各种材料，国内学历学位和出生证公证在新加坡本地认证机构都可以代办</li><li>在半年时间中根据自身状况可选办理信用卡，健身卡，推荐补充个人住院医疗，重疾人寿意外为可选项，保障自己的身体健康很重要</li><li>基本熟悉新加坡的生活节奏，明白新加坡的优缺点，规划自己下一个阶段目标</li></ul><p><img src="https://cdn-blog.seedly.sg/wp-content/uploads/2018/06/30020702/Personal-finance-guide-01.png" alt=""></p><p><a href="https://blog.seedly.sg/read-me-first-your-personal-finance-journey-starts-with-this-article/" target="_blank" rel="noopener">READ ME FIRST: Your Personal Finance Journey Starts With This Article</a></p><p><a href="https://www.moneysmart.sg/" target="_blank" rel="noopener">moneysmart</a></p><p>201912</p><ul><li>新加坡保险的思考和决策</li><li>我购买的是 AIA 储蓄 + 终生人寿重疾险 30 万新币保障额度</li></ul><p>我身边很多购买过保险的人基本是 AIA 和 Prudential，我为什么会买 AIA 因为一直在房产投资群潜水，偶然冒泡后误打误撞结识了 AIA 团队排名第一的 (真) 学霸，大佬开玩笑邀请我去他们团队私人会所检验其专业性，我拖了半年觉得自己对保险的认知仅停留在皮毛阶段，最后选择在年末去了解下，对方因为私人原因跨行业横向切入保险的经历挺不容易的，我简单说下我理解的新加坡保险，不正确的地方也欢迎补充，毕竟这对每个人来说都息息相关：</p><ol><li>公司配置的一般是团体险，覆盖门诊 + 住院医疗，福利好可以不用担心看不起病。如果额度不高就建议单独购买住院医疗，大家应该清楚新加坡住院的费用是很贵的，保险费用在 1000 新币 / 年左右不算贵，选择哪家保险都差不多，这也是大多数人在新加坡自费购买的第一个保险。如果是 PR/SC 可以升级政府 CPF 中的私人医疗保险。</li><li>新加坡的寿险分定期和终生，保额高费用低，单独购买每年 800 新币即可配置 100w 保额，这也是很多人从国内飞来新加坡购买寿险的原因。</li><li>新加坡的重疾险和国内一样都是最贵的险种，但核心优势是新加坡保险协会制定的保障范围覆盖初期 + 中期 + 重疾种类市场最多，而且购买和赔付流程合理清晰。需要根据家庭收入分配，年龄，保额，初期，倍数等仔细评估</li><li>新加坡的意外险比较简单，注意并理解赔付规则为意外的含义</li><li>新加坡投资类保险收益没有香港的乐观</li></ol><p>如果买保险只需要找同类型最便宜的，那我们也就不用这么累去仔细比较。保险中存在很多影响价格的关键参数，不少细节也需要你和保险代理一一沟通确认清楚，无论你选择哪一家保险公司一个专业且靠谱的保险代理会让你省心不少，如果你在国内买过保险或者房子应该能感同身受。</p><p>对于买保险这个事情千万不能像父母那一代认为是骗子或者买成了人情险，要对自己的家庭生活品质和风险管理负责，新加坡保险代理相对国内比较靠谱，购买保险前多和已经买过的朋友或者不同的保险公司对比咨询如何合理搭配，在不同阶段买适合的保险产品，不要等到大病意外或被拒绝赔付后才意识到为什么没有提前配置正确的保险产品。微信朋友圈中你也许已经看到过大量真实的水滴筹大病求助信息，我希望你或者你的家人朋友能通过保险的来应对生活的挑战。</p><p><a href="http://m.opinion.caixin.com/zknews/2017-01-22/101047816.html" target="_blank" rel="noopener">我为什么要去新加坡买定期寿险 - 财新网专栏作家 - 明宏义</a></p><p>2020xx</p><ul><li>关于新加坡银行储蓄利率和信用卡申请选择</li><li>关于 PR 申请结果</li></ul><p>DBS: Debit Card, DBS Multiplier Account, POSB Everyday Card<br>UOB: Debit Card, UOB One Account, UOB ONE CARD<br>OCBC: Debit Card, OCBC 360 Account, OCBC 365 Credit Card<br>ICBC: Debit Card, Credit Card<br>Gray: GrayPay Card</p><ol><li>新加坡银行首选 DBS，因为我是 UOB，我老婆是 DBS，略微复杂的阶梯储蓄利率奖励额度上限一般 10w 新币超出部分按基础利率计算，整体来看新加坡本地银行基本都维持在年化利率 2%，选任何一家收益差别并不大，没有特殊情怀自然是推荐用户体验更好本土实力更强的 DBS</li><li>新加坡信用卡在你没有决定是否长期留在新加坡前属于可有可无，如果需要办理信用卡可以参考知乎 @<a href="https://www.zhihu.com/question/336365196" target="_blank" rel="noopener">中国工商银行股份有限公司新加坡分行 信用卡部主管 邢起超</a>的客观回答，<a href="https://www.moneysmart.sg/" target="_blank" rel="noopener">MoneySmart.sg</a>有更多详细的评测报告</li><li>单从投资收益和风险来说我希望各位可以多关注下 REITs，ETF，美股或者港股，以学习的心态了解整个世界的金融体系大概如何运作的，如果各位对金融理财了解不多，推荐先阅读一本书《小狗钱钱》，微信读书可以免费看。</li></ol><h2 id="新加坡-1-个月感想"><a href="#新加坡-1-个月感想" class="headerlink" title="新加坡 1 个月感想"></a>新加坡 1 个月感想</h2><blockquote><p>选择新加坡的理由：给自己多一种选择</p></blockquote><ol><li>原始坐标：上海，无留学经验也没有去过新加坡</li><li>猎头推荐新加坡的职位，想想自己那被遗忘的蹩脚英语抱着试一试的心态</li><li>一共 3 轮 Skype 远程视频面试，约 4 周时间到最后确认 offer</li><li>约 1 天时间思考，离职申请，签电子合同</li><li>检查护照有效期，下载学信网英文翻译认证，由 HR 帮助提交申请 EP，约 3 周内收到 IPA</li><li>在上海户口所在区公证处办理结婚证公证翻译，约 3 周时间完成，又慢又麻烦</li><li>完成 EP 后由 HR 帮助提交申请 DP，约 1 周内收到 IPA</li><li>购买机票，打印 IPA，带上护照，打包行李，兑换 4000 新币，确认人事档案存放地址，选择不缴纳每月养老保险和医疗保险约 1500 元人民币(可由父母代缴，中断非连续缴纳暂时不影响回国养老，以政策变化为准)</li><li>飞机上填写好新加坡入境卡，完成入境登记，无需录入指纹，开启华为天际通</li><li>抵达公司提前安排好的住址，熟悉新加坡环境</li><li>办理 EZ-Link 交通卡和 Singtel Prepaid 手机卡(如果没有强需求可以暂时不办理)</li><li>公司 HR 提交 EP 现场办理申请，收到邮件后预约 MOM 办理时间（我没有被要求体检，根据不同公司情况而定）</li><li>约 1 周后收到 EP 绿色实体卡，使用 SGWorkPass 扫描保存照片，注册 SingPass 后约 1 周左右收到密码信封</li><li>公司开具证明办理银行卡，新加坡本地我选择 UOB(保持 1000 新币存款)，另外强烈推荐再办理工商银行卡(持卡 0 门槛，转账回国 0 费用)</li><li>网上申请 Zero1 的无限流量手机卡，约 3 个工作日收到直接使用，弃用 Singtel Prepaid（浪费了 25 新币）</li><li>新加坡日常消费以现金为主，我本人习惯手机支付无奈降级至刷信用卡阶段(持有浦发 AE 白 / Visa/Master)，怀念下国内的支付宝和微信</li></ol><p>我刚来新加坡 1 个多月，不用担心语言不通，大部分人都会说华语。新加坡真的不算大，地铁和公交都很方便，空气质量很好至少我的鼻炎消失了，天气没有国内那么热，居然没有蚊子，没有蚊子，没有蚊子。在这段时间里我幸运了结识了交大和复旦的校友，跟随专业的中介实地考察了新加坡的租房和买房市场，走遍了几个重要的核心区域，顺便吃了几顿亲民的米其林一星。之后我应该还会继续更新自己在新加坡的经历，比如健身、快递、看病等日常生活，希望对大家有所帮助。</p><h3 id="新加坡-3-个月感想"><a href="#新加坡-3-个月感想" class="headerlink" title="新加坡 3 个月感想"></a>新加坡 3 个月感想</h3><blockquote><p>咋们就从最传统的衣食住行说起吧</p></blockquote><p><strong> 衣 </strong></p><p>因为新加坡全年都是夏季，平时的正常温度基本在 30° 上下，对于我来说已经把家里的夏装的家底全部带过来了，所以也没有什么特别需要单独购买，作为男生如果以后缺衣服的话在新加坡线下就是优衣库，线上还是优衣库。</p><p>女生的选择实在太多了，乌节路和 VivoCity 等都可以逛好久，这里就跳过吧</p><p>新加坡本地的 Outlet(奥特莱斯)是 IMM，如果你喜欢跑步运动，那么只卖 80 新币的 adidas Ultraoost X 和 Asics GEL-Kayano 会有一定吸引力</p><p>在新加坡网购，和国内激烈竞争的胜出者相比，还有很长一段路要走，当然也证明东南亚市场是一块巨大的蛋糕等待挖掘</p><p>新加坡室内空调冷气普遍开得比较足，建议怕冷的同学多备件长袖外套在公司，长时间逛商场时注意冷热交替避免生病</p><p>从中国快递至新加坡的方式已经快捷不少，淘宝直运和集运，小坡岛集运单人小包团都是很方便的选择</p><p><strong> 食 </strong></p><p>新加坡最有特点的饮食文化莫过于食阁(Food Court)，其实有点类似于上海的大食代，但价格亲民而且还有米其林一星的神奇存在，平均一顿的价格区间在 3-7 新币，整体口味偏重。每个食阁上方都会标注 A/B/C 卫生评级，新加坡本地的习惯一般不在家做饭，大家都出去吃所以种类也还算多，不知道吃什么可以认准 Singapore Best Foods 红色标志，和国内相比关键是放心。</p><p>如果平时想吃顿大餐类似国内海底捞、小龙坎那种，平均每人大概 30-50 新币左右，评级更高的餐厅价格自然也水涨船高</p><p>自己在家做饭的成本其实和外面吃也差不了多少，如果居住的房子允许大炒和大煮当然可以选择自己动手丰衣足食</p><p>新加坡的菜市场比较少见可能是我没有刻意去寻找或者需求的缘故吧，买蔬菜和肉类基本都在 Sheng Siong(昇菘)，FairPrice(NTUC)，Cold Storage，喜欢日本食物还可以选择 DON DON DONKI，我个人很喜欢这只萌企鹅的魔性主题曲</p><p><a href="https://www.bilibili.com/video/av32078102" target="_blank" rel="noopener">https://www.bilibili.com/video/av32078102</a></p><p>新加坡的便利店清一色 7-Eleven，部分大一点的屈臣氏 (Watsons) 支持支付宝(Alipay)，上面提到的 Sheng Siong 已经全部支持 Alipay</p><p>外卖大家就不要指望 GrabFood 或 Foodpanda 有饿了么和美团外卖的速度了，老老实实去附近的食阁按时吃饭才是正道</p><p>我每个周末都会使用 <a href="http://refer.eatigo.com/eati17aqf-1v9" target="_blank" rel="noopener">eatigo</a> 开启 5 折美食之旅打打牙祭</p><p>图文介绍可以参考我同事更新的<a href="https://feiyang233.club/post/SG-food/" target="_blank" rel="noopener">那些年在新加坡吃过的店</a></p><p><strong> 住 </strong></p><p>(1) 租房</p><p>我在租房这个环节基本上算是跳过了，刚来时建议找好房源，这边的酒店居住成本很高的。因为目前是长租在公司提供的组屋 (HDB) 内，毕竟室友都是公司自己人很放心，合同限制不多每月会安排阿姨定期打扫和保养空调等，手机银行转账支付租金也方便。回想当时刚来的 1 个月每周都跟随专业的中介校友出去找房子都十分辛苦，更不要说自己联系中介一家一家看了，说多了都是泪。这边的房产中介需要考证，据说通过率只有 10-15%，每个中介都会展示唯一的证书编号，所以不用太担心被骗，不过每个中介的态度千差万别，找到靠谱的中介能够加快找房的速度。</p><blockquote><p>备注: 公司已经不再提供租房支持，可以联系 HR 询问中介联系方式提前沟通房源</p></blockquote><p>由于地理位置和房屋面积质量差异，下面的租房价格仅仅是一个参考区间，数字单位为新币 / 月<br>组屋(HBD)，普通房 600-800，主人房 1000-1200，整租 1000+<br>公寓(Condo)，普通房 800-1500，主人房 1200-2000，整租 1500+</p><p>房源信息可以来自于同事，也可以自己在线挑选，方法我都写在前面了，和同事咨询过新加坡租房的大致流程</p><ol><li>看准自己喜欢的房子</li><li>看清楚合同，看清楚合同，看清楚合同，签约</li><li>签 1 年一般押一付一，签 2 年押二付一</li><li>中介费是根据实际情况由房东或者租客来承担，一般根据合约长短支付 0.5 或 1 个月的房租作为中介费</li></ol><p>(2) 买房</p><p>虽然是否决定买房的话题为时尚早，但经历了魔都十几年房地产的上涨自然也不会错过对新加坡房地产的研究，如果你是冲着 30w 新币的组屋 (HDB) 那么找新加坡本地人结婚是最快的途径。新加坡在 2018 年 07 月 06 日 0 点开始调整了印花税，对于我们普通人来说 2-3 年内拿到永久居民 (PR) 已然不易。新加坡私人公寓 (Condo) 的价格和质量相对国内来说是有优势的，但是 1 室 80w，2 室 100w，3 室 120w 这样的价格加上印花税还是会让我们感到一丢丢肉疼，好在房地产市场涨幅长期平稳且退出机制清晰，租房市场也足够活跃，而且银行可以贷款 7 成 + 2% 左右的低利率还是足以让我们拥有奋力一搏的勇气，不用牺牲 6 个钱包。</p><p>这里给未来的新加坡买房经历留个坑位吧</p><p><a href="https://toutiaosg.com/%E6%96%B0%E5%8A%A0%E5%9D%A1%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BA%B2%E5%8E%86%EF%BC%9A%E5%A6%82%E4%BD%95%E5%9C%A81%E4%B8%AA%E6%9C%88%E5%86%85%E4%BA%91%E6%B7%A1%E9%A3%8E%E8%BD%BB%E5%9C%B0%E4%B9%B0%E6%88%BF/" target="_blank" rel="noopener">新加坡程序员亲历：如何在 1 个月内云淡风轻地买房卖房</a></p><p><a href="https://zhuanlan.zhihu.com/p/32493002" target="_blank" rel="noopener">新加坡买房小记</a></p><p><strong> 行 </strong></p><p>现在无论在哪里手机的使用比重都是极高的，我自己来新加坡前把小米 6 替换为华为 P20 Pro，妻子还是用的小米 MIX2，在国内早已习惯电信乐享家 199 元全国无限流量，我们的老卡 1 个是移动，1 个是联通，来到新加坡之后选择了无合约限制价格为 29.99 新币无限流量的虚拟运营商 Zero1.sg，因为背后是 Singtel 所以质量有保障。在新加坡接收国内短信验证码之类不要钱，双卡双待都是没有问题的，不过我妻子还是很期待 iPhone 即将推出的双卡功能，毕竟她在美国时的 iPhone5s 也用了 4 年多，被我硬生生拖入 Android 阵营实属不易。 </p><p>新加坡公共交通发达，Google Map 在手说走就走。我的选择和国内类似，能坐地铁尽量就不会选择公交车，因为坐公交车有几点不爽，如果你不熟悉新加坡或者不会熟练使用 Google Map 建议不要轻易乘坐公交车。</p><blockquote><p>乘坐地铁切记不可吃喝、吸烟、携带榴莲、大声喧哗和带宠物，乘坐公交车的规定与地铁类似但有以下额外注意事项</p></blockquote><ol><li>公交车来之前一定要招手才会停</li><li>在到达下一站前一定要按 Stop 红色停车按钮，不然不会停</li><li>下车时还要再刷一次交通卡确认付款</li></ol><p>除了公交车和国内差异较大以外，平时过马路记得按一下身边的指示灯，你不按或者对面也没人按，那你就不用想着过去了</p><p>这边的公交卡称为 EZ-Link，想刷 NFC 不好意思没有小米和华为，请购买 NFC SIM card。虽然充值很方便支持国内双币信用卡，但我还是很想念上海二维码扫码进闸机。另外新加坡地铁站没有安检，没有安检，没有安检。</p><p>我丢过一次地铁卡，为了挽回里面 25 新币我第一次主动走进新加坡警察局开具丢失证明，他们做事确实负责而高效，不过我因为操作失误导致旧卡数据没有正常转移到新卡，超过 7 天申报时间我也没有办法无力回天，所以再一次怀念下国内的手机刷卡。</p><p>~~ 新加坡已经遍布 Mobike 和 ofo，摩拜的国内账户可以在这里直接使用，ofo 需要重新注册。~~ 单车市场基本倒闭</p><p>新加坡打车市场已经被 Grab 一统江湖，Uber 和滴滴出行都入股 Grab，另外 Grab 打车很安全而且支持支付宝(Alipay)，普通出租车都支持微信和支付宝。目前能看到的对手只有 Gojek，也许不久的将来也会合并。</p><p>关于机票从上海往返新加坡的航班很多，价格和飞行时间比较透明就不多说了，我这里还是推荐大家体验下新加坡航空 (Singapore Airlines) 的服务，今年航空公司评选又站回全球第一，即使乘坐经济舱也不要忘记品尝一下新加坡司令哈。</p><p>今年国庆节期间我和老婆买了新加坡至四川成都的 5 日往返机票，新加坡航空旗下的胜安航空(SilkAir)，令我感到惊喜的是 2 人机票往返价格总共才 1600 人民币，单人往返 800 人民币，可能是 bug 价格了。</p><p>新加坡和国内的走位不一样，行走避让和司机开车位置与国内正好相反。</p><p>新加坡拥车成本比较高，虽然公共交通发达，但是开车的梦想还是要有的，万一实现了呢？</p><blockquote><p>传统的四大金刚扯完了，我们再聊一些逆转未来的话题</p></blockquote><p><strong> 安全 </strong></p><p>新加坡的安全本质上是基于严格的法律加上遍布各地的摄像头，你如果想挑战下不如先了解下鞭刑的酸爽和罚款罚到你肉疼的数字。</p><p>吸烟，喝酒，乱扔垃圾在法律中都有明确要求，虽然不能百分百杜绝抽烟现象，但你走在马路上不会遇到随意吐痰也不需要提防狗屎。穿过十字路口车辆都会早早的自觉停下来等你先过去，新加坡随处可见的就是无障碍设施，地铁沿线基本都设置了棚顶，既可以防晒又可以躲雨，即便每天都能遇到短时暴雨由于出色的排水系统也从来不会看到有积水。</p><p>在国内随时会收到的垃圾短信和房产金融中介等骚扰电话，在新加坡基本是看不到的，不过 Email 和 WhatsApp 这种网络骚扰还是无法消灭的。这边的违法成本比较高只要被投诉就会收到法律的严格制裁，当然注意保护自己的隐私安全始终不能掉以轻心，毕竟再文明的社会偶尔也会遇上小人。</p><p>在新加坡你基本不用担心丢失物品，因为大概率都能找回来，包包也不用刻意放在前面，拉链忘记拉上也没关系，不用担心人口贩子和小孩走丢，更不用担心一个人走夜路会不会不安全，犯罪成本高促成的低犯罪率给你带来的不仅仅是安全感更是幸福感。</p><p>由于新加坡的地理位置极好，无论是过去还是未来基本是不会受到任何灾难气候影响，台风、海啸或者地震是不存在的</p><p>新加坡的人际关系相对简单，与人为善的过程中也不要忘记多留个心眼谨慎一些，在这边和他人发生误会大多数都会听到 Sorry 和 I am fine 而不是争吵，规规矩矩排队而很少有人随意插队，政府办事效率高以廉洁著称也是难能可贵，在新加坡未必有国内这么亲切有人情味，但你能感受到的是相对的公平和简单。</p><p><strong> 健康 </strong></p><p>我在上海的时候就饱受着变态反应性鼻炎的痛苦，每次体检医生都开玩笑要不住到外环去吧，没想到现在离家这么远。至少来新加坡后我的鼻子就彻底舒畅了，我原来对空气质量也不以为然，买个小米净化器放在家里，直到离开上海前看见基因检测报告提醒风险最高的是鼻咽癌，我才明白空气对于每个人的未来都是如此重要。</p><p>新加坡的温度常年保持在 30° 上下，不会像上海夏季烈日炎炎，但新加坡比较像“蓝天白云 晴空万里 突然暴风雨”，有云有风有遮雨棚，身体其实会觉得很舒服.</p><p>之前已经说过新加坡的饮食文化以食阁 (Food Court) 为主，这些小店很多都有几十年的历史，食物未必都符合你的胃口但至少足够安全，不用担心地沟油。合理的饮食搭配以及规律的生活节奏才是根本。</p><p>新加坡本地人都注重健身，如果不想花太多钱在健身房可以考虑在小区附近的体育馆免费跑步或者花费 1.3 新币游泳。私人公寓 (Condo) 一般自带小型游泳池和健身房，虽然小但有总比没有好。如果公司有补贴健身房的价格 (一般 150-200 新币每月) 其实也不算太贵，每月 99 新币可以选择像 Fitness First or Pure Fitness(Pure Yoga)等专业健身房。</p><p>关于看病，因为前段时间工作比较忙抵抗力突然下降导致出现额头皮肤红肿，在国内经历过不注意小病而酿成大病的惨痛教训，<a href="https://wsgzao.github.io/post/wisdom-tooth/">我是如何做到花 8000 元拔智齿的</a>，所以这次特地请 1 天病假去公司合作的 Raffles Medical 私人诊所看病，事后看诊断结果比较准确且看病过程十分高科技 + 高效率，病因是 <code>带状疱疹</code>，总共 99 新币，30 是问诊费其余都是买药钱。只不过第二天我发现未有起色且眼皮红肿都快睁不开了就先让昨天的医生开具的急症介绍信，然后直奔 Raffles Hospital，在了解基本无大碍和每位专科医生复查至少 300 新币起步的情况下果断申请放弃继续治疗赶紧溜回去休养生息，这一趟花了 199 新币，其中 130 为问诊费(节假日看病费用翻翻)。命固然重要，但人只要一生病真的可能失去一切甚至连累家人。</p><p>2019 年去了 2 次新加坡伊丽莎白医院 - Mount Elizabeth Hospital，还增加了人生中第一次坐救护车的经历，好软好舒服。首先是价格没有想象中那么贵，当然还是优先建议购买住院保险以防万一，其次是建议能选择私立医院就不要选择公立，看病的效率真让人着急。未来有机会再探索下新加坡鹰阁医院 - Gleneagles Hospital，2020 年春节期间去了 2 次鹰阁医院，如很多人所言名声在外但设施老化，如果选择生宝宝还是推荐伊丽莎白医院诺维娜分院 - Mount Elizabeth Hospital Novena</p><p>和同事回顾了他们看病的流程，作为外国人一般也是建议直接去附近的私人医院，价格其实差不多但不用排队。如果选择去政府医院比如 NUH 等可能存在排队现象，这个体验对于国内看病来说大家心里应该很明白有多痛苦，如果各位有足额的医疗保险在国内其实可以选择特需医疗(免排队 + 专家门诊)。关于新加坡医院的更多信息可以参考最上面的介绍。</p><p>印尼 “烧芭” 引发空气污染和马来西亚动不动就拿断水挑事也是新加坡需要持续努力解决的问题之一。</p><p>新加坡的蔬菜和水果算不上贵但也不会像国内一样便宜，除了猫山王榴莲和部分进口水果质量和价格有优势，也没有太多的种类可供选择，我自己会从网易考拉购买 Swisse 作为补充，话说新加坡的营养品真心贵，同样的 Swisse 一小瓶卖 56 新币，其它品牌价格也是高居不下。</p><p><strong> 娱乐消费 </strong></p><p>新加坡本身就很小，加上我和我妻子都倾向于工作，学习和健身。平时的娱乐活动也就停留在节假日出去寻找下亲民美食，慢慢游览新加坡仅有的几个景点，新加坡环球影城，S.E.A. 海洋馆，新加坡动物园，新加坡夜间动物园，滨海湾花园，金沙酒店附近的鱼尾狮和摩天轮，圣淘沙和赌场，其它像植物园，大学校园很多都是免费的，旅游一般 2 天可以快速结束，如果需要细细品味也就再多增加 1-2 天足够了。</p><p>新加坡娱乐设施真的不算很多，看电影还得去现场买票，网上购买需要多花钱。吃喝玩乐想看看附近的活动和评价都没有像美团点评类似的产品，毕竟需求不像国内这么大，但我觉得让国内的美团猫眼或者阿里淘票票来进攻新加坡市场，相信分分钟钟可以拿下。</p><p>新加坡本地目前小额仍然以现金为主，商场一般支持刷卡，而主要的景点和购物中心区域全部覆盖支付宝(Alipay)</p><p><strong> 教育培训 </strong></p><p>虽然现在谈教育太早但是新加坡本地的教育资源始终都是偏向本国公民的，对我们来说永久居民 (PR) 只是万里长征的第一步，要不要买学区房，要不要做义工，也是留给自己的问题。感觉这又有上海户口，学区房，拼父母，何其相似？</p><p>新加坡和中国一样都很注重基础教育，对子女的教育支出都很高，新加坡第三方教育机构或者成人专业类培训机构的市场也很大。最近在微信朋友圈看到英国 BBC 邀请 3 名威尔士的优等生体验韩国鸡血教育的文章，除了深刻感受到教育的重要性，更加理解韩国快速崛起的因素，成熟而完整的教育产业链对孩子很重要，对国家来说更重要。</p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200109110126.png" alt=""></p><p><a href="https://zhuanlan.zhihu.com/p/46043323" target="_blank" rel="noopener">谈新加坡教育的分流制度</a></p><p><strong> 工作生活 </strong></p><p>我目前在一家新加坡互联网公司 Sea 上班，旗下知名度比较高的是 Garena 和 Shopee。工作制度是弹性的，没有严格的打卡要求，正常时间为 09:30-19:00，周围以中国同事居多，大部分是在这边读书毕业工作，学校几乎清一色新加坡国立大学 (NUS) 和新加坡南洋理工大学(NTU)，工作语言为英文，核心生产力工具包括 Google Suite，顶配 MacBook Pro，Herman Miller，Dell 2417H，还有无限制的饮料，水果和零食。原以为只能在国内的创业公司和少数尊重技术的优质公司才能看到的办公环境，可能在国外是很常见的事情吧。新加坡互联网公司在 IT 方面的人才非常短缺，也许是因为本地人大都投身于金融行业，所以很多技术人才也是会考虑从中国引进，甚至直接在国内开设分公司。</p><p>因为我以 EP 身份把我老婆也带了过来，目前还是 DP。对她来说在新加坡找一份金融行业的工作真的非常不容易，花了 2 个多月时间扫光了 LinkedIn 在新加坡几乎所有公开招聘，遗憾的是很少有金融行业愿意招聘非新加坡公民 (SZ) 和永久居民 (PR) 以外的人群，得到的回复大多数都是 Sorry，毕竟新加坡政府在很多地方都会优先照顾本国人的利益，这个道理放在中国也很好理解。不过目前经历了 6 轮面试最终拿到了一个还不错的 offer，后续 DP 也要转成 EP，这是一件值得庆幸的事情。</p><p>新加坡月薪中位数是 4500 新币左右，新加坡人力部公布了 2018 年全国的工资中位数 4437 新币 / 月，如果你对各行业数据感兴趣可以参考<a href="https://www.michaelpage.com.sg/salary-guide" target="_blank" rel="noopener">Singapore Salary Benchmark 2020 Michael Page</a></p><p>很多人咨询薪资范围这个不同公司不同行业职位都不一样，建议大家看看 mycareersfuture.sg，每一个申请 EP 的工作都会在上面公开若干天，这是政府要求，上面基本有职位的薪资范围，这是最准确的数据，也可以看看其他公司的报价，然后就知道你的 offer 是低于还是高于市场价了。注意这上面过往的职位是不会显示的，所以如果碰到了淡季，数据很少。</p><p>在没有明显压缩新加坡生活成本，按 1 人每月估算为 1w 人民币，如果是 2 个人差不多是 1.5w 人民币</p><p>HDB 合租主人房: 1100<br>水电网: 50<br>移动套餐: 9.9<br>饭费: 20x30<br>交通: 2x30<br>健身: 99<br>理发: 12<br>其他: 100</p><p>≈2030.9 新币≈10000 人民币，如果你是单人还可以选择普通房大概 800 每月。不过我相信新加坡贵的部分体现在后期的看病和生娃教育上<br><a href="https://mp.weixin.qq.com/s?__biz=MzIwMTQxODUxNw==&amp;mid=2650896087&amp;idx=1&amp;sn=9eb1be6f3e8ff3a5acc908e2c983cb37&amp;chksm=8d1be4adba6c6dbbb26bb7a8f6e99cff210306f1f1f856297851bc10ed378f532081f08a298b&amp;mpshare=1&amp;scene=23&amp;srcid=0627SV9XjUJihYiNxW383bUB&amp;sharer_sharetime=1564742363597&amp;sharer_shareid=456ba82bbd1a1c9f32e5725824095308%23rd" target="_blank" rel="noopener">扒一扒新加坡的精英制度！月薪 14 万的人到底经历了什么？</a><br>中国 VS 新加坡，生娃养娃究竟要花多少钱？</p><p>中国：</p><ul><li>生娃：3000-1 万人民币</li><li>养娃：65 万元 - 130 万人民币</li><li>总计：约 65 万 - 131 万人民币</li></ul><p>新加坡：</p><ul><li>生娃：1003-18912 新币</li><li>养娃：至少 67 万新币</li><li>总计：约 69 万新币</li></ul><p>推荐下 Grammarly for Chrome，在写邮件和文档时可以快速发现并纠正语法错误，对提升英文书写能力非常有帮助。我自己也是第一次开始深度使用 MacBook，记录一些简单的入门过程在 Blog 中，也可以做下参考。</p><p><a href="https://wsgzao.github.io/post/macbook/">MacBook macOS 从小白到入门</a></p><p><strong> 养老政策 </strong></p><p>新加坡不养闲人，你在新加坡的食阁 (Food Court) 仔细观察过就会发现几乎所有打扫卫生的都是老年人，和中国相比新加坡的养老金 CPF 是交多少退多少，不会被平均，所以更多的本地人会提前了解基金股票保险和投资房地产等方式来为自己养老。新加坡、日本、韩国等国家的老龄化问题已经凸显，我们都可以看到未来国内严重的老龄化趋势，谁又能独善其身呢？</p><p>新加坡政府因为楼市过热而提高印花税的闪电行动，中国也吹响了全球征税的集结号，无论身在哪里我们始终躲不开政治不是吗？</p><h2 id="日用品推荐"><a href="#日用品推荐" class="headerlink" title="日用品推荐"></a>日用品推荐</h2><blockquote><p>回顾来新加坡前后的经历，我希望自己分享的一部分实用建议和商品可以帮助大家更好的适应新加坡生活。如果你不喜欢网易严选和网易考拉可以选择性跳过。</p></blockquote><p>我自己携带并且大家都能买到的产品分享：</p><ol><li>药品：我带的是泰诺和夫西地酸乳膏，这边初期看病成本还是比较高，建议最好带一些板蓝根、急用的抗生素、抗过敏药及自己习惯的常用药，如胃药、哮喘喷剂等等。</li><li>其他综合的日用品，我是分 3 批带过来的，这里按照重要性分成 2 部分来推荐，大部分来自网易严选和网易考拉工厂店，关于原因我也记录了自己的观点。</li></ol><p><a href="https://wsgzao.github.io/post/buy/">我的线上线下购物变迁史</a></p><h3 id="必备推荐"><a href="#必备推荐" class="headerlink" title="必备推荐"></a>必备推荐</h3><blockquote><p>我就只推荐适用于男同胞的产品了，虽然我妻子也是在严选和工厂店买，如果各位有需求我日后可以再补充，她的东西实在是多</p></blockquote><p>[手机 / 耳机 / 智能穿戴无推荐]<br>Follow Your Heart</p><p><a href="http://163.lu/I8OGX1" target="_blank" rel="noopener">28 寸 纯 PC“铝框”（非全铝）拉杆箱</a><br>新秀丽制造商，但是怎么看怎么觉得更像是日默瓦(RIMOWA)，虽然有小米 90 分旅行箱但 20 寸太小，为了追求更大容量就买了这款，使用感受非常可靠，五星推荐</p><p>[双肩包无推荐]<br>我自己背的是一加(OnePlus)1 代和 2 代，她带的是 Longchamp 和 Doughnut，都是多年的老包了</p><p><a href="http://wx.uniir.com/" target="_blank" rel="noopener">独美</a><br>眼镜我和妻子每人配了 2 副做主备, 我们买的都是来自京东众筹的独美，3.3g 镜架加镜片只要 398。小米有品太阳镜带了 1 副，不过来新加坡后我从来没佩戴过</p><p>[晴雨伞没有推荐]<br>新加坡经常短时暴雨，平日基本阳光明媚，建议携带一把晴雨伞，既能遮阳、又能挡雨。我自己带了 1 把天堂和 1 把小米晴雨两用，因为比较懒所以买的都是自动伞。只是可惜了 RealBrella 锐乐 不对称设计长柄伞留在家里吃灰，我好喜欢这款大红色啊。</p><p>[跑鞋无推荐]<br>自己带了 2 双旧鞋过来，严选上买过一双类似 Adidas UltraBoost 的鞋子还不错。我妻子带了 Asics GEL-Kayano 24，无论在网易考拉买还是在新加坡本地买 Asics 都很便宜，而且新加坡 NIKE REACT 跑鞋一般也只要 120 新币左右。</p><p><a href="http://163.lu/050tb0" target="_blank" rel="noopener">两带式男女款软木拖鞋 2.0</a><br><a href="http://163.lu/SpQlo1" target="_blank" rel="noopener">两带式男 / 女款拖鞋</a><br>Birkenstock 集团制造商，我特地在国内和新加坡的专卖店对比过，自己穿了 1 代非常舒服然后又买了 2 代，因为在新加坡基本是拖鞋 + 短裤的夏装，如果你的工作要求正装注意带好皮鞋和衣服套装</p><p><a href="http://163.lu/v4KrM2" target="_blank" rel="noopener">软弹速干男 / 女沐浴拖鞋</a><br>Crocs 制造商，浴室必备。本来想分享严选的人字拖，但不知道为什么严选把它下架了，反正我基本是放在室内穿，大家买自己觉得舒服的就好</p><p><a href="http://163.lu/CKQh21" target="_blank" rel="noopener">考拉工厂店 5 双 男士精梳棉防臭休闲袜</a><br>我在新加坡穿袜子的次数就和穿运动鞋的次数保持一致，除了健身和户外活动，几乎都是大拖鞋走起，上次登顶新加坡最高峰武吉知马山也是拖鞋，不过大家还是必要学我穿拖鞋爬山，以免自己给自己挖坑</p><p><a href="http://163.lu/uE5Uz3" target="_blank" rel="noopener">网易严选 男式丝滑莫代尔平角内裤</a><br><a href="http://163.lu/7ZOLU2" target="_blank" rel="noopener">考拉工厂店 男士莫代尔零束缚感内裤</a><br>我买过 CK 也买过网易严选和小米有品的纯棉内裤，但真正可以打动我的材质还是莫代尔，网易严选和网易考拉工厂店的两款我都买了，质感各有特色。严选上还有一款空气内裤，勇于尝鲜的同学要不试试？</p><p><a href="http://163.lu/aXBps0" target="_blank" rel="noopener">考拉工厂店 男式无缝插肩短袖 T 恤</a><br>我买了 3 件来自于严选和考拉工厂店的运动速干衣，但是从品质和舒适度上还是感觉不如自己再 Nike 实体店中购买的 Dri-FIT，考拉工厂店这款已经无限逼近了。小米有品也有很多运动衣，都是可以考虑的。我个人推荐备上 3 套运动衣，因为新加坡常年夏季，出汗是难免的，速干面料可以保持身体的舒适</p><p><a href="http://163.lu/Qxhpq2" target="_blank" rel="noopener">考拉工厂店 男式运动短裤</a><br>这款运动短裤我五星推荐，不仅做工精湛，口袋拉链等细节也非常到位，我自己直接买了 2 条，如果不是因为只有 2 种颜色，我还会继续买。另外还带了一条 Nike Dri-FIT 短裤，不过因为没有拉链所以来新加坡后基本没穿过，在上海的时候也仅仅是健身时穿的，现在因为设计问题算是彻底废了。</p><p><a href="http://163.lu/FPubq0" target="_blank" rel="noopener">考拉工厂店 男式针织轻薄运动裤</a><br>这款运动长裤我五星推荐，空气面料在夏天也依旧舒爽，内口袋拉链细节设计极赞，我索性买了 2 条一模一样的黑色款。新加坡平时上班我基本是穿这款长裤，原因和上面说过的新加坡室内空调温度较低有关，注意保暖。</p><p>[睡衣没有推荐]<br>我就直接把以前优衣库的全棉联名 T 恤全部带过来当睡衣穿了，有时候出门也可以穿哈</p><p>[外套没有推荐]<br>我自己带了 Under Armour 防风防雨衣，小米有品夜跑皮肤衣，小米有品防雨皮肤衣，除了 Under Armour 放在公司偶尔冷的时候会披一下，其它皮肤衣还没穿过。</p><p>[衬衫没有推荐]<br>我把原来公司定制的各种正装带过来了，可惜就入职时穿过一次，后来就是拖鞋加运动套装上班了</p><p><a href="http://163.lu/N7voR2" target="_blank" rel="noopener">成人款 高清时尚电镀泳镜</a><br><a href="http://163.lu/tDJJb2" target="_blank" rel="noopener">黑闪系列 硅胶防水泳帽 （男女通用）</a><br><a href="http://163.lu/Egc5c1" target="_blank" rel="noopener">男式基础泳裤</a><br>严选做了游泳装备也出乎我的意料，关键是和我之前买的 Speedo 相比那叫一个便宜啊，我本身是退休多年的游泳二级运动员，看似很简单的游泳装备严选的质量和价格都把控的不错，希望未来增加带度数的游泳镜。新加坡开放的普通游泳馆使用 EZ-link 刷卡，1.3 新币一次非常便宜，关键还多是训练使用的标准泳池人也少，定时清洁的规范让人放心。</p><p><a href="http://163.lu/rDAkF3" target="_blank" rel="noopener">全球通用转换插座</a><br>全球通用转换插座出国的人都应该明白是必备的，严选居然也做出来了，感觉又要干死一片坑爹厂商</p><p>[移动电源必须小米啊]<br>互联网上一直流传着这样的传说，小米什么产品都可以黑但是谁要是敢黑小米移动电源就被其他人反过来喷死。如果不是小米移动电源的出现干掉一众无良商家，现在市场上还不知道有多少人会受到低劣电池爆炸的影响，小米移动电源是真正用产品说话赢得用户口碑的最佳案例之一。我自己买的是紫米新款，我妻子买了一个超薄款就为了好看，哎</p><p><a href="http://163.lu/4ehYt4" target="_blank" rel="noopener">3 头浮动式电动剃须刀</a><br>科技类产品其实很想支持小米，可惜小米生态链不给力，就先用着严选高性价比的剃须刀好了</p><p><a href="http://163.lu/5cpvU0" target="_blank" rel="noopener">THREE SEVEN/777 进口指甲刀便携 4 件套 指甲剪小套装 三色可选</a><br>被淘宝坑过电动指甲刀和匠技指甲刀，也被严选坑过过于简约的指甲刀，没想到最后还是要选择韩国原装进口的 777 牌 4 件套，我以前不了解斜口指甲刀，后来才发现这货是剪脚指甲的神器啊，我以前剪脚指甲是有多痛苦哇</p><p><a href="http://163.lu/RNu3A1" target="_blank" rel="noopener">8 件装 折叠多功能衣架</a><br><a href="http://163.lu/dtCu31" target="_blank" rel="noopener">18 头多功能晾衣架</a><br>必备推荐，折叠携带很方便，18 头多功能晾衣架晾衣服的时候一个顶百，我都差点可以不用普通衣架了</p><p><a href="http://163.lu/pAmCc4" target="_blank" rel="noopener">旅行分装瓶套装</a><br>洗护用品我建议用分装瓶或者带最小包装的出国，因为这些日常用品本身价值不高但分量重，在当地超市购买就好了，除非你非常在意使用某些品牌</p><p><a href="http://163.wyh5.top/OsArG4" target="_blank" rel="noopener">考拉工厂店 智能清洁电动牙刷</a><br>我给父母买的也是同款，建议再带上 2 个以上刷头。如果你之前从来没有使用过电动牙刷，非常建议你尝试，清洁牙齿更加彻底和方便，爱上之后就无法回到过去手动刷牙啦</p><p><a href="http://163.lu/H03jR2" target="_blank" rel="noopener">电动式硅胶洁面仪</a><br>我还记得我给妻子送的第一个礼物就是 FOREO LUNA MINI2 Plus，这个也是我在网易考拉上买的第一个商品，当时这款网红洁面仪被招商银行垄断，没办法直接购买，逼着自己了解到网易考拉在国内海淘市场的领先地位，也算是缘分吧。现在严选自己也推出类似洁面仪才十分之一的价格，买个给自己吧</p><p><a href="http://163.lu/ZKkRz3" target="_blank" rel="noopener">韩国制造 硅胶洁面刷</a><br><a href="http://163.lu/RJS3r0" target="_blank" rel="noopener">韩国制造 硅胶沐浴按摩手套</a><br><a href="http://163.lu/Rv9KI2" target="_blank" rel="noopener">韩国制造 多功能硅胶清洁刷</a><br>严选从韩国引进来相当专业的硅胶产品制造商，其中这 3 件小东西在洗脸，沐浴，洗碗上极大的提升了我的幸福感，强烈推荐人手一件</p><p><a href="http://163.lu/womXA3" target="_blank" rel="noopener">皇室御用超柔毛巾</a><br>内野制造商，这是网易严选当年备受争议的产品之一，我不知道内野是什么，但我只知道这款毛巾确实舒服</p><p>[床单 / 床笠 / 被套 / 毯子]<br>我从家里带了 2 套旧的，然后又从考拉工厂店买了外国人比较喜欢的床笠，因为晚上睡觉都是关闭空调，没有被子就一层薄薄的毯子，一般租房子房东都会提供床板和床上用品，如果你不习惯或者运气不好，在新加坡本地宜家采购也很方便的</p><p><a href="http://163.lu/VY4v73" target="_blank" rel="noopener">考拉工厂店 100% 桑蚕丝双面美肤枕套</a><br>我和妻子一人一个，带过去非常方便，水洗之后也没有出现质量问题，面料实在丝滑</p><p><a href="http://163.lu/pBhg61" target="_blank" rel="noopener">AQR 创口贴</a><br>在新加坡常年夏装，像脚和皮肤很容易受伤，带上一盒以备不时之需</p><h3 id="可选推荐"><a href="#可选推荐" class="headerlink" title="可选推荐"></a>可选推荐</h3><blockquote><p>分享自己购买过的东西真的好累，没想到不知不觉买了这么多，但是能够对自己派上用场没有浪费也值了</p></blockquote><p><a href="http://163.lu/23D8k4" target="_blank" rel="noopener">泰国制造 天然乳胶枕 护颈优眠 升级抗菌</a><br>我买过记忆枕，空气枕，乳胶枕还有各种酒店的枕头体验。小米 8H 的乳胶枕和网易严选的相比我更推荐严选的升级款，这也属于严选的爆款商品了</p><p><a href="http://163.lu/6iWZ74" target="_blank" rel="noopener">日式多功能颈枕 舒滑款</a><br>第一次看到 MUJI 的微粒子 U 型枕就被深深吸引，现在小米和网易严选都有同样类型的，我自己购买的是光滑面料，毕竟新加坡非常热，原来在国内我还买过一个经典款</p><p><a href="http://163.lu/9iYPC2" target="_blank" rel="noopener">舒眠真丝眼罩</a><br>折叠床是带不过去了，很早之前买过零听眼罩，用过真丝眼罩后才明白丝的舒服，就和上面买真丝枕套的理由一样。如果你对声音也很敏感，除了戴耳机以外，再购置几副耳塞也是不错的选择</p><p>[鼻毛修剪器]<br>~~ 没有看到小米和严选有~~ 现在严选和小米素士都做了，看了张大妈的评测最后淘宝购入松下 ER-BN50，虽然不知道和国产的飞科相比有多大优势，至少用下来还行吧</p><p>[洗护 / 牙膏 / 洗面奶 / 防晒霜]<br>我推荐带上便携装，其实选择什么不重要，重要的是理解背后的成分，我唯一推荐的就是自己在上海和新加坡都长期使用的<a href="http://163.lu/lWFct2" target="_blank" rel="noopener"> 熊野油脂 无硅弱酸性马油洗发水</a></p><p><a href="http://163.lu/M8IW72" target="_blank" rel="noopener">Swisse 男士复合维生素 120 片 / 瓶</a><br>加上我在上海之前吃的半瓶，一共带了 2.5 瓶过去，现在回头看这个决定是非常明智的，因为新加坡本地蔬菜和水果不算便宜，关键是营养品价格奇高，一小瓶都要五六十新币。营养品不能代替药物，更不能代替你规律的饮食作息和身体锻炼，请记住这只是用来辅助身体营养平衡。我妻子还会购买 Swisse 的女士复合维生素片 + 葡萄籽和 Unichi 玫瑰果 + 葡萄籽</p><p><a href="http://163.lu/PsXds0" target="_blank" rel="noopener">考拉工厂店 便携式手持蒸汽挂烫机</a><br>我妻子要买的，方便小巧，出席正式场合会排上用场</p><p><a href="http://163.lu/WXcRz2" target="_blank" rel="noopener">考拉工厂店 强力除螨吸尘器</a><br>我没同意我妻子买养生壶和破壁料理机，原本这么大个头的除螨仪其实也是拒绝的，但是在阅读过网易浪潮工作室的一篇《中国人为什么爱晒被子》后我认为在美国或者韩国流行的洗衣烘干一体机可能不适合现在的我们，但是我不希望自己身边的人因为痘痘或者皮肤细菌感染而受到伤害，既然网易工厂店降低了除螨仪的购买门槛，为什么不尝试改变下自己的习惯呢？</p><p><a href="http://163.lu/oCJS84" target="_blank" rel="noopener">春风 TryFun 超润滑避孕套</a><br>好孩子就不要点击了，尤其是不要淘气切换到春风 TryFun 系列</p><h2 id="工作招聘"><a href="#工作招聘" class="headerlink" title="工作招聘"></a>工作招聘</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20191226105334.png" alt=""></p><p><a href="https://docs.qq.com/doc/BqI21X2yZIht1vALQM0Mf73G24se4c4wv0v31gLPCn3U4vsH0IQmKC2Cjyb927Q9Ok0PRkXB3WYpg82K1GXC4" target="_blank" rel="noopener">中金所技术公司最新招聘岗位</a></p><p><a href="https://docs.qq.com/doc/B80RhZ2ZATLC0DsTVf3kFjA01XR7Mg1x8BG42bVOrs1E5zYc01HWAZ0vDTku39xOdU3cS99t2" target="_blank" rel="noopener">Sea Job Openings</a></p><p>这是我第一次创建微信个人公众号，不会向大家推送文章，只是作为信息分享的渠道。我和上家公司以及现在公司的人力关系都还不错，在征得允许的前提下给大家分享上海和新加坡这两家公司目前的内部招聘动态，上海的职位真的的是进去的多出来的少，如果你希望相对稳定那这是很不错的机会。新加坡这边我会跟随公司内部招聘邮件每半个月左右更新，工作语言以英文为主，周围的中国同事还比较多，不用太担心在新加坡的语言关。这两家公司的介绍都可以在互联网上轻松获取，如果你相信自己的能力可以直接投递简历至文章内的联系方式。努力奋斗未必都能达到预想的结果，但至少你做出了自己的选择。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><blockquote><p>如果你无法访问 wsgzao.github.io/post/singapore 的原文可以查看知乎专栏的文章，如果你只想了解我前往新加坡的求职过程可以看微信公众号的提炼内容</p></blockquote><p>从国内跳槽至新加坡工作的经验分享<br><a href="https://zhuanlan.zhihu.com/p/44280335" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/44280335</a></p><p>从国内跳槽至新加坡的最初半年，我都经历了什么？<br><a href="https://mp.weixin.qq.com/s/gDntToVrvFoQbyfrNf7XqA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/gDntToVrvFoQbyfrNf7XqA</a></p><p>从小到大我都没有离开过父母的保护，感谢你们的理解和支持，也同样感谢老婆的付出和双方家庭的包容。<br>引用领结婚证那天分享在朋友圈的一句话作为结语: I never grow up, but I never stop growing.</p>]]></content>
    
    <summary type="html">
    
      为帮助大家玩转新加坡、快速适应当地生活
    
    </summary>
    
      <category term="生活 | Life" scheme="https://wsgzao.github.io/categories/%E7%94%9F%E6%B4%BB-Life/"/>
    
    
  </entry>
  
  <entry>
    <title>模板引擎 Jinja2 语法介绍</title>
    <link href="https://wsgzao.github.io/post/jinja/"/>
    <id>https://wsgzao.github.io/post/jinja/</id>
    <published>2020-02-20T06:59:49.000Z</published>
    <updated>2020-02-21T10:21:50.441Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Flask 和 Django，以及其它很多 Python 框架如 Ansible，都默认使用 Jinja2 来作为模版引擎。我们用 Jinja2 在服务器上直接生成配置和其他文件。 Jinja 是一个基于 Python 设计语言的“全功能模板引擎”，个人认为 Jinja 语法本身并不复杂，但掌握好基本的 Jinja 语法会帮助你在构建 Ansible、Jenkins、Web 等批处理作业时做到事半功倍的效果。</p><blockquote><p>模板引擎 Jinja2 语法介绍</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 02 月 20 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/jinja/">https://wsgzao.github.io/post/jinja/</a></p><hr><h2 id="Jinja-简介"><a href="#Jinja-简介" class="headerlink" title="Jinja 简介"></a>Jinja 简介</h2><p>Jinja is a modern and designer-friendly templating language for Python, modelled after Django’s templates. It is fast, widely used and secure with the optional sandboxed template execution environment:</p><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> "base.html" %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">Members</span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> user <span class="keyword">in</span> users %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; user.url &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span><span class="template-variable">&#123;&#123; user.username &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><p>Features:</p><ul><li>sandboxed execution</li><li>powerful automatic HTML escaping system for XSS prevention</li><li>template inheritance</li><li>compiles down to the optimal python code just in time</li><li>optional ahead-of-time template compilation</li><li>easy to debug. Line numbers of exceptions directly point to the correct line in the template.</li><li>configurable syntax</li></ul><p>Jinja2 是一个现代的，设计者友好的，仿照 Django 模板的 Python 模板语言。 它速度快，被广泛使用，并且提供了可选的沙箱模板执行环境保证安全:</p><p>特性:</p><ul><li>沙箱中执行</li><li>强大的 HTML 自动转义系统保护系统免受 XSS</li><li>模板继承</li><li>及时编译最优的 python 代码</li><li>可选提前编译模板的时间</li><li>易于调试。异常的行数直接指向模板中的对应行。</li><li>可配置的语法</li></ul><blockquote><p>为什么要叫 Jinja？</p></blockquote><p>之所以叫 Jinja，是因为日本的神社（Jinja）英文单词是 temple，而模板的英文是 template，两者发音很相似（这么说来，它本来也有可能叫 Miao 的……）。</p><blockquote><p>Jinja 的速度怎么样？</p></blockquote><p>和 Mako 差不多，但比 Genshi 以及 Django 的模板引擎快 10~20 倍。</p><blockquote><p>把逻辑判断（Logic）放到模板里是个好主意吗？</p></blockquote><p>毫无疑问，你放到模板里逻辑判断（Logic）应该越少越好。但为了让大家都开心，适当的逻辑判断是需要的。尽管如此，它有很多对于你能做什么，不能做什么的限制。</p><p>出于诸多考虑（速度，易读性等等），Jinja 既不允许你放置任意的 Python 代码，也不允许所有的 Python 表达式。这也是为什么我们要了解 Jinja2 的语法。</p><p>在 Jinja 官方文档中建议大家可以优先阅读以下 2 个章节：</p><ul><li><a href="https://jinja.palletsprojects.com/en/master/faq/" target="_blank" rel="noopener">Frequently Asked Questions</a></li><li><a href="https://jinja.palletsprojects.com/en/master/templates/" target="_blank" rel="noopener">Template Designer Documentation</a></li></ul><h2 id="什么是模版引擎"><a href="#什么是模版引擎" class="headerlink" title="什么是模版引擎"></a>什么是模版引擎</h2><p>在 Python 中，什么是模版？就是在一个静态 HTML 加入一些类似变量的标签，然后引擎在渲染这个 HTML 时候会动态的把变量填入内容，生成一个最终的 HTML。<br>什么是模版引擎？其实就是一种能解析 <code>类似 Python 语言</code> 的标记语言的解释器。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">比如我们在 HTML 模版中输入一个 `&lt;p&gt; &#123;&#123; post.title &#125;&#125; &lt;/p&gt;`，显然这不是真正的 HTML 语法。但是当 Jinja2 解释器读取到 `&#123;&#123; ...&#125;&#125;` 后知道里面是一个变量，那么就把这个变量替换为真正的值，最后翻译出来就变成了 `&lt;p&gt; 大标题 &lt;/p&gt;` 这样的 HTML 内容。</span><br></pre></td></tr></table></figure></p><p><strong>Jinja2 是一个模版语言，只是类似 Python，比较符合 Python 语法，但不完全相同！</strong></p><p>所有的模版引擎，实际上都差不多，不管是基于 VBS 语言的 ASP 模版，还是基于 PHP 语言的 PHP 模版，都不是与原本语言一摸一样，而只是做到尽量一样而已。</p><h2 id="Jinja2-语言基础"><a href="#Jinja2-语言基础" class="headerlink" title="Jinja2 语言基础"></a>Jinja2 语言基础</h2><p>注意：<code>Jinja2</code> 模版语言，是不区分缩进的，和纯 python 不同。实际上所有模版语言都不区分缩紧。</p><p>常用标记：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注释：`&#123;# 这是注释 #&#125;`</span><br><span class="line">变量：`&#123;&#123; post.title &#125;&#125;`，或字典元素 `&#123;&#123;your_dict[&apos;key&apos;]&#125;&#125;`，或列表 `&#123;&#123;your_list[0]&#125;&#125;`</span><br><span class="line">多行代码块：`&#123;% 开始 %&#125; HTML 标签 &#123;% 结束 %&#125;`</span><br></pre></td></tr></table></figure></p><p>示例：</p><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> user %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; user &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    hello!</span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> index <span class="keyword">in</span> indexs %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123; index &#125;&#125;</span><span class="xml"> </span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h3 id="Delimiters（分隔符）"><a href="#Delimiters（分隔符）" class="headerlink" title="Delimiters（分隔符）"></a>Delimiters（分隔符）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% … %&#125; 语句（[Statements](http://jinja.pocoo.org/docs/dev/templates/#list-of-control-structures)）</span><br><span class="line">&#123;&#123; … &#125;&#125; 打印模板输出的表达式（[Expressions](http://jinja.pocoo.org/docs/dev/templates/#expressions)）</span><br><span class="line">&#123;# … #&#125; 注释</span><br><span class="line"># … ## 行语句（[Line Statements](http://jinja.pocoo.org/docs/dev/templates/#line-statements)）</span><br></pre></td></tr></table></figure><h3 id="Variables（变量）"><a href="#Variables（变量）" class="headerlink" title="Variables（变量）"></a>Variables（变量）</h3><p>除了普通的字符串变量，Jinja2 还支持列表、字典和对象，你可以这样获取变量值：<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; mydict['key'] &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; mylist[3] &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; mylist[myintvar] &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; myobj.somemethod() &#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>获取一个变量的属性有两种方式：<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; foo.bar &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; foo['bar'] &#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>这两种方法基本相同（深层次的区别可以暂不考虑）</p><h3 id="Filter-过滤器"><a href="#Filter-过滤器" class="headerlink" title="Filter 过滤器()"></a>Filter 过滤器()</h3><p>一个 filter 过滤器的本质就是一个 function 函数。使用格式为：<code>变量名 | 函数</code>。<br>它做到的就是，把变量传给函数，然后再把函数返回值作为这个代码块的值。</p><p>如：<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- 带参数的 --&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; 变量 | 函数名(*args)&#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 不带参数可以省略括号 --&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; 变量 | 函数名 &#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>链式调用（管道式）：<br>和命令行的 pipline 管道一样，可以一次调用多个函数（过滤器），如：<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; "hello world" | reverse | upper &#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>文本块调用（将中间的所有文字都作为变量内容传入到过滤器中）：<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">filter</span></span> upper %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    一大堆文字</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfilter</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><blockquote><p>Jinja2 常用过滤器</p></blockquote><p>字符串操作：</p><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">safe：禁用转义</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; '&lt;em&gt;hello&lt;/em&gt;' | safe &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">capitalize：把变量值的首字母转成大写，其余字母转小写</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; 'hello' | capitalize &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">lower：把值转成小写</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; 'HELLO' | lower &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">upper：把值转成大写</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; 'hello' | upper &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">title：把值中的每个单词的首字母都转成大写</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; 'hello' | title &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">reverse：字符串反转</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; 'olleh' | reverse &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">format：格式化输出</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; '%s is %d' | format('name',17) &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">striptags：渲染之前把值中所有的 HTML 标签都删掉</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; '&lt;em&gt;hello&lt;/em&gt;' | striptags &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">truncate: 字符串截断</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; 'hello every one' | truncate(9)&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>列表操作：</p><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">first：取第一个元素</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; [1,2,3,4,5,6] | first &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">last：取最后一个元素</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; [1,2,3,4,5,6] | last &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">length：获取列表长度</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; [1,2,3,4,5,6] | length &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">sum：列表求和</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; [1,2,3,4,5,6] | sum &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">sort：列表排序</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; [6,2,3,1,5,4] | sort &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><a href="https://jinja.palletsprojects.com/en/master/templates/#builtin-filters" target="_blank" rel="noopener">List of Builtin Filters</a></p><h3 id="Tests（测试，判断）"><a href="#Tests（测试，判断）" class="headerlink" title="Tests（测试，判断）"></a>Tests（测试，判断）</h3><p>Jinja2 提供的 tests 可以用来在语句里对变量或表达式进行测试，如果要测试一个变量，可以在变量后加上 “is” 和 test 名，比如：<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> user.age is equalto 42 %&#125;</span><span class="xml"> </span><span class="comment">&#123;# 这里也可以写成... is equalto(42) #&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">Ha, you are 42!</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>如果要传入参数，可以在 test 后增加括号，也可以直接写在后面。</p><p>常用的 test（未说明的均返回 True 或 False）：</p><ul><li>boolean</li><li>defined</li><li>equalto</li><li>escaped</li><li>none</li><li>sequence</li><li>string</li><li>number</li><li>reverse</li><li>replace</li></ul><p><a href="https://jinja.palletsprojects.com/en/master/templates/#list-of-builtin-tests" target="_blank" rel="noopener">List of Builtin Tests</a></p><h2 id="For-If-列表控制结构"><a href="#For-If-列表控制结构" class="headerlink" title="For/If (列表控制结构)"></a>For/If (列表控制结构)</h2><p>A control structure refers to all those things that control the flow of a program - conditionals (i.e. if/elif/else), for-loops, as well as things like macros and blocks. With the default syntax, control structures appear inside blocks.</p><p><a href="https://jinja.palletsprojects.com/en/master/templates/#list-of-control-structures" target="_blank" rel="noopener">List of Control Structures</a></p><h3 id="For"><a href="#For" class="headerlink" title="For"></a>For</h3><p>Loop over each item in a sequence. For example, to display a list of users provided in a variable called users:<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Members<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> user <span class="keyword">in</span> users %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123; user.username|e &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>As variables in templates retain their object properties, it is possible to iterate over containers like dict:<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> key, value <span class="keyword">in</span> my_dict.items() %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><span class="template-variable">&#123;&#123; key|e &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><span class="template-variable">&#123;&#123; value|e &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>循环索引</p><ul><li>loop.index: 循环当前迭代(从 1 开始)。</li><li>loop.index0: 循环当前迭代(从 0 开始)。</li><li>loop.revindex: 循环迭代的数量(从 1 开始)。</li><li>loop.revindex0: 循环迭代的数量(从 0 开始)。</li><li>loop.first: 是否为迭代的第一步。</li><li>loop.last: 是否为迭代的最后一步。</li><li>loop.length: 序列中元素的数量。</li></ul><h3 id="If"><a href="#If" class="headerlink" title="If"></a>If</h3><p>The if statement in Jinja is comparable with the Python if statement. In the simplest form, you can use it to test if a variable is defined, not empty and not false:</p><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> users %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> user <span class="keyword">in</span> users %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123; user.username|e &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><p>For multiple branches, elif and else can be used like in Python. You can use more complex <a href="https://jinja.palletsprojects.com/en/master/templates/#expressions" target="_blank" rel="noopener">Expressions</a> there, too:</p><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> kenny.sick %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    Kenny is sick.</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">elif</span></span> kenny.dead %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    You killed Kenny!  You bastard!!!</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    Kenny looks okay --- so far</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h2 id="Ansible-Jinja2-模版使用"><a href="#Ansible-Jinja2-模版使用" class="headerlink" title="Ansible Jinja2 模版使用"></a>Ansible Jinja2 模版使用</h2><blockquote><p>更多用法可以阅读参考文章中的链接</p></blockquote><p>variables: 可以输出数据<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; my_variable &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-variable">&#123;&#123; some_dudes_name | capitalize &#125;&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>statements: 可以用来创建条件和循环等等<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> my_conditional %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    xxx</span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> item <span class="keyword">in</span> all_items %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; item &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure></p><p>从上文中第二个 variable 的例子中可以看出，Jinja2 支持使用带过滤器的 Unix 型管道操作符。有很多的内置过滤器可供使用。</p><p>我们可以仅仅用一堆简单 if 和 for 就可以建立建立几乎任何的常规配置文件。不过如果你有意更进一步，Jinja2 Documentation 包含了很多有趣的东西可供了解。我们可以看到 Ansibe 允许在模板中使用一些额外的模版变量。</p><p>按照 Ansible template_module, 我们模板的示例：<br><figure class="highlight jinja"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">- name: Create Nginx SSL configuration</span></span><br><span class="line"><span class="xml">  template:</span></span><br><span class="line"><span class="xml">    src: "nginx_ssl.j2"</span></span><br><span class="line"><span class="xml">    dest: "/etc/nginx/sites-available/</span><span class="template-variable">&#123;&#123; project_name &#125;&#125;</span><span class="xml">"</span></span><br></pre></td></tr></table></figure></p><p>我们同样可以发现在 Ansible Facts 中有很多可用的 Ansible 变量。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://jinja.palletsprojects.com/" target="_blank" rel="noopener">Jinja Documentation</a></p><p><a href="http://docs.jinkan.org/docs/jinja2/index.html" target="_blank" rel="noopener">Jinja2 中文文档</a></p><p><a href="http://greyli.com/flask-template-engine-jinja2-syntax-introduction/" target="_blank" rel="noopener">Flask 模板引擎：Jinja2 语法介绍</a></p><p><a href="https://segmentfault.com/a/1190000018002480" target="_blank" rel="noopener">一篇文章搞懂 Jinja2 Template Engine 模版引擎</a></p><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_templating.html" target="_blank" rel="noopener">Ansible Templating (Jinja2)</a></p><p><a href="https://www.zsythink.net/archives/2999" target="_blank" rel="noopener">ansible 笔记（38）：jinja2 模板（一）</a></p><p><a href="http://zhangblog.com/2020/01/08/ansible-10/" target="_blank" rel="noopener">Ansible Jinja2 模板使用</a></p>]]></content>
    
    <summary type="html">
    
      模板引擎Jinja2语法介绍
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 certbot 代替 acme.sh 免费申请 wildcard 通配符证书和自动更新实践小结</title>
    <link href="https://wsgzao.github.io/post/certbot/"/>
    <id>https://wsgzao.github.io/post/certbot/</id>
    <published>2020-02-19T06:59:49.000Z</published>
    <updated>2020-02-20T09:26:31.871Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200219171300.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为 Google Chrome 和运营商劫持干扰访问者体验的努力推动了大型网站加速应用全站 HTTPS，而 <a href="https://letsencrypt.org/" target="_blank" rel="noopener">Let’s Encrypt</a> 这个项目通过自动化把配置和维护 HTTPS 变得更加简单，Let’s Encrypt 设计了一个 ACME 协议目前版本是 v2，并在 2018 年支持通配符证书 <a href="https://community.letsencrypt.org/t/acme-v2-and-wildcard-certificate-support-is-live/55579" target="_blank" rel="noopener">Wildcard Certificate Support is Live</a>。官网主推的客户端是<a href="https://certbot.eff.org/" target="_blank" rel="noopener">Certbot</a>，任何人都可以基于 ACME 协议实现一个客户端，比如大名鼎鼎的<a href="https://github.com/Neilpang/acme.sh" target="_blank" rel="noopener">acme.sh</a>。本文主要使用<a href="https://github.com/certbot/certbot/tree/master/certbot-dns-route53" target="_blank" rel="noopener">certbot-dns-route53</a> 插件为例，由于 certbot 官方 DNS Plugins 插件支持有限，如果你需要支持 aliyun/tencentyun/godaddy dns 可以参考 <a href="https://github.com/ywdblog/certbot-letencrypt-wildcardcertificates-alydns-au" target="_blank" rel="noopener">certbot-letencrypt-wildcardcertificates-alydns-au</a>，随着 Docker 容器化和 K8S(Kubernetes) 的进击，相信会促进 certbot 多样化玩法。</p><blockquote><p>使用 certbot 代替 acme.sh 免费申请 wildcard 通配符证书和自动更新实践小结</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 02 月 19 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/certbot/">https://wsgzao.github.io/post/certbot/</a></p><hr><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="关于-HTTPS"><a href="#关于-HTTPS" class="headerlink" title="关于 HTTPS"></a>关于 HTTPS</h3><blockquote><p>引维基百科的说法</p></blockquote><p>超文本传输安全协议（英语：Hypertext Transfer Protocol Secure，缩写：HTTPS）是一种网络安全传输协议。在计算机网络上，HTTPS 经由超文本传输协议进行通信，但利用 SSL/TLS 来对数据包进行加密。HTTPS 开发的主要目的，是提供对网络服务器的身份认证，保护交换数据的隐私与完整性</p><p>HTTPS 的主要思想是在不安全的网络上创建一安全信道，并可在使用适当的加密包和服务器证书可被验证且可被信任时，对窃听和中间人攻击提供合理防护。</p><p>HTTPS 的信任继承基于预先安装在浏览器中的证书颁发机构（如 Symantec、Comodo、GoDaddy 和 GlobalSign 等）（意即“我信任证书颁发机构告诉我应该信任的”）。因此，一个到某网站的 HTTPS 连接可被信任，当且且当：</p><ul><li>用户相信他们的浏览器正确实现了 HTTPS 且安装了正确的证书颁发机构；</li><li>用户相信证书颁发机构仅信任合法的网站；</li><li>被访问的网站提供了一个有效的证书，意即，它是由一个被信任的证书颁发机构签发的（大部分浏览器会对无效的证书发出警告）；</li><li>该证书正确地验证了被访问的网站（如，访问 <a href="https://example.com" target="_blank" rel="noopener">https://example.com</a> 时收到了给 example.com 而不是其他组织的证书）；</li><li>或者互联网上相关节点是值得信任的，或者用户相信本协议的加密层（TLS 或 SSL）不能被窃听者破坏。</li></ul><h3 id="HTTP-和-HTTPS-区别"><a href="#HTTP-和-HTTPS-区别" class="headerlink" title="HTTP 和 HTTPS 区别"></a>HTTP 和 HTTPS 区别</h3><p>HTTP 协议传输的数据都是未加密的，也就是明文的，因此使用 HTTP 协议传输隐私信息非常不安全，为了保证这些隐私数据能加密传输，于是网景公司设计了 SSL（Secure Sockets Layer）协议用于对 HTTP 协议传输的数据进行加密，从而就诞生了 HTTPS。简单来说，HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，要比 HTTP 协议安全。</p><p>HTTPS 和 HTTP 的区别主要如下：</p><ul><li>HTTPS 协议需要到 CA 申请证书，一般免费证书较少，因而需要一定费用。</li><li>HTTP 是超文本传输协议，信息是明文传输，HTTPS 则是具有安全性的 SSL 加密传输协议。</li><li>HTTP 和 HTTPS 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。</li><li>HTTP 的连接很简单，是无状态的；HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，比 HTTP 协议安全。</li></ul><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200220153747.png" alt=""></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200220153532.png" alt=""></p><p><a href="https://serverguy.com/ssl/types-of-ssl-certificates/" target="_blank" rel="noopener">Types of SSL Certificates for a Secure Business Website</a></p><h3 id="关于-TLS-SSL"><a href="#关于-TLS-SSL" class="headerlink" title="关于 TLS/SSL"></a>关于 TLS/SSL</h3><p>传输层安全协议（英语：Transport Layer Security，缩写：TLS），及其前身安全套接层（Secure Sockets Layer，缩写：SSL）是一种安全协议，目的是为互联网通信，提供安全及数据完整性保障</p><h3 id="为什么要部署-HTTPS"><a href="#为什么要部署-HTTPS" class="headerlink" title="为什么要部署 HTTPS"></a>为什么要部署 HTTPS</h3><p>说到底，就是 HTTPS 更安全。甚至为了安全，一个专业可靠的网站， HTTPS 是必须的。 Firefox 和 Chrome 都计划将没有配置 SSL 加密的 HTTP 网站标记为不安全（貌似 Firefox 50 已经这么干了），目前它们也正在联合其他相关的基金会与公司推动整个互联网 HTTPS 化，现在大家访问的一些主要的网站。如 Google 多年前就已经全部启用 HTTPS ，国内的淘宝、搜狗、知乎、百度等等也全面 HTTPS 了。甚至 Google 的搜索结果也正在给予 HTTPS 的网站更高的排名和优先收录权。</p><h3 id="怎么部署-HTTPS"><a href="#怎么部署-HTTPS" class="headerlink" title="怎么部署 HTTPS"></a>怎么部署 HTTPS</h3><p>你只需要有一张被信任的 CA （ Certificate Authority ）也就是证书授权中心颁发的 SSL 安全证书，并且将它部署到你的网站服务器上。一旦部署成功后，当用户访问你的网站时，浏览器会在显示的网址前加一把小绿锁，表明这个网站是安全的，当然同时你也会看到网址前的前缀变成了 HTTPS ，不再是 HTTP 了。</p><h3 id="怎么获得-SSL-安全证书"><a href="#怎么获得-SSL-安全证书" class="headerlink" title="怎么获得 SSL 安全证书"></a>怎么获得 SSL 安全证书</h3><p>理论上，我们自己也可以签发 SSL 安全证书，但是我们自己签发的安全证书不会被主流的浏览器信任，所以我们需要被信任的证书授权中心（ CA ）签发的安全证书。而一般的 SSL 安全证书签发服务都比较贵，比如 Godaddy 、 GlobalSign 等机构签发的证书一般都需要 20 美金一年甚至更贵，不过为了加快推广 HTTPS 的普及， EEF 电子前哨基金会、 Mozilla 基金会和美国密歇根大学成立了一个公益组织叫 ISRG （ Internet Security Research Group ），这个组织从 2015 年开始推出了 Let’s Encrypt 免费证书。这个免费证书不仅免费，而且还相当好用，所以我们就可以利用 Let’s Encrypt 提供的免费证书部署 HTTPS 了</p><h2 id="Let’s-Encrypt-简介"><a href="#Let’s-Encrypt-简介" class="headerlink" title="Let’s Encrypt 简介"></a>Let’s Encrypt 简介</h2><p>Let’s Encrypt 是 一个叫 ISRG （ Internet Security Research Group ，互联网安全研究小组）的组织推出的免费安全证书计划。参与这个计划的组织和公司可以说是互联网顶顶重要的先驱，除了前文提到的三个牛气哄哄的发起单位外，后来又有思科（全球网络设备制造商执牛耳者）、 Akamai 加入，甚至连 Linux 基金会也加入了合作，这些大牌组织的加入保证了这个项目的可信度和可持续性。</p><p>部署 HTTPS 网站的时候需要证书，证书由 CA 机构签发，大部分传统 CA 机构签发证书是需要收费的，这不利于推动 HTTPS 协议的使用。</p><p>Let’s Encrypt 也是一个 CA 机构，但这个 CA 机构是免费的！！！也就是说签发证书不需要任何费用。</p><p>Let’s Encrypt 由于是非盈利性的组织，需要控制开支，他们搞了一个非常有创意的事情，设计了一个 ACME 协议，目前该协议的版本是 v1。</p><p>那为什么要创建 ACME 协议呢，传统的 CA 机构是人工受理证书申请、证书更新、证书撤销，完全是手动处理的。而 ACME 协议规范化了证书申请、更新、撤销等流程，只要一个客户端实现了该协议的功能，通过客户端就可以向 Let’s Encrypt 申请证书，也就是说 Let’s Encrypt CA 完全是自动化操作的。</p><p>任何人都可以基于 ACME 协议实现一个客户端，官方推荐的客户端是 Certbot 。</p><h3 id="Let’s-Encrypt-通配符证书"><a href="#Let’s-Encrypt-通配符证书" class="headerlink" title="Let’s Encrypt 通配符证书"></a>Let’s Encrypt 通配符证书</h3><p>在没有出现通配符证书之前，Let’s Encrypt 支持两种证书。</p><p>1）单域名证书：证书仅仅包含一个主机。</p><p>2）SAN 证书：一张证书可以包括多个主机（Let’s Encrypt 限制是 20），也就是证书可以包含下列的主机：<a href="http://www.example.com、www.example.cn、blog.example.com" target="_blank" rel="noopener">www.example.com、www.example.cn、blog.example.com</a> 等等。</p><p>证书包含的主机可以不是同一个注册域，不要问我注册域是什么？注册域就是向域名注册商购买的域名。</p><p>对于个人用户来说，由于主机并不是太多，所以使用 SAN 证书完全没有问题，但是对于大公司来说有一些问题：</p><ul><li>子域名非常多，而且过一段时间可能就要使用一个新的主机。</li><li>注册域也非常多。</li></ul><p>读者可以思考下，对于大企业来说，SAN 证书可能并不能满足需求，类似于 sina 这样的网站，所有的主机全部包含在一张证书中，而使用 Let’s Encrypt 证书是无法满足的。</p><p>通配符证书就是证书中可以包含一个通配符，比如 .example.com、.example.cn，读者很快明白，大型企业也可以使用通配符证书了，一张证书可以防止更多的主机了。</p><p>这个功能可以说非常重要，从功能上看 Let’s Encrypt 和传统 CA 机构没有什么区别了，会不会触动传统 CA 机构的利益呢？</p><h3 id="如何申请-Let’s-Encrypt-通配符证书"><a href="#如何申请-Let’s-Encrypt-通配符证书" class="headerlink" title="如何申请 Let’s Encrypt 通配符证书"></a>如何申请 Let’s Encrypt 通配符证书</h3><p>为了实现通配符证书，Let’s Encrypt 对 ACME 协议的实现进行了升级，只有 v2 协议才能支持通配符证书。</p><p>也就是说任何客户端只要支持 ACME v2 版本，就可以申请通配符证书了，是不是很激动。</p><p>在了解该协议之前有几个注意点：</p><p>客户在申请 Let’s Encrypt 证书的时候，需要校验域名的所有权，证明操作者有权利为该域名申请证书，目前支持三种验证方式：</p><ul><li>dns-01：给域名添加一个 DNS TXT 记录。</li><li>http-01：在域名对应的 Web 服务器下放置一个 HTTP well-known URL 资源文件。</li><li>tls-sni-01：在域名对应的 Web 服务器下放置一个 HTTPS well-known URL 资源文件。</li></ul><p>而申请通配符证书，只能使用 dns-01 的方式</p><h2 id="Certbot-简介"><a href="#Certbot-简介" class="headerlink" title="Certbot 简介"></a>Certbot 简介</h2><blockquote><p>What’s Certbot?</p></blockquote><p>Certbot is a free, open source software tool for automatically using <a href="https://letsencrypt.org/" target="_blank" rel="noopener">Let’s Encrypt</a> certificates on manually-administrated websites to enable HTTPS.</p><p>Certbot is made by the <a href="https://www.eff.org/" target="_blank" rel="noopener">Electronic Frontier Foundation (EFF)</a>, a 501(c)3 nonprofit based in San Francisco, CA, that defends digital privacy, free speech, and innovation.</p><p>Certbot 的官方网站是 <a href="https://certbot.eff.org/" target="_blank" rel="noopener">https://certbot.eff.org/</a> ，打开这个链接选择自己使用的 web server 和操作系统，EFF 官方会给出详细的使用方法，如果 DNS 在官方的支持插件列表中可以按官方文档操作，但如果是国内的 DNS 可以参考<a href="https://github.com/ywdblog/certbot-letencrypt-wildcardcertificates-alydns-au" target="_blank" rel="noopener">certbot-letencrypt-wildcardcertificates-alydns-au</a></p><p><a href="https://certbot.eff.org/docs/using.html#dns-plugins" target="_blank" rel="noopener">DNS plugin’s name on the Documentation list</a></p><p><a href="https://certbot.eff.org/docs/" target="_blank" rel="noopener">certbot docs</a></p><h3 id="certbot-插件介绍"><a href="#certbot-插件介绍" class="headerlink" title="certbot 插件介绍"></a>certbot 插件介绍</h3><p>Certbot 现在需要运行在安装了 Python （2.7 or 3.4）的类 unix 系统上，内存大于 512MB（如果小于的话，<a href="https://certbot.eff.org/docs/install.html#problems-with-python-virtual-environment" target="_blank" rel="noopener">官方解决方案</a>），默认是需要 root 权限的，比如写证书操作需要 root 权限。</p><p>Certbot 客户机支持获取和安装证书的两种插件:<code>auth</code> 和 <code>install</code>，当使用 certonly 参数的时候，只会获取证书，并不会安装证，获取的证书位于 / etc/letsencrypt 目录下</p><p>主要插件的介绍：</p><p><a href="https://certbot.eff.org/docs/using.html#getting-certificates-and-choosing-plugins" target="_blank" rel="noopener">Getting certificates (and choosing plugins)</a></p><table><thead><tr><th>Plugin</th><th>Auth</th><th>Install</th><th>Notes</th><th>Challenge types (and port)</th></tr></thead><tbody><tr><td>apache</td><td>Y</td><td>Y</td><td>自动化获取并安装证书</td><td>tls-sni-01 (443)</td></tr><tr><td>webroot</td><td>Y</td><td>N</td><td>已经有运行的服务，通过验证 webroot 目录来获取证书</td><td>http-01 (80)</td></tr><tr><td>nginx</td><td>Y</td><td>Y</td><td>使用 nginx 自动获取和安装证书</td><td>tls-sni-01 (443)</td></tr><tr><td>standalone</td><td>Y</td><td>N</td><td>建立一个 standalone WEB 服务，需要 80 或者 443 端口可用，如果你没有类似 nginx 和 apache 等服务，这很有用</td><td>http-01 (80) or tls-sni-01 (443)</td></tr><tr><td>DNS plugins</td><td>Y</td><td>N</td><td>通过修改 dns 服务器的 text 记录，来获取证书，野卡证书只能通过此方式获取</td><td>dns-01 (53)</td></tr><tr><td>manual</td><td>Y</td><td>N</td><td>通过自己给指令获取证书，支持添加定制脚本来完成任务</td><td>http-01 (80), dns-01 (53) or tls-sni-01 (443)</td></tr></tbody></table><p>解析：</p><ul><li>如果你使用 standalone 插件，那么需要使用 80 和 443 端口，因为要建一个监听这些端口的服务，如果你有别的服务使用了该端口，那么就会出问题了。</li><li>webroot 方式，如果你使用了 nginx，那么你需要更改一些 nginx 配置，确保能验证你对该域名的所有权限</li></ul><p>插件的具体使用可以参考<a href="https://www.cnblogs.com/redirect/p/10140248.html" target="_blank" rel="noopener">letsencrypt 证书 - 管理工具 certbot</a></p><p>我个人推荐选择 <code>DNS plugins</code> 或者 <code>manual</code> 方式来管理</p><h3 id="certbot-dns-route53-实践"><a href="#certbot-dns-route53-实践" class="headerlink" title="certbot-dns-route53 实践"></a>certbot-dns-route53 实践</h3><p>因为域名在 Amazon Route 53，所以选择使用 certbot-dns-route53 插件会比较方便，敏感信息都用 xxx 打码了但不影响阅读理解</p><p><a href="https://github.com/certbot/certbot/tree/master/certbot-dns-route53" target="_blank" rel="noopener">https://github.com/certbot/certbot/tree/master/certbot-dns-route53</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create a virtual environment</span></span><br><span class="line">pip install virtualenv</span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">virtualenv certbot</span><br><span class="line"><span class="built_in">source</span> certbot/bin/activate</span><br><span class="line"></span><br><span class="line"><span class="comment"># Update its pip and setuptools (VENV/bin/pip install -U setuptools pip) to avoid problems with cryptography's dependency on setuptools&gt;=11.3.</span></span><br><span class="line"></span><br><span class="line">certbot/bin/pip install -U setuptools pip</span><br><span class="line"></span><br><span class="line">pip list</span><br><span class="line"></span><br><span class="line">Package    Version</span><br><span class="line">---------- -------</span><br><span class="line">pip        20.0.2</span><br><span class="line">setuptools 44.0.0</span><br><span class="line">wheel      0.34.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># Make sure you have libssl-dev and libffi (or your regional equivalents) installed. You might have to set compiler flags to pick things up (I have to use CPPFLAGS=-I/usr/local/opt/openssl/include LDFLAGS=-L/usr/local/opt/openssl/lib on my macOS to pick up brew's openssl, for example).</span></span><br><span class="line"></span><br><span class="line">pip install certbot-dns-route53</span><br><span class="line"></span><br><span class="line"><span class="comment"># create aws credentials</span></span><br><span class="line">mkdir ~/.aws/</span><br><span class="line">vim ~/.aws/credentials</span><br><span class="line">[default]</span><br><span class="line">aws_access_key_id=xxx</span><br><span class="line">aws_secret_access_key=xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate certificate</span></span><br><span class="line">certbot certonly \</span><br><span class="line">  -n --agree-tos --email xxx \</span><br><span class="line">  --dns-route53 \</span><br><span class="line">  -d <span class="string">"*.xxx"</span> </span><br><span class="line"></span><br><span class="line">(certbot) [root@xxx ~]<span class="comment"># certbot certonly \</span></span><br><span class="line">&gt;   -n --agree-tos --email xxx  \</span><br><span class="line">&gt;   --dns-route53 \</span><br><span class="line">&gt;   -d <span class="string">"*.xxx"</span></span><br><span class="line">Saving debug <span class="built_in">log</span> to /var/<span class="built_in">log</span>/letsencrypt/letsencrypt.log</span><br><span class="line">Found credentials <span class="keyword">in</span> shared credentials file: ~/.aws/credentials</span><br><span class="line">Plugins selected: Authenticator dns-route53, Installer None</span><br><span class="line">Obtaining a new certificate</span><br><span class="line">Performing the following challenges:</span><br><span class="line">dns-01 challenge <span class="keyword">for</span> xxx</span><br><span class="line">Waiting <span class="keyword">for</span> verification...</span><br><span class="line">Cleaning up challenges</span><br><span class="line"></span><br><span class="line">IMPORTANT NOTES:</span><br><span class="line"> - Congratulations! Your certificate and chain have been saved at:</span><br><span class="line">   /etc/letsencrypt/live/xxx/fullchain.pem</span><br><span class="line">   Your key file has been saved at:</span><br><span class="line">   /etc/letsencrypt/live/xxx/privkey.pem</span><br><span class="line">   Your cert will expire on 2020-05-19. To obtain a new or tweaked</span><br><span class="line">   version of this certificate <span class="keyword">in</span> the future, simply run certbot</span><br><span class="line">   again. To non-interactively renew *all* of your certificates, run</span><br><span class="line">   <span class="string">"certbot renew"</span></span><br><span class="line"> - Your account credentials have been saved <span class="keyword">in</span> your Certbot</span><br><span class="line">   configuration directory at /etc/letsencrypt. You should make a</span><br><span class="line">   secure backup of this folder now. This configuration directory will</span><br><span class="line">   also contain certificates and private keys obtained by Certbot so</span><br><span class="line">   making regular backups of this folder is ideal.</span><br><span class="line"> - If you like Certbot, please consider supporting our work by:</span><br><span class="line"></span><br><span class="line">   Donating to ISRG / Let<span class="string">'s Encrypt:   https://letsencrypt.org/donate</span></span><br><span class="line"><span class="string">   Donating to EFF:                    https://eff.org/donate-le</span></span><br></pre></td></tr></table></figure><h3 id="certbot-证书默认存放路径结构"><a href="#certbot-证书默认存放路径结构" class="headerlink" title="certbot 证书默认存放路径结构"></a>certbot 证书默认存放路径结构</h3><p><a href="https://certbot.eff.org/docs/using.html#where-are-my-certificates" target="_blank" rel="noopener">Where are my certificates</a></p><p>All generated keys and issued certificates can be found in <code>/etc/letsencrypt/live/$domain</code>. In the case of creating a SAN certificate with multiple alternative names, <code>$domain</code>is the first domain passed in via -d parameter. Rather than copying, please point your (web) server configuration directly to those files (or create symlinks). During the <a href="#renewal">renewal</a>, <code>/etc/letsencrypt/live</code>is updated with the latest necessary files.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># check letsencrypt directory</span></span><br><span class="line">[root@xxx ~]<span class="comment"># tree /etc/letsencrypt/</span></span><br><span class="line">/etc/letsencrypt/</span><br><span class="line">├── accounts</span><br><span class="line">│   └── acme-v02.api.letsencrypt.org</span><br><span class="line">│       └── directory</span><br><span class="line">│           └── xxx</span><br><span class="line">│               ├── meta.json</span><br><span class="line">│               ├── private_key.json</span><br><span class="line">│               └── regr.json</span><br><span class="line">├── archive</span><br><span class="line">│   └── xxx</span><br><span class="line">│       ├── cert1.pem</span><br><span class="line">│       ├── chain1.pem</span><br><span class="line">│       ├── fullchain1.pem</span><br><span class="line">│       └── privkey1.pem</span><br><span class="line">├── csr</span><br><span class="line">│   ├── 0000_csr-certbot.pem</span><br><span class="line">│   └── 0001_csr-certbot.pem</span><br><span class="line">├── keys</span><br><span class="line">│   ├── 0000_key-certbot.pem</span><br><span class="line">│   └── 0001_key-certbot.pem</span><br><span class="line">├── live</span><br><span class="line">│   ├── xxx</span><br><span class="line">│   │   ├── cert.pem -&gt; ../../archive/xxx/cert1.pem</span><br><span class="line">│   │   ├── chain.pem -&gt; ../../archive/xxx/chain1.pem</span><br><span class="line">│   │   ├── fullchain.pem -&gt; ../../archive/xxx/fullchain1.pem</span><br><span class="line">│   │   ├── privkey.pem -&gt; ../../archive/xxx/privkey1.pem</span><br><span class="line">│   │   └── README</span><br><span class="line">│   └── README</span><br><span class="line">├── renewal</span><br><span class="line">│   └── xxx.conf</span><br><span class="line">└── renewal-hooks</span><br><span class="line">    ├── deploy</span><br><span class="line">    ├── post</span><br><span class="line">    └── pre</span><br><span class="line"></span><br><span class="line">15 directories, 18 files</span><br></pre></td></tr></table></figure><ul><li>live 目录下存放的将会链接到最新的证书和私钥</li><li>csr keys 用来存放当前代理的授权密钥对</li><li>account 用来存放证书的管理信息, 这里涉及 ACME</li><li>renewal 存放当前代理所管理的域的信息</li></ul><p>如果是配置 Nginx SSL 证书，通常只需要按照下面这样修改即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssl_certificate /etc/letsencrypt/live/xxx/fullchain.pem;</span><br><span class="line">ssl_certificate_key /etc/letsencrypt/live/xxx/privkey.pem;</span><br></pre></td></tr></table></figure><p><a href="https://certbot.eff.org/docs/using.html#certbot-command-line-options" target="_blank" rel="noopener">Certbot command-line options</a></p><p>Certbot supports a lot of command line options. Here’s the full list, from <code>certbot --help all</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">(certbot) [root@xxx ~]<span class="comment"># certbot -h</span></span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line"></span><br><span class="line">  certbot [SUBCOMMAND] [options] [-d DOMAIN] [-d DOMAIN] ...</span><br><span class="line"></span><br><span class="line">Certbot can obtain and install HTTPS/TLS/SSL certificates.  By default,</span><br><span class="line">it will attempt to use a webserver both <span class="keyword">for</span> obtaining and installing the</span><br><span class="line">certificate. The most common SUBCOMMANDS and flags are:</span><br><span class="line"></span><br><span class="line">obtain, install, and renew certificates:</span><br><span class="line">    (default) run   Obtain &amp; install a certificate <span class="keyword">in</span> your current webserver</span><br><span class="line">    certonly        Obtain or renew a certificate, but <span class="keyword">do</span> not install it</span><br><span class="line">    renew           Renew all previously obtained certificates that are near</span><br><span class="line">expiry</span><br><span class="line">    enhance         Add security enhancements to your existing configuration</span><br><span class="line">   -d DOMAINS       Comma-separated list of domains to obtain a certificate <span class="keyword">for</span></span><br><span class="line"></span><br><span class="line">  (the certbot apache plugin is not installed)</span><br><span class="line">  --standalone      Run a standalone webserver <span class="keyword">for</span> authentication</span><br><span class="line">  (the certbot nginx plugin is not installed)</span><br><span class="line">  --webroot         Place files <span class="keyword">in</span> a server<span class="string">'s webroot folder for authentication</span></span><br><span class="line"><span class="string">  --manual          Obtain certificates interactively, or using shell script</span></span><br><span class="line"><span class="string">hooks</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   -n               Run non-interactively</span></span><br><span class="line"><span class="string">  --test-cert       Obtain a test certificate from a staging server</span></span><br><span class="line"><span class="string">  --dry-run         Test"renew"or"certonly"without saving any certificates</span></span><br><span class="line"><span class="string">to disk</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">manage certificates:</span></span><br><span class="line"><span class="string">    certificates    Display information about certificates you have from Certbot</span></span><br><span class="line"><span class="string">    revoke          Revoke a certificate (supply --cert-name or --cert-path)</span></span><br><span class="line"><span class="string">    delete          Delete a certificate (supply --cert-name)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">manage your account:</span></span><br><span class="line"><span class="string">    register        Create an ACME account</span></span><br><span class="line"><span class="string">    unregister      Deactivate an ACME account</span></span><br><span class="line"><span class="string">    update_account  Update an ACME account</span></span><br><span class="line"><span class="string">  --agree-tos       Agree to the ACME server'</span>s Subscriber Agreement</span><br><span class="line">   -m EMAIL         Email address <span class="keyword">for</span> important account notifications</span><br><span class="line"></span><br><span class="line">More detailed <span class="built_in">help</span>:</span><br><span class="line"></span><br><span class="line">  -h, --<span class="built_in">help</span> [TOPIC]    <span class="built_in">print</span> this message, or detailed <span class="built_in">help</span> on a topic;</span><br><span class="line">                        the available TOPICS are:</span><br><span class="line"></span><br><span class="line">   all, automation, commands, paths, security, testing, or any of the</span><br><span class="line">   subcommands or plugins (certonly, renew, install, register, nginx,</span><br><span class="line">   apache, standalone, webroot, etc.)</span><br><span class="line">  -h all                <span class="built_in">print</span> a detailed <span class="built_in">help</span> page including all topics</span><br><span class="line">  --version             <span class="built_in">print</span> the version number</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br></pre></td></tr></table></figure><h2 id="certbot-自动更新证书"><a href="#certbot-自动更新证书" class="headerlink" title="certbot 自动更新证书"></a>certbot 自动更新证书</h2><blockquote><p>简单介绍 2 种常见的需求，其他情况如使用容器 renew 的朋友相信应该都不用参考本文了</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最简单的手动 renew 命令，看到 success 表示成功</span></span><br><span class="line">certbot renew --force-renewal</span><br><span class="line"></span><br><span class="line">(certbot) [root@xxx ~]<span class="comment"># certbot renew --force-renewal</span></span><br><span class="line">Saving debug <span class="built_in">log</span> to /var/<span class="built_in">log</span>/letsencrypt/letsencrypt.log</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Processing /etc/letsencrypt/renewal/xxx.conf</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Found credentials <span class="keyword">in</span> shared credentials file: ~/.aws/credentials</span><br><span class="line">Plugins selected: Authenticator dns-route53, Installer None</span><br><span class="line">Renewing an existing certificate</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">new certificate deployed without reload, fullchain is</span><br><span class="line">/etc/letsencrypt/live/xxx/fullchain.pem</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line"></span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line"></span><br><span class="line">Congratulations, all renewals succeeded. The following certs have been renewed:</span><br><span class="line">  /etc/letsencrypt/live/xxx/fullchain.pem (success)</span><br></pre></td></tr></table></figure><blockquote><p>使用 crontab 定期执行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑 certbot_renew.sh，强制更新并重新 reload nginx 加载新证书</span></span><br><span class="line">vim /root/certbot_renew.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">certbot renew --force-renew</span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果是 virtualenv 虚拟环境可以这样写</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/bin</span><br><span class="line"><span class="built_in">source</span> certbot/bin/activate</span><br><span class="line">certbot renew --force-renew</span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加执行权限</span></span><br><span class="line">chmod a+x /root/certbot_renew.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置定时任务自动更新证书，“At 01:01 on day-of-month 1.”</span></span><br><span class="line">vim /etc/crontab</span><br><span class="line">1 1 1 * * /root/certbot_renew.sh &gt;/root/crontab.log 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要记录日志可以这样写</span></span><br><span class="line">1 1 1 * * <span class="built_in">echo</span> `date -R` &gt;&gt; /var/<span class="built_in">log</span>/certbot.crontab.log; certbot renew --force-renewal &gt;&gt; /var/<span class="built_in">log</span>/certbot.crontab.log 2&gt;&amp;1; nginx -s reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># certbot 官方使用 python 产生了一个分钟的随机数，让更新时间随机一些</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"0 0,12 * * * root python -c'import random; import time; time.sleep(random.random() * 3600)'&amp;&amp; certbot renew"</span> | sudo tee -a /etc/crontab &gt; /dev/null</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://letsencrypt.org/docs/" target="_blank" rel="noopener">Let’s Encrypt Documentation</a></p><p><a href="https://github.com/Neilpang/acme.sh" target="_blank" rel="noopener">acme.sh</a></p><p><a href="https://certbot.eff.org/" target="_blank" rel="noopener">Certbot</a></p><p><a href="https://certbot.eff.org/docs/" target="_blank" rel="noopener">certbot docs</a></p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-centos-7" target="_blank" rel="noopener">How To Secure Apache with Let’s Encrypt on CentOS 7</a></p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04" target="_blank" rel="noopener">How To Secure Nginx with Let’s Encrypt on Ubuntu 18.04</a></p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-secure-apache-with-let-s-encrypt-on-ubuntu-18-04" target="_blank" rel="noopener">How To Secure Apache with Let’s Encrypt on Ubuntu 18.04</a></p><p><a href="https://ksmx.me/letsencrypt-ssl-https/" target="_blank" rel="noopener">LET’S ENCRYPT 给网站加 HTTPS 完全指南</a></p><p><a href="https://my.oschina.net/kimver/blog/1634575" target="_blank" rel="noopener">申请 Let’s Encrypt 通配符 HTTPS 证书</a></p><p><a href="https://www.jianshu.com/p/c5c9d071e395" target="_blank" rel="noopener">Let’s Encrypt 终于支持通配符证书了</a></p><p><a href="https://mp.weixin.qq.com/s/hKvtDDQw7EHSGFRGT4QVbw" target="_blank" rel="noopener">Certobot 管理 Let’s Encrypt 证书的几个经验</a></p><p><a href="https://www.cnblogs.com/redirect/p/10140248.html" target="_blank" rel="noopener">letsencrypt 证书 - 管理工具 certbot</a></p>]]></content>
    
    <summary type="html">
    
      使用certbot代替acme.sh免费申请wildcard通配符证书和自动更新实践小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Git 常用命令和 Git 团队使用规范指南</title>
    <link href="https://wsgzao.github.io/post/git/"/>
    <id>https://wsgzao.github.io/post/git/</id>
    <published>2020-02-06T08:22:32.000Z</published>
    <updated>2020-02-07T03:10:48.137Z</updated>
    
    <content type="html"><![CDATA[<p><img src="//i.v2ex.co/fAhm82RJ.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在 2005 年的某一天，Linux 之父 Linus Torvalds 发布了他的又一个里程碑作品——Git。它的出现改变了软件开发流程，大大地提高了开发流畅度，直到现在仍十分流行，完全没有衰退的迹象。其实一般情况下，只需要掌握 git 的几个常用命令即可，但是在使用的过程中难免会遇到各种复杂的需求，这时候经常需要搜索，非常麻烦，故总结了一下自己平常会用到的 git 操作。本文根据团队实践记录 Git 入门指南和 Git 常用命令，文章中不仅记录了 Git 的搭建和使用教程，还参考了大量 Git 团队使用规范上的经验，希望大家可以结合自己团队的实际应用场景让 Git 协作优雅的落地。</p><blockquote><p>Git 是目前世界上最先进的分布式版本控制系统</p></blockquote><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2020 年 02 月 06 日 - 更新 Git 命令学习<br>2016 年 04 月 22 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/git/">https://wsgzao.github.io/post/git/</a></p><p><strong> 扩展阅读 </strong></p><p>Git Book - <a href="https://git-scm.com/book/zh/" target="_blank" rel="noopener">https://git-scm.com/book/zh/</a><br>git 简明指南 - <a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="noopener">http://rogerdudler.github.io/git-guide/index.zh.html</a><br>常用 Git 命令清单 - <a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html</a><br>猴子都能懂的 GIT 入门 - <a href="http://backlogtool.com/git-guide/cn/" target="_blank" rel="noopener">http://backlogtool.com/git-guide/cn/</a><br>Git 教程 - <a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a></p><h2 id="SVN-与-Git-的最主要的区别"><a href="#SVN-与-Git-的最主要的区别" class="headerlink" title="SVN 与 Git 的最主要的区别"></a>SVN 与 Git 的最主要的区别</h2><p>SVN 是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，所以首先要从中央服务器哪里得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就纳闷了。</p><p>Git 是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件 A，其他人也在电脑上改了文件 A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。</p><h2 id="Git-搭建和使用"><a href="#Git-搭建和使用" class="headerlink" title="Git 搭建和使用"></a>Git 搭建和使用</h2><blockquote><p>Git 上手并不难，深入学习还是建议多实践，可以参考扩展阅读中廖雪峰的 Git 教程</p></blockquote><h3 id="Git-服务端"><a href="#Git-服务端" class="headerlink" title="Git 服务端"></a>Git 服务端</h3><blockquote><p>服务端搭建 Git 很简单，有更多需求不妨试试 Gogs 和 Gitlab</p></blockquote><p>使用 Gogs 轻松搭建可能比 GitLab 更好用的 Git 服务平台 - <a href="https://wsgzao.github.io/post/gogs/">https://wsgzao.github.io/post/gogs/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 git</span></span><br><span class="line">sudo apt-get install git</span><br><span class="line">yum install git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个 git 用户，用来运行 git 服务</span></span><br><span class="line">sudo adduser git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建证书使用公钥免密码登录(可选)</span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line">vi ~/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化 Git 仓库</span></span><br><span class="line">sudo git init --bare sample.git</span><br><span class="line">sudo chown -R git:git sample.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁用 shell 登录</span></span><br><span class="line">vi /etc/passwd</span><br><span class="line">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在客户端上克隆远程仓库</span></span><br><span class="line">git <span class="built_in">clone</span> git@server:/srv/sample.git</span><br></pre></td></tr></table></figure><p>管理公钥推荐使用 Gitosis<br>Gitosis - <a href="https://github.com/res0nat0r/gitosis" target="_blank" rel="noopener">https://github.com/res0nat0r/gitosis</a><br>Gitosis 配置手记 - <a href="http://debugo.com/gitosis/" target="_blank" rel="noopener">http://debugo.com/gitosis/</a></p><p>管理权限推荐使用 Gitolite<br>Gitolite - <a href="https://github.com/sitaramc/gitolite" target="_blank" rel="noopener">https://github.com/sitaramc/gitolite</a></p><h3 id="Git-客户端"><a href="#Git-客户端" class="headerlink" title="Git 客户端"></a>Git 客户端</h3><blockquote><p>Git 客户端可以按个人习惯来选择，遵守团队协作中的 Git 规范标准才是更重要的</p></blockquote><p>Git - <a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a><br>TortoiseGit - <a href="https://tortoisegit.org/" target="_blank" rel="noopener">https://tortoisegit.org/</a><br>SourceTree - <a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener">https://www.sourcetreeapp.com/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以最基本的 Git 命令行为例，先下载 Git</span></span><br><span class="line">https://git-scm.com/download/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 git 提交用户名和邮箱，定义别名方便区分</span></span><br><span class="line">git config --global user.name <span class="string">"你的姓名"</span></span><br><span class="line">git config --global user.email <span class="string">"you@example.com"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆仓库</span></span><br><span class="line">git <span class="built_in">clone</span> <span class="built_in">cap</span>@172.28.70.243:/<span class="built_in">cap</span>/cap.git</span><br><span class="line"></span><br><span class="line">$ git <span class="built_in">clone</span> <span class="built_in">cap</span>@172.28.70.243:/<span class="built_in">cap</span>/cap.git</span><br><span class="line">Cloning into <span class="string">'cap'</span>...</span><br><span class="line">warning: You appear to have cloned an empty repository.</span><br><span class="line">Checking connectivity... <span class="keyword">done</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试推送</span></span><br><span class="line">touch README</span><br><span class="line">git add README</span><br><span class="line">git commit -m <span class="string">"add readme"</span></span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line">Counting objects: 3, <span class="keyword">done</span>.</span><br><span class="line">Writing objects: 100% (3/3), 199 bytes | 0 bytes/s, <span class="keyword">done</span>.</span><br><span class="line">Total 3 (delta 0), reused 0 (delta 0)</span><br><span class="line">To <span class="built_in">cap</span>@172.28.70.243:/<span class="built_in">cap</span>/cap.git</span><br><span class="line"> * [new branch]      master -&gt; master</span><br></pre></td></tr></table></figure><h2 id="Git-常用命令"><a href="#Git-常用命令" class="headerlink" title="Git 常用命令"></a>Git 常用命令</h2><p><strong> 符号约定 </strong></p><ul><li><code>&lt;xxx&gt;</code> 自定义内容</li><li><code>[xxx]</code> 可选内容</li><li><code>[&lt;xxx&gt;]</code> 自定义可选内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始设置</span></span><br><span class="line">git config --global user.name <span class="string">"&lt; 用户名 & gt;"</span> <span class="comment"># 设置用户名</span></span><br><span class="line">git config --global user.email <span class="string">"&lt; 电子邮件 & gt;"</span> <span class="comment"># 设置电子邮件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地操作</span></span><br><span class="line">git add [-i] <span class="comment"># 保存更新，-i 为逐个确认。</span></span><br><span class="line">git status <span class="comment"># 检查更新。</span></span><br><span class="line">git commit [-a] -m <span class="string">"&lt; 更新说明 & gt;"</span> <span class="comment"># 提交更新，-a 为包含内容修改和增删，-m 为说明信息，也可以使用 -am。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 远端操作</span></span><br><span class="line">git <span class="built_in">clone</span> &lt;git 地址 & gt; <span class="comment"># 克隆到本地。</span></span><br><span class="line">git fetch <span class="comment"># 远端抓取。</span></span><br><span class="line">git merge <span class="comment"># 与本地当前分支合并。</span></span><br><span class="line">git pull [&lt; 远端别名 & gt;] [&lt; 远端 branch&gt;] <span class="comment"># 抓取并合并, 相当于第 2、3 步</span></span><br><span class="line">git push [-f] [&lt; 远端别名 & gt;] [&lt; 远端 branch&gt;] <span class="comment"># 推送到远端，-f 为强制覆盖</span></span><br><span class="line">git remote add &lt; 别名 & gt; &lt;git 地址 & gt; <span class="comment"># 设置远端别名</span></span><br><span class="line">git remote [-v] <span class="comment"># 列出远端，-v 为详细信息</span></span><br><span class="line">git remote show &lt; 远端别名 & gt; <span class="comment"># 查看远端信息</span></span><br><span class="line">git remote rename &lt; 远端别名 & gt; &lt; 新远端别名 & gt; <span class="comment"># 重命名远端</span></span><br><span class="line">git remote rm &lt; 远端别名 & gt; <span class="comment"># 删除远端</span></span><br><span class="line">git remote update [&lt; 远端别名 & gt;] <span class="comment"># 更新分支列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分支相关</span></span><br><span class="line">git branch [-r] [-a] <span class="comment"># 列出分支，-r 远端 ,-a 全部</span></span><br><span class="line">git branch &lt; 分支名 & gt; <span class="comment"># 新建分支</span></span><br><span class="line">git branch -b &lt; 分支名 & gt; <span class="comment"># 新建并切换分支</span></span><br><span class="line">git branch -d &lt; 分支名 & gt; <span class="comment"># 删除分支</span></span><br><span class="line">git checkout &lt; 分支名 & gt; <span class="comment"># 切换到分支</span></span><br><span class="line">git checkout -b &lt; 本地 branch&gt; [-t &lt; 远端别名 & gt;/&lt; 远端分支 & gt;] <span class="comment">#-b 新建本地分支并切换到分支, -t 绑定远端分支</span></span><br><span class="line">git merge &lt; 分支名 & gt; <span class="comment"># 合并某分支到当前分支</span></span><br></pre></td></tr></table></figure><p><a href="http://gityuan.com/2015/06/27/git-notes/" target="_blank" rel="noopener">Git 常用命令</a></p><p><img src="http://gityuan.com/images/git/1.png" alt=""></p><ul><li>workspace: 本地的工作目录。（记作 A）</li><li>index：缓存区域，临时保存本地改动。（记作 B）</li><li>local repository: 本地仓库，只想最后一次提交 HEAD。（记作 C）</li><li>remote repository：远程仓库。（记作 D）</li></ul><blockquote><p>以下所有的命令的功能说明，都采用上述的标记的 A、B、C、D 的方式来阐述。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化 </span></span><br><span class="line">git init // 创建</span><br><span class="line">git <span class="built_in">clone</span> /path/to/repository // 检出</span><br><span class="line">git config --global user.email <span class="string">"you@example.com"</span> // 配置 email</span><br><span class="line">git config --global user.name <span class="string">"Name"</span> // 配置用户名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 操作</span></span><br><span class="line">git add &lt;file&gt; // 文件添加，A → B</span><br><span class="line">git add . // 所有文件添加，A → B</span><br><span class="line"></span><br><span class="line">git commit -m <span class="string">"代码提交信息"</span> // 文件提交，B → C</span><br><span class="line">git commit --amend // 与上次 commit 合并, *B → C</span><br><span class="line"></span><br><span class="line">git push origin master // 推送至 master 分支, C → D</span><br><span class="line">git pull // 更新本地仓库至最新改动， D → A</span><br><span class="line">git fetch // 抓取远程仓库更新， D → C</span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> // 查看提交记录</span><br><span class="line">git status // 查看修改状态</span><br><span class="line">git diff// 查看详细修改内容</span><br><span class="line">git show// 显示某次提交的内容</span><br><span class="line"></span><br><span class="line"><span class="comment"># 撤销操作</span></span><br><span class="line">git reset &lt;file&gt;// 某个文件索引会回滚到最后一次提交， C → B</span><br><span class="line">git reset// 索引会回滚到最后一次提交， C → B</span><br><span class="line">git reset --hard // 索引会回滚到最后一次提交， C → B → A</span><br><span class="line"></span><br><span class="line">git checkout // 从 index 复制到 workspace， B → A</span><br><span class="line">git checkout -- files // 文件从 index 复制到 workspace， B → A</span><br><span class="line">git checkout HEAD -- files // 文件从 < span class="built_in">local</span> repository 复制到 workspace， C → A<br><span class="line"></span><br><span class="line"><span class="comment"># 分支相关</span></span><br><span class="line">git checkout -b branch_name // 创建名叫“branch_name” 的分支，并切换过去 </span><br><span class="line">git checkout master // 切换回主分支</span><br><span class="line">git branch -d branch_name // 删除名叫“branch_name” 的分支</span><br><span class="line">git push origin branch_name // 推送分支到远端仓库</span><br><span class="line">git merge branch_name // 合并分支 branch_name 到当前分支(如 master)</span><br><span class="line">git rebase // 衍合，线性化的自动， D → A</span><br><span class="line"></span><br><span class="line"><span class="comment"># 冲突处理</span></span><br><span class="line">git diff // 对比 workspace 与 index</span><br><span class="line">git diff HEAD // 对于 workspace 与最后一次 commit</span><br><span class="line">git diff &lt;source_branch&gt; &lt;target_branch&gt; // 对比差异</span><br><span class="line">git add &lt;filename&gt; // 修改完冲突，需要 add 以标记合并成功</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他</span></span><br><span class="line">gitk // 开灯图形化 git</span><br><span class="line">git config color.ui <span class="literal">true</span> // 彩色的 git 输出</span><br><span class="line">git config format.pretty oneline // 显示历史记录时，每个提交的信息只显示一行</span><br><span class="line">git add -i // 交互式添加文件到暂存区</span><br></pre></td></tr></table></figure><h2 id="git-命令一览"><a href="#git-命令一览" class="headerlink" title="git 命令一览"></a>git 命令一览</h2><p><a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="noopener">Git 简明指南</a></p><table><thead><tr><th>命令</th><th>解析</th></tr></thead><tbody><tr><td>git init</td><td>初始化本地 git 仓库（创建新仓库）</td></tr><tr><td>git config –global user.name “xxx”</td><td>配置用户名</td></tr><tr><td>git config –global user.email “<a href="mailto:xxx@xxx.com" target="_blank" rel="noopener">xxx@xxx.com</a>“</td><td>配置邮件</td></tr><tr><td>git config –global color.ui true</td><td>git status 等命令自动着色</td></tr><tr><td>git config –global –unset http.proxy</td><td>remove proxy configuration on git</td></tr><tr><td>git clone git+ssh:<a href="mailto://git@192.168.53.168" target="_blank" rel="noopener">//git@192.168.53.168</a>/VT.git</td><td>clone 远程仓库</td></tr><tr><td>git status</td><td>查看当前版本状态（是否修改）</td></tr><tr><td>git add xyz</td><td>添加 xyz 文件至 index</td></tr><tr><td>git add .</td><td>增加当前子目录下所有更改过的文件至 index</td></tr><tr><td>git commit -m ‘xxx’</td><td>提交</td></tr><tr><td>git commit –amend -m ‘xxx’</td><td>合并上一次提交（用于反复修改）</td></tr><tr><td>git commit -am ‘xxx’</td><td>将 add 和 commit 合为一步</td></tr><tr><td>git rm xxx</td><td>删除 index 中的文件</td></tr><tr><td>git rm -r *</td><td>递归删除</td></tr><tr><td>git log</td><td>显示提交日志</td></tr><tr><td>git log -1</td><td>显示 1 行日志 -n 为 n 行</td></tr><tr><td>git log –stat</td><td>显示提交日志及相关变动文件</td></tr><tr><td>git show dfb02e6xxxx</td><td>显示某个提交的详细内容</td></tr><tr><td>git show dfb02</td><td>可只用 commitid 的前几位</td></tr><tr><td>git show HEAD</td><td>显示 HEAD 提交日志</td></tr><tr><td>git show HEAD^</td><td>显示 HEAD 的父（上一个版本）的提交日志 为上两个版本 5 为上 5 个版本</td></tr><tr><td>git tag</td><td>显示已存在的 tag</td></tr><tr><td>git tag -a v2.0 -m ‘xxx’</td><td>增加 v2.0 的 tag</td></tr><tr><td>git show v2.0</td><td>显示 v2.0 的日志及详细内容</td></tr><tr><td>git log v2.0</td><td>显示 v2.0 的日志</td></tr><tr><td>git diff</td><td>显示所有未添加至 index 的变更</td></tr><tr><td>git diff –cached</td><td>显示所有已添加 index 但还未 commit 的变更</td></tr><tr><td>git diff HEAD^</td><td>比较与上一个版本的差异</td></tr><tr><td>git diff HEAD — ./lib</td><td>比较与 HEAD 版本 lib 目录的差异</td></tr><tr><td>git diff origin/master..master</td><td>比较远程分支 master 上有本地分支 master 上没有的</td></tr><tr><td>git diff origin/master..master –stat</td><td>只显示差异的文件，不显示具体内容</td></tr><tr><td>git remote add origin git+ssh:<a href="mailto://git@192.168.53.168" target="_blank" rel="noopener">//git@192.168.53.168</a>/VT.git</td><td>增加远程定义（用于 push/pull/fetch）</td></tr><tr><td>git branch</td><td>显示本地分支</td></tr><tr><td>git branch –contains 50089</td><td>显示包含提交 50089 的分支</td></tr><tr><td>git branch -a</td><td>显示所有分支</td></tr><tr><td>git branch -r</td><td>显示所有原创分支</td></tr><tr><td>git branch –merged</td><td>显示所有已合并到当前分支的分支</td></tr><tr><td>git branch –no-merged</td><td>显示所有未合并到当前分支的分支</td></tr><tr><td>git branch -m master master_copy</td><td>本地分支改名</td></tr><tr><td>git checkout -b master_copy</td><td>从当前分支创建新分支 master_copy 并检出</td></tr><tr><td>git checkout -b master master_copy</td><td>上面的完整版</td></tr><tr><td>git checkout features/performance</td><td>检出已存在的 features/performance 分支</td></tr><tr><td>git checkout –track hotfixes/BJVEP933</td><td>检出远程分支 hotfixes/BJVEP933 并创建本地跟踪分支</td></tr><tr><td>git checkout v2.0</td><td>检出版本 v2.0</td></tr><tr><td>git checkout -b devel origin/develop</td><td>从远程分支 develop 创建新本地分支 devel 并检出</td></tr><tr><td>git checkout — README</td><td>检出 head 版本的 README 文件（可用于修改错误回退）</td></tr><tr><td>git merge origin/master</td><td>合并远程 master 分支至当前分支</td></tr><tr><td>git cherry-pick ff44785404a8e</td><td>合并提交 ff44785404a8e 的修改</td></tr><tr><td>git push origin master</td><td>将当前分支 push 到远程 master 分支</td></tr><tr><td>git push origin :hotfixes/BJVEP933</td><td>删除远程仓库的 hotfixes/BJVEP933 分支</td></tr><tr><td>git push –tags</td><td>把所有 tag 推送到远程仓库</td></tr><tr><td>git fetch</td><td>获取所有远程分支（不更新本地分支，另需 merge）</td></tr><tr><td>git fetch –prune</td><td>获取所有原创分支并清除服务器上已删掉的分支</td></tr><tr><td>git pull origin master</td><td>获取远程分支 master 并 merge 到当前分支</td></tr><tr><td>git mv README README2</td><td>重命名文件 README 为 README2</td></tr><tr><td>git reset –hard HEAD</td><td>将当前版本重置为 HEAD（通常用于 merge 失败回退）</td></tr><tr><td>git branch -d hotfixes/BJVEP933</td><td>删除分支 hotfixes/BJVEP933（本分支修改已合并到其他分支）</td></tr><tr><td>git branch -D hotfixes/BJVEP933</td><td>强制删除分支 hotfixes/BJVEP933</td></tr><tr><td>git ls-files</td><td>列出 git index 包含的文件</td></tr><tr><td>git show-branch</td><td>图示当前分支历史</td></tr><tr><td>git show-branch –all</td><td>图示所有分支历史</td></tr><tr><td>git whatchanged</td><td>显示提交历史对应的文件修改</td></tr><tr><td>git revert dfb02e6e4f2f7b573337763e5c0013802e392818</td><td>撤销提交 dfb02e6e4f2f7b573337763e5c0013802e392818</td></tr><tr><td>git ls-tree HEAD</td><td>内部命令：显示某个 git 对象</td></tr><tr><td>git rev-parse v2.0</td><td>内部命令：显示某个 ref 对于的 SHA1 HASH</td></tr><tr><td>git reflog</td><td>显示所有提交，包括孤立节点</td></tr><tr><td>git show master@{yesterday}</td><td>显示 master 分支昨天的状态</td></tr><tr><td>git log –pretty=format:’%h %s’ –graph</td><td>图示提交日志</td></tr><tr><td>git stash</td><td>暂存当前修改，将所有至为 HEAD 状态</td></tr><tr><td>git stash list</td><td>查看所有暂存</td></tr><tr><td>git stash show -p stash@{0}</td><td>参考第一次暂存</td></tr><tr><td>git stash apply stash@{0}</td><td>应用第一次暂存</td></tr><tr><td>git grep “delete from”</td><td>文件中搜索文本 “delete from”</td></tr></tbody></table><h2 id="如何提交-PR"><a href="#如何提交-PR" class="headerlink" title="如何提交 PR"></a>如何提交 PR</h2><blockquote><p>引用 kubeasz 的帮助文件为例</p></blockquote><p><a href="https://github.com/easzlab/kubeasz/blob/master/docs/mixes/HowToContribute.md" target="_blank" rel="noopener">为项目 kubeasz 提交 pull request</a></p><p>首先请核对下本地 git config 配置的用户名和邮箱与你 github 上的注册用户和邮箱一致，否则即使 pull request 被接受，贡献者列表中也看不到自己的名字，设置命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email <span class="string">"you@example.com"</span></span><br><span class="line">$ git config --global user.name <span class="string">"Your Name"</span></span><br></pre></td></tr></table></figure><ol><li>登陆 github，在本项目页面点击 fork 到自己仓库</li><li>clone 自己的仓库到本地：git clone <a href="https://github.com/xxx/kubeasz.git" target="_blank" rel="noopener">https://github.com/xxx/kubeasz.git</a></li><li>在 master 分支添加原始仓库为上游分支：git remote add upstream <a href="https://github.com/easzlab/kubeasz.git" target="_blank" rel="noopener">https://github.com/easzlab/kubeasz.git</a></li><li>在本地新建开发分支：git checkout -b dev</li><li>在开发分支修改代码并提交：git add ., git commit -am ‘xx 变更说明’</li><li>切换至 master 分支，同步原始仓库：git checkout master， git pull upstream master</li><li>切换至 dev 分支，合并本地 master 分支（已经和原始仓库同步），可能需要解冲突：git checkout dev, git merge master</li><li>提交本地 dev 分支到自己的远程 dev 仓库：git push origin dev</li><li>在 github 自己仓库页面，点击 Compare &amp; pull request 给原始仓库发 pull request 请求<br>a. 等待原作者回复（接受 / 拒绝）</li></ol><h2 id="Git-使用规范"><a href="#Git-使用规范" class="headerlink" title="Git 使用规范"></a>Git 使用规范</h2><p>Git 使用规范流程 - <a href="http://www.ruanyifeng.com/blog/2015/08/git-use-process.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2015/08/git-use-process.html</a><br>团队中的 Git 实践 - <a href="https://ourai.ws/posts/working-with-git-in-team/" target="_blank" rel="noopener">https://ourai.ws/posts/working-with-git-in-team/</a><br>构家网 git 团队协作使用规范 v2 - <a href="http://wenku.baidu.com/view/e1430d1b7f1922791788e81e" target="_blank" rel="noopener">http://wenku.baidu.com/view/e1430d1b7f1922791788e81e</a></p><blockquote><p>Git 使用规范提醒</p></blockquote><ul><li>使用 Git 过程中，必须通过创建分支进行开发，坚决禁止在主干分支上直接开发。review 的同事有责任检查其他同事是否遵循分支规范。</li><li>在 Git 中，默认是不会提交空目录的，如果想提交某个空目录到版本库中，需要在该目录下新建一个 .gitignore 的空白文件，就可以提交了</li><li>把外部文件纳入到自己的 Git 分支来的时候一定要记得是先比对，确认所有修改都是自己修改的，然后再纳入。不然，容易出现代码回溯</li><li>多人协作时，不要各自在自己的 Git 分支开发，然后发文件合并。正确的方法应该是开一个远程分支，然后一起在远程分支里协作。不然，容易出现代码回溯（即别人的代码被覆盖的情况）</li><li>每个人提交代码是一定要 git diff 看提交的东西是不是都是自己修改的。如果有不是自己修改的内容，很可能就是代码回溯</li><li>review 代码的时候如果看到有被删除掉的代码，一定要确实是否是写代码的同事自己删除的。如果不是，很可能就是代码回溯</li></ul><h2 id="Git-练习"><a href="#Git-练习" class="headerlink" title="Git 练习"></a>Git 练习</h2><blockquote><p>如果线下环境做 git 练习不便，可以选择开源中国的在线 Git 命令学习</p></blockquote><p><a href="https://jvns.ca/blog/2019/08/30/git-exercises--navigate-a-repository/" target="_blank" rel="noopener">git exercises: navigate a repository</a></p><p><a href="http://blog.lujun9972.win/blog/2019/09/12/git%E7%BB%83%E4%B9%A0/" target="_blank" rel="noopener">git 练习答案</a></p><p><a href="https://oschina.gitee.io/learn-git-branching/" target="_blank" rel="noopener">开源中国在线 Git 命令学习</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://mp.weixin.qq.com/s/KD8UeunsBit4jOxPZ02yQQ" target="_blank" rel="noopener">珍藏多年的 Git 问题和操作清单</a></p><p><a href="https://gitee.com/all-about-git" target="_blank" rel="noopener">Git 大全</a></p>]]></content>
    
    <summary type="html">
    
      Git是目前世界上最先进的分布式版本控制系统
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>curl 命令学习使用小结</title>
    <link href="https://wsgzao.github.io/post/curl/"/>
    <id>https://wsgzao.github.io/post/curl/</id>
    <published>2020-02-05T06:59:49.000Z</published>
    <updated>2020-02-07T08:09:35.040Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>curl 是利用 URL 语法在命令行方式下工作的开源文件传输工具。它被广泛应用在 Unix、多种 Linux 发行版中，并且有 DOS 和 Win32、Win64 下的移植版本。在日常的开发和问题处理中，经常会使用 curl 命令来测试 http 接口，Windows/macOS 环境上有很多接口测试的工具比如 Postman，但这些工具在 Linux 平台上使用起来相对不那么便捷。有时候当我们要测试一些外部接口时，当本地无权调用测试路径时，需要将测试建立在 Linux 平台，除了封装简单的请求代码进行实现外，可通过 curl 工具实现。当然我们平时接触 curl 命令最多的地方还是在 Linux 环境，本来 curl 作为常用命令应该不用多介绍，但是在使用 Jenkins API 做数据迁移的过程中发现自己对 curl 相关的命令还是不熟悉，借这个机会重新梳理一些技巧。</p><blockquote><p>curl 命令学习使用小结</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 02 月 05 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/curl/">https://wsgzao.github.io/post/curl/</a></p><hr><h2 id="curl-简介"><a href="#curl-简介" class="headerlink" title="curl 简介"></a>curl 简介</h2><p>curl is a tool to transfer data from or to a server, using one of the supported protocols (DICT, FILE, FTP, FTPS, GOPHER, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET and TFTP). The command is designed to work without user interaction.</p><p>curl offers a busload of useful tricks like proxy support, user authentication, FTP upload, HTTP post, SSL connections, cookies, file transfer resume, Metalink, and more. As you will see below, the number of features will make your head spin!</p><p>curl 支持你做很多事情。你可以把 curl 想象成一个精简的命令行网页浏览器。它支持几乎你能想到的所有协议，可以交互访问几乎所有在线内容。唯一和浏览器不同的是，curl 不会渲染接收到的相应信息。</p><h2 id="curl-常用命令"><a href="#curl-常用命令" class="headerlink" title="curl 常用命令"></a>curl 常用命令</h2><p>curl 是一个利用 URL 语法在命令行下工作的文件传输工具。它支持文件上传和下载，所以是综合传输工具，但按传统，习惯称 curl 为下载工具。其语法格式及常见参数含义如下，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法 </span></span><br><span class="line">curl [option] [url]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最简单的使用，获取服务器内容，默认将输出打印到标准输出中(STDOUT) 中。</span></span><br><span class="line">curl http://www.centos.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 - v 参数可以看到详细解析过程，通常用于 debug</span></span><br><span class="line">curl -v http://www.centos.org</span><br><span class="line"></span><br><span class="line"><span class="comment"># curl 发送 Get 请求</span></span><br><span class="line">curl URL</span><br><span class="line">curl URL -O 文件绝对路径</span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 发送 post 请求</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求主体用 json 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d @json 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d <span class="string">'json 内容'</span> URL</span><br><span class="line"><span class="comment"># 请求主体用 xml 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d @xml 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d <span class="string">'xml 内容'</span> URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置 cookies</span></span><br><span class="line">curl URL --cookie <span class="string">"cookie 内容"</span></span><br><span class="line">curl URL --cookie-jar cookie 文件绝对路径</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 设置代理字符串</span></span><br><span class="line">curl URL --user-agent <span class="string">"代理内容"</span></span><br><span class="line">curl URL -A <span class="string">"代理内容"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 限制带宽</span></span><br><span class="line">curl URL --<span class="built_in">limit</span>-rate 速度</span><br><span class="line"> </span><br><span class="line"><span class="comment"># curl 认证</span></span><br><span class="line">curl -u user:<span class="built_in">pwd</span> URL</span><br><span class="line">curl -u user URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 只打印 http 头部信息</span></span><br><span class="line">curl -I URL</span><br><span class="line">curl -head URL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 末尾参数</span></span><br><span class="line">--progress  显示进度条</span><br><span class="line">--silent    不现实进度条</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不需要修改 / etc/hosts，curl 直接解析 ip 请求域名</span></span><br><span class="line"><span class="comment"># 将 http://example.com 或 https://example.com 请求指定域名解析的 IP 为 127.0.0.1</span></span><br><span class="line">curl --resolve example.com:80:127.0.0.1 http://example.com/</span><br><span class="line">curl --resolve example.com:443:127.0.0.1 https://example.com/</span><br></pre></td></tr></table></figure><h2 id="curl-接口测试"><a href="#curl-接口测试" class="headerlink" title="curl 接口测试"></a>curl 接口测试</h2><p>curl 可以很方便地完成对 REST API 的调用场景，比如：设置 Header，指定 HTTP 请求方法，指定 HTTP 消息体，指定权限认证信息等。通过 -v 选项也能输出 REST 请求的所有返回信息。curl 功能很强大，有很多参数，这里列出 REST 测试常用的参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">-X/--request [GET|POST|PUT|DELETE|…]  指定请求的 HTTP 方法</span><br><span class="line">-H/--header                           指定请求的 HTTP Header</span><br><span class="line">-d/--data                             指定请求的 HTTP 消息体（Body）</span><br><span class="line">-v/--verbose                          输出详细的返回信息</span><br><span class="line">-u/--user                             指定账号、密码</span><br><span class="line">-b/--cookie                           读取 cookie  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 典型的测试命令为：</span></span><br><span class="line">curl -v -X POST -H <span class="string">"Content-Type: application/json"</span> http://127.0.0.1:8080/user -d<span class="string">'&#123;"username":"admin","password":"admin1234"&#125;'</span>...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试 get 请求</span></span><br><span class="line">curl http://www.linuxidc.com/login.cgi?user=test001&amp;password=123456</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试 post 请求</span></span><br><span class="line">curl -d <span class="string">"user=nickwolfe&amp;password=12345"</span> http://www.linuxidc.com/login.cgi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求主体用 json 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d @json 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/json'</span> -d <span class="string">'json 内容'</span> URL</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 请求主体用 xml 格式</span></span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d @xml 文件绝对路径 URL</span><br><span class="line">curl -X POST -H <span class="string">'content-type: application/xml'</span> -d <span class="string">'xml 内容'</span> URL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送 post 请求时需要使用 - X 选项，除了使用 POST 外，还可以使用 http 规范定义的其它请求谓词，如 PUT,DELETE 等</span></span><br><span class="line">curl -XPOST url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送 post 请求时，通常需要指定请求体数据。可以使用 - d 或 --data 来指定发送的请求体。</span></span><br><span class="line">curl -XPOST -d <span class="string">"name=leo&amp;age=12"</span> url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要对请求数据进行 urlencode, 可以使用下面的方式：</span></span><br><span class="line">curl -XPOST --data-urlencode <span class="string">"name=leo&amp;age=12"</span> url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此外发送 post 请求还可以有如下几种子选项：</span></span><br><span class="line">–data-raw</span><br><span class="line">–data-ascii</span><br><span class="line">–data-binary</span><br></pre></td></tr></table></figure><blockquote><p>使用 curl 和 Jenkins REST API</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># To retrieve the job config.xml</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/job/&lt;jobname&gt;/config.xml'</span> -u username:API_TOKEN -o &lt;jobname&gt;.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># to use this config to create a new job</span></span><br><span class="line">curl -s -XPOST <span class="string">'&lt;jenkinshost&gt;/createItem?name=&lt;jobname&gt;'</span> -u username:API_TOKEN --data-binary @&lt;jobname&gt;.xml -H <span class="string">"Content-Type:text/xml"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get all jenkins jobs</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/api/json?pretty=true'</span> -u username:API_TOKEN -o jobs.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># get jenkins view</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/view/&lt;viewname&gt;/api/json'</span> -u username:API_TOKEN -o view.json</span><br></pre></td></tr></table></figure><h2 id="curl-help"><a href="#curl-help" class="headerlink" title="curl help"></a>curl help</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line">curl --<span class="built_in">help</span></span><br><span class="line">Usage: curl [options...] &lt;url&gt;</span><br><span class="line">Options: (H) means HTTP/HTTPS only, (F) means FTP only</span><br><span class="line">     --anyauth       Pick <span class="string">"any"</span> authentication method (H)</span><br><span class="line"> -a, --append        Append to target file when uploading (F/SFTP)</span><br><span class="line">     --basic         Use HTTP Basic Authentication (H)</span><br><span class="line">     --cacert FILE   CA certificate to verify peer against (SSL)</span><br><span class="line">     --capath DIR    CA directory to verify peer against (SSL)</span><br><span class="line"> -E, --cert CERT[:PASSWD]  Client certificate file and password (SSL)</span><br><span class="line">     --cert-status   Verify the status of the server certificate (SSL)</span><br><span class="line">     --cert-type TYPE  Certificate file <span class="built_in">type</span> (DER/PEM/ENG) (SSL)</span><br><span class="line">     --ciphers LIST  SSL ciphers to use (SSL)</span><br><span class="line">     --compressed    Request compressed response (using deflate or gzip)</span><br><span class="line"> -K, --config FILE   Read config from FILE</span><br><span class="line">     --connect-timeout SECONDS  Maximum time allowed <span class="keyword">for</span> connection</span><br><span class="line">     --connect-to HOST1:PORT1:HOST2:PORT2 Connect to host (network level)</span><br><span class="line"> -C, --<span class="built_in">continue</span>-at OFFSET  Resumed transfer OFFSET</span><br><span class="line"> -b, --cookie STRING/FILE  Read cookies from STRING/FILE (H)</span><br><span class="line"> -c, --cookie-jar FILE  Write cookies to FILE after operation (H)</span><br><span class="line">     --create-dirs   Create necessary <span class="built_in">local</span> directory hierarchy</span><br><span class="line">     --crlf          Convert LF to CRLF <span class="keyword">in</span> upload</span><br><span class="line">     --crlfile FILE  Get a CRL list <span class="keyword">in</span> PEM format from the given file</span><br><span class="line"> -d, --data DATA     HTTP POST data (H)</span><br><span class="line">     --data-raw DATA  HTTP POST data, <span class="string">'@'</span> allowed (H)</span><br><span class="line">     --data-ascii DATA  HTTP POST ASCII data (H)</span><br><span class="line">     --data-binary DATA  HTTP POST binary data (H)</span><br><span class="line">     --data-urlencode DATA  HTTP POST data url encoded (H)</span><br><span class="line">     --delegation STRING  GSS-API delegation permission</span><br><span class="line">     --digest        Use HTTP Digest Authentication (H)</span><br><span class="line">     --<span class="built_in">disable</span>-eprt  Inhibit using EPRT or LPRT (F)</span><br><span class="line">     --<span class="built_in">disable</span>-epsv  Inhibit using EPSV (F)</span><br><span class="line">     --dns-servers   DNS server addrs to use: 1.1.1.1;2.2.2.2</span><br><span class="line">     --dns-interface  Interface to use <span class="keyword">for</span> DNS requests</span><br><span class="line">     --dns-ipv4-addr  IPv4 address to use <span class="keyword">for</span> DNS requests, dot notation</span><br><span class="line">     --dns-ipv6-addr  IPv6 address to use <span class="keyword">for</span> DNS requests, dot notation</span><br><span class="line"> -D, --dump-header FILE  Write the received headers to FILE</span><br><span class="line">     --egd-file FILE  EGD socket path <span class="keyword">for</span> random data (SSL)</span><br><span class="line">     --engine ENGINE  Crypto engine (use <span class="string">"--engine list"</span> <span class="keyword">for</span> list) (SSL)</span><br><span class="line">     --expect100-timeout SECONDS How long to <span class="built_in">wait</span> <span class="keyword">for</span> 100-continue (H)</span><br><span class="line"> -f, --fail          Fail silently (no output at all) on HTTP errors (H)</span><br><span class="line">     --fail-early    Fail on first transfer error, <span class="keyword">do</span> not <span class="built_in">continue</span></span><br><span class="line">     --<span class="literal">false</span>-start   Enable TLS False Start.</span><br><span class="line"> -F, --form CONTENT  Specify HTTP multipart POST data (H)</span><br><span class="line">     --form-string STRING  Specify HTTP multipart POST data (H)</span><br><span class="line">     --ftp-account DATA  Account data string (F)</span><br><span class="line">     --ftp-alternative-to-user COMMAND  String to replace <span class="string">"USER [name]"</span> (F)</span><br><span class="line">     --ftp-create-dirs  Create the remote <span class="built_in">dirs</span> <span class="keyword">if</span> not present (F)</span><br><span class="line">     --ftp-method [MULTICWD/NOCWD/SINGLECWD]  Control CWD usage (F)</span><br><span class="line">     --ftp-pasv      Use PASV/EPSV instead of PORT (F)</span><br><span class="line"> -P, --ftp-port ADR  Use PORT with given address instead of PASV (F)</span><br><span class="line">     --ftp-skip-pasv-ip  Skip the IP address <span class="keyword">for</span> PASV (F)</span><br><span class="line">     --ftp-pret      Send PRET before PASV (<span class="keyword">for</span> drftpd) (F)</span><br><span class="line">     --ftp-ssl-ccc   Send CCC after authenticating (F)</span><br><span class="line">     --ftp-ssl-ccc-mode ACTIVE/PASSIVE  Set CCC mode (F)</span><br><span class="line">     --ftp-ssl-control  Require SSL/TLS <span class="keyword">for</span> FTP login, clear <span class="keyword">for</span> transfer (F)</span><br><span class="line"> -G, --get           Send the -d data with a HTTP GET (H)</span><br><span class="line"> -g, --globoff       Disable URL sequences and ranges using &#123;&#125; and []</span><br><span class="line"> -H, --header LINE   Pass custom header LINE to server (H)</span><br><span class="line"> -I, --head          Show document info only</span><br><span class="line"> -h, --<span class="built_in">help</span>          This <span class="built_in">help</span> text</span><br><span class="line">     --hostpubmd5 MD5  Hex-encoded MD5 string of the host public key. (SSH)</span><br><span class="line"> -0, --http1.0       Use HTTP 1.0 (H)</span><br><span class="line">     --http1.1       Use HTTP 1.1 (H)</span><br><span class="line">     --http2         Use HTTP 2 (H)</span><br><span class="line">     --http2-prior-knowledge  Use HTTP 2 without HTTP/1.1 Upgrade (H)</span><br><span class="line">     --ignore-content-length  Ignore the HTTP Content-Length header</span><br><span class="line"> -i, --include       Include protocol headers <span class="keyword">in</span> the output (H/F)</span><br><span class="line"> -k, --insecure      Allow connections to SSL sites without certs (H)</span><br><span class="line">     --interface INTERFACE  Use network INTERFACE (or address)</span><br><span class="line"> -4, --ipv4          Resolve name to IPv4 address</span><br><span class="line"> -6, --ipv6          Resolve name to IPv6 address</span><br><span class="line"> -j, --junk-session-cookies  Ignore session cookies <span class="built_in">read</span> from file (H)</span><br><span class="line">     --keepalive-time SECONDS  Wait SECONDS between keepalive probes</span><br><span class="line">     --key KEY       Private key file name (SSL/SSH)</span><br><span class="line">     --key-type TYPE  Private key file <span class="built_in">type</span> (DER/PEM/ENG) (SSL)</span><br><span class="line">     --krb LEVEL     Enable Kerberos with security LEVEL (F)</span><br><span class="line">     --libcurl FILE  Dump libcurl equivalent code of this <span class="built_in">command</span> line</span><br><span class="line">     --<span class="built_in">limit</span>-rate RATE  Limit transfer speed to RATE</span><br><span class="line"> -l, --list-only     List only mode (F/POP3)</span><br><span class="line">     --<span class="built_in">local</span>-port RANGE  Force use of RANGE <span class="keyword">for</span> <span class="built_in">local</span> port numbers</span><br><span class="line"> -L, --location      Follow redirects (H)</span><br><span class="line">     --location-trusted  Like <span class="string">'--location'</span>, and send auth to other hosts (H)</span><br><span class="line">     --login-options OPTIONS  Server login options (IMAP, POP3, SMTP)</span><br><span class="line"> -M, --manual        Display the full manual</span><br><span class="line">     --mail-from FROM  Mail from this address (SMTP)</span><br><span class="line">     --mail-rcpt TO  Mail to this/these addresses (SMTP)</span><br><span class="line">     --mail-auth AUTH  Originator address of the original email (SMTP)</span><br><span class="line">     --max-filesize BYTES  Maximum file size to download (H/F)</span><br><span class="line">     --max-redirs NUM  Maximum number of redirects allowed (H)</span><br><span class="line"> -m, --max-time SECONDS  Maximum time allowed <span class="keyword">for</span> the transfer</span><br><span class="line">     --metalink      Process given URLs as metalink XML file</span><br><span class="line">     --negotiate     Use HTTP Negotiate (SPNEGO) authentication (H)</span><br><span class="line"> -n, --netrc         Must <span class="built_in">read</span> .netrc <span class="keyword">for</span> user name and password</span><br><span class="line">     --netrc-optional  Use either .netrc or URL; overrides -n</span><br><span class="line">     --netrc-file FILE  Specify FILE <span class="keyword">for</span> netrc</span><br><span class="line"> -:, --next          Allows the following URL to use a separate <span class="built_in">set</span> of options</span><br><span class="line">     --no-alpn       Disable the ALPN TLS extension (H)</span><br><span class="line"> -N, --no-buffer     Disable buffering of the output stream</span><br><span class="line">     --no-keepalive  Disable keepalive use on the connection</span><br><span class="line">     --no-npn        Disable the NPN TLS extension (H)</span><br><span class="line">     --no-sessionid  Disable SSL session-ID reusing (SSL)</span><br><span class="line">     --noproxy       List of hosts <span class="built_in">which</span> <span class="keyword">do</span> not use proxy</span><br><span class="line">     --ntlm          Use HTTP NTLM authentication (H)</span><br><span class="line">     --ntlm-wb       Use HTTP NTLM authentication with winbind (H)</span><br><span class="line">     --oauth2-bearer TOKEN  OAuth 2 Bearer Token (IMAP, POP3, SMTP)</span><br><span class="line"> -o, --output FILE   Write to FILE instead of stdout</span><br><span class="line">     --pass PASS     Pass phrase <span class="keyword">for</span> the private key (SSL/SSH)</span><br><span class="line">     --path-as-is    Do not squash .. sequences <span class="keyword">in</span> URL path</span><br><span class="line">     --pinnedpubkey FILE/HASHES Public key to verify peer against (SSL)</span><br><span class="line">     --post301       Do not switch to GET after following a 301 redirect (H)</span><br><span class="line">     --post302       Do not switch to GET after following a 302 redirect (H)</span><br><span class="line">     --post303       Do not switch to GET after following a 303 redirect (H)</span><br><span class="line">     --preproxy [PROTOCOL://]HOST[:PORT] Proxy before HTTP(S) proxy</span><br><span class="line"> -<span class="comment">#, --progress-bar  Display transfer progress as a progress bar</span></span><br><span class="line">     --proto PROTOCOLS  Enable/<span class="built_in">disable</span> PROTOCOLS</span><br><span class="line">     --proto-default PROTOCOL  Use PROTOCOL <span class="keyword">for</span> any URL missing a scheme</span><br><span class="line">     --proto-redir PROTOCOLS   Enable/<span class="built_in">disable</span> PROTOCOLS on redirect</span><br><span class="line"> -x, --proxy [PROTOCOL://]HOST[:PORT]  Use proxy on given port</span><br><span class="line">     --proxy-anyauth  Pick <span class="string">"any"</span> proxy authentication method (H)</span><br><span class="line">     --proxy-basic   Use Basic authentication on the proxy (H)</span><br><span class="line">     --proxy-digest  Use Digest authentication on the proxy (H)</span><br><span class="line">     --proxy-cacert FILE CA certificate to verify peer against <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-capath DIR CA directory to verify peer against <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-cert CERT[:PASSWD] Client certificate file and password <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-cert-type TYPE Certificate file <span class="built_in">type</span> (DER/PEM/ENG) <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-ciphers LIST SSL ciphers to use <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-crlfile FILE Get a CRL list <span class="keyword">in</span> PEM format from the given file <span class="keyword">for</span> proxy</span><br><span class="line">     --proxy-insecure Allow connections to SSL sites without certs <span class="keyword">for</span> proxy (H)</span><br><span class="line">     --proxy-key KEY Private key file name <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-key-type TYPE Private key file <span class="built_in">type</span> <span class="keyword">for</span> proxy (DER/PEM/ENG) (SSL)</span><br><span class="line">     --proxy-negotiate  Use HTTP Negotiate (SPNEGO) authentication on the proxy (H)</span><br><span class="line">     --proxy-ntlm    Use NTLM authentication on the proxy (H)</span><br><span class="line">     --proxy-header LINE Pass custom header LINE to proxy (H)</span><br><span class="line">     --proxy-pass PASS Pass phrase <span class="keyword">for</span> the private key <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-ssl-allow-beast Allow security flaw to improve interop <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-tlsv1   Use TLSv1 <span class="keyword">for</span> proxy (SSL)</span><br><span class="line">     --proxy-tlsuser USER TLS username <span class="keyword">for</span> proxy</span><br><span class="line">     --proxy-tlspassword STRING TLS password <span class="keyword">for</span> proxy</span><br><span class="line">     --proxy-tlsauthtype STRING TLS authentication <span class="built_in">type</span> <span class="keyword">for</span> proxy (default SRP)</span><br><span class="line">     --proxy-service-name NAME  SPNEGO proxy service name</span><br><span class="line">     --service-name NAME  SPNEGO service name</span><br><span class="line"> -U, --proxy-user USER[:PASSWORD]  Proxy user and password</span><br><span class="line">     --proxy1.0 HOST[:PORT]  Use HTTP/1.0 proxy on given port</span><br><span class="line"> -p, --proxytunnel   Operate through a HTTP proxy tunnel (using CONNECT)</span><br><span class="line">     --pubkey KEY    Public key file name (SSH)</span><br><span class="line"> -Q, --quote CMD     Send <span class="built_in">command</span>(s) to server before transfer (F/SFTP)</span><br><span class="line">     --random-file FILE  File <span class="keyword">for</span> reading random data from (SSL)</span><br><span class="line"> -r, --range RANGE   Retrieve only the bytes within RANGE</span><br><span class="line">     --raw           Do HTTP <span class="string">"raw"</span>; no transfer decoding (H)</span><br><span class="line"> -e, --referer       Referer URL (H)</span><br><span class="line"> -J, --remote-header-name  Use the header-provided filename (H)</span><br><span class="line"> -O, --remote-name   Write output to a file named as the remote file</span><br><span class="line">     --remote-name-all  Use the remote file name <span class="keyword">for</span> all URLs</span><br><span class="line"> -R, --remote-time   Set the remote file<span class="string">'s time on the local output</span></span><br><span class="line"><span class="string"> -X, --request COMMAND  Specify request command to use</span></span><br><span class="line"><span class="string">     --resolve HOST:PORT:ADDRESS  Force resolve of HOST:PORT to ADDRESS</span></span><br><span class="line"><span class="string">     --retry NUM   Retry request NUM times if transient problems occur</span></span><br><span class="line"><span class="string">     --retry-connrefused  Retry on connection refused (use with --retry)</span></span><br><span class="line"><span class="string">     --retry-delay SECONDS  Wait SECONDS between retries</span></span><br><span class="line"><span class="string">     --retry-max-time SECONDS  Retry only within this period</span></span><br><span class="line"><span class="string">     --sasl-ir       Enable initial response in SASL authentication</span></span><br><span class="line"><span class="string"> -S, --show-error    Show error. With -s, make curl show errors when they occur</span></span><br><span class="line"><span class="string"> -s, --silent        Silent mode (don'</span>t output anything)</span><br><span class="line">     --socks4 HOST[:PORT]  SOCKS4 proxy on given host + port</span><br><span class="line">     --socks4a HOST[:PORT]  SOCKS4a proxy on given host + port</span><br><span class="line">     --socks5 HOST[:PORT]  SOCKS5 proxy on given host + port</span><br><span class="line">     --socks5-hostname HOST[:PORT]  SOCKS5 proxy, pass host name to proxy</span><br><span class="line">     --socks5-gssapi-service NAME  SOCKS5 proxy service name <span class="keyword">for</span> GSS-API</span><br><span class="line">     --socks5-gssapi-nec  Compatibility with NEC SOCKS5 server</span><br><span class="line"> -Y, --speed-limit RATE  Stop transfers below RATE <span class="keyword">for</span> <span class="string">'speed-time'</span> secs</span><br><span class="line"> -y, --speed-time SECONDS  Trigger <span class="string">'speed-limit'</span> abort after SECONDS (default: 30)</span><br><span class="line">     --ssl           Try SSL/TLS (FTP, IMAP, POP3, SMTP)</span><br><span class="line">     --ssl-reqd      Require SSL/TLS (FTP, IMAP, POP3, SMTP)</span><br><span class="line"> -2, --sslv2         Use SSLv2 (SSL)</span><br><span class="line"> -3, --sslv3         Use SSLv3 (SSL)</span><br><span class="line">     --ssl-allow-beast  Allow security flaw to improve interop (SSL)</span><br><span class="line">     --ssl-no-revoke    Disable cert revocation checks (WinSSL)</span><br><span class="line">     --stderr FILE   Where to redirect stderr (use <span class="string">"-"</span> <span class="keyword">for</span> stdout)</span><br><span class="line">     --suppress-connect-headers  Suppress proxy CONNECT response headers</span><br><span class="line">     --tcp-nodelay   Use the TCP_NODELAY option</span><br><span class="line">     --tcp-fastopen  Use TCP Fast Open</span><br><span class="line"> -t, --telnet-option OPT=VAL  Set telnet option</span><br><span class="line">     --tftp-blksize VALUE  Set TFTP BLKSIZE option (must be &gt;512)</span><br><span class="line">     --tftp-no-options  Do not send TFTP options requests</span><br><span class="line"> -z, --time-cond TIME   Transfer based on a time condition</span><br><span class="line"> -1, --tlsv1         Use &gt;= TLSv1 (SSL)</span><br><span class="line">     --tlsv1.0       Use TLSv1.0 (SSL)</span><br><span class="line">     --tlsv1.1       Use TLSv1.1 (SSL)</span><br><span class="line">     --tlsv1.2       Use TLSv1.2 (SSL)</span><br><span class="line">     --tlsv1.3       Use TLSv1.3 (SSL)</span><br><span class="line">     --tls-max VERSION  Use TLS up to VERSION (SSL)</span><br><span class="line">     --trace FILE    Write a debug trace to FILE</span><br><span class="line">     --trace-ascii FILE  Like --trace, but without hex output</span><br><span class="line">     --trace-time    Add time stamps to trace/verbose output</span><br><span class="line">     --tr-encoding   Request compressed transfer encoding (H)</span><br><span class="line"> -T, --upload-file FILE  Transfer FILE to destination</span><br><span class="line">     --url URL       URL to work with</span><br><span class="line"> -B, --use-ascii     Use ASCII/text transfer</span><br><span class="line"> -u, --user USER[:PASSWORD]  Server user and password</span><br><span class="line">     --tlsuser USER  TLS username</span><br><span class="line">     --tlspassword STRING  TLS password</span><br><span class="line">     --tlsauthtype STRING  TLS authentication <span class="built_in">type</span> (default: SRP)</span><br><span class="line">     --unix-socket PATH    Connect through this Unix domain socket</span><br><span class="line">     --abstract-unix-socket PATH Connect to an abstract Unix domain socket</span><br><span class="line"> -A, --user-agent STRING  Send User-Agent STRING to server (H)</span><br><span class="line"> -v, --verbose       Make the operation more talkative</span><br><span class="line"> -V, --version       Show version number and quit</span><br><span class="line"> -w, --write-out FORMAT  Use output FORMAT after completion</span><br><span class="line">     --xattr         Store metadata <span class="keyword">in</span> extended file attributes</span><br><span class="line"> -q, --<span class="built_in">disable</span>       Disable .curlrc (must be first parameter)</span><br></pre></td></tr></table></figure><h2 id="curl-练习"><a href="#curl-练习" class="headerlink" title="curl 练习"></a>curl 练习</h2><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200206193007.png" alt=""></p><p><a href="https://linux.cn/article-11648-1.html" target="_blank" rel="noopener">21 个 curl 命令练习</a></p><p><a href="https://jvns.ca/blog/2019/08/27/curl-exercises/" target="_blank" rel="noopener">curl exercises</a></p><p><a href="http://blog.lujun9972.win/blog/2019/09/11/curl%E7%BB%83%E4%B9%A0/" target="_blank" rel="noopener">curl 练习答案</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://curl.haxx.se/docs/manpage.html" target="_blank" rel="noopener">curl the man page</a></p><p><a href="https://blog.csdn.net/russ44/article/details/53308838" target="_blank" rel="noopener">linux 使用 curl 进行接口测试</a></p><p><a href="https://www.cnblogs.com/52fhy/p/6581116.html" target="_blank" rel="noopener">cURL 笔记</a></p>]]></content>
    
    <summary type="html">
    
      curl命令学习使用小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Postman 使用小结</title>
    <link href="https://wsgzao.github.io/post/postman/"/>
    <id>https://wsgzao.github.io/post/postman/</id>
    <published>2020-01-22T06:59:49.000Z</published>
    <updated>2020-01-22T09:02:13.767Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在涉及 HTTP 方面的后台 REST API 开发时，往往会需要调试 API 接口。这方面有很多工具，其中最好用的算是接下来要介绍的 Postman 了，Postman helps you develop APIs faster。网上关于 Postman 的教程已经非常，我仅描述自己平时经常用到的部分，其他知识点可以阅读参考文章。</p><blockquote><p>Postman 使用小结</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 01 月 22 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/postman/">https://wsgzao.github.io/post/postman/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://www.getpostman.com/" target="_blank" rel="noopener">Postman</a></p><hr><h2 id="Postman-简介"><a href="#Postman-简介" class="headerlink" title="Postman 简介"></a>Postman 简介</h2><p>What is Postman?</p><p>Postman is a collaboration platform for API development. Postman’s features simplify each step of building an API and streamline collaboration so you can create better APIs—faster.</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://learning.getpostman.com/docs/postman/launching-postman/introduction/" target="_blank" rel="noopener">Postman Docs</a></p><p><a href="https://segmentfault.com/a/1190000017890654" target="_blank" rel="noopener">宇宙最强 postman 教程</a></p><p><a href="https://crifan.github.io/api_tool_postman/website/" target="_blank" rel="noopener">API 开发利器：Postman</a></p><p><a href="https://lailin.xyz/post/45050.html" target="_blank" rel="noopener">善用工具之 postman 高级用法概述</a></p>]]></content>
    
    <summary type="html">
    
      Postman使用小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Visual Studio Code 使用小结</title>
    <link href="https://wsgzao.github.io/post/vscode/"/>
    <id>https://wsgzao.github.io/post/vscode/</id>
    <published>2020-01-22T06:59:49.000Z</published>
    <updated>2020-03-26T03:33:51.420Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Visual Studio Code 简称 VS Code 可能是目前史上最好用的轻量级编辑器，包括但不限于常用快捷键，调试 Python，常用插件，搜索功能，包括正则搜索，文件编码，git 仓库代码管理，各种主题字体和插件，强大好用的插件市场，代码格式化等等各种好用的功能，且性能优越。是目前最值得推荐的编辑器，没有之一。相对于重量级选手 Microsoft Visual Studio 和 JetBrains 旗下耳熟能详的 IntelliJ IDEA、PyCharm 等产品来说 VS Code 已经足够简单好用。</p><blockquote><p>Visual Studio Code 使用小结</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 01 月 22 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/vscode/">https://wsgzao.github.io/post/vscode/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">Visual Studio Code</a></p><hr><h2 id="Visual-Studio-Code-简介"><a href="#Visual-Studio-Code-简介" class="headerlink" title="Visual Studio Code 简介"></a>Visual Studio Code 简介</h2><p>Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. It comes with built-in support for JavaScript, TypeScript and Node.js and has a rich ecosystem of extensions for other languages (such as C++, C#, Java, Python, PHP, Go) and runtimes (such as .NET and Unity). Begin your journey with VS Code with these <a href="https://code.visualstudio.com/docs/introvideos/overview" target="_blank" rel="noopener">introductory videos</a>.</p><h2 id="为什么要使用-VSCode"><a href="#为什么要使用-VSCode" class="headerlink" title="为什么要使用 VSCode"></a>为什么要使用 VSCode</h2><ol><li>免费开源</li><li>有海量扩展插件</li><li>轻量（不会占用大量内存和 CPU，不会对电脑造成卡顿）</li></ol><p>以前还有人会推荐 Sublime Text 和 PyCharm，但随着 VSCode 社区的繁荣基本可以首选 VSCode 作为你的第一款轻量级编辑器，当然编程能力的强弱和编辑器没有必然联系，哪款用得顺手选择它能帮助你提到编码效率就行</p><h2 id="VSCode-常用快捷键"><a href="#VSCode-常用快捷键" class="headerlink" title="VSCode 常用快捷键"></a>VSCode 常用快捷键</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 光标所在行整行复制，粘贴，剪切 </span><br><span class="line">Ctrl + C</span><br><span class="line">Ctrl + V</span><br><span class="line">Ctrl + X</span><br><span class="line"></span><br><span class="line">Ctrl + F                #查找 </span><br><span class="line">Ctrl + H                #替换 </span><br><span class="line">Ctrl + S                #保存 </span><br><span class="line"></span><br><span class="line">Ctrl + /                #行注释 </span><br><span class="line">Shift + Alt + A         #块注释 </span><br><span class="line"></span><br><span class="line">Ctrl + Shift + Enter    #上方插入一行 </span><br><span class="line">Ctrl + Shift + F        #文件夹查找 </span><br><span class="line">Ctrl + Enter            #下方插入一行 </span><br><span class="line">Alt + Shift + F         #格式化代码 </span><br><span class="line"></span><br><span class="line">Ctrl + Shift + P        #命令控制面板 </span><br></pre></td></tr></table></figure><h2 id="VSCode-插件推荐"><a href="#VSCode-插件推荐" class="headerlink" title="VSCode 插件推荐"></a>VSCode 插件推荐</h2><blockquote><p>通用插件</p></blockquote><p><a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode" target="_blank" rel="noopener">Prettier - Code formatter</a></p><p><a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens" target="_blank" rel="noopener">GitLens — Git supercharged</a></p><p><a href="https://marketplace.visualstudio.com/items?itemName=ryu1kn.partial-diff" target="_blank" rel="noopener">Partial Diff</a></p><p><a href="https://marketplace.visualstudio.com/items?itemName=SimonSiefke.auto-rename-tag" target="_blank" rel="noopener">Auto Rename Tag</a></p><p><a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2" target="_blank" rel="noopener">Bracket Pair Colorizer 2</a></p><p><a href="https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons" target="_blank" rel="noopener">vscode-icons</a></p><p><a href="https://marketplace.visualstudio.com/items?itemName=emilast.LogFileHighlighter" target="_blank" rel="noopener">Log File Highlighter</a></p><blockquote><p>Frontend</p></blockquote><p><a href="https://marketplace.visualstudio.com/items?itemName=pranaygp.vscode-css-peek" target="_blank" rel="noopener">CSS Peek</a></p><p><a href="https://marketplace.visualstudio.com/items?itemName=idleberg.icon-fonts" target="_blank" rel="noopener">Icon Fonts</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://code.visualstudio.com/docs" target="_blank" rel="noopener">Visual Studio Code Docs</a></p><p><a href="https://segmentfault.com/a/1190000017949680" target="_blank" rel="noopener">宇宙最强 vscode 教程（基础篇）</a></p><p><a href="https://book.crifan.com/books/best_editor_vscode/website/" target="_blank" rel="noopener">史上最好用的编辑器：VSCode</a></p><p><a href="https://www.imooc.com/learn/1106" target="_blank" rel="noopener">VSCode 入门</a></p>]]></content>
    
    <summary type="html">
    
      Visual Studio Code使用小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Ansible 学习指北</title>
    <link href="https://wsgzao.github.io/post/ansible/"/>
    <id>https://wsgzao.github.io/post/ansible/</id>
    <published>2020-01-22T02:59:49.000Z</published>
    <updated>2020-01-22T13:10:16.995Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为工作的缘故接触并积极推动 Ansible 在企业级生产环境的落地，独立承担并实现了《基于 ansible 的主机自动化配置管理》项目，此前也先后接触过 Puppet 和 SaltStack，本文不会讨论开源或者自主研发方案的优劣，重点是和大伙儿分享自己在 ansible 技术领域积累的一些项目实战经验，如果大家遇到任何问题也欢迎通过留言或者其他方式进行互动，我尽力做到有效回复。</p><blockquote><p>Ansible is Simple IT Automation</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 01 月 22 日 - 增加 Ansible 参考文章<br>2018 年 05 月 15 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/ansible/">https://wsgzao.github.io/post/ansible/</a></p><p><strong> 扩展阅读 </strong></p><p>ansible - <a href="https://docs.ansible.com/" target="_blank" rel="noopener">https://docs.ansible.com/</a></p><hr><h2 id="Ansible-标准化学习路径"><a href="#Ansible-标准化学习路径" class="headerlink" title="Ansible 标准化学习路径"></a>Ansible 标准化学习路径</h2><blockquote><p>Ansible 相关的书籍在逐步增多，由于 Ansible 版本迭代更新频率高但学习成本低，个人建议书为辅，官方文档为主</p></blockquote><p>Ansible is an IT automation tool. It can configure systems, deploy software, and orchestrate more advanced IT tasks such as continuous deployments or zero downtime rolling updates.</p><p>Ansible’s main goals are simplicity and ease-of-use. It also has a strong focus on security and reliability, featuring a minimum of moving parts, usage of OpenSSH for transport (with other transports and pull modes as alternatives), and a language that is designed around auditability by humans–even those not familiar with the program.</p><p>We believe simplicity is relevant to all sizes of environments, so we design for busy users of all types: developers, sysadmins, release engineers, IT managers, and everyone in between. Ansible is appropriate for managing all environments, from small setups with a handful of instances to enterprise environments with many thousands of instances.</p><p>Ansible manages machines in an agent-less manner. There is never a question of how to upgrade remote daemons or the problem of not being able to manage systems because daemons are uninstalled. Because OpenSSH is one of the most peer-reviewed open source components, security exposure is greatly reduced. Ansible is decentralized–it relies on your existing OS credentials to control access to remote machines. If needed, Ansible can easily connect with Kerberos, LDAP, and other centralized authentication management systems.</p><p>This documentation covers the current released version of Ansible and also some development version features. For recent features, we note in each section the version of Ansible where the feature was added.</p><p>Ansible releases a new major release of Ansible approximately every two months. The core application evolves somewhat conservatively, valuing simplicity in language design and setup. However, the community around new modules and plugins being developed and contributed moves very quickly, adding many new modules in each release.</p><blockquote><p>Ansible Lightbulb 是 Ansible 官方推荐的入门教材，普通用户大概只需要 10-20 分钟时间即可入门</p></blockquote><p>The Ansible Lightbulb project is an effort to provide a content toolkit and educational reference for effectively communicating and teaching Ansible topics.</p><p>Ansible Lightbulb - <a href="https://github.com/ansible/lightbulb" target="_blank" rel="noopener">https://github.com/ansible/lightbulb</a></p><blockquote><p>Ansible Documentation 是 Ansible 官方文档，我的建议还是对英文不要害怕，多动手查多敲命令去理解</p></blockquote><p>Ansible Documentation - <a href="http://docs.ansible.com/ansible/latest/index.html" target="_blank" rel="noopener">http://docs.ansible.com/ansible/latest/index.html</a></p><blockquote><p>如果大家需要使用 Role 推荐阅读 Ansible Best Practices</p></blockquote><p><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_best_practices.html" target="_blank" rel="noopener">Ansible Best Practices</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">inventories/</span><br><span class="line">   production/</span><br><span class="line">      hosts               # inventory file for production servers</span><br><span class="line">      group_vars/</span><br><span class="line">         group1.yml       # here we assign variables to particular groups</span><br><span class="line">         group2.yml</span><br><span class="line">      host_vars/</span><br><span class="line">         hostname1.yml    # here we assign variables to particular systems</span><br><span class="line">         hostname2.yml</span><br><span class="line"></span><br><span class="line">   staging/</span><br><span class="line">      hosts               # inventory file for staging environment</span><br><span class="line">      group_vars/</span><br><span class="line">         group1.yml       # here we assign variables to particular groups</span><br><span class="line">         group2.yml</span><br><span class="line">      host_vars/</span><br><span class="line">         stagehost1.yml   # here we assign variables to particular systems</span><br><span class="line">         stagehost2.yml</span><br><span class="line"></span><br><span class="line">library/                  # if any custom modules, put them here (optional)</span><br><span class="line">module_utils/             # if any custom module_utils to support modules, put them here (optional)</span><br><span class="line">filter_plugins/           # if any custom filter plugins, put them here (optional)</span><br><span class="line"></span><br><span class="line">site.yml                  # master playbook</span><br><span class="line">webservers.yml            # playbook for webserver tier</span><br><span class="line">dbservers.yml             # playbook for dbserver tier</span><br><span class="line"></span><br><span class="line">files/                    # here we assign files for simple plays</span><br><span class="line">plays/                    # here we assign plays as the entrance</span><br><span class="line">tasks/                    # here we assign tasks for plays to call</span><br><span class="line"></span><br><span class="line">roles/</span><br><span class="line">    common/               # this hierarchy represents a &quot;role&quot;</span><br><span class="line">        tasks/            #</span><br><span class="line">            main.yml      #  &lt;-- tasks file can include smaller files if warranted</span><br><span class="line">        handlers/         #</span><br><span class="line">            main.yml      #  &lt;-- handlers file</span><br><span class="line">        templates/        #  &lt;-- files for use with the template resource</span><br><span class="line">            ntp.conf.j2   #  &lt;------- templates end in .j2</span><br><span class="line">        files/            #</span><br><span class="line">            bar.txt       #  &lt;-- files for use with the copy resource</span><br><span class="line">            foo.sh        #  &lt;-- script files for use with the script resource</span><br><span class="line">        vars/             #</span><br><span class="line">            main.yml      #  &lt;-- variables associated with this role</span><br><span class="line">        defaults/         #</span><br><span class="line">            main.yml      #  &lt;-- default lower priority variables for this role</span><br><span class="line">        meta/             #</span><br><span class="line">            main.yml      #  &lt;-- role dependencies</span><br><span class="line">        library/          # roles can also include custom modules</span><br><span class="line">        module_utils/     # roles can also include custom module_utils</span><br><span class="line">        lookup_plugins/   # or other types of plugins, like lookup in this case</span><br><span class="line"></span><br><span class="line">    webtier/              # same kind of structure as &quot;common&quot; was above, done for the webtier role</span><br><span class="line">    monitoring/           # &quot;&quot;</span><br><span class="line">    fooapp/               # &quot;&quot;</span><br></pre></td></tr></table></figure><h2 id="基于-Ansible-的开源项目"><a href="#基于-Ansible-的开源项目" class="headerlink" title="基于 Ansible 的开源项目"></a>基于 Ansible 的开源项目</h2><blockquote><p>第一个是 ansible 官方开源项目，其他都是和 ansible 相关的运维平台开源项目，推荐学习和参考</p></blockquote><p>Ansible - <a href="https://github.com/ansible/ansible" target="_blank" rel="noopener">https://github.com/ansible/ansible</a></p><p>Jumpserver - <a href="http://www.jumpserver.org/" target="_blank" rel="noopener">http://www.jumpserver.org/</a> </p><p>OpsManage - <a href="https://github.com/welliamcao/OpsManage" target="_blank" rel="noopener">https://github.com/welliamcao/OpsManage</a> </p><h2 id="Ansible-项目实践"><a href="#Ansible-项目实践" class="headerlink" title="Ansible 项目实践"></a>Ansible 项目实践</h2><blockquote><p>以下内容来自于《基于 ansible 的主机自动化配置管理》项目，基于 ansible 目前可以满足生产环境所有基线要求，相信对大家有一定的参考价值</p></blockquote><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200122143435.png" alt=""></p><p><img src="https://raw.githubusercontent.com/wsgzao/storage-public/master/img/20200122143458.png" alt=""></p><h3 id="ansible-部署"><a href="#ansible-部署" class="headerlink" title="ansible 部署"></a>ansible 部署</h3><blockquote><p>因为生产环境为内外网物理隔离，所有的安装部署都是离线进行的</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install Packages</span></span><br><span class="line">yum install gcc zlib zlib-devel openssl-devel -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install Python</span></span><br><span class="line">tar xf Python-2.7.14.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-2.7.14</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># renew python env</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named six.moves</span></span><br><span class="line">tar xf six-1.11.0.tar.gz </span><br><span class="line"><span class="built_in">cd</span> six-1.11.0</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named packaging.version</span></span><br><span class="line">tar xf packaging-17.1.tar.gz </span><br><span class="line"><span class="built_in">cd</span> packaging-17.1</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named pyparsing</span></span><br><span class="line">tar xf pyparsing-2.2.0.tar.gz </span><br><span class="line"><span class="built_in">cd</span> pyparsing-2.2.0</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># ImportError: No module named appdirs</span></span><br><span class="line">tar xf appdirs-1.4.3.tar.gz </span><br><span class="line"><span class="built_in">cd</span> appdirs-1.4.3</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install Setuptools</span></span><br><span class="line">unzip setuptools-38.5.2.zip</span><br><span class="line"><span class="built_in">cd</span> setuptools-38.5.2</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install pip</span></span><br><span class="line">tar xf pip-9.0.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> pip-9.0.1</span><br><span class="line">python setup.py install</span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># pip 离线下载 </span></span><br><span class="line"><span class="comment"># pip download -d DIR -r requirements.txt</span></span><br><span class="line">pip download -d ~/ansible/ ansible</span><br><span class="line"></span><br><span class="line"><span class="comment"># pip 离线安装 </span></span><br><span class="line"><span class="comment"># pip install --no-index --find-links=DIR -r requirements.txt</span></span><br><span class="line">pip install --no-index --find-links=pip-ansible-2.3.3/ -r requirements.txt</span><br><span class="line">pip install --no-index --find-links=pip-ansible-2.5.0/ -r requirements.txt -U</span><br><span class="line"></span><br><span class="line"><span class="comment"># pip 离线安装 pipenv</span></span><br><span class="line">pip install --no-index --find-links=pip-pipenv/ pipenv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 pipenv 创建虚拟环境 </span></span><br><span class="line">mkdir win_ansible</span><br><span class="line"><span class="built_in">cd</span> win_ansible</span><br><span class="line">pipenv shell</span><br><span class="line">pip install --no-index --find-links=pip-ansible-2.5.2/ -r requirements.txt</span><br></pre></td></tr></table></figure><h3 id="ansible-cfg-配置解析"><a href="#ansible-cfg-配置解析" class="headerlink" title="ansible.cfg 配置解析"></a>ansible.cfg 配置解析</h3><blockquote><p>ansible.cfg 不影响执行结果但合理的配置会有效提升效率</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置文件路径（优先级）</span></span><br><span class="line">./ansible.cfg</span><br><span class="line">/etc/ansible/ansible.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件内容 </span></span><br><span class="line">[defaults]</span><br><span class="line"><span class="comment">#inventory = /etc/ansible/hosts</span></span><br><span class="line"><span class="comment">#log_path = /var/log/ansible.log</span></span><br><span class="line">forks = 100 <span class="comment"># 设置并发数 </span></span><br><span class="line">host_key_checking = False <span class="comment"># 不检查 SSH 主机登录的密钥 </span></span><br><span class="line">display_skipped_hosts = False <span class="comment"># 不显示已跳过的主机 </span></span><br><span class="line">retry_files_enabled = False <span class="comment"># 不创建任务失败后的重试文件 </span></span><br><span class="line"><span class="comment"># 按照 1d 设置 setup 缓存，优化执行效率 </span></span><br><span class="line">gathering = smart</span><br><span class="line">fact_caching_timeout = 86400</span><br><span class="line">fact_caching = jsonfile</span><br><span class="line">fact_caching_connection = cachedir</span><br></pre></td></tr></table></figure><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ul><li>服务端操作系统：RHEL 6/7（Windows 不可作为控制端）</li><li>服务端 Python 版本：2.7.14（实测安装完成无需额外调整）</li><li>Ansible 版本：2.3.3.0（实测 2.4 以上版本已不支持 rhel5.5，客户端需 simplejson）</li><li>管理对象：目前主要针对 RHEL 5/6/7（Windows 使用高版本 Ansible）</li><li>基线标准：参考《主机岗配置基线 v1.1.xlsx》</li></ul><blockquote><p>服务端</p></blockquote><ul><li>操作系统版本：RHEL 6/7</li><li>Python 版本：2.7.14</li><li>安装方式：pip 离线安装依赖包</li></ul><blockquote><p>客户端</p></blockquote><ul><li>操作系统版本：RHEL 5/6/7</li><li>非最小模式安装无需做调整</li><li>RHEL5.5 需要安装 simplejson</li></ul><blockquote><p>核心用法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测 ansible 是否可以正常访问主机 </span></span><br><span class="line">ansible-playbook -i hosts playbooks/ping.yml -v</span><br><span class="line"><span class="comment"># 配置好 inventory，执行以下命令创建用户并建立信任关系 </span></span><br><span class="line">ansible-playbook -i hosts playbooks/user/default.yml -v</span><br><span class="line"><span class="comment"># 配置时间同步 / 进程服务 / 基线文件 </span></span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/cfgset.yml -v</span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/cfgset.yml -v --tags=<span class="string">"repo"</span></span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/cfgset.yml -v --skip-tags=<span class="string">"ntp,repo"</span></span><br><span class="line"><span class="comment"># 更新系统软件包和补丁包 </span></span><br><span class="line">ansible-playbook -i hosts playbooks/baseline/pakset.yml -v</span><br><span class="line"><span class="comment"># 修改用户密码 </span></span><br><span class="line">ansible-playbook -i hosts_changepw playbooks/user/changepw.yml -v -e <span class="string">"@userpass.json"</span></span><br><span class="line"><span class="comment"># 备份配置，支持自定义日期命名，默认为 "%Y%m%d"</span></span><br><span class="line">ansible-playbook -i hosts backup/backup.yml -v</span><br><span class="line"><span class="comment"># 恢复配置，支持按日期目录全局或者局部主机恢复 </span></span><br><span class="line">ansible-playbook -i hosts backup/restore.yml -v -e <span class="string">"var_backup_date=20180305"</span></span><br></pre></td></tr></table></figure><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ul><li>服务端操作系统：RHEL 6/7（Windows 不可作为控制端）</li><li>服务端 Python 版本：2.7.14（实测安装完成无需额外调整）</li><li>Ansible 版本：2.5.0（Windows 原生模块支持需要持续更新 Ansible 新版本）</li><li>管理对象：目前主要针对 Windows 7/2008/2012（不支持 xp/2003）</li><li>基线标准：参考《Windows 安全基线》</li></ul><blockquote><p>服务端</p></blockquote><ul><li>操作系统版本：RHEL 6/7</li><li>Python 版本：2.7.14</li><li>安装方式：pip 离线安装依赖包（目前使用 pipenv 切换管理 Linux 和 Windows）</li></ul><blockquote><p>客户端</p></blockquote><ul><li>操作系统版本：Window 7/2008/2012</li><li>WinRM（Windows 7/2008 需要升级至 Powershell v3.0）</li></ul><blockquote><p>核心用法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测 ansible 是否可以正常访问主机 </span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/ping.yml -v</span><br><span class="line"><span class="comment"># 配置好 inventory，执行以下命令创建用户并建立信任关系 </span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/user/default.yml -v</span><br><span class="line"><span class="comment"># 配置时间同步 / 进程服务 / 基线文件 </span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/cfgset.yml -v</span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/cfgset.yml -v --tags=<span class="string">"wsus"</span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/cfgset.yml -v --skip-tags=<span class="string">"ntp,wsus"</span></span><br><span class="line"><span class="comment"># 更新系统软件包和补丁包 </span></span><br><span class="line">ansible-playbook -i hosts win_playbooks/baseline/pakset.yml -v</span><br><span class="line"><span class="comment"># 修改用户密码 </span></span><br><span class="line">ansible-playbook -i win_hosts_changepw win_playbooks/user/changepw.yml -v -e <span class="string">"@userpass.json"</span></span><br><span class="line"><span class="comment"># 备份配置，支持自定义日期命名，默认为 "%Y%m%d"</span></span><br><span class="line">ansible-playbook -i win_hosts win_backup/backup.yml -v</span><br><span class="line"><span class="comment"># 恢复配置，支持按日期目录全局或者局部主机恢复 </span></span><br><span class="line">ansible-playbook -i win_hosts win_backup/restore.yml -v -e <span class="string">"var_backup_date=20180305"</span></span><br></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><blockquote><p>很抱歉我暂时不能分享全部信息，但是这并不妨碍技术上的交流，我会逐步分享有价值的可公开代码</p></blockquote><ol><li>遵循 what/why/how 思路，要理解 ansible 能解决什么问题，为什么选择 ansible，怎么使用 ansible 去解决</li><li>Ansible 学习成本低但不等同于没有难度，学习路径推荐参考官方文档并积极实践，官网没有答案要善用 Google 搜索</li><li>Ansible 纯后台模式只解决了部分问题，还有更多需求要通过基于 Ansible 的自动化运维平台来实现，拥抱开源技术不能固步自封</li></ol><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://docs.ansible.com/ansible/latest/index.html" target="_blank" rel="noopener">Ansible Documentation</a></p><p><a href="https://www.cnblogs.com/michael-xiang/p/10462749.html" target="_blank" rel="noopener">Ansible 入门指南 - 学习总结</a></p><p><a href="http://showme.codes/2019-09-19/understand-ansible/" target="_blank" rel="noopener">这样理解 Ansible 更容易</a></p><p><a href="https://anoyi.com/p/62388a4fcbc6" target="_blank" rel="noopener">前世今生：1 小时学会 Ansible</a></p><p><a href="https://lework.github.io/2016/11/19/Ansible-zhuan-ti-wen-zhang-zong-lan/" target="_blank" rel="noopener">Ansible 专题文章总揽</a></p><p><a href="https://www.zsythink.net/archives/tag/ansible/page/6/" target="_blank" rel="noopener">朱双印 - ansible 系列</a></p><p><a href="http://www.cnblogs.com/f-ck-need-u/p/7576137.html#ansible" target="_blank" rel="noopener">骏马金龙 - ansible </a></p><p><a href="https://www.bilibili.com/video/av33611758?from=search&amp;seid=7420958755659258683" target="_blank" rel="noopener">B 站视频 - ansible 教程 - 马哥 2019 全新 ansible 入门到精通</a></p>]]></content>
    
    <summary type="html">
    
      Ansible is Simple IT Automation
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>使用 Monit 替代 Supervisor 自动化管理和监控服务小结</title>
    <link href="https://wsgzao.github.io/post/monit/"/>
    <id>https://wsgzao.github.io/post/monit/</id>
    <published>2020-01-15T06:59:49.000Z</published>
    <updated>2020-01-20T09:32:39.016Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>对于进程的监控最常见的需求就是进程挂了如何被自动拉起来，现在可以由 Kubernetes 等先进的容器化技术来自动化管理，那原来再物理服务器或者虚拟机中的进程有什么好的办法呢？答案就是 Monit/Supervisor 等第三方应用来解决，因为线上环境分别使用 Monit 来监控 Core Logical Service，Supervisor 用在 Codis Dashboard/FE/Proxy 上，使用下来的感受和网上的对比分析报告类似，具体内容会在文章内引用，推荐大家使用 Monit 替代 Supervisor 自动化管理和监控服务。</p><blockquote><p>使用 Monit 替代 Supervisor 自动化管理和监控服务小结</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 01 月 15 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/monit/">https://wsgzao.github.io/post/monit/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://mmonit.com/" target="_blank" rel="noopener">Monit</a><br><a href="http://supervisord.org/" target="_blank" rel="noopener">Supervisor</a></p><hr><h2 id="Monit-介绍"><a href="#Monit-介绍" class="headerlink" title="Monit 介绍"></a>Monit 介绍</h2><blockquote><p>NAME</p></blockquote><p>Monit - utility for monitoring services on a Unix system</p><blockquote><p>SYNOPSIS</p></blockquote><p><strong>monit</strong> [options] <arguments></arguments></p><blockquote><p>DESCRIPTION</p></blockquote><p><strong>Monit</strong> is a utility for managing and monitoring processes, programs, files, directories and filesystems on a Unix system. Monit conducts automatic maintenance and repair and can execute meaningful causal actions in error situations. E.g. Monit can start a process if it does not run, restart a process if it does not respond and stop a process if it uses too much resources. You can use Monit to monitor files, directories and filesystems for changes, such as timestamps changes, checksum changes or size changes.</p><p>Monit is controlled via an easy to configure control file based on a free-format, token-oriented syntax. Monit logs to syslog or to its own log file and notifies you about error conditions via customisable alert messages. Monit can perform various TCP/IP network checks, protocol checks and can utilise SSL for such checks. Monit provides a HTTP(S) interface and you may use a browser to access the Monit program.</p><blockquote><p>WHAT TO MONITOR?</p></blockquote><p>You can use Monit to monitor daemon <strong>processes</strong> or similar programs running on localhost. Monit is particularly useful for monitoring daemon processes, such as those started at system boot time. For instance sendmail, sshd, apache and mysql. In contrast to many other monitoring systems, Monit can act if an error situation should occur, e.g.; if sendmail is not running, monit can start sendmail again automatically or if apache is using too many resources (e.g. if a DoS attack is in progress) Monit can stop or restart apache and send you an alert message. Monit can also monitor process characteristics, such as how much memory or cpu cycles a process is using.</p><p>You can also use Monit to monitor <strong>files</strong>, <strong>directories</strong> and <strong>filesystems</strong> on localhost. Monit can monitor these items for changes, such as timestamps changes, checksum changes or size changes. This is also useful for security reasons - you can monitor the md5 or sha1 checksum of files that should not change and get an alert or perform an action if they should change.</p><p>Monit can monitor <strong>network connections</strong> to various servers, either on localhost or on remote hosts. TCP, UDP and Unix Domain Sockets are supported. Network test can be performed on a protocol level; Monit has built-in tests for the main Internet protocols, such as HTTP, SMTP etc. Even if a protocol is not supported you can still test the server because you can configure Monit to send any data and test the response from the server.</p><p>Monit can be used to test <strong>programs</strong> or scripts at certain times, much like cron, but in addition, you can test the exit value of a program and perform an action or send an alert if the exit value indicates an error. This means that you can use Monit to perform any type of check you can write a script for.</p><p>Finally, Monit can be used to monitor general <strong>system</strong> resources on localhost such as overall CPU usage, Memory and System Load.</p><p><a href="https://mmonit.com/monit/documentation/monit.html" target="_blank" rel="noopener">https://mmonit.com/monit/documentation/monit.html</a></p><h2 id="Supervisor-介绍"><a href="#Supervisor-介绍" class="headerlink" title="Supervisor 介绍"></a>Supervisor 介绍</h2><h1 id="Supervisor-A-Process-Control-System"><a href="#Supervisor-A-Process-Control-System" class="headerlink" title="Supervisor: A Process Control System"></a>Supervisor: A Process Control System</h1><p>Supervisor is a client/server system that allows its users to monitor and control a number of processes on UNIX-like operating systems.</p><p>It shares some of the same goals of programs like <a href="http://supervisord.org/glossary.html#term-launchd" target="_blank" rel="noopener"><em>launchd</em></a>, <a href="http://supervisord.org/glossary.html#term-daemontools" target="_blank" rel="noopener"><em>daemontools</em></a>, and <a href="http://supervisord.org/glossary.html#term-runit" target="_blank" rel="noopener"><em>runit</em></a>. Unlike some of these programs, it is not meant to be run as a substitute for init as “process id 1”. Instead it is meant to be used to control processes related to a project or a customer, and is meant to start like any other program at boot time.</p><p><a href="http://supervisord.org/" target="_blank" rel="noopener">http://supervisord.org/</a></p><h2 id="Monit-VS-Supervisor"><a href="#Monit-VS-Supervisor" class="headerlink" title="Monit VS Supervisor"></a>Monit VS Supervisor</h2><h3 id="Monit-是什么"><a href="#Monit-是什么" class="headerlink" title="Monit 是什么"></a>Monit 是什么</h3><ul><li>Monit 是一个管理和监控 Unix 系统的小型开源组件.</li><li>Monit 可以在出现错误的情况下, 自动维护, 修复和做一些有意义的行为</li></ul><h3 id="为什么选择-Monit"><a href="#为什么选择-Monit" class="headerlink" title="为什么选择 Monit"></a>为什么选择 Monit</h3><p>除了 Monit 还有一些其他的第三方监控方案(eg. Supervisor), 我们考虑选择额 Monit 作为监控的原因有</p><ul><li>超轻量, 稳定, 高可用</li><li>依赖少, 安装配置方便, 尽量减少运维及学习成本(即使没有任何 Monit 基础的人, 都能轻易的读懂大部分监控文件)</li><li>非侵入式, 被监控的程序可以不用知道监控程序的存在(如果使用 Supervisor 监控, 则服务必须从 Supervisor 启动)</li><li>基本功能完备(9 种类型监控, 邮件报警, 支持用户自定义 shell 扩展)</li></ul><h3 id="Supervisor-优缺点"><a href="#Supervisor-优缺点" class="headerlink" title="Supervisor 优缺点"></a>Supervisor 优缺点</h3><p><strong> 优点 </strong></p><ol><li>轻量、特性丰富、内存友好(好客套的优点。。。)</li><li>对被监控进程的状态获取迅速且精确——通过子进程管理，没办法不精确</li></ol><p><strong> 缺点 </strong></p><ol><li>被监控进程必须运行在前台(可以理解为有自己的控制终端)——这也是最为致命的一点</li><li>无法管理依赖，也就是说无法控制服务启动先后顺序</li><li>无法管理被监控进程创建的子进程——重启服务时被监控进程的子进程无法正常退出，隐患大</li><li>无法控制进程失败重试的间隔时间——有些进程需要清理资源，不过这点还好</li></ol><h3 id="Monit-优缺点"><a href="#Monit-优缺点" class="headerlink" title="Monit 优缺点"></a>Monit 优缺点</h3><p><strong> 优点 </strong></p><ol><li>安装配置简单，同样轻量(似乎也是很客套了)</li><li>可以监控前台进程和非前台进程——完美的弥补了 supervisor 的致命缺点</li><li>除了监控进程还能监控文件、文件系统，甚至系统资源，CPU 利用率，内存使用也是可以的</li><li>被监控的进程可以设置依赖，控制启动顺序</li></ol><p><strong> 缺点 </strong></p><ol><li>无法监控没有 pid 文件的进程，如 shell 脚本</li><li>对进程监控的状态感知有延时，即精度不够——采用轮训决定了它无法像 supervisor 一样实时感知被监控进程状态</li></ol><p>这样看起来还是 monit 更为普适一点。</p><p>不过这催生了一个大胆的想法，使用 supervisor 管理容器内多进程，monit 作为一个被监控进程挂在 supervisor 之下。这样对于无法前台运行的程序，就可以通过 monit 监控，而对服务中断感知强烈的则直接挂在 supervisor 之下。看起来似乎是个好办法，有机会试试，哈哈哈。</p><p>从实际容器中运行的表现看，monit 经常出现各种未知异常，而 supervisor 表现得十分稳定。</p><h2 id="Monit-基本用法"><a href="#Monit-基本用法" class="headerlink" title="Monit 基本用法"></a>Monit 基本用法</h2><h3 id="Monit-常用命令"><a href="#Monit-常用命令" class="headerlink" title="Monit 常用命令"></a>Monit 常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># monit -h</span></span><br><span class="line">Usage: monit [options]+ [<span class="built_in">command</span>]</span><br><span class="line">Options are as follows:</span><br><span class="line"> -c file       Use this control file</span><br><span class="line"> -d n          Run as a daemon once per n seconds</span><br><span class="line"> -g name       Set group name <span class="keyword">for</span> monit commands</span><br><span class="line"> -l logfile    Print <span class="built_in">log</span> information to this file</span><br><span class="line"> -p pidfile    Use this lock file <span class="keyword">in</span> daemon mode</span><br><span class="line"> -s statefile  Set the file monit should write state information to</span><br><span class="line"> -I            Do not run <span class="keyword">in</span> background (needed when run from init)</span><br><span class="line"> --id          Print Monit<span class="string">'s unique ID</span></span><br><span class="line"><span class="string"> --resetid     Reset Monit'</span>s unique ID. Use with caution</span><br><span class="line"> -B            Batch <span class="built_in">command</span> line mode (<span class="keyword">do</span> not output tables or colors)</span><br><span class="line"> -t            Run syntax check <span class="keyword">for</span> the control file</span><br><span class="line"> -v            Verbose mode, work noisy (diagnostic output)</span><br><span class="line"> -vv           Very verbose mode, same as -v plus <span class="built_in">log</span> stacktrace on error</span><br><span class="line"> -H [filename] Print SHA1 and MD5 hashes of the file or of stdin <span class="keyword">if</span> the</span><br><span class="line">               filename is omited; monit will <span class="built_in">exit</span> afterwards</span><br><span class="line"> -V            Print version number and patchlevel</span><br><span class="line"> -h            Print this text</span><br><span class="line">Optional commands are as follows:</span><br><span class="line"> start all             - Start all services</span><br><span class="line"> start &lt;name&gt;          - Only start the named service</span><br><span class="line"> stop all              - Stop all services</span><br><span class="line"> stop &lt;name&gt;           - Stop the named service</span><br><span class="line"> restart all           - Stop and start all services</span><br><span class="line"> restart &lt;name&gt;        - Only restart the named service</span><br><span class="line"> monitor all           - Enable monitoring of all services</span><br><span class="line"> monitor &lt;name&gt;        - Only <span class="built_in">enable</span> monitoring of the named service</span><br><span class="line"> unmonitor all         - Disable monitoring of all services</span><br><span class="line"> unmonitor &lt;name&gt;      - Only <span class="built_in">disable</span> monitoring of the named service</span><br><span class="line"> reload                - Reinitialize monit</span><br><span class="line"> status [name]         - Print full status information <span class="keyword">for</span> service(s)</span><br><span class="line"> summary [name]        - Print short status information <span class="keyword">for</span> service(s)</span><br><span class="line"> report [up|down|..]   - Report state of services. See manual <span class="keyword">for</span> options</span><br><span class="line"> quit                  - Kill the monit daemon process</span><br><span class="line"> validate              - Check all services and start <span class="keyword">if</span> not running</span><br><span class="line"> procmatch &lt;pattern&gt;   - Test process matching pattern</span><br></pre></td></tr></table></figure><p>想要让 Monit 可靠的为我们工作, 学习成本非常低, 只需要学习一些 Monit 命令行和配置文件写法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># options - 选项</span></span><br><span class="line">- monit</span><br><span class="line">- monit -t</span><br><span class="line">- monit -c /var/monit/monitrc  <span class="comment"># 指定配置文件</span></span><br><span class="line">- monit -g &lt;groupname&gt; start/stop <span class="comment"># Monit 可以对各个监控分组, 如果需要对某个分组统一操作, 可以用这个命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># arguments - 参数</span></span><br><span class="line">- monit reload</span><br><span class="line">- monit quit</span><br><span class="line">- monit start/stop/restart/monitor/unmonitor &lt;name&gt;/all  <span class="comment"># &lt;name&gt;: 每个监控都有一个独一无二的名字, 具体后面会提到; all: 所有监控服务</span></span><br></pre></td></tr></table></figure><h3 id="Monit-服务监控配置文件格式"><a href="#Monit-服务监控配置文件格式" class="headerlink" title="Monit 服务监控配置文件格式"></a>Monit 服务监控配置文件格式</h3><p>详细配置, 共计 9 种, 所有配置中, 都符合以下规则</p><ul><li>如果指定的 path 不存在, 而且配置块里包含 start 方法, 会调用这个 start 方法</li><li>如果 path 指定的文件类型不对, Monit 不能监控这个项目</li></ul><blockquote><ol><li>Process</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CHECK PROCESS &lt;unique name&gt; &lt;PIDFILE &lt;path&gt; | MATCHING &lt;regex&gt;&gt;</span><br><span class="line"></span><br><span class="line">&lt;path&gt; pid-file 的绝对路径. 不存在 pid-file 文件或者 pid-file 文件没有对应的正在运行的程序, Monit 会执行 start 方法</span><br><span class="line"></span><br><span class="line">&lt;regex&gt; 进程名称的正则表达来监控进程, 可以通过命令行测试正则是否写对了: monit procmatch &quot;regex-pattern&quot;</span><br></pre></td></tr></table></figure><blockquote><ol start="2"><li>File</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CHECK FILE &lt;unique name&gt; PATH &lt;path&gt;</span><br><span class="line"></span><br><span class="line">&lt;path&gt; file 的绝对路径.</span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>Fifo</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CHECK FIFO &lt;unique name&gt; PATH &lt;path&gt;</span><br><span class="line">&lt;path&gt; fifo 的绝对路径.</span><br></pre></td></tr></table></figure><blockquote><ol start="4"><li>Filesystem</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CHECK FILESYSTEM &lt;unique name&gt; PATH &lt;path&gt;</span><br><span class="line">&lt;path&gt; 设备 / 磁盘, 挂载点的路径 或 NFS/CIFS/FUSE 链接字符串. 如果文件系统不可用, Monit 会执行 start 方法</span><br></pre></td></tr></table></figure><blockquote><ol start="5"><li>Directory</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CHECK DIRECTORY &lt;unique name&gt; PATH &lt;path&gt;</span><br><span class="line"></span><br><span class="line">&lt;path&gt; 目录问价的绝对路径</span><br></pre></td></tr></table></figure><blockquote><ol start="6"><li>Remote host</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CHECK HOST &lt;unique name&gt; ADDRESS &lt;host&gt;</span><br><span class="line"></span><br><span class="line">&lt;host&gt; 可以是域名或者 IP 地址. eg: &quot;tildeslash.com&quot; or &quot;64.87.72.95&quot;.</span><br></pre></td></tr></table></figure><blockquote><ol start="7"><li>System</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CHECK SYSTEM &lt;unique name&gt;</span><br><span class="line"></span><br><span class="line">&lt;unique name&gt; 通常来说是本机名称 (可以用 $HOST), 也可以是其他名称. 用于邮件报警或者 M/Monit 的初始化名称</span><br><span class="line"> 这类配置可以监控系统资源(CPU, memory, load average...)</span><br></pre></td></tr></table></figure><blockquote><ol start="8"><li>Program</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CHECK PROGRAM &lt;unique name&gt; PATH &lt;executable file&gt; [TIMEOUT &lt;number&gt; SECONDS]</span><br><span class="line"></span><br><span class="line">&lt;path&gt; 可执行程序或脚本的绝对路径. 允许检查程序退出状态. 如果程序没能在 &lt;number&gt; 秒内执行完成, Monit 会终结这个程序, 默认是 300s</span><br><span class="line">程序的输出会被记录, 用于用户界面或者报警, 默认 512 bytes(可以通过 set limits 修改)</span><br></pre></td></tr></table></figure><blockquote><ol start="9"><li>Network</li></ol></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CHECK NETWORK &lt;unique name&gt; &lt;ADDRESS &lt;ipaddress&gt; | INTERFACE &lt;name&gt;&gt;</span><br><span class="line"></span><br><span class="line"># &lt;ipaddress&gt; 是被监控的 IPv4/IPv6 网卡地址. 用 eth0 也是可以的</span><br></pre></td></tr></table></figure><p>更多配置信息可以参考 Monit 官方文档和实例</p><p><a href="https://mmonit.com/documentation/" target="_blank" rel="noopener">https://mmonit.com/documentation/</a></p><p><a href="https://mmonit.com/wiki/Monit/ConfigurationExamples" target="_blank" rel="noopener">https://mmonit.com/wiki/Monit/ConfigurationExamples</a></p><h2 id="Monit-配置实践"><a href="#Monit-配置实践" class="headerlink" title="Monit 配置实践"></a>Monit 配置实践</h2><ol><li>创建 templates 模板，利用 python 生成 monit 配置文件</li><li>使用 ansible 推送到目标服务器中</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建通用配置，配置日志，邮件告警</span></span><br><span class="line">vim basic.j2</span><br><span class="line"></span><br><span class="line"><span class="comment"># log to monit.log</span></span><br><span class="line"><span class="built_in">set</span> logfile /var/<span class="built_in">log</span>/monit.log</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> daemon &#123;&#123; monit_poll_interval &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> eventqueue basedir /var/lib/monit/events slots 5000</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> mailserver smtp.xxx.com port 465</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> alert xxx@xxx.com &#123; nonexist, timeout, resource &#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> mail-format &#123;</span><br><span class="line">  from: xxx@xxx.com</span><br><span class="line">  subject: monit alert -- <span class="variable">$SERVICE</span> <span class="variable">$EVENT</span> at <span class="variable">$DATE</span></span><br><span class="line">  message: <span class="variable">$EVENT</span> Service <span class="variable">$SERVICE</span></span><br><span class="line">                Date:        <span class="variable">$DATE</span></span><br><span class="line">                Action:      <span class="variable">$ACTION</span></span><br><span class="line">                Host:        <span class="variable">$HOST</span></span><br><span class="line">                Description: <span class="variable">$DESCRIPTION</span></span><br><span class="line"></span><br><span class="line">           Your faithful employee,</span><br><span class="line">           Monit</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建标准应用监控</span></span><br><span class="line">vim daemon_set.j2</span><br><span class="line"></span><br><span class="line">check process xxx with pidfile /run/xxx/daemon.pid</span><br><span class="line">    start program = <span class="string">"/usr/bin/python2  /bin/xxx restart"</span></span><br><span class="line">    stop program = <span class="string">"/usr/bin/python2 /bin/xxx stop"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> 10 restarts within 10 cycles <span class="keyword">then</span> unmonitor</span><br><span class="line"></span><br><span class="line">check process xxxx with matching xxxx</span><br><span class="line">start program = <span class="string">"/etc/init.d/xxxx start"</span></span><br><span class="line">stop program = <span class="string">"/etc/init.d/xxxx stop"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> 10 restarts within 10 cycles <span class="keyword">then</span> unmonitor</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建非标准应用监控</span></span><br><span class="line">vim logic_service.j2</span><br><span class="line"></span><br><span class="line">check process &#123;&#123; service_name &#125;&#125; with pidfile &#123;&#123; root_dir &#125;&#125;/&#123;&#123; service_name &#125;&#125;/deploy/&#123;&#123; monit_name &#125;&#125;.pid</span><br><span class="line">    start program = <span class="string">"/bin/bash -c'cd &#123;&#123; root_dir &#125;&#125;/&#123;&#123; service_name &#125;&#125;/deploy &amp;&amp; ./start.sh &amp;&gt;start.log '"</span></span><br><span class="line">    stop program = <span class="string">"/bin/bash -c 'cd &#123;&#123; root_dir &#125;&#125;/&#123;&#123; service_name &#125;&#125;/deploy &amp;&amp; ./stop.sh &amp;&gt;stop.log'"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> 5 restarts within 15 cycles <span class="keyword">then</span> unmonitor</span><br><span class="line">    &#123;% <span class="keyword">if</span> memory_usage is defined %&#125;</span><br><span class="line">    <span class="keyword">if</span> total memory usage &gt; &#123;&#123; memory_usage &#125;&#125; <span class="keyword">for</span> 10 cycles <span class="keyword">then</span> restart</span><br><span class="line">    &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://mmonit.com/monit/documentation/monit.html" target="_blank" rel="noopener">Monit Document</a></p><p><a href="https://github.com/freeaquar/notebook/blob/master/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/Monit-%E7%AC%94%E8%AE%B0.md" target="_blank" rel="noopener">Monit 笔记</a></p><p><a href="https://blog.csdn.net/u010039418/article/details/83784195" target="_blank" rel="noopener">Docker 容器内多进程管理——supervisor VS monit</a></p>]]></content>
    
    <summary type="html">
    
      使用Monit替代Supervisor自动化管理和监控服务小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>YAML 入门教程</title>
    <link href="https://wsgzao.github.io/post/yaml/"/>
    <id>https://wsgzao.github.io/post/yaml/</id>
    <published>2020-01-08T06:59:49.000Z</published>
    <updated>2020-01-08T10:52:19.354Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>YAML 是 “YAML Ain’t a Markup Language”（YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：”Yet Another Markup Language”（仍是一种标记语言）。</p><p>YAML 的语法和其他高级语言类似，并且可以简单表达清单、散列表，标量等数据形态。它使用空白符号缩进和大量依赖外观的特色，特别适合用来表达或编辑数据结构、各种配置文件、倾印调试内容、文件大纲（例如：许多电子邮件标题格式和 YAML 非常接近）。</p><p>YAML 的配置文件后缀为 .yml，如：ansible-playbook.yml，Hexo 的配置文件也是_config.yml</p><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 01 月 09 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/yaml/">https://wsgzao.github.io/post/yaml/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://yaml.org/" target="_blank" rel="noopener">YAML</a></p><hr><h2 id="YAML-简介"><a href="#YAML-简介" class="headerlink" title="YAML 简介"></a>YAML 简介</h2><p>YAML: YAML Ain’t Markup Language</p><p>What It Is: YAML is a human friendly data serialization standard for all programming languages.</p><p>YAML 语言（发音 /ˈjæməl/ ）的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。</p><p>它的基本语法规则如下。</p><ul><li>大小写敏感</li><li>使用缩进表示层级关系</li><li>缩进时不允许使用 Tab 键，只允许使用空格。</li><li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 表示注释，从这个字符一直到行尾，都会被解析器忽略。</span><br></pre></td></tr></table></figure><p>YAML 支持的数据结构有三种。</p><ul><li>对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）</li><li>数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）</li><li>纯量（scalars）：单个的、不可再分的值</li></ul><h2 id="X-分钟速成-Y"><a href="#X-分钟速成-Y" class="headerlink" title="X 分钟速成 Y"></a>X 分钟速成 Y</h2><blockquote><p>其中 Y=yaml</p></blockquote><p>源代码下载： <a href="https://learnxinyminutes.com/docs/files/learnyaml-cn.yaml" target="_blank" rel="noopener">learnyaml-cn.yaml</a></p><p>YAML 是一个数据序列化语言，被设计成人类直接可写可读的。</p><p>它是 JSON 的严格超集，增加了语法显著换行符和缩进，就像 Python。但和 Python 不一样， YAML 根本不容许文字制表符。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># YAML 中的注解看起来像这样。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################</span></span><br><span class="line"><span class="comment"># 标量类型     #</span></span><br><span class="line"><span class="comment">################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 我们的根对象 (它们在整个文件里延续) 将会是一个映射，</span></span><br><span class="line"><span class="comment"># 它等价于在别的语言里的一个字典，哈希表或对象。</span></span><br><span class="line"><span class="attr">key:</span> <span class="string">value</span></span><br><span class="line"><span class="attr">another_key:</span> <span class="string">Another</span> <span class="string">value</span> <span class="string">goes</span> <span class="string">here.</span></span><br><span class="line"><span class="attr">a_number_value:</span> <span class="number">100</span></span><br><span class="line"><span class="comment"># 数字 1 会被解释为数值，而不是一个布尔值。</span></span><br><span class="line"><span class="comment"># 如果你想要的是一个布尔值，使用 true。</span></span><br><span class="line"><span class="attr">scientific_notation:</span> <span class="number">1e+12</span></span><br><span class="line"><span class="attr">boolean:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">null_value:</span> <span class="literal">null</span></span><br><span class="line"><span class="string">key</span> <span class="string">with</span> <span class="attr">spaces:</span> <span class="string">value</span></span><br><span class="line"><span class="comment"># 注意，字符串不必被括在引号中，但也可以被括起来。</span></span><br><span class="line"><span class="attr">however:</span> <span class="string">'A string, enclosed in quotes.'</span></span><br><span class="line"><span class="string">'Keys can be quoted too.'</span><span class="string">:</span> <span class="string">"Useful if you want to put a':'in your key."</span></span><br><span class="line"><span class="string">single</span> <span class="attr">quotes:</span> <span class="string">'have'</span><span class="string">'one'</span><span class="string">'escape pattern'</span></span><br><span class="line"><span class="string">double</span> <span class="attr">quotes:</span> <span class="string">"have many: \", \0, \t, \u263A, \x0d\x0a == \r\n, and more."</span></span><br><span class="line"><span class="comment"># UTF-8/16/32 字符需要被转义 (encoded)</span></span><br><span class="line"><span class="string">Superscript</span> <span class="attr">two:</span> <span class="string">\u00B2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多行字符串既可以写成像一个'文字块'(使用 |)，</span></span><br><span class="line"><span class="comment"># 或像一个'折叠块'(使用'&gt;')。</span></span><br><span class="line"><span class="attr">literal_block:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    This entire block of text will be the value of the'literal_block'key,</span></span><br><span class="line"><span class="string">    with line breaks being preserved.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    The literal continues until de-dented, and the leading indentation is</span></span><br><span class="line"><span class="string">    stripped.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Any lines that are'more-indented'keep the rest of their indentation -</span></span><br><span class="line"><span class="string">        these lines will be indented by 4 spaces.</span></span><br><span class="line"><span class="string"></span><span class="attr">folded_style:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">    This entire block of text will be the value of'folded_style', but this</span></span><br><span class="line"><span class="string">    time, all newlines will be replaced with a single space.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Blank lines, like above, are converted to a newline character.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'More-indented'lines keep their newlines, too -</span></span><br><span class="line"><span class="string">        this text will appear over two lines.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">####################</span></span><br><span class="line"><span class="string"># 集合类型         #</span></span><br><span class="line"><span class="string">####################</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 嵌套是通过缩进完成的。推荐使用 2 个空格的缩进（但非必须）</span></span><br><span class="line"><span class="string"></span><span class="attr">a_nested_map:</span></span><br><span class="line"><span class="attr">  key:</span> <span class="string">value</span></span><br><span class="line"><span class="attr">  another_key:</span> <span class="string">Another</span> <span class="string">Value</span></span><br><span class="line"><span class="attr">  another_nested_map:</span></span><br><span class="line"><span class="attr">    hello:</span> <span class="string">hello</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 映射的键不必是字符串。</span></span><br><span class="line"><span class="number">0.25</span><span class="string">:</span> <span class="string">a</span> <span class="string">float</span> <span class="string">key</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 键也可以是复合型的，比如多行对象 </span></span><br><span class="line"><span class="comment"># 我们用 ? 后跟一个空格来表示一个复合键的开始。</span></span><br><span class="line"><span class="string">?</span> <span class="string">|</span></span><br><span class="line"><span class="string">  This is a key</span></span><br><span class="line"><span class="string">  that has multiple lines</span></span><br><span class="line"><span class="string">: and this is its value</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># YAML 也允许使用复杂键语法表示序列间的映射关系。</span></span><br><span class="line"><span class="string"># 但有些语言的解析器可能会不支持。</span></span><br><span class="line"><span class="string"># 一个例子：</span></span><br><span class="line"><span class="string">? - Manchester United</span></span><br><span class="line"><span class="string">  - Real Madrid</span></span><br><span class="line"><span class="string">: [ 2001-01-01, 2002-02-02 ]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 序列 (等价于列表或数组) 看起来像这样：</span></span><br><span class="line"><span class="string"># 注意'-'算作缩进 </span></span><br><span class="line"><span class="string"></span><span class="attr">a_sequence:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">Item</span> <span class="number">1</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">Item</span> <span class="number">2</span></span><br><span class="line"><span class="bullet">  -</span> <span class="number">0.5</span> <span class="comment"># 序列可以包含不同类型。</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">Item</span> <span class="number">4</span></span><br><span class="line"><span class="attr">  - key:</span> <span class="string">value</span></span><br><span class="line"><span class="attr">    another_key:</span> <span class="string">another_value</span></span><br><span class="line"><span class="bullet">  -</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">This</span> <span class="string">is</span> <span class="string">a</span> <span class="string">sequence</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">inside</span> <span class="string">another</span> <span class="string">sequence</span></span><br><span class="line"><span class="bullet">  -</span> <span class="bullet">-</span> <span class="bullet">-</span> <span class="string">Nested</span> <span class="string">sequence</span> <span class="string">indicators</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">can</span> <span class="string">be</span> <span class="string">collapsed</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 因为 YAML 是 JSON 的超集，你也可以写 JSON 风格的映射和序列：</span></span><br><span class="line"><span class="attr">json_map:</span> <span class="string">&#123;"key":</span> <span class="string">"value"</span><span class="string">&#125;</span></span><br><span class="line"><span class="attr">json_seq:</span> <span class="string">[3,</span> <span class="number">2</span><span class="string">,</span> <span class="number">1</span><span class="string">,</span> <span class="string">"takeoff"</span><span class="string">]</span></span><br><span class="line"><span class="string">and</span> <span class="string">quotes</span> <span class="string">are</span> <span class="attr">optional:</span> <span class="string">&#123;key:</span> <span class="string">[3,</span> <span class="number">2</span><span class="string">,</span> <span class="number">1</span><span class="string">,</span> <span class="string">takeoff]&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#######################</span></span><br><span class="line"><span class="comment"># 其余的 YAML 特性    #</span></span><br><span class="line"><span class="comment">#######################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># YAML 还有一个方便的特性叫'锚'，它能让你很容易在文档中进行文本复用。</span></span><br><span class="line"><span class="comment"># 如下两个键会有相同的值：</span></span><br><span class="line"><span class="attr">anchored_content:</span> <span class="meta">&amp;anchor_name</span> <span class="string">This</span> <span class="string">string</span> <span class="string">will</span> <span class="string">appear</span> <span class="string">as</span> <span class="string">the</span> <span class="string">value</span> <span class="string">of</span> <span class="string">two</span> <span class="string">keys.</span></span><br><span class="line"><span class="attr">other_anchor:</span> <span class="meta">*anchor_name</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 锚也可被用来复制 / 继承属性 </span></span><br><span class="line"><span class="attr">base:</span> <span class="meta">&amp;base</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">Everyone</span> <span class="string">has</span> <span class="string">same</span> <span class="string">name</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The regexp &lt;&lt; is called Merge Key Language-Independent Type.</span></span><br><span class="line"><span class="comment"># 它表明指定映射的所有键值会插入到当前的映射中。</span></span><br><span class="line"></span><br><span class="line"><span class="attr">foo:</span> <span class="meta">&amp;foo</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*base</span></span><br><span class="line"><span class="attr">  age:</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="attr">bar:</span> <span class="meta">&amp;bar</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*base</span></span><br><span class="line"><span class="attr">  age:</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># foo 和 bar 将都含有 name: Everyone has same name</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># YAML 还有标签，你可以用它显示地声明类型。</span></span><br><span class="line"><span class="attr">explicit_string:</span> <span class="type">!!str</span> <span class="number">0.5</span></span><br><span class="line"><span class="comment"># 一些解析器实现特定语言的标签，就像这个针对 Python 的复数类型。</span></span><br><span class="line"><span class="attr">python_complex_number:</span> <span class="type">!!python</span><span class="string">/complex</span> <span class="number">1</span><span class="string">+2j</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 我们也可以在 YAML 的复合键中使用特定语言的标签 </span></span><br><span class="line"><span class="string">?</span> <span class="type">!!python</span><span class="string">/tuple</span> <span class="string">[5,</span> <span class="number">7</span><span class="string">]</span></span><br><span class="line"><span class="string">:</span> <span class="string">Fifty</span> <span class="string">Seven</span></span><br><span class="line"><span class="comment"># 将会是 Python 中的  &#123;(5, 7):'Fifty Seven'&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">####################</span></span><br><span class="line"><span class="comment"># 其余的 YAML 类型 #</span></span><br><span class="line"><span class="comment">####################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 除了字符串和数字，YAML 还能理解其它标量。</span></span><br><span class="line"><span class="comment"># ISO 格式的日期和日期时间文本也可以被解析。</span></span><br><span class="line"><span class="attr">datetime:</span> <span class="number">2001</span><span class="bullet">-12</span><span class="bullet">-15</span><span class="attr">T02:59:43.1Z</span></span><br><span class="line"><span class="attr">datetime_with_spaces:</span> <span class="number">2001</span><span class="bullet">-12</span><span class="bullet">-14</span> <span class="number">21</span><span class="string">:59:43.10</span> <span class="bullet">-5</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2002</span><span class="bullet">-12</span><span class="bullet">-14</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个 !!binary 标签表明这个字符串实际上 </span></span><br><span class="line"><span class="comment"># 是一个用 base64 编码表示的二进制 blob。</span></span><br><span class="line"><span class="attr">gif_file:</span> <span class="type">!!binary</span> <span class="string">|</span></span><br><span class="line"><span class="string">  R0lGODlhDAAMAIQAAP//9/X17unp5WZmZgAAAOfn515eXvPz7Y6OjuDg4J+fn5</span></span><br><span class="line"><span class="string">  OTk6enp56enmlpaWNjY6Ojo4SEhP/++f/++f/++f/++f/++f/++f/++f/++f/+</span></span><br><span class="line"><span class="string">  +f/++f/++f/++f/++f/++SH+Dk1hZGUgd2l0aCBHSU1QACwAAAAADAAMAAAFLC</span></span><br><span class="line"><span class="string">  AgjoEwnuNAFOhpEMTRiggcz4BNJHrv/zCFcLiwMWYNG84BwwEeECcgggoBADs=</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># YAML 还有一个集合类型，它看起来像这样：</span></span><br><span class="line"><span class="string"></span><span class="attr">set:</span></span><br><span class="line">  <span class="string">?</span> <span class="string">item1</span></span><br><span class="line">  <span class="string">?</span> <span class="string">item2</span></span><br><span class="line">  <span class="string">?</span> <span class="string">item3</span></span><br><span class="line"><span class="attr">or:</span> <span class="string">&#123;item1,</span> <span class="string">item2,</span> <span class="string">item3&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 集合只是值为 null 的映射；上面的集合等价于：</span></span><br><span class="line"><span class="attr">set2:</span></span><br><span class="line"><span class="attr">  item1:</span> <span class="literal">null</span></span><br><span class="line"><span class="attr">  item2:</span> <span class="literal">null</span></span><br><span class="line"><span class="attr">  item3:</span> <span class="literal">null</span></span><br><span class="line"></span><br><span class="line"><span class="string">...</span>  <span class="comment"># document end</span></span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://yaml.org/" target="_blank" rel="noopener">YAML official website</a></p><p><a href="http://codebeautify.org/yaml-validator" target="_blank" rel="noopener">Online YAML Validator</a></p><p><a href="https://learnxinyminutes.com/docs/zh-cn/yaml-cn/" target="_blank" rel="noopener">X 分钟速成 Y</a></p><p><a href="https://www.runoob.com/w3cnote/yaml-intro.html" target="_blank" rel="noopener">YAML 入门教程</a></p>]]></content>
    
    <summary type="html">
    
      YAML入门教程
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Jenkins export and import jobs 迁移导出导入任务实践小结</title>
    <link href="https://wsgzao.github.io/post/jenkins-import/"/>
    <id>https://wsgzao.github.io/post/jenkins-import/</id>
    <published>2020-01-06T06:59:49.000Z</published>
    <updated>2020-02-07T03:53:54.904Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我遇到的 Jenkins 迁移项目并非可以通过简单的物理文件复制就可以轻松解决，需要考虑上千个不同项目的 jobs 分离，Jenkins 1.x 和 2.x 大版本兼容性，Jenkins Plugins 插件，Jenkins Credentials 凭证，Jenkins Restrict 节点约束，按 view 分类不同项目的 jobs 等各种因素。这次对 Jenkins 迁移做了大量的研究和实践，希望总结出来的方法能对各位有帮助。</p><blockquote><p>Jenkins export and import jobs 迁移导出导入任务实践小结</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2020 年 01 月 06 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/jenkins-import/">https://wsgzao.github.io/post/jenkins-import/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://plugins.jenkins.io/" target="_blank" rel="noopener">Jenkins Plugins Index</a></p><hr><h2 id="export-and-import-jobs-in-Jenkins"><a href="#export-and-import-jobs-in-Jenkins" class="headerlink" title="export and import jobs in Jenkins"></a>export and import jobs in Jenkins</h2><p>Is it possible to exchange jobs between 2 different Jenkins’? I’m searching for a way to export/import jobs.</p><h2 id="Solutions-Answers"><a href="#Solutions-Answers" class="headerlink" title="Solutions/Answers:"></a>Solutions/Answers:</h2><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1:"></a>Solution 1:</h3><p>Jenkins has a rather good wiki, albeit hard to read when you’re new to CI software…</p><p>They offer a simple solution for <a href="https://wiki.jenkins-ci.org/display/JENKINS/Administering+Jenkins#AdministeringJenkins-Moving%2Fcopying%2Frenamingjobs" target="_blank" rel="noopener">moving jobs between servers</a></p><p>The trick probably was the need to reload config from the Jenkins Configuration Page.</p><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution 2:"></a>Solution 2:</h3><p>Probably use jenkins command line is another option, see <a href="https://wiki.jenkins-ci.org/display/JENKINS/Jenkins+CLI" target="_blank" rel="noopener">https://wiki.jenkins-ci.org/display/JENKINS/Jenkins+CLI</a></p><ul><li>create-job: Creates a new job by reading stdin as a configuration XML file.</li><li>get-job: Dumps the job definition XML to stdout</li></ul><p>So you can do</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -jar jenkins-cli.jar -s http://server get-job myjob &gt; myjob.xml</span><br><span class="line">java -jar jenkins-cli.jar -s http://server create-job newmyjob &lt; myjob.xml</span><br></pre></td></tr></table></figure><p>It works fine for me and I am used to store in inside my version control system</p><h3 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution 3:"></a>Solution 3:</h3><p>A one-liner:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s http://OLD_JENKINS/job/JOBNAME/config.xml | curl -X POST &apos;http://NEW_JENKINS/createItem?name=JOBNAME&apos; --header &quot;Content-Type: application/xml&quot; -d @-</span><br></pre></td></tr></table></figure><p>With authentication:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s http:///&lt;USER&gt;:&lt;API_TOKEN&gt;@OLD_JENKINS/job/JOBNAME/config.xml | curl -X POST &apos;http:///&lt;USER&gt;:&lt;API_TOKEN&gt;@NEW_JENKINS/createItem?name=JOBNAME&apos; --header &quot;Content-Type: application/xml&quot; -d @-</span><br></pre></td></tr></table></figure><p>With Crumb, if CSRF is active (<a href="https://stackoverflow.com/questions/38137760/jenkins-rest-api-create-job" target="_blank" rel="noopener">see details here</a>):</p><p>Get crumb with:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ CRUMB_OLD=$(curl -s &apos;http://&lt;USER&gt;:&lt;API_TOKEN&gt;@OLD_JENKINS/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,&quot;:&quot;,//crumb)&apos;)</span><br><span class="line">$ CRUMB_NEW=$(curl -s &apos;http://&lt;USER&gt;:&lt;API_TOKEN&gt;@NEW_JENKINS/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,&quot;:&quot;,//crumb)&apos;)</span><br></pre></td></tr></table></figure><p>Apply crumb with <code>-H CRUMB</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s -H $CRUMB_OLD http:///&lt;USER&gt;:&lt;API_TOKEN&gt;@OLD_JENKINS/job/JOBNAME/config.xml | curl -X POST -H $CRUMB_NEW &apos;http:///&lt;USER&gt;:&lt;API_TOKEN&gt;@NEW_JENKINS/createItem?name=JOBNAME&apos; --header &quot;Content-Type: application/xml&quot; -d @-</span><br></pre></td></tr></table></figure><h3 id="Solution-4"><a href="#Solution-4" class="headerlink" title="Solution 4:"></a>Solution 4:</h3><p>There’s a plugin called <a href="https://wiki.jenkins-ci.org/display/JENKINS/Job+Import+Plugin" target="_blank" rel="noopener">Job Import Plugin</a> that may be what you are looking for. I have used it. It does have issues with importing projects from a server that doesn’t allow anonymous access.</p><p>For Completeness:<br>If you have command line access to both, you can do the procedure already mentioned by Khez for <a href="https://wiki.jenkins-ci.org/display/JENKINS/Administering+Jenkins#AdministeringJenkins-Moving/copying/renamingjobs" target="_blank" rel="noopener">Moving, Copying and Renaming Jenkins Jobs</a>.</p><h3 id="Solution-5"><a href="#Solution-5" class="headerlink" title="Solution 5:"></a>Solution 5:</h3><p>Go to your Jenkins server’s front page, click on REST API at the bottom of the page:</p><blockquote><p>Create Job</p></blockquote><p>To create a new job, post <code>config.xml</code> to this URL with query parameter <code>name=JOBNAME</code>. You need to send a <code>Content-Type: application/xml</code> header. You’ll get <code>200</code> status code if the creation is successful, or <code>4xx/5xx</code> code if it fails. <code>config.xml</code> is the format Jenkins uses to store the project in the file system, so you can see examples of them in the Jenkins home directory, or by retrieving the XML configuration of existing jobs from <code>/job/JOBNAME/config.xml</code>.</p><h3 id="Solution-6"><a href="#Solution-6" class="headerlink" title="Solution 6:"></a>Solution 6:</h3><p>In my Jenkins instance (version 1.548) the configuration file is at:</p><p><code>/var/lib/jenkins/jobs/-the-project-name-/config.xml</code></p><p>Owned by jenkins user and jenkins group with 644 permissions. Copying the file to and from here should work. I haven’t tried changing it directly but have backed-up the config from this spot in case the project needs to be setup again.</p><h3 id="Solution-7"><a href="#Solution-7" class="headerlink" title="Solution 7:"></a>Solution 7:</h3><p><strong><a href="https://wiki.jenkins.io/display/JENKINS/Job+Import+Plugin" target="_blank" rel="noopener">Job Import plugin</a></strong> is the easy way here to import jobs from another Jenkins instance. Just need to provide the URL of the source Jenkins instance. The Remote Jenkins URL can take any of the following types of URLs:</p><ul><li><p><code>http://$JENKINS</code> – get all jobs on remote instance</p></li><li><p><code>http://$JENKINS/job/$JOBNAME</code> – get a single job</p></li><li><p><code>http://$JENKINS/view/$VIEWNAME</code> – get all jobs in a particular view</p></li></ul><h3 id="Solution-8"><a href="#Solution-8" class="headerlink" title="Solution 8:"></a>Solution 8:</h3><p>Thanks to Larry Cai’s answer I managed to create a script to backup all my Jenkins jobs. I created a job that runs this every week. In case someone finds it useful, here it is:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#IFS for jobs with spaces.</span><br><span class="line">SAVEIFS=$IFS</span><br><span class="line">IFS=$(echo -en &quot;\n\b&quot;)</span><br><span class="line">for i in $(java -jar /run/jenkins/war/WEB-INF/jenkins-cli.jar -s http://server:8080/ list-jobs);</span><br><span class="line">do</span><br><span class="line">  java -jar /run/jenkins/war/WEB-INF/jenkins-cli.jar -s http://server:8080/ get-job $&#123;i&#125; &gt; $&#123;i&#125;.xml;</span><br><span class="line">done</span><br><span class="line">IFS=$SAVEIFS</span><br><span class="line">mkdir deploy</span><br><span class="line">tar cvfj &quot;jenkins-jobs.tar.bz2&quot; ./*.xml</span><br></pre></td></tr></table></figure><h3 id="Solution-9"><a href="#Solution-9" class="headerlink" title="Solution 9:"></a>Solution 9:</h3><p>Jenkins export jobs to a directory</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line">   SAVEIFS=$IFS</span><br><span class="line">   IFS=$(echo -en &quot;\n\b&quot;)</span><br><span class="line">   declare -i j=0</span><br><span class="line">   for i in $(java -jar jenkins-cli.jar -s http://server:8080/jenkins list-jobs  --username **** --password ***);</span><br><span class="line">   do</span><br><span class="line">   let &quot;j++&quot;;</span><br><span class="line">   echo $j;</span><br><span class="line">   if [ $j -gt 283 ] // If you have more jobs do it in chunks as it will terminate in the middle of the process. So Resume your job from where it ends.</span><br><span class="line">    then</span><br><span class="line">   java -jar jenkins-cli.jar -s http://lxvbmcbma:8080/jenkins get-job --username **** --password **** $&#123;i&#125; &gt; $&#123;i&#125;.xml;</span><br><span class="line">   echo &quot;done&quot;;</span><br><span class="line">   fi</span><br><span class="line">   done</span><br></pre></td></tr></table></figure><p>Import jobs</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for f in *.xml;</span><br><span class="line">do</span><br><span class="line">echo &quot;Processing $&#123;f%.*&#125; file..&quot;; //truncate the .xml extention and load the xml file for job creation</span><br><span class="line">java -jar jenkins-cli.jar -s http://server:8080/jenkins create-job $&#123;f%.*&#125;  &lt; $f</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="Solution-10"><a href="#Solution-10" class="headerlink" title="Solution 10:"></a>Solution 10:</h3><p>Simple php script worked for me.</p><p><strong>Export:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// add all job codes in the array</span><br><span class="line">$jobs = array(&quot;job1&quot;, &quot;job2&quot;, &quot;job3&quot;);</span><br><span class="line"></span><br><span class="line">foreach ($jobs as $value)</span><br><span class="line">&#123;</span><br><span class="line">    fwrite(STDOUT, $value. &quot; \n&quot;) or die(&quot;Unable to open file!&quot;);</span><br><span class="line">    $path = &quot;http://server1:8080/jenkins/job/&quot;.$value.&quot;/config.xml&quot;;</span><br><span class="line">    $myfile = fopen($value.&quot;.xml&quot;, &quot;w&quot;);</span><br><span class="line">    fwrite($myfile, file_get_contents($path));</span><br><span class="line">    fclose($myfile);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Import:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">// add all job codes in the array</span><br><span class="line">$jobs = array(&quot;job1&quot;, &quot;job2&quot;, &quot;job3&quot;);</span><br><span class="line"></span><br><span class="line">foreach ($arr as $value)</span><br><span class="line">&#123;</span><br><span class="line">    fwrite(STDOUT, $value. &quot; \n&quot;) or die(&quot;Unable to open file!&quot;);</span><br><span class="line">    $cmd = &quot;java -jar jenkins-cli.jar -s http://server2:8080/jenkins/ create-job &quot;.$value.&quot; &lt; &quot;.$value.&quot;.xml&quot;;</span><br><span class="line">    echo exec($cmd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution-11"><a href="#Solution-11" class="headerlink" title="Solution 11:"></a>Solution 11:</h3><p>This does not work for existing jobs, however there is <a href="http://docs.openstack.org/infra/jenkins-job-builder/" target="_blank" rel="noopener">Jenkins job builder</a>.</p><p>This allows one to keep job definitions in yaml files and in a git repo which is very portable.</p><h3 id="Solution-12"><a href="#Solution-12" class="headerlink" title="Solution 12:"></a>Solution 12:</h3><p>For those of us in the Windows world who may or may not have Bash available, here’s my PowerShell port of <strong>Katu</strong> and <strong>Larry Cai</strong>‘s approach. Hope it helps someone.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">##### Config vars #####</span><br><span class="line">$serverUri = &apos;http://localhost:8080/&apos; # URI of your Jenkins server</span><br><span class="line">$jenkinsCli = &apos;C:\Program Files (x86)\Jenkins\war\WEB-INF\jenkins-cli.jar&apos; # Path to jenkins-cli.jar on your machine</span><br><span class="line">$destFolder = &apos;C:\Jenkins Backup\&apos; # Output folder (will be created if it doesn&apos;t exist)</span><br><span class="line">$destFile = &apos;jenkins-jobs.zip&apos; # Output filename (will be overwritten if it exists)</span><br><span class="line">########################</span><br><span class="line"></span><br><span class="line">$work = Join-Path ([System.IO.Path]::GetTempPath()) ([System.IO.Path]::GetRandomFileName())</span><br><span class="line">New-Item -ItemType Directory -Force -Path $work | Out-Null # Suppress output noise</span><br><span class="line">echo &quot;Created a temp working folder: $work&quot;</span><br><span class="line"></span><br><span class="line">$jobs = (java -jar $jenkinsCli -s $serverUri list-jobs)</span><br><span class="line">echo &quot;Found $($jobs.Length) existing jobs: [$jobs]&quot;</span><br><span class="line"></span><br><span class="line">foreach ($j in $jobs)</span><br><span class="line">&#123;</span><br><span class="line">    $outfile = Join-Path $work &quot;$j.xml&quot;</span><br><span class="line">    java -jar $jenkinsCli -s $serverUri get-job $j | Out-File $outfile</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;Saved $($jobs.Length) jobs to temp XML files&quot;</span><br><span class="line"></span><br><span class="line">New-Item -ItemType Directory -Force -Path $destFolder | Out-Null # Suppress output noise</span><br><span class="line">echo &quot;Found (or created) $destFolder folder&quot;</span><br><span class="line"></span><br><span class="line">$destPath = Join-Path $destFolder $destFile</span><br><span class="line">Get-ChildItem $work -Filter *.xml |</span><br><span class="line">    Write-Zip -Level 9 -OutputPath $destPath -FlattenPaths |</span><br><span class="line">    Out-Null # Suppress output noise</span><br><span class="line">echo &quot;Copied $($jobs.Length) jobs to $destPath&quot;</span><br><span class="line"></span><br><span class="line">Remove-Item $work -Recurse -Force</span><br><span class="line">echo &quot;Removed temp working folder&quot;</span><br></pre></td></tr></table></figure><h3 id="Solution-13"><a href="#Solution-13" class="headerlink" title="Solution 13:"></a>Solution 13:</h3><p>It is very easy just download plugin name</p><p><a href="https://wiki.jenkins.io/display/JENKINS/Job+Import+Plugin" target="_blank" rel="noopener">Job Import Plugin</a></p><p>Enter the URL of your Remote Jenkins server and it will import the jobs automatically</p><h3 id="Solution-14"><a href="#Solution-14" class="headerlink" title="Solution 14:"></a>Solution 14:</h3><p>The most easy way, with direct access to the machine is to copy the job folder from first jenkins to another one (you can exclude workspaces – <code>workspace</code> folder), because the whole job configuration is stored in the xml file on the disk.</p><p>Then in the new jenkins just <code>reload configuration</code> in the global settings (admin access is required) should be enough, if not, then you will need to restart Jenkins tool.</p><p>Another way can be to use plugins mentioned above this post.</p><p>edit:<br>– in case you can probably also exclude <code>modules</code> folders</p><h2 id="Jenkins-迁移方案小结"><a href="#Jenkins-迁移方案小结" class="headerlink" title="Jenkins 迁移方案小结"></a>Jenkins 迁移方案小结</h2><blockquote><p>上面列举有 14 种方法居多，但大多数是基于方案 4 进行扩展</p></blockquote><p>上面列举的方案基本已经非常全了，感觉是不是有点眼花？其实归纳总结主要有以下 4 种</p><ol><li>官方的 Moving/copying/renaming jobs，即所谓的物理文件迁移，如果情况复杂此方案不推荐</li><li>基于 Jenkins CLI，该方案需要依赖 jenkins-cli.jar 包括 java 使用范围具有一定局限性，不推荐</li><li>基于类似 Job Import Plugin 插件形式，该类方案普适性较差，不推荐</li><li>基于 Jenkins REST API，核心是获取 <code>&lt;jenkinshost&gt;/job/&lt;jobname&gt;/config.xml</code>，效果最佳</li></ol><h3 id="REST-API"><a href="#REST-API" class="headerlink" title="REST API"></a>REST API</h3><p>Many objects of Jenkins provide the remote access API. They are available at /…/api/ where “…” portion is the object for which you’d like to access.</p><blockquote><p>XML API</p></blockquote><p>Access data exposed in HTML as XML for machine consumption. Schema is also available.<br>You can also specify optional XPath to control the fragment you’d like to obtain (but see below). For example, ../api/xml?xpath=/<em>/</em>[0].</p><p>For XPath that matches multiple nodes, you need to also specify the “wrapper” query parameter to specify the name of the root XML element to be create so that the resulting XML becomes well-formed.</p><p>Similarly exclude query parameter can be used to exclude nodes that match the given XPath from the result. This is useful for trimming down the amount of data you fetch (but again see below). This query parameter can be specified multiple times.</p><p>XPath filtering is powerful, and you can have it only return a very small data, but note that the server still has to build a full DOM of the raw data, which could cause a large memory spike. To avoid overloading the server, consider using the tree parameter, or use the xpath parameter in conjunction with the tree parameter. When used together, the result of the tree parameter filtering is built into DOM, then the XPath is applied to compute the final return value. In this way, you can often substantially reduce the size of DOM built in memory.</p><blockquote><p>JSON API</p></blockquote><p>Access the same data as JSON for JavaScript-based access. tree may be used.</p><blockquote><p>Python API</p></blockquote><p>Access the same data as Python for Python clients. This can be parsed into Python object as eval(urllib.urlopen(“…”).read()) and the resulting object tree is identical to that of JSON. However, when you do this, beware of the security implication. If you are connecting to a non-trusted Jenkins, the server can send you malicious Python programs.</p><p>In Python 2.6 or later you can safely parse this output using ast.literal_eval(urllib.urlopen(“…”).read())</p><p>For more information about remote API in Jenkins, see the documentation.</p><p><a href="https://jenkins.io/redirect/remote-api" target="_blank" rel="noopener">https://jenkins.io/redirect/remote-api</a></p><h3 id="使用-curl-和-Jenkins-REST-API"><a href="#使用-curl-和-Jenkins-REST-API" class="headerlink" title="使用 curl 和 Jenkins REST API"></a>使用 curl 和 Jenkins REST API</h3><blockquote><p>使用 Jenkins REST API 建议关闭 CSRF 防护</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># To retrieve the job config.xml</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/job/&lt;jobname&gt;/config.xml'</span> -u username:API_TOKEN -o &lt;jobname&gt;.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># to use this config to create a new job</span></span><br><span class="line">curl -s -XPOST <span class="string">'&lt;jenkinshost&gt;/createItem?name=&lt;jobname&gt;'</span> -u username:API_TOKEN --data-binary @&lt;jobname&gt;.xml -H <span class="string">"Content-Type:text/xml"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get all jenkins jobs</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/api/json?pretty=true'</span> -u username:API_TOKEN -o jobs.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># get jenkins view</span></span><br><span class="line">curl -X GET <span class="string">'&lt;jenkinshost&gt;/view/&lt;viewname&gt;/api/json'</span> -u username:API_TOKEN -o view.json</span><br></pre></td></tr></table></figure><p>Obviously, replace:</p><ul><li>username API_TOKEN with your username and password/API_Token</li><li>jenkinshost with your Jenkins URL</li><li>jobname with the name of the job that you created via the UI</li></ul><p><a href="https://json-csv.com/" target="_blank" rel="noopener">JSON to CSV Converter</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">mkdir config_xml</span><br><span class="line">vim jobs.txt</span><br><span class="line">vim jenkins_jobs_migration.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line">source_jenkins_host=<span class="string">"xxx"</span></span><br><span class="line">source_jenkins_username=<span class="string">"xxx"</span></span><br><span class="line">source_jenkins_password=<span class="string">"xxx"</span></span><br><span class="line"></span><br><span class="line">target_jenkins_host=<span class="string">"xxx"</span></span><br><span class="line">target_jenkins_username=<span class="string">"xxx"</span></span><br><span class="line">target_jenkins_password=<span class="string">"xxx"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">pull</span></span>() &#123;</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> `cat jobs.txt`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;line&#125;</span></span><br><span class="line">        curl -X GET <span class="variable">$&#123;source_jenkins_host&#125;</span>job/<span class="variable">$&#123;line&#125;</span>/config.xml -u <span class="variable">$&#123;source_jenkins_username&#125;</span>:<span class="variable">$&#123;source_jenkins_password&#125;</span> -o config_xml/<span class="variable">$&#123;line&#125;</span>.xml</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">push</span></span>() &#123;</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> `cat jobs.txt`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$line</span></span><br><span class="line">        httprc=$(curl -s -XPOST <span class="variable">$&#123;target_jenkins_host&#125;</span>job/<span class="variable">$&#123;line&#125;</span>/doDelete -u <span class="variable">$&#123;target_jenkins_username&#125;</span>:<span class="variable">$&#123;target_jenkins_password&#125;</span>)</span><br><span class="line">        curl -s -XPOST <span class="variable">$&#123;target_jenkins_host&#125;</span>createItem?name=<span class="variable">$&#123;line&#125;</span> -u <span class="variable">$&#123;target_jenkins_username&#125;</span>:<span class="variable">$&#123;target_jenkins_password&#125;</span> --data-binary @config_xml/<span class="variable">$&#123;line&#125;</span>.xml -H <span class="string">"Content-Type:text/xml"</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    push)</span><br><span class="line">        push</span><br><span class="line">        ;;</span><br><span class="line">    pull)</span><br><span class="line">        pull</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$NAME</span> &#123;pull|push&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h3 id="使用-python-编写-api-jenkins-py-核心逻辑"><a href="#使用-python-编写-api-jenkins-py-核心逻辑" class="headerlink" title="使用 python 编写 api_jenkins.py 核心逻辑"></a>使用 python 编写 api_jenkins.py 核心逻辑</h3><blockquote><p>暂不方便公开</p></blockquote><ol><li>支持读取 context.json 配置文件使用 pipeline.j2 模板自动生成不同类型的 pipeline.xml 导入文件</li><li>支持按 view 或者 job export 导出 job config.xml 配置信息</li><li>支持按 view 或者 job import 导入 job config.xml 配置信息</li></ol><h2 id="Jenkins-Plugin"><a href="#Jenkins-Plugin" class="headerlink" title="Jenkins Plugin"></a>Jenkins Plugin</h2><p>迁移插件可以通过上传 <code>.hpi</code> 一次性搞定，当然你也可用使用 REST API 或者 jenkins-cli</p><p><a href="https://jenkins.io/doc/book/managing/plugins/" target="_blank" rel="noopener">Managing Plugins</a></p><h2 id="Jenkins-Backup"><a href="#Jenkins-Backup" class="headerlink" title="Jenkins Backup"></a>Jenkins Backup</h2><blockquote><p>archive jenkins setting and plugins</p></blockquote><p>大家应该都知道 Jenkins 备份插件目前主要就 2 种选择:</p><ul><li><a href="https://plugins.jenkins.io/backup" target="_blank" rel="noopener">Backup</a></li><li><a href="https://plugins.jenkins.io/periodicbackup" target="_blank" rel="noopener">Periodic Backup</a></li></ul><p>严格意义上来说应该只能选择 Periodic Backup，但是如果是需要定期备份自然离不开编写 Bash 脚本</p><p><a href="https://github.com/sue445/jenkins-backup-script" target="_blank" rel="noopener">jenkins-backup-script</a></p><h2 id="Jenkins-API-Token"><a href="#Jenkins-API-Token" class="headerlink" title="Jenkins API Token"></a>Jenkins API Token</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hudson.model.*</span><br><span class="line"><span class="keyword">import</span> jenkins.model.*</span><br><span class="line"><span class="keyword">import</span> jenkins.security.*</span><br><span class="line"><span class="keyword">import</span> jenkins.security.apitoken.*</span><br><span class="line"></span><br><span class="line"><span class="comment">// you can change the "admin" name</span></span><br><span class="line"><span class="comment">// the false is to explicitely ask to not create a user who does not exist yet</span></span><br><span class="line"><span class="keyword">def</span> user = User.get(<span class="string">"gop.bot@garena.com"</span>, <span class="literal">false</span>)</span><br><span class="line"><span class="keyword">def</span> prop = user.getProperty(ApiTokenProperty.<span class="keyword">class</span>)</span><br><span class="line"><span class="comment">// the name is up to you</span></span><br><span class="line"><span class="keyword">def</span> result = prop.tokenStore.generateNewToken(<span class="string">"token-created-by-script"</span>)</span><br><span class="line">user.save()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result.plainValue</span><br></pre></td></tr></table></figure><p><a href="https://issues.jenkins-ci.org/browse/JENKINS-52339" target="_blank" rel="noopener">New API Token system should allow tokens to be created for service accounts</a></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://config9.com/apps/jenkins/export-import-jobs-in-jenkins/" target="_blank" rel="noopener">Export/import jobs in Jenkins</a></p><p><a href="https://wiki.jenkins.io/display/JENKINS/Administering+Jenkins#AdministeringJenkins-Moving%2Fcopying%2Frenamingjobs" target="_blank" rel="noopener">Moving/copying/renaming jobs</a></p><p><a href="https://wiki.jenkins.io/display/JENKINS/Jenkins+CLI" target="_blank" rel="noopener">Jenkins CLI</a></p><p><a href="https://support.cloudbees.com/hc/en-us/articles/220857567-How-to-create-a-job-using-the-REST-API-and-cURL-" target="_blank" rel="noopener">How to create a job using the REST API and cURL?</a></p><p><a href="https://wiki.jenkins-ci.org/display/JENKINS/Remote+access+API" target="_blank" rel="noopener">Jenkins Remote access API</a></p>]]></content>
    
    <summary type="html">
    
      Jenkins export and import jobs 迁移导出导入任务实践小结
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
  <entry>
    <title>Jenkins Plugins 常用插件推荐</title>
    <link href="https://wsgzao.github.io/post/jenkins-plugins/"/>
    <id>https://wsgzao.github.io/post/jenkins-plugins/</id>
    <published>2019-12-16T06:59:49.000Z</published>
    <updated>2019-12-26T07:43:05.821Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>开源版本的 Jenkins 具有三大能力：Master-Slave 的分布式构建调度能力、Pipeline 编排能力、强大的开源生态（插件）能力。2017 年 4 月，Jenkins 创始人 KK（Kohsuke Kawaguchi ）来到中国，交流中他也明确表示 Jenkins 的成功主要取决于其开源生态系统，Jenkins 有 1400 多个插件可供使用。因为有开源的插件生态系统的存在，Jenkins 要用得好，插件一定是不能少的，需要我们充分发现和使用插件来实现我们的需求，而不是重复造轮子，自己去实现。</p><blockquote><p>Jenkins Plugins 常用插件推荐</p></blockquote><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2019 年 12 月 16 日 - 初稿</p><p>阅读原文 - <a href="https://wsgzao.github.io/post/jenkins-plugins/">https://wsgzao.github.io/post/jenkins-plugins/</a></p><p><strong> 扩展阅读 </strong></p><p><a href="https://plugins.jenkins.io/" target="_blank" rel="noopener">Jenkins Plugins Index</a></p><hr><h2 id="用户及权限"><a href="#用户及权限" class="headerlink" title="用户及权限"></a>用户及权限</h2><p>Jenkins 用户权限管理是 Jenkins Administration 中非常很重要的环节，由于大部分企业都会有自己的域控管理，所以和 LDAP 集成并基于用户组实现权限模型设计与管理是企业级 Jenkins 实践的重要内容。</p><ol><li><a href="https://plugins.jenkins.io/ldap" target="_blank" rel="noopener">LDAP</a> 这个插件允许使用 LDAP 对用户进行认证，LDAP 服务器可以为 Active Directory 或者 OpenLDAP。</li><li><a href="https://plugins.jenkins.io/active-directory" target="_blank" rel="noopener">Active Directory</a> 这个插件允许使用 Active Directory 对用户进行认证，同时结合诸如 Matrix Authorization Strategy 插件，可以识别用户所在的所有用户组，对用户授权进行灵活配置。<br> 基于 Windows Active Directory 进行域管理的企业，推荐采用 Active Directory。</li><li><a href="https://plugins.jenkins.io/github-oauth" target="_blank" rel="noopener">GitHub Authentication</a> 这个插件提供了使用 GitHub 进行用户认证和授权的方案。</li><li><a href="https://plugins.jenkins.io/gitlab-oauth" target="_blank" rel="noopener">Gitlab Authentication</a> 这个插件提供了使用 GitLab 进行用户认证和授权的方案。</li><li><a href="https://plugins.jenkins.io/matrix-auth" target="_blank" rel="noopener">Matrix Authorization Strategy</a> 这个插件提供了基于矩阵的授权策略，支持全局和项目级别的配置。</li><li><a href="https://plugins.jenkins.io/role-strategy" target="_blank" rel="noopener">Role-based Authorization Strategy</a> 这个插件提供了一种基于角色（Role）的用户权限管理策略，支持创建 global 角色、Project 角色、Slave 角色，以及给用户分配这些角色。这款插件是最常用的 Jenkins 权限策略和管理插件。</li></ol><p><a href="https://www.jianshu.com/p/6c274d9b22ad" target="_blank" rel="noopener">Jenkins 自动化部署 - 权限管控篇 (六)</a></p><h2 id="代码管理"><a href="#代码管理" class="headerlink" title="代码管理"></a>代码管理</h2><p>Jenkins 项目中配置 Source Code Management 去下载代码进行构建任务，是非常普遍的应用场景。Jenkins 插件支持很多 SCM 的系统，使用最常见的是 Git 和 SVN。</p><ol><li><a href="https://plugins.jenkins.io/git" target="_blank" rel="noopener">Git</a> 支持使用 Github、GitLab、Gerrit 等系统管理代码仓库。</li><li><a href="https://plugins.jenkins.io/subversion" target="_blank" rel="noopener">Subversion</a> 支持 Subversion 系统管理源代码。</li></ol><h2 id="项目及视图"><a href="#项目及视图" class="headerlink" title="项目及视图"></a>项目及视图</h2><p>Jenkins 中对 Project 和 view 的管理，是用户日常工作中使用很多的功能。</p><ol><li><a href="https://plugins.jenkins.io/cloudbees-folder" target="_blank" rel="noopener">Folder</a> 这个插件支持用户使用目录管理项目，目录支持嵌套，并且支持目录中创建视图。</li><li>List view Jenkins 默认支持 List 类型的视图，用户可以创建 List 视图过滤所关心的项目。</li><li><a href="https://plugins.jenkins.io/sectioned-view" target="_blank" rel="noopener">Sectioned View</a> 这个插件支持一种新的视图，视图可以分为多个部分，每部分可以单独配置显示所选择的项目信息。</li><li><a href="https://plugins.jenkins.io/nested-view" target="_blank" rel="noopener">Nested View</a> 这个插件支持一种新的视图，其表示直接显示项目，而是以目录图标显示所包含的子视图，每个子视图显示所选项目信息。</li><li><a href="https://plugins.jenkins.io/build-pipeline-plugin" target="_blank" rel="noopener">Build Pipeline</a> 这个插件提供了一种 Build Pipeline 视图，用于显示上、下游项目构建的关系。</li></ol><h2 id="构建触发"><a href="#构建触发" class="headerlink" title="构建触发"></a>构建触发</h2><p>Jenkins 支持多种 Build 触发方式，尤其一些自动化触发方式非常有用</p><ol><li>Build periodically，Jenkins 内置功能，可以设置类似 crontab 时间，周期性地自动触发构建。Poll SCM，Jenkins 内置功能，类似 Build periodically，可以设置类似 crontab 时间，不同的是不是直接进行构建，而是周期性地在后台检查所配置的 SCM 有没有更新，只有当有代码更新时才会触发构建。</li><li>Trigger builds remotely (e.g., from scripts)，Jenkins 内置功能，远程触发构建，通过设置 token 可以支持远程脚本中触发 Jenkins 构建。</li><li><a href="https://plugins.jenkins.io/gerrit-trigger" target="_blank" rel="noopener">Gerrit Trigger</a> 这个插件将 Jenkins 集成到 Gerrit code review 中，支持 Jenkins 配置 Gerrit 服务器等信息，实现 Gerrit event 触发 Jenkins 构建。</li><li><a href="https://plugins.jenkins.io/gitlab-plugin" target="_blank" rel="noopener">GitLab</a> 这个插件将 Jenkins 集成到 GitLab web hook 中，支持 Gitlab 分支及 Merge Request 等相关事件触发 Jenkins 构建。</li><li><a href="https://plugins.jenkins.io/github-pullrequest" target="_blank" rel="noopener">GitHub Integration</a> 这个插件将 Jenkins 集成到 GitHub 中，支持 Gitgub 分支及 Pull requests 触发 Jenkins 构建。</li><li><a href="https://plugins.jenkins.io/jira-trigger" target="_blank" rel="noopener">JIRA Trigger</a> 这个插件将 Jenkins 集成到 Jira WebHooks 中，支持 Jira issue 的状态等变化时触发 Jenkins 构建。</li></ol><h2 id="构建参数"><a href="#构建参数" class="headerlink" title="构建参数"></a>构建参数</h2><p>Jenkins 除了支持普通的参数类型（布尔型、字符串型、多行文本型、选择型和文件型 ）外，还有一些插件支持更加丰富实用的参数类型，比如参数间动态关联、多层级参数、隐藏参数等 。</p><ol><li><a href="https://plugins.jenkins.io/nodelabelparameter" target="_blank" rel="noopener">nodelabelparameter</a> 这个插件增加了一个新的参数类型，Node 和 Label，从而使用户通过参数可以选择项目构建运行的节点。<br> 其他插件不一一列举，可以查看插件说明<ul><li><a href="https://plugins.jenkins.io/hidden-parameter" target="_blank" rel="noopener">https://plugins.jenkins.io/hidden-parameter</a></li><li><a href="https://plugins.jenkins.io/extended-choice-parameter" target="_blank" rel="noopener">https://plugins.jenkins.io/extended-choice-parameter</a></li><li><a href="https://plugins.jenkins.io/validating-string-parameter" target="_blank" rel="noopener">https://plugins.jenkins.io/validating-string-parameter</a></li><li><a href="https://plugins.jenkins.io/extensible-choice-parameter" target="_blank" rel="noopener">https://plugins.jenkins.io/extensible-choice-parameter</a></li><li><a href="https://wiki.jenkins.io/display/JENKINS/Active+Choices+Plugin" target="_blank" rel="noopener">https://wiki.jenkins.io/display/JENKINS/Active+Choices+Plugin</a></li></ul></li></ol><h2 id="构建任务及环境"><a href="#构建任务及环境" class="headerlink" title="构建任务及环境"></a>构建任务及环境</h2><p>围绕构建任务，有许多小的插件，却提供了一些实用的功能</p><ol><li><a href="https://plugins.jenkins.io/ws-cleanup" target="_blank" rel="noopener">Workspace Cleanup</a> 这个插件支持在构建前后 删除或者部分删除 workspace</li><li><a href="https://plugins.jenkins.io/description-setter" target="_blank" rel="noopener">description setter</a> 这个插件支持正则表达式匹配构建 log 输出，设置构建的描述</li><li><a href="https://plugins.jenkins.io/build-name-setter" target="_blank" rel="noopener">build-name-setter</a> 这个插件支持设置构建的显示名字，而不是默认的为 #1，#2，……，#buildnum</li><li><a href="https://plugins.jenkins.io/envinject" target="_blank" rel="noopener">Environment Injector</a> 这个插件支持在构建任务的不同阶段插入环境变量，并且在构建结束导出所有的环境变量等功能。</li></ol><h2 id="构建通知"><a href="#构建通知" class="headerlink" title="构建通知"></a>构建通知</h2><p>把构建状态及时地通知用户，是 Jenkins 的一个必不可少的功能。Jenkins 支持多种主动和被动的通知方式。</p><ol><li><a href="https://plugins.jenkins.io/mailer" target="_blank" rel="noopener">Mailer</a> 这个插件支持基本的邮件通知功能，比如构建失败和构建恢复成功可以发送邮件通知给相关人员。</li><li><a href="https://plugins.jenkins.io/email-ext" target="_blank" rel="noopener">Email Extension</a> 这个插件是邮件通知的扩展，支持定制邮件内容，触发条件以及邮件接收者，功能比基本邮件通知要灵活强大的多。</li><li><a href="https://plugins.jenkins.io/slack" target="_blank" rel="noopener">Slack Notification</a> 这个插件支持把构建结果推送到 Slack channel。</li></ol><h2 id="容器化-Slave"><a href="#容器化-Slave" class="headerlink" title="容器化 Slave"></a>容器化 Slave</h2><p>Jenkins 的 Master-Slave 架构实现了分布式构建，可以充分的横向扩展 Slave 来提升构建能力，将 Slave 容器化是目前主流的构建环境标准化、集群化和弹性化的方式。</p><ol><li><a href="https://plugins.jenkins.io/docker-plugin" target="_blank" rel="noopener">https://plugins.jenkins.io/docker-plugin</a> 这个插件可以配置 docker host ，从而动态的提供 Jenkins Agent（Slave），运行构建后再销毁这个 slave。</li><li><a href="https://plugins.jenkins.io/kubernetes" target="_blank" rel="noopener">https://plugins.jenkins.io/kubernetes</a> 这个插件支持利用 Kubernetes cluster 动态的提供 Jenkins Agent（Slave），利用 Kubernetes 调度机制来优化 Jenkins 负载等。</li></ol><h2 id="Admin-相关插件"><a href="#Admin-相关插件" class="headerlink" title="Admin 相关插件"></a>Admin 相关插件</h2><ol><li>Configuration Slicing <a href="https://plugins.jenkins.io/configurationslicing" target="_blank" rel="noopener">https://plugins.jenkins.io/configurationslicing</a> 这个插件支持批量修改项目配置</li><li>Mask Passwords <a href="https://plugins.jenkins.io/mask-passwords" target="_blank" rel="noopener">https://plugins.jenkins.io/mask-passwords</a> 这个插件支持遮挡构建 log 输出的 password 等敏感信息</li><li>Backup <a href="https://plugins.jenkins.io/backup" target="_blank" rel="noopener">https://plugins.jenkins.io/backup</a> 这个插件添加备份功能到 Jenkins management</li></ol><h2 id="个人推荐的通用插件"><a href="#个人推荐的通用插件" class="headerlink" title="个人推荐的通用插件"></a>个人推荐的通用插件</h2><table><thead><tr><th>Name</th><th>Link</th></tr></thead><tbody><tr><td>Google Login Plugin</td><td><a href="https://plugins.jenkins.io/google-login" target="_blank" rel="noopener">https://plugins.jenkins.io/google-login</a></td></tr><tr><td>Role-based Authorization Strategy</td><td><a href="https://plugins.jenkins.io/role-strategy" target="_blank" rel="noopener">https://plugins.jenkins.io/role-strategy</a></td></tr><tr><td>Periodic Backup</td><td><a href="https://plugins.jenkins.io/periodicbackup" target="_blank" rel="noopener">https://plugins.jenkins.io/periodicbackup</a></td></tr><tr><td>Notification</td><td><a href="https://plugins.jenkins.io/notification" target="_blank" rel="noopener">https://plugins.jenkins.io/notification</a></td></tr><tr><td>Git Parameter</td><td><a href="https://plugins.jenkins.io/git-parameter" target="_blank" rel="noopener">https://plugins.jenkins.io/git-parameter</a></td></tr><tr><td>AnsiColor</td><td><a href="https://plugins.jenkins.io/ansicolor" target="_blank" rel="noopener">https://plugins.jenkins.io/ansicolor</a></td></tr><tr><td>SSH Agent</td><td><a href="https://plugins.jenkins.io/git-parameter" target="_blank" rel="noopener">https://plugins.jenkins.io/git-parameter</a></td></tr><tr><td>Build Name and Description Setter</td><td><a href="https://plugins.jenkins.io/build-name-setter" target="_blank" rel="noopener">https://plugins.jenkins.io/build-name-setter</a></td></tr><tr><td>Publish Over SSH</td><td><a href="https://plugins.jenkins.io/publish-over-ssh" target="_blank" rel="noopener">https://plugins.jenkins.io/publish-over-ssh</a></td></tr><tr><td>user build vars</td><td><a href="https://plugins.jenkins.io/build-user-vars-plugin" target="_blank" rel="noopener">https://plugins.jenkins.io/build-user-vars-plugin</a></td></tr><tr><td>Throttle Concurrent Builds</td><td><a href="https://plugins.jenkins.io/throttle-concurrents" target="_blank" rel="noopener">https://plugins.jenkins.io/throttle-concurrents</a></td></tr><tr><td>Active Choices</td><td><a href="https://plugins.jenkins.io/uno-choice" target="_blank" rel="noopener">https://plugins.jenkins.io/uno-choice</a></td></tr><tr><td>Rebuilder</td><td><a href="https://plugins.jenkins.io/rebuild" target="_blank" rel="noopener">https://plugins.jenkins.io/rebuild</a></td></tr></tbody></table><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.jianshu.com/p/a80ed9285537" target="_blank" rel="noopener">Jenkins 自动化部署 - 安装篇 (一)</a></p><p><a href="https://www.cnblogs.com/zndxall/p/8603500.html" target="_blank" rel="noopener">jenkins 常用插件和配置项介绍和使用</a></p>]]></content>
    
    <summary type="html">
    
      Jenkins Plugins常用插件推荐
    
    </summary>
    
      <category term="学习 | Study" scheme="https://wsgzao.github.io/categories/%E5%AD%A6%E4%B9%A0-Study/"/>
    
    
  </entry>
  
</feed>
